/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 306);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(68);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) {
  var ReactIs = require('react-is');

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(400)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DO_LOGOUT = exports.DO_LOGIN = exports.UPDATE_USER = undefined;
exports.setLocalStorageCf = setLocalStorageCf;
exports.getLocalStorageCf = getLocalStorageCf;
exports.getLocalStorageCfOrg = getLocalStorageCfOrg;
exports.getCfTitle = getCfTitle;
exports.getCFDefault = getCFDefault;
exports.getAllCF = getAllCF;
exports.getCFOrg = getCFOrg;
exports.getCFObj = getCFObj;
exports.getCF = getCF;
exports.isComingSoon = isComingSoon;
exports.gotItButton = gotItButton;
exports.doAfterValidateComingSoon = doAfterValidateComingSoon;
exports.isAuthorized = isAuthorized;
exports.getOtherRecs = getOtherRecs;
exports.getCompany = getCompany;
exports.getAuthUser = getAuthUser;
exports.isCookieEnabled = isCookieEnabled;
exports.isRoleStudent = isRoleStudent;
exports.isRoleVolunteer = isRoleVolunteer;
exports.isRoleRec = isRoleRec;
exports.isRoleOrganizer = isRoleOrganizer;
exports.isRoleSupport = isRoleSupport;
exports.isRoleAdmin = isRoleAdmin;
exports.isTestUser = isTestUser;
exports.isOverrideComingSoonUser = isOverrideComingSoonUser;
exports.updateAuthUser = updateAuthUser;
exports.login = login;
exports.logout = logout;
exports.register = register;
exports.activateAccount = activateAccount;
exports.passwordResetRequest = passwordResetRequest;
exports.passwordResetToken = passwordResetToken;
exports.passwordResetOld = passwordResetOld;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(89);

var _axios2 = _interopRequireDefault(_axios);

var _store = __webpack_require__(34);

var _appConfig = __webpack_require__(4);

var _authConfig = __webpack_require__(75);

var _dbConfig = __webpack_require__(5);

var _time = __webpack_require__(9);

var _socketClient = __webpack_require__(17);

var _layoutActions = __webpack_require__(6);

var _layoutReducer = __webpack_require__(250);

var _layoutReducer2 = _interopRequireDefault(_layoutReducer);

var _ret = __webpack_require__(502);

var _ret2 = _interopRequireDefault(_ret);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import {
//     CareerFair,
//     CareerFairOrg,
//     CF_DEFAULT
// } from '../../../config/cf-config';


// ############################################
// CF - START
//const CF_DEFAULT = "UK";
var CF_DEFAULT = "MDEC";

var LOCAL_STORAGE_CF = "cf-seeds-job-fair";
function setLocalStorageCf(cfArr) {
    var cfObj = {};
    for (var i in cfArr) {
        var cf = cfArr[i];
        cfObj[cf.name] = cf;
    }

    var objStr = JSON.stringify(cfObj);
    localStorage.setItem(LOCAL_STORAGE_CF, objStr);
}

function getLocalStorageCf() {
    var cf = localStorage.getItem(LOCAL_STORAGE_CF);
    var cfObj = {};
    try {
        cfObj = JSON.parse(cf);
    } catch (err) {
        cfObj = {};
    }
    if (cfObj == null) {
        //location.reload();
    }
    return cfObj;
}

function getLocalStorageCfOrg() {
    var allCf = getLocalStorageCf();
    var toRet = {};

    for (var cfName in allCf) {
        var org = allCf[cfName]["organizations"];
        try {
            org = JSON.parse(org);
        } catch (err) {
            org = [];
        }

        if (!Array.isArray(org)) {
            org = [];
        }

        toRet[cfName] = org;
        // for (var i in CFSMetaOrg) {
        //     let attr = [CFSMetaOrg[i]]
        //     toRet[cfName][attr] = allCf[cfName][attr];
        //     if(toRet[cfName][attr] == null){
        //         toRet[cfName][attr] = [];
        //     }
        // }
    }
    return toRet;
}

function getCfTitle(cf) {
    try {
        var allCf = getLocalStorageCf();
        var cfObj = allCf[cf];
        return cfObj.title;
    } catch (err) {
        return null;
    }
}

// export function getLocalStorageCfOrg() {
//     let allCf = getLocalStorageCf();
//     let toRet = {};

//     for (var cfName in allCf) {
//         toRet[cfName] = {};
//         for (var i in CFSMetaOrg) {
//             let attr = [CFSMetaOrg[i]]
//             toRet[cfName][attr] = allCf[cfName][attr];
//             if(toRet[cfName][attr] == null){
//                 toRet[cfName][attr] = [];
//             }
//         }
//     }
//     return toRet;
// }

// used in auth-reducer
function getCFDefault() {
    return CF_DEFAULT;
}

// used in form.js to populate all cfs
function getAllCF() {
    var CareerFair = getLocalStorageCf();
    return CareerFair;
}

// return organizers
function getCFOrg() {
    var CareerFairOrg = getLocalStorageCfOrg();
    var toRet = CareerFairOrg[getCF()];
    return toRet;
}

// return object cf by key in auth
function getCFObj() {
    var CareerFair = getLocalStorageCf();
    return CareerFair[getCF()];
}

// return key of cf
var ToReplaceCf = {
    "USA": "USA19"
};
function getCF() {
    var cf = _store.store.getState().auth.cf;
    if (typeof ToReplaceCf[cf] !== "undefined") {
        cf = ToReplaceCf[cf];
    }
    console.log("Current CF -> ", cf);
    return cf;
}

// CF - END
// ############################################


function isComingSoon() {
    //return false;

    if (isOverrideComingSoonUser()) {
        return false;
    }

    var isComingSoon = true;
    var cfObj = getCFObj();

    var override_coming_soon = cfObj.override_coming_soon;
    console.log("override_coming_soon", override_coming_soon);

    if (override_coming_soon === "true") {
        return false;
    }

    var timenow = _time.Time.getUnixTimestampNow();

    //check start time
    if (cfObj.start != null) {
        var timestart = _time.Time.convertDBTimeToUnix(cfObj.start);
        if (timenow >= timestart) {
            isComingSoon = false;
        }
    }

    if (cfObj.test_start != null && cfObj.test_end != null) {
        var timetest_start = _time.Time.convertDBTimeToUnix(cfObj.test_start);
        var timetest_end = _time.Time.convertDBTimeToUnix(cfObj.test_end);

        if (timenow >= timetest_start && timenow <= timetest_end) {
            isComingSoon = false;
        }
    }

    console.log("isComingSoon", isComingSoon);

    return isComingSoon;
}

function gotItButton() {
    return _react2.default.createElement(
        'button',
        { className: 'btn btn-sm btn-primary', onClick: function onClick() {
                (0, _layoutActions.storeHideBlockLoader)();
            } },
        'Got It'
    );
}

function doAfterValidateComingSoon(actionHandler) {
    var subText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (isComingSoon()) {
        var cfObj = getCFObj();

        var mes = _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
                'h4',
                { className: 'text-primary' },
                _react2.default.createElement(
                    'b',
                    null,
                    'Come Back Later'
                )
            ),
            'This action only allowed after the event started on',
            _react2.default.createElement('br', null),
            _react2.default.createElement(
                'u',
                null,
                _time.Time.getString(cfObj.start)
            ),
            _react2.default.createElement('br', null),
            subText == null ? null : _react2.default.createElement(
                'span',
                null,
                _react2.default.createElement('br', null),
                subText,
                _react2.default.createElement('br', null)
            ),
            _react2.default.createElement('br', null),
            gotItButton()
        );
        // customBlockLoader(mes, null, null, null, true)
        (0, _layoutActions.customViewBlockLoaderSmall)("", mes, true);
    } else {
        actionHandler();
    }
}

function isAuthorized() {
    return _store.store.getState().auth.isAuthorized;
}

function getOtherRecs() {
    if (isRoleRec()) {
        return _store.store.getState().auth.user.company.recruiters;
    }
    return [];
}

// ############################################
// Auth
function getCompany() {
    if (!isRoleRec()) {
        return null;
    } else {
        return getAuthUser().company;
    }
}

function getAuthUser() {
    if (!isAuthorized()) {
        return {};
    }
    return _store.store.getState().auth.user;
}

function isCookieEnabled() {
    return _store.store.getState().auth.cookie;
}

function isRoleStudent() {
    return getAuthUser().role === _dbConfig.UserEnum.ROLE_STUDENT;
}

function isRoleVolunteer() {
    return getAuthUser().role === _dbConfig.UserEnum.ROLE_VOLUNTEER;
}

function isRoleRec() {
    return getAuthUser().role === _dbConfig.UserEnum.ROLE_RECRUITER;
}

function isRoleOrganizer() {
    return getAuthUser().role === _dbConfig.UserEnum.ROLE_ORGANIZER;
}

function isRoleSupport() {
    return getAuthUser().role === _dbConfig.UserEnum.ROLE_SUPPORT;
}

function isRoleAdmin() {
    return getAuthUser().role === _dbConfig.UserEnum.ROLE_EDITOR || getAuthUser().role === _dbConfig.UserEnum.ROLE_ADMIN || getAuthUser().role === _dbConfig.UserEnum.ROLE_SUPPORT;
}

function isTestUser() {
    return _appConfig.TestUser.indexOf(getAuthUser().ID) >= 0;
}

function isOverrideComingSoonUser() {
    return _appConfig.OverrideComingSoonUser.indexOf(getAuthUser().ID) >= 0;
}

// ############################################
// REDUX ACTIONS

var UPDATE_USER = exports.UPDATE_USER = "UPDATE_USER";
function updateAuthUser(user) {
    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;


    //filter out not auth related
    var auth = {};
    for (var k in user) {
        if (_authConfig.AuthUserKey.indexOf(k) >= 0) {
            auth[k] = user[k];
        }
    }

    _store.store.dispatch({
        type: UPDATE_USER,
        payload: auth
    });
}

var DO_LOGIN = exports.DO_LOGIN = "DO_LOGIN";
function login(email, password, cf) {
    return function (dispatch) {
        dispatch({
            type: DO_LOGIN,
            payload: _axios2.default.post(_appConfig.AppConfig.Api + "/auth/login", {
                email: email,
                password: password,
                cf: cf
            })
        });
    };
}

var DO_LOGOUT = exports.DO_LOGOUT = "DO_LOGOUT";
function logout() {
    (0, _socketClient.emitLogout)();
    return function (dispatch) {
        dispatch({
            type: DO_LOGOUT
        });
    };
}

//#############################################
// SERVER API

function register(user) {
    return _axios2.default.post(_appConfig.AppConfig.Api + "/auth/register", {
        user: user
    });
}

function activateAccount(key, user_id) {
    return _axios2.default.post(_appConfig.AppConfig.Api + "/auth/activate-account", {
        key: key,
        user_id: user_id
    });
}

function passwordResetRequest(user_email) {
    return _axios2.default.post(_appConfig.AppConfig.Api + "/auth/password-reset-request", {
        user_email: user_email
    });
}

function passwordResetToken(new_password, token, user_id) {
    return _axios2.default.post(_appConfig.AppConfig.Api + "/auth/password-reset-token", {
        new_password: new_password,
        token: token,
        user_id: user_id
    });
}

function passwordResetOld(new_password, old_password, user_id) {
    return _axios2.default.post(_appConfig.AppConfig.Api + "/auth/password-reset-old", {
        new_password: new_password,
        old_password: old_password,
        user_id: user_id
    });
}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var axios = __webpack_require__(89);

var _require = __webpack_require__(4),
    AppConfig = _require.AppConfig,
    StaticUrl = _require.StaticUrl;

var qs = __webpack_require__(505);
var graphQLUrl = AppConfig.Api + "/graphql?";

var getGraphQlErrorMes = function getGraphQlErrorMes(rawMes) {
	var mes = "";
	var customMes = null;

	if (rawMes.indexOf("ER_DUP_ENTRY") >= 0) {
		customMes = "Record Already Exist";
	}

	if (customMes != null) {
		mes += customMes + '\n\n' + rawMes;
	} else {
		mes = rawMes;
	}

	return "[Request Failed]\n" + mes;
};

// add errMes in responseObj.response.data
var rejectPromiseError = function rejectPromiseError(responseObj, errMes) {
	if (errMes !== null) {
		if (typeof responseObj["response"] === "undefined") {
			responseObj["response"] = {};
		}
		responseObj.response["data"] = errMes;

		//maybe log this error in db?
		if (typeof alert !== "undefined") {
			//in browser
			alert(errMes);
		} else {
			// in node server
			console.error(errMes);
		}

		return Promise.reject(responseObj);
	}

	return false;
};

// Add a response interceptor
axios.interceptors.response.use(function (response) {
	//graphql can return error in response as well
	var retErr = null;
	if (response.config.url == graphQLUrl && response.data.errors) {
		//console.log("error from axios graphQLUrl");
		console.log("Intercept GraphQL Error 1", response);
		retErr = getGraphQlErrorMes(response.data.errors[0].message);
	}

	if (retErr !== null) {
		return rejectPromiseError(response, retErr);
	}

	return response;
}, function (error) {
	var retErr = null;
	try {
		// error in query -- getAxiosGraphQLQuery

		if (error.response.config.url == graphQLUrl) {
			//error.response["data"] = `[GraphQL Error] ${error.response.data.errors[0].message}`;
			var q = null;
			try {
				q = error.response.config.params.query;
			} catch (err) {}
			console.log("[Intercept GraphQL Error 2]", q);
			retErr = getGraphQlErrorMes(error.response.data.errors[0].message);
		}
	} catch (e) {
		// no connection -- getPHPApiAxios
		//console.log("error from axios catch");
		if (error.code === undefined) {
			retErr = error.message; //network error
		} else {
			// ECONNREFUSED
			retErr = error.code + ' ' + error.address + ':' + error.port;
		}

		retErr = '[Server Error] ' + retErr;
	}

	if (retErr !== null) {
		return rejectPromiseError(error, retErr);
	}

	//console.log("error from axios finish");
	return Promise.reject(error);
});

function getAxiosGraphQLQuery(queryString) {

	var config = {
		headers: {
			'Content-Type': 'application/x-www-form-urlencoded'
		},
		proxy: false,
		params: {
			query: queryString,
			variables: null
		}
	};

	return axios.post(graphQLUrl, {}, config);
}

function graphql(q) {
	return getAxiosGraphQLQuery(q);
}

function getStaticAxios(filename) {
	var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

	var config = {
		proxy: false
	};

	var url = StaticUrl + '/' + filename;
	if (version !== null) {
		url += '?v=' + version;
	}

	return axios.get(url, config).then(function (res) {
		return res.data;
	}, function (err) {
		rejectPromiseError(err, 'Failed To Load Static Asset - ' + url);
	});
}

function postAxios(requestUrl, params, headers) {
	var config = {
		proxy: false
	};

	if (typeof headers !== "undefined") {
		config.headers = headers;
	}

	return axios.post(requestUrl, JSON.stringify(params), config);
}

function deleteAxios(requestUrl, headers) {
	var config = {
		proxy: false
	};

	if (typeof headers !== "undefined") {
		config.headers = headers;
	}

	return axios.delete(requestUrl, config);
}

function getPHPApiAxios(script, params) {
	var requestUrl = AppConfig.PHPApi + (script + '.php');
	console.log(requestUrl);
	var config = {
		proxy: false
	};
	return axios.post(requestUrl, qs.stringify(params), config);
}

function getPHPNotificationApiAxios(script, params) {
	var requestUrl = AppConfig.PHPNotificationApi + (script + '.php');
	console.log(requestUrl);
	var config = {
		proxy: false
	};
	return axios.post(requestUrl, qs.stringify(params), config);
}

// only in ajax_external -- response is fixed here
function getWpAjaxAxios(action, data) {
	var successInterceptor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
	var isDataInPost = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;


	var params = {};
	if (isDataInPost) {
		params = data;
	} else {
		params["data"] = data;
	}
	params["action"] = action;

	var config = {
		proxy: false
	};
	return axios.post(AppConfig.WPAjaxApi, qs.stringify(params), config).then(function (res) {
		if (res.data.err) {
			return res.data.err;
		} else {

			var retData = res.data.data;

			if (typeof retData == "undefined") {
				retData = res.data;
			}

			if (successInterceptor !== null) {
				successInterceptor(retData);
			}

			return retData;
		}
	}, function (err) {
		return err.response.data;
	});
}

//Export functions 
module.exports = {
	graphql: graphql,
	deleteAxios: deleteAxios,
	postAxios: postAxios,
	getStaticAxios: getStaticAxios,
	getAxiosGraphQLQuery: getAxiosGraphQLQuery,
	getPHPApiAxios: getPHPApiAxios,
	getPHPNotificationApiAxios: getPHPNotificationApiAxios,
	getWpAjaxAxios: getWpAjaxAxios
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// ###################################################
// Indicator
var ALWAYS_TRUE = true;
var ALWAYS_FALSE = false;

var IsRecruiterNewHall = false;

var IsDailyCoEnable = ALWAYS_TRUE;
var IsNewHall = ALWAYS_TRUE;
var IsGruveoEnable = ALWAYS_FALSE;
// if (typeof location !== "undefined") {
//     IsNewHall = location.href.indexOf("new=1") >= 0 ? true : false;
//     console.log("location.href", location.href);
//     console.log("IsNewHall", IsNewHall);
// }

// Indicator
// ###################################################

console.log("environment - " + "production");
var isProd = "production" === "production"; // that is deployed to server
var isProdLocal = "production" === "production-local"; // build for local server
var SocketUrl = isProd ? "https://seedsjobfairapp.com/socket" : "http://localhost:6000";

var RootPath = isProd ? "/cf" : "";
var AppPath = RootPath + "/app";
var SiteUrl = isProd ? "https://seedsjobfairapp.com/cf" : "http://localhost:4000";
var AssetUrl = isProd ? "https://seedsjobfairapp.com/public" : SiteUrl;
var UploadUrl = AssetUrl + "/upload";
var StaticUrl = AssetUrl + "/static";
var ImageUrl = AssetUrl + "/asset/image";
var DocumentUrl = AssetUrl + "/asset/document";
var AudioUrl = AssetUrl + "/asset/audio";
var DailyCoCreateRoomUrl = SiteUrl + "/daily-co/create-room";

var RootUrl =  false ? "http://localhost:8085" : "http://localhost:80";
if (isProd) {
    RootUrl = "https://seedsjobfairapp.com";
}

var LandingUrl = "https://seedsjobfairapp.com";

var PHPApi = isProd ? "https://seedsjobfairapp.com/php-api/" : RootUrl + "/cf-app/server/php-api/";
var PHPNotificationApi = isProd ? "https://seedsjobfairapp.com/notification-cf-app/public/" : RootUrl + "/notification-cf-app/public/";
var WPAjaxApi = isProd ? "https://seedsjobfairapp.com/career-fair/wp-admin/admin-ajax.php" : RootUrl + "/career-fair/wp-admin/admin-ajax.php";

var AppConfig = {
    HeaderIconUrl: "https://seedsjobfair.com/virtual-fairs",
    Name: "Virtual Career Fair " + (new Date().getYear() + 1900),
    Desc: "Powered by Seeds Job Fair",
    Url: isProd || isProdLocal ? PHPApi : "http://localhost:8080",
    Api: SiteUrl,
    PHPApi: PHPApi,
    PHPNotificationApi: PHPNotificationApi,
    FbAppId: "315194262317447",
    WPAjaxApi: WPAjaxApi,
    FbUrl: "https://www.fb.com/innovaseedssolutions",
    WwwUrl: "https://seedsjobfairapp.com"
};

var ImgConfig = {
    AppIcon: AssetUrl + "/asset/image/icon-transparent.png",
    IsIcon: AssetUrl + "/asset/image/innovaseed.png",
    IsIconInverse: AssetUrl + "/asset/image/innovaseed_inverse.png",
    DefUser: AssetUrl + "/asset/image/default-user.png",
    DefCompany: AssetUrl + "/asset/image/default-company.jpg",
    DefCompanyBanner: AssetUrl + "/asset/image/default-company-banner.jpg",
    DefUserBanner: AssetUrl + "/asset/image/default-user-banner.jpg",
    getFlag: function getFlag(country, size) {
        return AssetUrl + ("/asset/image/flags/" + size + "/" + country + ".png");
    }, // www.icondrawer.com -- flag
    getBanner: function getBanner(filename) {
        return AssetUrl + ("/asset/image/banner/" + filename);
    },
    getLogo: function getLogo(filename) {
        return AssetUrl + ("/asset/image/logo/" + filename);
    }
};

//email like '%test.%'
var TestUser = [136, 137, 222, 223, 224, 225, 226, 227, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342];

var OverrideComingSoonUser = [136, 137];
var SupportUserID = 681;

var HeaderClass = "";
var FooterClass = "";
if (!isProd) {
    // HeaderClass = "app-hidden";
    // FooterClass = "app-hidden";
}

module.exports = {
    HeaderClass: HeaderClass,
    FooterClass: FooterClass,
    IsDailyCoEnable: IsDailyCoEnable,
    DailyCoCreateRoomUrl: DailyCoCreateRoomUrl,
    IsGruveoEnable: IsGruveoEnable,
    SocketUrl: SocketUrl,
    LandingUrl: LandingUrl,
    DocumentUrl: DocumentUrl,
    TestUser: TestUser,
    OverrideComingSoonUser: OverrideComingSoonUser,
    RootPath: RootPath,
    AppPath: AppPath,
    StaticUrl: StaticUrl,
    SupportUserID: SupportUserID,
    SiteUrl: SiteUrl,
    AudioUrl: AudioUrl,
    UploadUrl: UploadUrl,
    AppConfig: AppConfig,
    ImgConfig: ImgConfig,
    ImageUrl: ImageUrl,
    IsNewHall: IsNewHall,
    IsRecruiterNewHall: IsRecruiterNewHall
};

// function helloGold() {
//     const returnInv = 10;
//     const buyFee = 2.81;
//     const sellFee = 4.04;

//     let modal = 100;
//     let pPerG = 173.07;
//     let gEarn = modal * (100 - buyFee) / pPerG / 100;

//     var newPPerG = 0;
//     var rmEarned = 0;
//     for (var i = 1; i <= 1000; i++) {
//         newPPerG = pPerG + i;
//         rmEarned = newPPerG * gEarn * (100 - sellFee) / 100;
//         if (rmEarned > (modal * (100 + returnInv) / 100)) {
//             break;
//         }
//     }
//     console.log("buyP", pPerG, "||", "sellP :", newPPerG, "||", "rmEarned :", rmEarned);
// }
// helloGold();

// let xx = `
// 1642
// 1641
// 1639
// 1634
// 1633
// 1628
// 1625
// 1617
// 1614
// 1607
// 1604
// 1597
// 1596
// 1592
// 1591
// 1590
// 1588
// 1587
// 1586
// 1584
// 1581
// 1578
// 1577
// 1572
// 1568
// 1564 
// 1563
// 1561
// 1558
// 1557
// 1555
// 1554
// 1552
// 1543
// 1540
// 1539
// 1536
// 1535
// 1531
// 1526
// 1525
// 1524
// 1523
// 1522
// 1518
// 1509
// 1508
// 1507
// 1505
// 1504
// 1502
// 1501
// 1500
// 1499
// 1498
// 1497
// 1496
// 1495
// 1491
// 1490
// 1489
// 1482
// 1481
// 1478
// 1470
// 1469
// 1466
// 1462
// 1456
// 1455
// 1453
// 1451
// 1450
// 1447
// 1444
// 1442
// 1438
// 1435
// 1433
// 1432
// 1431
// 1428
// 1426
// 1423
// 1421
// 1417
// 1416
// 1414
// 1413
// 1411
// 1408
// 1403
// 1402
// 1401
// 1399
// 1398
// 1395
// 1392
// 1391
// 1389
// 1388
// 1387
// 1386
// 1383
// 1375
// 1374
// 1373
// 1372
// 1369
// 1368
// 1367
// 1365
// 1363
// 1361
// 1360
// 1358
// 1355
// 1353
// 1351
// 1350
// 1349
// 1341
// 1339
// 1335
// 1332
// 1328
// 1324
// 1323
// 1320
// 1318
// 1314
// 1313
// 1308
// 1302
// 1297
// 1296
// 1295
// 1294
// 1292
// 1291
// 1289
// 1284
// 1279
// 1273
// 1272
// 1268
// 1263
// 1262
// 1260
// 1259
// 1257
// 1253
// 1250
// 1248
// 1247
// 1244
// 1242
// 1241
// 1238
// 1234
// 1229
// 1221
// 1217
// 1040
// 873

// `
// xx = xx.split("\n");
// let sqlIn = "";
// for(var k in xx){
//     if(xx[k] != ""){
//         sqlIn += xx[k] +", ";
//     }
// }
// sqlIn += "999999";

// console.log(`
// select * from wp_cf_usermeta
// where user_id IN (${sqlIn})
// and meta_key = 'user_status'
// and meta_value = 'Not Activated'
// `);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var SingleInput = {
	TABLE: "single_input",
	ID: "ID",
	KEY_INPUT: "key_input",
	VAL: "val",
	ENTITY: "entity",
	ENTITY_ID: "entity_id",
	CREATED_AT: "created_at",
	UPDATED_AT: "updated_at"
};
var Interested = {
	TABLE: "interested",
	IS_INTERESTED: "is_interested",
	USER_ID: "user_id",
	ENTITY: "entity",
	ENTITY_ID: "entity_id"
};
var GroupSession = {
	TABLE: "group_session",
	ID: "ID",
	TITLE: "title",
	COMPANY_ID: "company_id",
	START_TIME: "start_time",
	JOIN_URL: "join_url",
	START_URL: "start_url",
	LIMIT_JOIN: "limit_join",
	IS_EXPIRED: "is_expired",
	IS_CANCELED: "is_canceled",
	CREATED_AT: "created_at",
	CREATED_BY: "created_by",
	UPDATED_AT: "updated_at",
	UPDATED_BY: "updated_by"
};

var GroupSessionJoin = {
	TABLE: "group_session_join",
	ID: "ID",
	GROUP_SESSION_ID: "group_session_id",
	USER_ID: "user_id",
	CREATED_AT: "created_at"
};

var User = {
	TABLE: "wp_cf_users",
	ID: "ID",
	EMAIL: "user_email",
	LOGIN: "user_login",
	PASSWORD: "user_pass",
	ACTIVATION_KEY: "user_activation_key",
	REGISTER_AT: "user_registered",
	TRIGGER_UPDATE: "trigger_update",
	CF: "cf",
	SKIP_DELETE_CF: "skip_delete_cf"
};

var Availability = {
	TABLE: "availability",
	ID: "ID",
	USER_ID: "user_id",
	TIMESTAMP: "timestamp",
	COMPANY_ID: "company_id",
	PRESCREEN_ID: "prescreen_id",
	IS_BOOKED: "is_booked"
};

var Meta = {
	TABLE: "_meta",
	ID: "ID",
	KEY: "meta_key",
	VALUE: "meta_value",
	SOURCE: "source",
	CREATED_AT: "created_at"
};

var Event = {
	TABLE: "events",
	ID: "ID",
	COMPANY_ID: "company_id",
	TITLE: "title",
	LOCATION: "location",
	DESCRIPTION: "description",
	TYPE: "type",
	START_TIME: "start_time",
	END_TIME: "end_time",
	CREATED_BY: "created_by",
	UPDATED_BY: "updated_by",
	CREATED_AT: "created_at",
	UPDATED_AT: "updated_at"
};

var EventEnum = {
	TYPE_PHYSICAL: "physical",
	TYPE_VIRTUAL: "virtual"
};

var Auditorium = {
	TABLE: "auditorium",
	ID: "ID",
	CF: "cf",
	COMPANY_ID: "company_id",
	TITLE: "title",
	LINK: "link",
	RECORDED_LINK: "recorded_link",
	TYPE: "type",
	START_TIME: "start_time",
	END_TIME: "end_time",
	MODERATOR: "moderator",
	CREATED_BY: "created_by",
	UPDATED_BY: "updated_by",
	UPDATED_AT: "updated_at"
};

var AuditoriumEnum = {
	TYPE_WEBINAR: "webinar"
};

var Message = {
	TABLE: "messages",
	FROM_ID: "from_user_id",
	MESSAGE: "message",
	CREATED_AT: "created_at"
};

var UserMeta = {
	TABLE: "wp_cf_usermeta",
	// all roles usermeta
	FIRST_NAME: "first_name",
	LAST_NAME: "last_name",
	DESCRIPTION: "description",
	ROLE: "wp_cf_capabilities",
	IMG_URL: "reg_profile_image_url",
	IMG_POS: "profile_image_position",
	IMG_SIZE: "profile_image_size",
	FEEDBACK: "feedback",
	USER_STATUS: "user_status",
	IS_ACTIVATED: "is_activated",
	ACTIVATION_KEY: "activation_key",

	// student only
	UNIVERSITY: "university",
	PHONE_NUMBER: "phone_number",
	GRADUATION_MONTH: "graduation_month",
	GRADUATION_YEAR: "graduation_year",
	AVAILABLE_MONTH: "available_month",
	AVAILABLE_YEAR: "available_year",
	SPONSOR: "sponsor",
	CGPA: "cgpa",
	STUDY_FIELD: "study_field",
	MAJOR: "major",
	MINOR: "minor",
	GENDER: "gender",

	DEGREE_LEVEL: "degree_level",

	MAS_POSTCODE: "mas_postcode",
	MAS_STATE: "mas_state",
	RELOCATE: "relocate",
	STUDY_PLACE: "study_place",

	LOOKING_FOR: "looking_for",

	// rec only
	REC_COMPANY: "rec_company",
	REC_POSITION: "rec_position"
};

var UserEnum = {
	GENDER_MALE: "Male",
	GENDER_FEMALE: "Female",
	LOOK_FOR_FULL_TIME: "Full-Time",
	LOOK_FOR_PART_TIME: "Part-Time",
	LOOK_FOR_INTERN: "Internship",
	ROLE_VOLUNTEER: "volunteer",
	ROLE_STUDENT: "student",
	ROLE_RECRUITER: "recruiter",
	ROLE_ADMIN: "administrator",
	ROLE_EDITOR: "editor",
	ROLE_ORGANIZER: "organizer",
	ROLE_SUPPORT: "support",
	STATUS_ACT: "Active",
	STATUS_NOT_ACT: "Not Activated"
};

var DocLink = {
	TABLE: "doc_link",
	ID: "ID",
	USER_ID: "user_id",
	COMPANY_ID: "company_id",
	TYPE: "type",
	LABEL: "label",
	URL: "url",
	DESCRIPTION: "description",
	CREATED_AT: "created_at",
	UPDATED_AT: "updated_at"
};

var DocLinkEnum = {
	TYPE_DOC: "document",
	TYPE_LINK: "link",
	LABEL_RESUME: "Resume",
	LABEL_ACADEMIC_TRANS: "Academic Transcript",
	USER_LABELS: ["Resume", "Academic Transcript", "Linked In", "Portfolio", "Git Hub", "Cover Letter", "Recommendation Letter"],
	COMPANY_LABELS: ["Brochure", "Website"],
	LABEL_STYLE: {
		Resume: {
			color: "#c62323",
			icon: "file-text"
		},
		CV: {
			color: "#c62323",
			icon: "file-text"
		},
		"Curriculum Vitae": {
			color: "#c62323",
			icon: "file-text"
		},
		"Linked In": {
			color: "#007BB4",
			icon: "linkedin"
		},
		"Git Hub": {
			color: "black",
			icon: "github"
		},
		Portfolio: {
			color: "#efa30b",
			icon: "folder-open"
		}
	}
};

var PasswordReset = {
	TABLE: "password_reset",
	ID: "ID",
	USER_ID: "user_id",
	TOKEN: "token",
	IS_EXPIRED: "is_expired"
};

var Prescreen = {
	TABLE: "pre_screens",
	ID: "ID",
	STUDENT_ID: "student_id",
	COMPANY_ID: "company_id",
	CREATED_AT: "created_at",
	APPNMENT_TIME: "appointment_time",
	START_URL: "start_url",
	JOIN_URL: "join_url",
	IS_EXPIRED: "is_expired",
	IS_ONSITE_CALL: "is_onsite_call",
	SPECIAL_TYPE: "special_type",
	STATUS: "status",
	UPDATED_BY: "updated_by",
	UPDATED_AT: "updated_at"
};

// Scheduled Interview
var PrescreenEnum = {
	// New SI Flow
	STATUS_STARTED: "0_Started", // recruiter create session
	STATUS_WAIT_CONFIRM: "1_Waiting", // recruiter schedule for interview (in student listing)
	STATUS_APPROVED: "2_Approved", // approve by student (tru email action)
	STATUS_REJECTED: "3_Rejected", // reject by student (tru email action)
	STATUS_ENDED: "4_Ended", // dh started and then dia expired dh video call

	// STATUS_PENDING: "Pending", // yang lama
	// STATUS_DONE: "Done", // session created

	ST_NEXT_ROUND: "Next Round", // from session
	ST_INTV_REQUEST: "Session Request",
	ST_PROFILE: "Student Profile",
	ST_RESUME_DROP: "Resume Drop",
	ST_FORUM: "Forum",
	ST_PRE_SCREEN: "Pre Screen", // from prescreen
	ST_NEW: "New" // from prescreen
};

var Queue = {
	TABLE: "in_queues",
	STUDENT_ID: "student_id",
	CREATED_AT: "created_at",
	STATUS: "status"
};

var QueueEnum = {
	STATUS_QUEUING: "Queuing",
	STATUS_CANCELED: "Canceled",
	STATUS_DONE: "Done"
};

var SessionRequest = {
	TABLE: "session_requests",
	STUDENT_ID: "student_id",
	COMPANY_ID: "company_id",
	CREATED_AT: "created_at",
	STATUS: "status"
};

var SessionRequestEnum = {
	STATUS_PENDING: "Pending", // Initial
	STATUS_CANCELED: "Canceled", // Canceled by Student
	STATUS_APPROVED: "Approved", // created scheduled interview
	STATUS_REJECTED: "Rejected" // Rejected by Recruiter
};

var Dashboard = {
	TABLE: "dashboard",
	ID: "id",
	CF: "cf",
	TITLE: "title",
	CONTENT: "content",
	TYPE: "type",
	UPDATED_AT: "updated_at",
	CREATED_AT: "created_at",
	CREATED_BY: "created_by"
};

var DashboardEnum = {
	TYPE_STUDENT: "student",
	TYPE_RECRUITER: "recruiter"
};

var Session = {
	TABLE: "sessions",
	ID: "id",
	H_ID: "host_id",
	P_ID: "participant_id",
	CREATED_AT: "created_at",
	STATUS: "status"
};

var SessionEnum = {
	STATUS_EXPIRED: "Expired",
	STATUS_LEFT: "Left",
	STATUS_ACTIVE: "Active"
};

var SessionNotes = {
	TABLE: "session_notes",
	ID: "ID",
	SESSION_ID: "session_id",
	REC_ID: "rec_id",
	STUDENT_ID: "student_id",
	NOTE: "note",
	UPDATED_AT: "updated_at"
};

var SessionRating = {
	TABLE: "session_ratings",
	ID: "ID",
	SESSION_ID: "session_id",
	REC_ID: "rec_id",
	STUDENT_ID: "student_id",
	CATEGORY: "category",
	RATING: "rating"
};

var SessionRatingEnum = {
	categories: ["Thinking & Problem Solving", "Communication Skill", "Leadership Qualities"]
};

var Company = {
	TABLE: "companies",
	ID: "ID",
	CF: "cf",
	NAME: "name",
	REC_PRIVACY: "rec_privacy",
	SPONSOR_ONLY: "sponsor_only",
	STATUS: "status",
	TAGLINE: "tagline",
	DESCRIPTION: "description",
	MORE_INFO: "more_info",
	IMG_URL: "img_url",
	IMG_SIZE: "img_size",
	MESSAGE_DROP_RESUME: "message_drop_resume",
	PRIVILEDGE: "priviledge",
	GROUP_URL: "group_url",
	IMG_POSITION: "img_position",
	TYPE: "type",
	ACCEPT_PRESCREEN: "accept_prescreen"
};

var CompanyEnum = {
	STS_OPEN: "Open",
	STS_CLOSED: "Closed",
	STS_PS: "Prescreen Only",
	STS_RD: "Resume Drop Only",
	STS_GS: "Group Session",

	PRIV: {
		JOB_POSTING_ONLY: "JOB_POSTING_ONLY",
		AAS_MDC: "ACCESS_ALL_STUDENT_MDEC",
		AAS_ANE: "ACCESS_ALL_STUDENT_ANE",
		AAS_EUR: "ACCESS_ALL_STUDENT_EUR",
		AAS_NZL: "ACCESS_ALL_STUDENT_NZL",
		// AAS_COMBINE_CF : "ACCESS_ALL_STUDENT_COMBINE_CF",
		ACCESS_ALL_STUDENT: "ACCESS_ALL_STUDENT",
		ACCESS_RS_PRE_EVENT: "ACCESS_RS_PRE_EVENT",
		ACCESS_RS_DURING_EVENT: "ACCESS_RS_DURING_EVENT",
		SCHEDULE_PRIVATE_SESSION: "SCHEDULE_PRIVATE_SESSION"
	},
	parsePrivs: function parsePrivs(arr) {
		if (arr == null || typeof arr === "undefined") {
			return [];
		}

		if (!Array.isArray(arr)) {
			try {
				arr = JSON.parse(arr);
				return arr;
			} catch (err) {
				console.error("Error in parsing JSON in CompanyEnum.parseArr()");
				return [];
			}
		}

		return arr;
	},
	hasPriv: function hasPriv(privArrs, priv) {
		if (!Array.isArray(privArrs)) {
			try {
				privArrs = JSON.parse(privArrs);
			} catch (err) {
				console.error("Error in parsing JSON in CompanyEnum.hasPriv()", privArrs);
				return false;
			}
		}

		if (privArrs.indexOf(priv) >= 0) {
			return true;
		} else {
			return false;
		}
	},

	TYPE_PLATINUM: -1,
	TYPE_SPECIAL: 0,
	TYPE_GOLD: 1,
	TYPE_SILVER: 2,
	TYPE_BRONZE: 3,
	TYPE_NORMAL: 4,
	REC_PRIVACY_PUBLIC: 0,
	REC_PRIVACY_PRIVATE: 1,
	getTypeStr: function getTypeStr(type) {
		switch (type) {
			case -1:
				return "Platinum";
			case 0:
				return "Special";
			case 1:
				return "Gold";
			case 2:
				return "Silver";
			case 3:
				return "Bronze";
			case 4:
				return "Normal";
		}
	}
};

var Vacancy = {
	TABLE: "vacancies",
	ID: "ID",
	COMPANY_ID: "company_id",
	TITLE: "title",
	DESCRIPTION: "description",
	REQUIREMENT: "requirement",
	TYPE: "type",
	APPLICATION_URL: "application_url",
	UPDATED_AT: "updated_at",
	CREATED_BY: "created_by"
};

var VacancyEnum = {
	TYPE_FULL_TIME: "Full Time",
	TYPE_INTERN: "Intern",
	TYPE_PART_TIME: "Part Time"
};

var Skill = {
	TABLE: "skills",
	ID: "ID",
	USER_ID: "user_id",
	LABEL: "label"
};

var ResumeDrop = {
	TABLE: "resume_drops",
	ID: "ID",
	DOC_LINKS: "doc_links",
	STUDENT_ID: "student_id",
	COMPANY_ID: "company_id",
	MESSAGE: "message"
};

var Log = {
	TABLE: "logs",
	ID: "ID",
	EVENT: "event",
	DATA: "data",
	USER_ID: "user_id",
	CREATED_AT: "created_at"
};

var LogEnum = {
	EVENT_LOGIN: "login", // data-> browser type
	EVENT_OPEN_PAGE: "open_page", // data -> path
	EVENT_CLICK_EVENT_PAGE: "click_event_page", // data null
	EVENT_CLICK_ADS: "click_ads", // data -> ads id from app-config
	EVENT_CLICK_USER_DOC: "click_user_doc", // data -> user_id
	EVENT_VISIT_COMPANY: "visit_company", // data -> company_id
	EVENT_VISIT_VACANCY: "visit_vacancy", // data -> vacancy_id
	EVENT_CALL_GRUVEO: "call_gruveo", // data -> session_id
	EVENT_CALL_DAILY_CO: "call_daily_co", // data -> session_id
	EVENT_CALL_ZOOM: "call_zoom", // data -> session_id
	EVENT_CLICK_LEFT_BAR: "click_left_bar", // label
	EVENT_CLICK_JOIN_VIDEO_CALL: "click_join_video_call",
	EVENT_CLICK_GOT_QUESTION: "click_got_question", // <empty>
	EVENT_CLICK_CONNECT_WITH_ONSITE: "click_connect_with_onsite", // <empty>
	EVENT_CLICK_GALLERY: "click_gallery" // data-> label, url, student_id, company_id
};

var ZoomInvite = {
	TABLE: "zoom_invites"
};

var ForumComment = {
	TABLE: "forum_comments"
};

var ForumReply = {
	TABLE: "forum_replies"
};

var SupportSession = {
	TABLE: "support_sessions",
	USER_ID: "user_id",
	SUPPORT_ID: "support_id"
};

var FeedbackQs = {
	TABLE: "feedback_qs",
	USER_ROLE: "user_role",
	QUESTION: "question",
	IS_DISABLED: "is_disabled"
};

var QsPopup = {
	TABLE: "qs_popup",
	TYPE: "type",
	FOR_REC: "for_rec",
	FOR_STUDENT: "for_student",
	IS_DISABLED: "is_disabled",
	LABEL: "label",
	ANSWERS: "answers",
	CREATED_BY: "created_by",
	UPDATED_BY: "updated_by"
};

var QsPopupEnum = {
	TYPE_SUBJECTIVE: "SUBJECTIVE",
	TYPE_MCQ: "MCQ"
};

var QsPopupAnswer = {
	TABLE: "qs_popup_answer",
	USER_ID: "user_id",
	QS_POPUP_ID: "qs_popup_id",
	ANSWER: "answer"
};

var Notifications = {
	TABLE: "notifications",
	ID: "ID",
	USER_ID: "user_id",
	CF: "cf",
	TEXT: "text",
	TYPE: "type",
	IS_READ: "is_read",
	IMG_ENTITY: "img_entity",
	IMG_ID: "img_id",
	CREATED_AT: "created_at"
};

var NotificationsEnum = {
	TYPE_CREATE_PRIVATE_SESSION: "CREATE_PRIVATE_SESSION",
	TYPE_REMIND_PRIVATE_SESSION: "REMIND_PRIVATE_SESSION",
	TYPE_REMIND_GROUP_SESSION: "REMIND_GROUP_SESSION",
	IMG_ENTITY_USER: "user",
	IMG_ENTITY_COMPANY: "company"
};

var CFS = {
	TABLE: "cfs"
};

var EntityRemoved = {
	TABLE: "entity_removed",
	ENTITY: "entity",
	ENTITY_ID: "entity_id",
	USER_ID: "user_id"
};

var CFSMeta = {
	TABLE: "cfs_meta",
	TITLE: "title",
	FLAG: "flag",
	BANNER: "banner",
	BANNER_POS: "banner_pos",
	SCHEDULE: "schedule",
	OVERRIDE_COMING_SOON: "override_coming_soon",
	LOGO: "logo",
	LOGO_HEIGHT_HALL: "logo_height_hall",
	LOGO_WIDTH_HALL: "logo_width_hall",
	LOGO_MARGIN_HALL: "logo_margin_hall",
	LOGO_HEIGHT: "logo_height",
	LOGO_WIDTH: "logo_width",
	LOGO_POSITION: "logo_position",
	LOGO_SIZE: "logo_size",
	START: "start",
	END: "end",
	TIME_STR: "time_str",
	TIME_STR_MAS: "time_str_mas",
	TEST_START: "test_start",
	TEST_END: "test_end",
	PAGE_URL: "page_url",
	PAGE_BANNER: "page_banner",
	CAN_REGISTER: "can_register",
	CAN_LOGIN: "can_login",
	MAIL_CHIMP_LIST: "mail_chimp_list",

	HALL_CFG_ONSITE_CALL_USE_GROUP: "hall_cfg_onsite_call_use_group",
	// for CareerFairOrg
	ORGANIZATIONS: "organizations"

	// ORGANIZER: "Organizer",
	// COLLABORATOR: "Collaborator",
	// POWERED: "Powered",
	// UNIVERSITY: "University"
};

var CFSMetaObject = [CFSMeta.SCHEDULE, CFSMeta.ORGANIZER, CFSMeta.COLLABORATOR, CFSMeta.POWERED, CFSMeta.UNIVERSITY];

// const CFSMetaOrg = [
//   CFSMeta.ORGANIZER,
//   CFSMeta.COLLABORATOR,
//   CFSMeta.POWERED,
//   CFSMeta.UNIVERSITY
// ];

var Video = {
	TABLE: "video",
	ID: "ID",
	ENTITY: "entity",
	ENTITY_ID: "entity_id",
	META_KEY: "meta_key",
	URL: "url",
	CREATED_AT: "created_at",
	UPDATED_AT: "updated_at"
};

var VideoEnum = {
	RESUME: "resume"
};

var HallGallery = {
	TABLE: "hall_gallery",
	ID: "ID",
	ITEM_ORDER: "item_order",
	CF: "cf",
	IS_ACTIVE: "is_active",
	TITLE: "title",
	DESCRIPTION: "description",
	TYPE: "type",
	IMG_URL: "img_url",
	IMG_POS: "img_pos",
	IMG_SIZE: "img_size",
	VIDEO_URL: "video_url",
	CREATED_BY: "created_by",
	UPDATED_BY: "updated_by"
};

var HallGalleryEnum = {
	TYPE_IMAGE: "image",
	TYPE_VIDEO: "video"
};

module.exports = {
	VideoEnum: VideoEnum,
	QsPopup: QsPopup,
	QsPopupEnum: QsPopupEnum,
	QsPopupAnswer: QsPopupAnswer,
	User: User,
	UserMeta: UserMeta,
	UserEnum: UserEnum,
	FeedbackQs: FeedbackQs,
	ForumComment: ForumComment,
	ForumReply: ForumReply,
	DocLink: DocLink,
	DocLinkEnum: DocLinkEnum,
	Session: Session,
	SessionEnum: SessionEnum,
	Vacancy: Vacancy,
	VacancyEnum: VacancyEnum,
	Prescreen: Prescreen,
	PrescreenEnum: PrescreenEnum,
	Company: Company,
	CompanyEnum: CompanyEnum,
	Queue: Queue,
	QueueEnum: QueueEnum,
	SessionRequest: SessionRequest,
	SessionRequestEnum: SessionRequestEnum,
	Dashboard: Dashboard,
	DashboardEnum: DashboardEnum,
	Skill: Skill,
	Message: Message,
	SessionNotes: SessionNotes,
	SessionRating: SessionRating,
	SessionRatingEnum: SessionRatingEnum,
	ResumeDrop: ResumeDrop,
	SupportSession: SupportSession,
	PasswordReset: PasswordReset,
	Meta: Meta,
	Log: Log,
	LogEnum: LogEnum,
	Auditorium: Auditorium,
	AuditoriumEnum: AuditoriumEnum,
	ZoomInvite: ZoomInvite,
	Availability: Availability,
	GroupSession: GroupSession,
	GroupSessionJoin: GroupSessionJoin,
	CFS: CFS,
	CFSMeta: CFSMeta,
	CFSMetaObject: CFSMetaObject,
	// CFSMetaOrg,
	EntityRemoved: EntityRemoved,
	Notifications: Notifications,
	NotificationsEnum: NotificationsEnum,
	HallGallery: HallGallery,
	HallGalleryEnum: HallGalleryEnum,
	SingleInput: SingleInput,
	Interested: Interested,
	Video: Video,
	Event: Event,
	EventEnum: EventEnum
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UPDATE_FOCUS_CARD = exports.PREVIOUS_FOCUS_CARD = exports.UPDATE_BLOCK_LOADER = undefined;
exports.hideBlockLoader = hideBlockLoader;
exports.storeHideBlockLoader = storeHideBlockLoader;
exports.loadingBlockLoader = loadingBlockLoader;
exports.successBlockLoader = successBlockLoader;
exports.errorBlockLoader = errorBlockLoader;
exports.confirmBlockLoader = confirmBlockLoader;
exports.customBlockLoader = customBlockLoader;
exports.customViewBlockLoader = customViewBlockLoader;
exports.customViewBlockLoaderSmall = customViewBlockLoaderSmall;
exports.previousFocusCard = previousFocusCard;
exports.updateFocusCard = updateFocusCard;
exports.updateProps = updateProps;
exports.storeUpdateProps = storeUpdateProps;
exports.hideFocusCard = hideFocusCard;
exports.storeHideFocusCard = storeHideFocusCard;
exports.storeUpdateFocusCard = storeUpdateFocusCard;

var _store = __webpack_require__(34);

// Block Loader ----------------------------------------------
var UPDATE_BLOCK_LOADER = exports.UPDATE_BLOCK_LOADER = "UPDATE_BLOCK_LOADER";
function hideBlockLoader() {
    return function (dispatch) {
        dispatch({
            type: UPDATE_BLOCK_LOADER,
            payload: {
                loading: null,
                success: null,
                error: null,
                confirm: null,
                custom: null,
                show: false
            }
        });
    };
}

function storeHideBlockLoader() {
    _store.store.dispatch(hideBlockLoader());
}

function updateBlockLoader(loading, success, error, confirm, custom) {
    _store.store.dispatch({
        type: UPDATE_BLOCK_LOADER,
        payload: {
            loading: loading,
            success: success,
            error: error,
            confirm: confirm,
            custom: custom,
            show: true
        }
    });
}

function loadingBlockLoader(m) {
    updateBlockLoader(m, null, null, null, null);
}

function successBlockLoader(m) {
    updateBlockLoader(null, m, null, null, null);
}

function errorBlockLoader(m) {
    updateBlockLoader(null, null, m, null, null);
}

function confirmBlockLoader(title, yesHandler, noHandler) {
    updateBlockLoader(null, null, null, {
        title: title,
        yesHandler: yesHandler,
        noHandler: noHandler
    }, null);
}

function customBlockLoader(title, actionText, actionHandler, href) {
    var noClose = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var customView = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;
    var small = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;

    updateBlockLoader(null, null, null, null, {
        title: title,
        actionText: actionText,
        actionHandler: actionHandler,
        href: href,
        noClose: noClose,
        customView: customView,
        small: small
    });
}

function customViewBlockLoader(title, customView) {
    var noClose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    customBlockLoader(title, null, null, null, noClose, customView);
}
function customViewBlockLoaderSmall(title, customView) {
    var noClose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    customBlockLoader(title, null, null, null, noClose, customView, true);
}

// Focus Card ----------------------------------------------
var PREVIOUS_FOCUS_CARD = exports.PREVIOUS_FOCUS_CARD = "PREVIOUS_FOCUS_CARD";

function previousFocusCard() {
    return function (dispatch) {
        dispatch({
            type: PREVIOUS_FOCUS_CARD,
            payload: {}
        });
    };
}

var UPDATE_FOCUS_CARD = exports.UPDATE_FOCUS_CARD = "UPDATE_FOCUS_CARD";
function updateFocusCard(title, component, props) {
    var className = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";

    return function (dispatch) {
        dispatch({
            type: UPDATE_FOCUS_CARD,
            payload: {
                title: title,
                component: component,
                props: props,
                show: true,
                className: className
            }
        });
    };
}

function updateProps(props) {
    return function (dispatch) {
        dispatch({
            type: UPDATE_FOCUS_CARD,
            payload: {
                props: props
            }
        });
    };
}

function storeUpdateProps(props) {
    _store.store.dispatch(updateProps(props));
}

function hideFocusCard() {
    return function (dispatch) {
        dispatch({
            type: UPDATE_FOCUS_CARD,
            payload: {
                title: null,
                component: null,
                props: null,
                show: false
            }
        });
    };
}

function storeHideFocusCard() {
    _store.store.dispatch(hideFocusCard());
}

function storeUpdateFocusCard(title, component, props) {
    var className = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";

    _store.store.dispatch(updateFocusCard(title, component, props, className));
}

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BrowserRouter__ = __webpack_require__(399);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserRouter", function() { return __WEBPACK_IMPORTED_MODULE_0__BrowserRouter__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__HashRouter__ = __webpack_require__(405);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "HashRouter", function() { return __WEBPACK_IMPORTED_MODULE_1__HashRouter__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Link__ = __webpack_require__(217);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Link", function() { return __WEBPACK_IMPORTED_MODULE_2__Link__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__MemoryRouter__ = __webpack_require__(406);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "MemoryRouter", function() { return __WEBPACK_IMPORTED_MODULE_3__MemoryRouter__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__NavLink__ = __webpack_require__(408);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "NavLink", function() { return __WEBPACK_IMPORTED_MODULE_4__NavLink__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Prompt__ = __webpack_require__(410);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Prompt", function() { return __WEBPACK_IMPORTED_MODULE_5__Prompt__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Redirect__ = __webpack_require__(412);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Redirect", function() { return __WEBPACK_IMPORTED_MODULE_6__Redirect__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Route__ = __webpack_require__(218);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Route", function() { return __WEBPACK_IMPORTED_MODULE_7__Route__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Router__ = __webpack_require__(146);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return __WEBPACK_IMPORTED_MODULE_8__Router__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__StaticRouter__ = __webpack_require__(414);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "StaticRouter", function() { return __WEBPACK_IMPORTED_MODULE_9__StaticRouter__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__Switch__ = __webpack_require__(416);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Switch", function() { return __WEBPACK_IMPORTED_MODULE_10__Switch__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__generatePath__ = __webpack_require__(418);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "generatePath", function() { return __WEBPACK_IMPORTED_MODULE_11__generatePath__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__matchPath__ = __webpack_require__(419);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "matchPath", function() { return __WEBPACK_IMPORTED_MODULE_12__matchPath__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__withRouter__ = __webpack_require__(420);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "withRouter", function() { return __WEBPACK_IMPORTED_MODULE_13__withRouter__["a"]; });





























/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Loader = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Loader = exports.Loader = function (_React$Component) {
    _inherits(Loader, _React$Component);

    function Loader() {
        _classCallCheck(this, Loader);

        return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));
    }

    _createClass(Loader, [{
        key: 'render',
        value: function render() {
            var fa_size = "";
            if (this.props.size) {
                fa_size = 'fa-' + this.props.size + 'x';
            }

            var text_pos = "";
            if (this.props.text_pos) {
                text_pos = this.props.text_pos;
            } else {
                text_pos = "bottom";
            }

            //set text
            var text = null;
            if (this.props.text) {
                text = this.props.text;
                if (text_pos === "bottom") {
                    text = _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'small',
                            null,
                            text
                        )
                    );
                } else if (text_pos === "right") {
                    text = _react2.default.createElement(
                        'small',
                        null,
                        " " + text
                    );
                }
            }

            var style = {};
            if (this.props.isCenter) {
                style = { textAlign: "center", width: "100%" };
            }

            return _react2.default.createElement(
                'div',
                { style: style, className: 'loader' },
                _react2.default.createElement('i', { className: 'fa fa-spinner fa-pulse ' + fa_size }),
                text
            );
        }
    }]);

    return Loader;
}(_react2.default.Component);

Loader.propTypes = {
    size: _propTypes2.default.oneOf(['2', '3']),
    text: _propTypes2.default.string,
    text_pos: _propTypes2.default.oneOf(['bottom', 'right'])
};

Loader.defaultProps = {
    text: "Loading..."
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Time = function Time() {
    this.ALT_TIMEZONE_SHORT = "MYT";
    this.ALTERNATE_TIMEZONE = "Asia/Kuala_Lumpur";
    // this.ALTERNATE_TIMEZONE = "America/Sitka";
};

Time.prototype.getDateDay = function (unixtimestamp) {
    if (unixtimestamp <= 0 || unixtimestamp === null || unixtimestamp === "") {
        return "";
    }

    if (unixtimestamp === "now") {
        unixtimestamp = this.getUnixTimestampNow();
    }

    var date = new Date(unixtimestamp * 1000);
    var m = date.getMonth() + 1;
    var d = date.getDate();

    if (m < 10) {
        m = "0" + m;
    }

    if (d < 10) {
        d = "0" + d;
    }

    return date.getFullYear() + "-" + m + "-" + d;
};

Time.prototype.getDateDayStr = function (unixtimestamp, isTimezoneMas) {
    var isFull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    if (unixtimestamp <= 0 || unixtimestamp === null || unixtimestamp === "") {
        return "";
    }

    if (unixtimestamp === "now") {
        unixtimestamp = this.getUnixTimestampNow();
    }

    isTimezoneMas = typeof isMas === "undefined" ? false : isTimezoneMas;

    var date = new Date(unixtimestamp * 1000);
    if (isTimezoneMas === true) {
        date = this.convertToAlternateTimezone(date);
    }

    var arr = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
    if (isFull) {
        arr = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    }
    return arr[date.getDay()];
};

Time.prototype.getDateDayStrFull = function (unixtimestamp, isTimezoneMas) {
    return this.getDateDayStr(unixtimestamp, isTimezoneMas, true);
};

Time.prototype.getDateDayStrMas = function (unixtimestamp) {
    return this.getDateDayStr(unixtimestamp, true);
};

Time.prototype.getDateDayStrMasFull = function (unixtimestamp) {
    return this.getDateDayStr(unixtimestamp, true, true);
};

Time.prototype.getDateTime = function (unixtimestamp, format12H) {

    format12H = typeof format12H === "undefined" ? false : format12H;

    if (unixtimestamp <= 0 || unixtimestamp === null || unixtimestamp === "") {
        return "";
    }

    if (unixtimestamp === "now") {
        unixtimestamp = this.getUnixTimestampNow();
    }

    var date = new Date(unixtimestamp * 1000);
    var h = date.getHours();
    var m = date.getMinutes();

    var pm_am = "";
    if (format12H) {
        if (h >= 12) {
            pm_am = "PM";
            if (h >= 13) {
                h -= 12;
            }
        } else {
            pm_am = "AM";
        }
    }

    if (h < 10) {
        h = "0" + h;
    }

    if (m < 10) {
        m = "0" + m;
    }

    if (format12H) {
        return h + ":" + m + " " + pm_am;
    } else {
        return h + ":" + m;
    }
};

// timezone : MYT, EST
Time.prototype.getStringWithTimezone = function (unixtimestamp, timezone) {
    //Time.getStringWithTimezone("now", "MYT")

    var TZ = {
        MYT: +8,
        EST: -5,
        EDT: -4
    };

    if (unixtimestamp <= 0 || unixtimestamp === null || unixtimestamp === "") {
        return "";
    }

    if (unixtimestamp === "now") {
        unixtimestamp = this.getUnixTimestampNow();
    }

    if (typeof unixtimestamp === "string") {
        if (Number.isNaN(Number.parseInt(unixtimestamp))) {
            unixtimestamp = this.convertDBTimeToUnix(unixtimestamp);
        }
    }

    var d = new Date();
    var defaultOffset = d.getTimezoneOffset() / 60;
    var offset = defaultOffset + TZ[timezone];
    unixtimestamp = unixtimestamp + offset * 60 * 60;

    var r = this.getString(unixtimestamp) + " (" + timezone + ")";
    //console.log(r);

    return r;
};

Time.prototype.isUnixElapsedHour = function (unixtimestamp, hour) {
    var msPerMinute = 60 * 1000;
    var msPerHour = msPerMinute * 60;

    var current = new Date();
    var previous = new Date(unixtimestamp * 1000);
    var elapsed = current - previous;

    if (elapsed > hour * msPerHour) {
        return true;
    } else {
        return false;
    }
};

Time.prototype.getPeriodString = function (start, end, dates) {
    if (typeof dates !== "undefined") {
        var month = Time.getString(start, false, false, false, false, false, true); // month only
        var year = Time.getString(start, false, false, false, false, false, false, true); // month only

        var r = month;
        for (var i in dates) {
            var d = dates[i];
            if (i == 0) {
                // first
                r += " " + d;
            } else if (i == dates.length - 1) {
                //last
                r += " and " + d;
            } else {
                // middle
                r += ", " + d;
            }
        }

        r += ", " + year;
        return r;
    } else {
        var startStr = Time.getString(start, false, false, false, true); // day n month only
        var endStr = Time.getString(end, false, false, true, false); // with year
        return startStr + " - " + endStr;
    }
};

Time.prototype.getUnixTimestampNow = function () {
    var date = new Date();
    return Math.round(date.getTime() / 1000);
};

Time.prototype.convertDBTimeToUnix = function (db_time) {
    //return Date.parse(db_time) / 1000;

    if (typeof db_time !== "string") {
        return db_time;
    }

    function stripAll(str, arr) {
        for (var i in arr) {
            str = str.replace(arr[i], "");
        }
        return str;
    }

    function parseMonth(mnth) {
        switch (mnth.toLowerCase()) {
            case 'january':
            case 'jan':
            case 'enero':
                return 1;
            case 'february':
            case 'feb':
            case 'febrero':
                return 2;
            case 'march':
            case 'mar':
            case 'marzo':
                return 3;
            case 'april':
            case 'apr':
            case 'abril':
                return 4;
            case 'may':
            case 'mayo':
                return 5;
            case 'jun':
            case 'june':
            case 'junio':
                return 6;
            case 'jul':
            case 'july':
            case 'julio':
                return 7;
            case 'aug':
            case 'august':
            case 'agosto':
                return 8;
            case 'sep':
            case 'september':
            case 'septiembre':
            case 'setiembre':
                return 9;
            case 'oct':
            case 'october':
            case 'octubre':
                return 10;
            case 'nov':
            case 'november':
            case 'noviembre':
                return 11;
            case 'dec':
            case 'december':
            case 'diciembre':
                return 12;
        }
        return mnth;
    }

    function getUnixFromOffsetHour(unix, offset) {

        try {
            if (offset.indexOf("+") >= 0) {
                var hour = offset.replace("+", "");
                hour = Number.parseInt(hour);
                return unix - hour * 60 * 60;
            }

            if (offset.indexOf("-") >= 0) {
                var hour = offset.replace("-", "");
                hour = Number.parseInt(hour);
                return unix + hour * 60 * 60;
            }
        } catch (err) {}

        return unix;
    }

    function dbToTimeUnix(strDate) {
        var mapDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday', 'Mon\,', 'Tue\,', 'Wed\,', 'Thu\,', 'Fri\,', 'Sat\,', 'Sun\,', 'Mon ', 'Tue ', 'Wed ', 'Thu ', 'Fri ', 'Sat ', 'Sun ', 'Sun\.', 'Mon\.', 'Tue\.', 'Wed\.', 'Thu\.', 'Fri\.', 'Sat\.', 'Sun\.'];
        strDate = stripAll(strDate, mapDays);
        strDate = strDate.replace(/[\,]/g, '');
        strDate = strDate.replace(/^\s+|\s+$/g, '');
        strDate = strDate.replace(/ +(?= )/g, '');
        strDate = strDate.replace(/^(\d+)\./, '$1');
        var ok = 0;
        var skipDate = 0;
        var content = "";
        var date = "";
        var format = "";
        var yr = 1970;
        var mnth = 1;
        var dy = 1;
        var hr = 0;
        var mn = 0;
        var sec = 0;
        var dmy = 1;
        if (!ok) {
            var dateTimeSplit = strDate.split(" ");
            var dateParts = dateTimeSplit[0].split("-");
            if (dateParts.length == 1) dateParts = dateTimeSplit[0].split(".");
            if (dateParts.length == 1) {
                dmy = 0;
                dateParts = dateTimeSplit[0].split("/");
            }
            if (dateParts.length == 1) {
                dmy = 1;
                if (dateTimeSplit.length > 2) {
                    if (dateTimeSplit[2].split(":").length == 1) {
                        strDate = strDate.replace(dateTimeSplit[0] + ' ' + dateTimeSplit[1] + ' ' + dateTimeSplit[2], dateTimeSplit[0] + '-' + dateTimeSplit[1] + '-' + dateTimeSplit[2]);
                        dateTimeSplit = strDate.split(" ");
                        dateParts = dateTimeSplit[0].split("-");
                    }
                }
            }
            if (dateParts.length == 1) {
                dateParts = dateTimeSplit;
                if (dateTimeSplit.length > 3) timeParts = dateTimeSplit[4];
            }
            if (dateParts.length > 2) {
                if (dateParts[0] > 100) {
                    yr = dateParts[0];
                    mnth = parseMonth(dateParts[1]);
                    dy = dateParts[2];
                    format = "YMD";
                } else {
                    if (dmy) {
                        dy = dateParts[0];
                        mnth = parseMonth(dateParts[1]);
                        yr = dateParts[2];
                        format = "DMY";
                        if (!parseFloat(mnth) || !parseFloat(dy)) {
                            dy = dateParts[1];
                            mnth = parseMonth(dateParts[0]);
                            format = "MDY";
                        }
                    } else {
                        mnth = parseMonth(dateParts[0]);
                        dy = dateParts[1];
                        yr = dateParts[2];
                        format = "MDY";
                        if (!parseFloat(mnth) || !parseFloat(dy)) {
                            dy = dateParts[0];
                            mnth = parseMonth(dateParts[1]);
                            format = "DMY";
                        }
                    }
                }
                ok = 1;
            }
            if (ok && dateTimeSplit[1]) {
                var timeParts = dateTimeSplit[1].split(":");
                if (timeParts.length >= 2) {
                    hr = timeParts[0];
                    mn = timeParts[1];
                }
                if (timeParts.length >= 3) {
                    sec = timeParts[2];
                }
                if (dateTimeSplit[2] && dateTimeSplit[2].toLowerCase() == "pm" && parseFloat(hr) < 12) hr = parseFloat(hr) + 12;
                if (dateTimeSplit[2] && dateTimeSplit[2].toLowerCase() == "am" && parseFloat(hr) == 12) hr = 0;
            }
        }

        if (!ok) {
            date = new Date(strDate);
            if (date.getFullYear() > 1900) {
                ok = 1;
                skipDate = 1;
            }
        }
        var offsetHourGMT = 0;
        if (ok) {
            if (!skipDate) {
                if (mnth != parseFloat(mnth)) mnth = parseMonth(mnth);
                if (yr < 30) yr = 2000 + parseFloat(yr);
                if (yr < 200) yr = 1900 + parseFloat(yr);
                var usedGMT = 0;
                if (strDate.toUpperCase().indexOf('GMT') >= 0) {
                    date = new Date(Date.UTC(yr, mnth - 1, dy, hr, mn, sec));
                    usedGMT = 1;

                    // format server digital ocean
                    // Wed Mar 27 2019 12:16:54 GMT (+08)
                    var strArr = strDate.split("(");
                    strArr = strArr[1].split(")");
                    offsetHourGMT = strArr[0];

                    // New utk format ->
                    // Wed Mar 27 2019 12:16:54 GMT+0800 (Malay Peninsula Standard Time)
                    if (strDate.toUpperCase().indexOf('GMT+') >= 0 || strDate.toUpperCase().indexOf('GMT-') >= 0) {
                        var strArr2 = strDate.split("GMT");
                        strArr2 = strArr2[1].split(" ");
                        offsetHourGMT = strArr2[0];
                        if (offsetHourGMT.length > 3) {
                            offsetHourGMT = offsetHourGMT.substring(0, 3);
                        }
                    }
                } else {
                    date = new Date(yr, mnth - 1, dy, hr, mn, sec);
                }
            }
        }

        var unix = date.getTime() / 1000.0;

        return getUnixFromOffsetHour(unix, offsetHourGMT);
    }

    return dbToTimeUnix(db_time);
};

Time.prototype.getHapenningIn = function (unixtimestamp, _ref) {
    var passedText = _ref.passedText,
        startCountMinute = _ref.startCountMinute;

    if (typeof unixtimestamp === "string") {
        unixtimestamp = this.convertDBTimeToUnix(unixtimestamp);
    }

    startCountMinute = typeof startCountMinute === "undefined" ? 0 : startCountMinute;

    var msPerMinute = 60 * 1000;
    var msPerHour = msPerMinute * 60;
    var msPerDay = msPerHour * 24;
    var msPerMonth = msPerDay * 30;
    var msPerYear = msPerDay * 365;

    var msStartCount = startCountMinute * msPerMinute;

    var current = new Date();

    var next = new Date(unixtimestamp * 1000);
    var timeLeft = next - current;

    // console.log("msStartCount", msStartCount);
    // console.log("timeLeft", timeLeft);

    if (msStartCount > 0) {
        if (timeLeft > msStartCount) {
            return null;
        }
    }

    if (timeLeft <= 0) {
        return passedText;
    }

    if (timeLeft < msPerMinute) {
        return Math.round(timeLeft / 1000) + ' seconds';
    } else if (timeLeft < msPerHour) {
        return Math.round(timeLeft / msPerMinute) + ' minutes';
    } else if (timeLeft < msPerDay) {
        return Math.round(timeLeft / msPerHour) + ' hours';
    } else if (timeLeft < msPerMonth) {
        return Math.round(timeLeft / msPerDay) + ' days';
    } else if (timeLeft < msPerYear) {
        return Math.round(timeLeft / msPerMonth) + ' months';
    } else {
        return Math.round(timeLeft / msPerYear) + ' years';
    }
};

Time.prototype.getAgo = function (unixtimestamp) {
    if (typeof unixtimestamp === "string") {
        unixtimestamp = this.convertDBTimeToUnix(unixtimestamp);
        console.log("yoo");
    }

    console.log("unixtimestamp", unixtimestamp);

    var msPerMinute = 60 * 1000;
    var msPerHour = msPerMinute * 60;
    var msPerDay = msPerHour * 24;
    var msPerMonth = msPerDay * 30;
    var msPerYear = msPerDay * 365;

    var current = new Date();

    var previous = new Date(unixtimestamp * 1000);
    var elapsed = current - previous;

    if (elapsed < msPerMinute) {
        var sec = Math.round(elapsed / 1000);
        if (sec < 10) {
            return "Just now";
        } else {
            return Math.round(elapsed / 1000) + ' seconds ago';
        }
    } else if (elapsed < msPerHour) {
        return Math.round(elapsed / msPerMinute) + ' minutes ago';
    } else if (elapsed < msPerDay) {
        return Math.round(elapsed / msPerHour) + ' hours ago';
    } else if (elapsed < msPerMonth) {
        return Math.round(elapsed / msPerDay) + ' days ago';
    } else if (elapsed < msPerYear) {
        return Math.round(elapsed / msPerMonth) + ' months ago';
    } else {
        return Math.round(elapsed / msPerYear) + ' years ago';
    }
};

Time.prototype.getHappeningAgo = function (unixtime, _ref2) {
    var happeningHandler = _ref2.happeningHandler,
        agoHandler = _ref2.agoHandler;

    var happText = this.getHapenningIn(unixtime, {
        passedText: null,
        startCountMinute: 0
    });
    if (happText == null) {
        return agoHandler(this.getAgo(unixtime));
    } else {
        return happeningHandler(happText);
    }
};

Time.prototype.getStringShort = function (unixtimestamp, getSecond) {
    return this.getString(unixtimestamp, false, true, false, false, getSecond);
};

Time.prototype.getDate = function (unixtimestamp) {
    return this.getString(unixtimestamp, false, false, true);
};

// #######################################
// MAS
Time.prototype.getStringShortMas = function (unixtimestamp, getSecond) {
    var isTimezoneMas = true;
    return this.getString(unixtimestamp, false, true, false, false, getSecond, undefined, undefined, isTimezoneMas);
};

Time.prototype.getDateMas = function (unixtimestamp) {
    var isTimezoneMas = true;
    return this.getString(unixtimestamp, false, false, true, undefined, undefined, undefined, undefined, isTimezoneMas);
};

Time.prototype.getStringMas = function (unixtimestamp) {
    var isTimezoneMas = true;
    return this.getString(unixtimestamp, undefined, undefined, undefined, undefined, undefined, undefined, undefined, isTimezoneMas);
};

Time.prototype.convertToAlternateTimezone = function (date) {
    var timezone = this.ALTERNATE_TIMEZONE;

    var invdate = new Date(date.toLocaleString('en-US', {
        timeZone: timezone
    }));

    // then invdate will be 07:00 in Toronto
    // and the diff is 5 hours
    var diff = invdate.getTime() - date.getTime();

    // console.log("date", date);
    // console.log("invdate", invdate);
    // console.log("diff", diff);

    // so 12:00 in Toronto is 17:00 UTC
    return new Date(date.getTime() + diff);
};
// MAS
// #######################################

// mysql UNIX_TIMESTAMP(column)

Time.prototype.getString = function (unixtimestamp) {
    var include_timezone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var isShort = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var dateOnly = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var dateMonthOnly = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var getSecond = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
    var monthOnly = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
    var yearOnly = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
    var isTimezoneMas = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;


    if (unixtimestamp <= 0 || unixtimestamp === null || unixtimestamp === "") {
        return "";
    }

    if (unixtimestamp === "now") {
        unixtimestamp = this.getUnixTimestampNow();
    }
    //console.log(unixtimestamp);

    if (typeof unixtimestamp === "string") {
        if (Number.isNaN(Number.parseInt(unixtimestamp))) {
            unixtimestamp = this.convertDBTimeToUnix(unixtimestamp);
            //console.log(unixtimestamp);
        }
    }

    include_timezone = typeof include_timezone === "undefined" ? false : include_timezone;
    var newDate = new Date(unixtimestamp * 1000);

    if (isTimezoneMas === true) {
        newDate = this.convertToAlternateTimezone(newDate);
    }

    var hour = newDate.getHours();
    var minute = newDate.getMinutes();
    var seconds = newDate.getSeconds();

    var pm_am = "";

    if (hour >= 12) {
        pm_am = "PM";
        if (hour >= 13) {
            hour -= 12;
        }
    } else {
        pm_am = "AM";
    }

    if (hour < 10) {
        hour = "0" + hour;
    }

    if (minute < 10) {
        minute = "0" + minute;
    }

    if (seconds < 10) {
        seconds = "0" + seconds;
    }

    //console.log(newDate.getTimezoneOffset());
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    var toReturn = "";
    //month start with zero

    if (!isShort) {
        toReturn += months[newDate.getMonth()];
        toReturn += " ";
        toReturn += newDate.getDate();

        if (yearOnly) {
            return newDate.getFullYear();
        }

        if (monthOnly) {
            return months[newDate.getMonth()];
        }

        if (dateMonthOnly) {
            return toReturn;
        }

        toReturn += ", ";
        toReturn += newDate.getFullYear();

        if (dateOnly) {
            return toReturn;
        }

        toReturn += " ";
    }

    toReturn += hour;
    toReturn += ":";
    toReturn += minute;

    if (getSecond) {
        toReturn += ":";
        toReturn += seconds;
    }

    toReturn += " " + pm_am;

    if (include_timezone) {
        // toReturn += "<br><small>" + this.getTimezone(newDate) + "</small>";
        toReturn += " (" + this.getTimezoneShort(newDate) + ")";
    }

    return toReturn;
};

Time.prototype.getTimezoneShortMas = function () {
    var dateInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    return this.getTimezoneShort(dateInput, true);
};

Time.prototype.getTimezoneShort = function () {
    var dateInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var isTimezoneMas = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    var dateObject = dateInput || new Date(),
        dateString = dateObject + "",
        tzAbbr =
    // Works for the majority of modern browsers
    dateString.match(/\(([^\)]+)\)$/) ||
    // IE outputs date strings in a different format:
    dateString.match(/([A-Z]+) [\d]{4}$/);

    if (isTimezoneMas) {
        dateObject = this.convertToAlternateTimezone(dateObject);
    }

    // console.log(isTimezoneMas,dateObject);

    if (tzAbbr) {
        // Old Firefox uses the long timezone name (e.g., "Central
        // Daylight Time" instead of "CDT")
        tzAbbr = tzAbbr[1].match(/[A-Z]/g).join("");
    }

    // Uncomment these lines to return a GMT offset for browsers
    // that don't include the user's zone abbreviation (e.g.,
    // "GMT-0500".) I prefer to have `null` in this case, but
    // you may not!
    // First seen on: http://stackoverflow.com/a/12496442
    // if (!tzAbbr && /(GMT\W*\d{4})/.test(dateString)) {
    // 	return RegExp.$1;
    // }

    // replace timezone
    if (tzAbbr == "MT") {
        tzAbbr = "MYT";
    }

    return tzAbbr;
};

Time.prototype.getTimezone = function () {
    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var isTimezoneMas = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (date === null) {
        date = new Date();
    }

    if (isTimezoneMas) {
        date = this.convertToAlternateTimezone(date);
    }

    try {
        return date.toString().split('(')[1].slice(0, -1);
    } catch (err) {
        return "";
    }
};

Time.prototype.getTimezoneMas = function () {
    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    return this.getTimezone(date, true);
};

Time.prototype.getUnixFromDateTimeInput = function (date_input, time_input) {
    var datetime = date_input + "T" + time_input + ":00";
    var d = new Date(datetime);
    return Math.floor(d.getTime() / 1000);
};

Time.prototype.getInputFromUnix = function (unixtimestamp) {
    var r = {};
    var date = new Date(unixtimestamp * 1000);
    var d = date.toString();
    var t = date.toLocaleTimeString();

    var y = date.getFullYear();
    var m = date.getMonth() + 1;
    var d = date.getDate();

    m = m < 10 ? "0" + m : m;
    d = d < 10 ? "0" + d : d;

    var h = date.getHours();
    var mm = date.getMinutes();

    mm = mm < 10 ? "0" + mm : mm;
    h = h < 10 ? "0" + h : h;

    r.date = y + "-" + m + "-" + d;
    r.time = h + ":" + mm;
    return r;
};

//export var Time = new Time();
var Time = new Time();
module.exports = {
    Time: Time
};

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (false) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomList = exports.SimpleListItem = exports.ProfileListWide = exports.ProfileListItem = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.createIconLink = createIconLink;
exports.createIconList = createIconList;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _buttons = __webpack_require__(15);

var _loader = __webpack_require__(8);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _reactRouterDom = __webpack_require__(7);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _reactFacebook = __webpack_require__(512);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/list.scss");

var List = function (_React$Component) {
  _inherits(List, _React$Component);

  function List(props) {
    _classCallCheck(this, List);

    var _this = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, props));

    _this.page = 0;
    _this.load = _this.load.bind(_this);
    _this.loadCount = _this.loadCount.bind(_this);
    _this.isAppendType = _this.isAppendType.bind(_this);
    _this.showLoadMore = _this.showLoadMore.bind(_this);
    _this.renderDataContent = _this.renderDataContent.bind(_this);

    _this.isAppend = false;

    _this.state = {
      listItem: null,
      fetching: true,
      fetching_append: false,
      totalFetched: 0,
      fetchCount: 0,
      empty: false,
      count: 0
    };

    _this.NEXT = "Next";
    _this.PREV = "Prev";
    return _this;
  }

  _createClass(List, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.init();
    }
  }, {
    key: "init",
    value: function init() {
      this.loadCount();
      this.load(this.NEXT);
    }
  }, {
    key: "loadCount",
    value: function loadCount() {
      var _this2 = this;

      if (this.props.loadCount) {
        this.props.loadCount().then(function (res) {
          var count = _this2.props.getCountFromRes(res);
          _this2.setState({ count: count });
        });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.props.componentDidUpdate) {
        this.props.componentDidUpdate(this.isAppend);
      }

      // kalau siap append, fetching_append akan jadi false
      if (this.state.fetching_append === false) {
        this.isAppend = false;
      }
    }
  }, {
    key: "isAppendType",
    value: function isAppendType() {
      return this.props.type.indexOf("append") >= 0;
    }
  }, {
    key: "load",
    value: function load(type) {
      var _this3 = this;

      // set new page
      if (type == this.NEXT) {
        this.page++;
      }

      if (type == this.PREV) {
        if (this.page == 1) {
          return false;
        }

        this.page--;
      }

      // set fetching to true if not append type
      if (!this.isAppendType()) {
        this.setState(function () {
          return {
            fetching: true
          };
        });
      } else {
        this.setState(function () {
          return {
            fetching_append: true
          };
        });
      }

      // fetch data start
      this.props.loadData(this.page, this.props.offset).then(function (res) {
        var data = _this3.props.getDataFromRes(res);

        var listItem = null;
        var empty = false;
        try {
          //empty list
          if (data.length <= 0) {
            var empty = _this3.props.showEmpty ? _react2.default.createElement(
              "span",
              { className: "text-muted text-center" },
              "Nothing To Show Here"
            ) : null;

            if (_this3.props.customEmpty) {
              empty = _this3.props.customEmpty;
            }

            if (!_this3.isAppendType()) {
              listItem = empty;
            } else {
              if (_this3.state.listItem != null) {
                listItem = _this3.state.listItem;
              } else {
                listItem = empty;
              }
            }
            empty = true;
          }
          //success
          else {
              // need to reverse?
              if (_this3.isAppendType()) {
                _this3.setState(function (prevState) {
                  var listItem = prevState.listItem;
                  if (listItem == null) {
                    listItem = [];
                  }

                  data.map(function (d, i) {
                    if (_this3.props.type == "append-top") {
                      //for chat, render list can return array
                      var newItem = _this3.props.renderList(d, i);
                      if (Array.isArray(newItem)) {
                        newItem.map(function (_d, i) {
                          listItem.unshift(_d);
                        });
                      } else {
                        listItem.unshift(newItem);
                      }
                    } else if (_this3.props.type == "append-bottom") {
                      listItem.push(_this3.props.renderList(d, i));
                    }
                  });

                  return {
                    listItem: listItem,
                    fetching: false,
                    fetching_append: false,
                    totalFetched: prevState.totalFetched + data.length,
                    fetchCount: data.length,
                    empty: empty
                  };
                });

                return;
              } else {
                listItem = data.map(function (d, i) {
                  return _this3.props.renderList(d, i);
                });
              }
            }
        } catch (err) {
          // error render
          listItem = "[Error While Rendering List] " + err;
        }

        _this3.setState(function (prevState) {
          return {
            listItem: listItem,
            fetching: false,
            fetching_append: false,
            fetchCount: data.length,
            totalFetched: prevState.totalFetched + data.length,
            empty: empty
          };
        });
      },
      // error fetching
      function (err) {
        var listItem = "[Error While Fetching List Data] " + err;
        _this3.setState(function () {
          return {
            listItem: listItem,
            fetching: false,
            fetching_append: false
          };
        });
      });
    }
  }, {
    key: "renderDataContent",
    value: function renderDataContent() {
      var dataContent = null;

      if (this.state.empty) {
        return this.state.listItem;
      }

      if (this.props.type == "table") {
        dataContent = this.state.empty ? this.state.listItem : _react2.default.createElement(
          "div",
          { className: " table-responsive" },
          _react2.default.createElement(
            "table",
            {
              ref: this.props.listRef,
              className: this.props.listClass + " table table-striped table-bordered table-hover table-condensed text-left"
            },
            this.props.tableHeader,
            _react2.default.createElement(
              "tbody",
              null,
              this.state.listItem
            )
          )
        );
      } else {
        dataContent = this.state.listItem;
      }

      return dataContent;
    }
  }, {
    key: "showLoadMore",
    value: function showLoadMore() {
      if (this.props.hideLoadMore) {
        return false;
      }

      if (this.props.totalCount !== null) {
        if (this.state.totalFetched >= this.props.totalCount) {
          return false;
        } else {
          return true;
        }
      }

      if (this.state.fetchCount >= this.props.offset) {
        return true;
      }

      return false;
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var loading = this.props.customLoading ? this.props.customLoading : _react2.default.createElement(_loader.Loader, { isCenter: true, size: "2", text: "Loading.." });

      var topView = null;
      var bottomView = null;

      // for append type
      var fetchBtn = null;
      var extraTop = null;
      var extraBottom = null;
      var endCount = 0;
      var startCount = 0;

      if (this.props.type == "list" || this.props.type == "table") {
        var countView = null;
        if (this.props.loadCount) {
          startCount = (this.page - 1) * this.props.offset + 1;
          endCount = this.page * this.props.offset;
          endCount = endCount > this.state.count ? this.state.count : endCount;
          countView = _react2.default.createElement(
            "small",
            null,
            _react2.default.createElement("br", null),
            startCount,
            " - ",
            endCount,
            " of ",
            this.state.count,
            _react2.default.createElement("br", null)
          );
        }

        var prevView = this.page > 1 ? _react2.default.createElement(
          "small",
          { style: { marginRight: "6px" } },
          _react2.default.createElement(_buttons.ButtonLink, {
            onClick: function onClick() {
              return _this4.load(_this4.PREV);
            },
            label: "<< Prev"
          })
        ) : null;

        var nextView = this.state.fetchCount >= this.props.offset ? _react2.default.createElement(
          "small",
          { style: { marginLeft: "6px" } },
          _react2.default.createElement(_buttons.ButtonLink, {
            onClick: function onClick() {
              return _this4.load(_this4.NEXT);
            },
            label: "Next >>"
          })
        ) : null;

        // remove next kalau dah page last
        if (this.props.loadCount && endCount >= this.state.count) {
          nextView = null;
        }

        var paging = _react2.default.createElement(
          "div",
          {
            className: this.props.pageClass,
            style: {
              textAlign: "center",
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              marginBottom: "20px",
              marginTop: "10px"
            }
          },
          _react2.default.createElement(
            "div",
            { style: { minWidth: "70px" } },
            prevView
          ),
          _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              "b",
              null,
              "Page ",
              this.page
            ),
            countView
          ),
          _react2.default.createElement(
            "div",
            { style: { minWidth: "70px" } },
            nextView
          )
        );
        //topView = (this.props.offset >= 10 && this.state.fetchCount >= 10) ? paging : null;
        topView = this.props.hideLoadMore || this.props.isHidePagingTop ? null : paging;
        bottomView = this.props.hideLoadMore || this.props.isHidePagingBottom ? null : paging;
      }
      // For append type
      else if (this.isAppendType()) {
          if (this.state.fetching_append) {
            fetchBtn = _react2.default.createElement(_loader.Loader, { isCenter: true, size: "2" });
          } else {
            fetchBtn = this.showLoadMore() ? _react2.default.createElement(
              "small",
              { style: { marginLeft: "6px" } },
              _react2.default.createElement(_buttons.ButtonLink, {
                onClick: function onClick() {
                  _this4.isAppend = true;
                  _this4.load(_this4.NEXT);
                },
                label: this.props.appendText
              })
            ) : null;
          }

          if (this.props.type == "append-top") {
            topView = fetchBtn;
            extraBottom = this.props.extraData;
          } else if (this.props.type == "append-bottom") {
            bottomView = fetchBtn;
            extraTop = this.props.extraData;
          }
        }

      var content = _react2.default.createElement(
        "div",
        { className: "" + this.props.divClass },
        topView,
        _react2.default.createElement(
          "ul",
          { className: "" + this.props.listClass, ref: this.props.listRef },
          extraTop,
          this.renderDataContent(),
          extraBottom
        ),
        bottomView
      );
      return this.state.fetching ? loading : content;
    }
  }]);

  return List;
}(_react2.default.Component);

exports.default = List;


List.propTypes = {
  // general props
  hideLoadMore: _propTypes2.default.bool,
  offset: _propTypes2.default.number.isRequired,
  customLoading: _propTypes2.default.element,
  customEmpty: _propTypes2.default.element,
  listClass: _propTypes2.default.string,
  listRef: _propTypes2.default.object,
  totalCount: _propTypes2.default.number, // total count for the list
  key: _propTypes2.default.number, // to force update
  // function
  componentDidUpdate: _propTypes2.default.func, // use in dashboard
  loadData: _propTypes2.default.func.isRequired, // function (page)
  renderList: _propTypes2.default.func.isRequired, // function (data)
  getDataFromRes: _propTypes2.default.func.isRequired, // key for query response
  // type
  // table or list
  // append-top used in chat
  type: _propTypes2.default.oneOf(["table", "list", "append-top", "append-bottom"]).isRequired,
  isHidePagingBottom: _propTypes2.default.bool,
  isHidePagingTop: _propTypes2.default.bool,
  // table
  tableHeader: _propTypes2.default.element,
  // append-
  appendText: _propTypes2.default.string,
  extraData: _propTypes2.default.array,
  // page config
  pageClass: _propTypes2.default.string,
  divClass: _propTypes2.default.string,
  showEmpty: _propTypes2.default.bool
};

List.defaultProps = {
  hideLoadMore: false,
  isHidePagingBottom: false,
  isHidePagingTop: false,
  appendText: "Load More",
  extraData: null,
  divClass: "",
  pageClass: "",
  totalCount: null,
  listClass: "",
  listRef: null,
  showEmpty: true
};

/*******************************************************************************************/
/*******************************************************************************************/
/*******************************************************************************************/
/*******************************************************************************************/
/*******************************************************************************************/

var ProfileListItem = exports.ProfileListItem = function (_Component) {
  _inherits(ProfileListItem, _Component);

  function ProfileListItem() {
    _classCallCheck(this, ProfileListItem);

    return _possibleConstructorReturn(this, (ProfileListItem.__proto__ || Object.getPrototypeOf(ProfileListItem)).apply(this, arguments));
  }

  _createClass(ProfileListItem, [{
    key: "render",
    value: function render() {
      var className = "profile-li";
      if (this.props.list_type) {
        className += "-" + this.props.list_type;
      }

      className += " " + this.props.list_type_extra;

      var img_dimension = this.props.img_dimension ? this.props.img_dimension : "75px";
      return _react2.default.createElement(_profileCard2.default, _extends({}, this.props, {
        img_dimension: img_dimension,
        className: className
      }));
    }
  }]);

  return ProfileListItem;
}(_react.Component);

ProfileListItem.propTypes = {
  isOnline: _propTypes2.default.bool,
  header: _propTypes2.default.element, // put as the first child of profile card,
  custom_width: _propTypes2.default.string,
  list_type: _propTypes2.default.oneOf(["card"]),
  list_type_extra: _propTypes2.default.string,
  title: _propTypes2.default.any.isRequired,
  subtitle: _propTypes2.default.string.isRequired,
  badge: _propTypes2.default.string,
  badge_tooltip: _propTypes2.default.string,
  img_url: _propTypes2.default.string,
  img_pos: _propTypes2.default.string,
  img_size: _propTypes2.default.string,
  img_dimension: _propTypes2.default.string,
  type: _propTypes2.default.oneOf([_profileCard.PCType.STUDENT, _profileCard.PCType.RECRUITER, _profileCard.PCType.COMPANY]).isRequired,
  body: _propTypes2.default.any
};

ProfileListItem.defaultProps = {
  isOnline: false,
  list_type_extra: "",
  custom_width: null
};

var ProfileListWide = exports.ProfileListWide = function (_Component2) {
  _inherits(ProfileListWide, _Component2);

  function ProfileListWide() {
    _classCallCheck(this, ProfileListWide);

    return _possibleConstructorReturn(this, (ProfileListWide.__proto__ || Object.getPrototypeOf(ProfileListWide)).apply(this, arguments));
  }

  _createClass(ProfileListWide, [{
    key: "getAction",
    value: function getAction() {
      var action = [];

      var action_text = this.props.action_text;
      var action_to = this.props.action_to;
      var action_color = this.props.action_color;
      var action_handler = this.props.action_handler;

      if (!Array.isArray(action_to)) action_to = [action_to];
      if (!Array.isArray(action_color)) action_color = [action_color];
      if (!Array.isArray(action_handler)) action_handler = [action_handler];
      if (!Array.isArray(action_text)) action_text = [action_text];

      if (!this.props.action_disabled) {
        var _loop = function _loop() {
          var text = action_text[i];
          var to = action_to[i];
          var color = action_color[i];
          var handler = action_handler[i];

          if (to) {
            action.push(_react2.default.createElement(
              _reactRouterDom.NavLink,
              {
                className: "btn btn-" + color,
                to: to,
                onClick: function onClick() {
                  return handler();
                }
              },
              text
            ));
          } else {
            action.push(_react2.default.createElement(
              "a",
              {
                className: "btn btn-" + color,
                onClick: function onClick() {
                  return handler();
                }
              },
              text
            ));
          }
        };

        for (var i in action_text) {
          _loop();
        }
      }

      if (action.length > 0) {
        return _react2.default.createElement(
          "div",
          { className: "item-action" },
          action
        );
      } else {
        return null;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var img_dimension = this.props.img_dimension ? this.props.img_dimension : "75px";

      var imgView = null;
      // in student listing no image
      if (!this.props.is_no_image) {
        imgView = _react2.default.createElement(_profileCard2.default, _extends({}, this.props, {
          title: null,
          body: null,
          subtitle: null,
          img_dimension: img_dimension,
          className: className
        }));
      }

      var className = "card-wide";

      var contentSize = "8";
      if (this.props.action_disabled) {
        contentSize = "10";
      } else if (this.props.is_no_image) {
        contentSize = "10";
      }

      var action = this.getAction();

      return _react2.default.createElement(
        "div",
        { className: className },
        _react2.default.createElement(
          "div",
          { className: "card-container container-fluid" },
          this.props.rootContent,
          this.props.is_no_image ? _react2.default.createElement("div", { style: { marginRight: "15px" } }) : _react2.default.createElement(
            "div",
            { className: className + "-item col-md-2" },
            imgView
          ),
          _react2.default.createElement(
            "div",
            { className: className + "-item col-md-" + contentSize },
            _react2.default.createElement(
              "div",
              { className: "item-main" },
              _react2.default.createElement(
                "h4",
                null,
                this.props.title
              ),
              _react2.default.createElement(
                "div",
                null,
                this.props.body
              )
            )
          ),
          action
        )
      );
    }
  }]);

  return ProfileListWide;
}(_react.Component);

ProfileListWide.propTypes = {
  rootContent: _propTypes2.default.object,
  title: _propTypes2.default.any.isRequired,
  subtitle: _propTypes2.default.string.isRequired,
  img_url: _propTypes2.default.string,
  img_pos: _propTypes2.default.string,
  img_size: _propTypes2.default.string,
  img_dimension: _propTypes2.default.string,
  is_no_image: _propTypes2.default.bool,

  isNavLink: _propTypes2.default.bool,
  action_text: _propTypes2.default.string,
  action_to: _propTypes2.default.string,
  action_color: _propTypes2.default.string,
  action_handler: _propTypes2.default.func,
  action_disabled: _propTypes2.default.bool,

  type: _propTypes2.default.oneOf([_profileCard.PCType.STUDENT, _profileCard.PCType.RECRUITER, _profileCard.PCType.COMPANY]).isRequired,
  body: _propTypes2.default.any
};

ProfileListWide.defaultProps = {
  isNavLink: false,
  is_no_image: false,
  action_color: "blue"
};

/*******************************************************************************************/

var SimpleListItem = exports.SimpleListItem = function (_Component3) {
  _inherits(SimpleListItem, _Component3);

  function SimpleListItem() {
    _classCallCheck(this, SimpleListItem);

    return _possibleConstructorReturn(this, (SimpleListItem.__proto__ || Object.getPrototypeOf(SimpleListItem)).apply(this, arguments));
  }

  _createClass(SimpleListItem, [{
    key: "render",
    value: function render() {
      var body = this.props.body ? _react2.default.createElement(
        "p",
        { className: "sili-body" },
        this.props.body
      ) : null;
      var onDelete = !this.props.onDelete ? null : _react2.default.createElement(
        "a",
        {
          className: "sili-operation",
          id: this.props.onDelete.id,
          label: this.props.onDelete.label,
          onClick: this.props.onDelete.onClick
        },
        "Delete"
      );

      var onEdit = !this.props.onEdit ? null : _react2.default.createElement(
        "a",
        {
          className: "sili-operation",
          id: this.props.onEdit.id,
          label: this.props.onEdit.label,
          onClick: this.props.onEdit.onClick
        },
        "Edit"
      );

      var typeClass = "";
      if (this.props.type) {
        typeClass = "simple-li-card";
      }

      return _react2.default.createElement(
        "div",
        { className: "simple-li " + typeClass },
        _react2.default.createElement(
          "div",
          { className: "sili-title" },
          this.props.title
        ),
        _react2.default.createElement(
          "div",
          { className: "sili-subtitle" },
          this.props.subtitle,
          onEdit,
          onDelete
        ),
        body
      );
    }
  }]);

  return SimpleListItem;
}(_react.Component);

SimpleListItem.propTypes = {
  title: _propTypes2.default.any.isRequired,
  subtitle: _propTypes2.default.string.isRequired,
  body: _propTypes2.default.any,
  onDelete: _propTypes2.default.obj,
  onEdit: _propTypes2.default.obj,
  type: _propTypes2.default.oneOf(["card"])
};

var CustomList = exports.CustomList = function (_Component4) {
  _inherits(CustomList, _Component4);

  function CustomList() {
    _classCallCheck(this, CustomList);

    return _possibleConstructorReturn(this, (CustomList.__proto__ || Object.getPrototypeOf(CustomList)).apply(this, arguments));
  }

  _createClass(CustomList, [{
    key: "getTableLi",
    value: function getTableLi(d, i) {
      return _react2.default.createElement(
        "tr",
        { onClick: this.props.onClick, className: liClassName, key: i },
        d
      );
    }
  }, {
    key: "getLabelLi",
    value: function getLabelLi(d, i) {
      // console.log(d,i)
      //var labels = ["primary", "danger", "success", "default"];
      var labels = ["custom"];
      var index = i % labels.length;
      var liClassName = "label label-" + labels[index];
      return _react2.default.createElement(
        "li",
        { onClick: this.props.onClick, className: liClassName, key: i },
        d
      );
    }
  }, {
    key: "getIconList",
    value: function getIconList(d, i) {
      var style = {
        background: d.color,
        color: "white",
        fontSize: this.props.il_font,
        width: this.props.il_dimension,
        height: this.props.il_dimension,
        float: "left"
      };

      var styleText = {
        float: "right",
        textAlign: "left",
        width: this.props.il_text_width
      };

      var text = null;
      if (typeof d.text !== "undefined") {
        text = d.text;
      }

      if (typeof d.isNavLink === "undefined") {
        d.isNavLink = false;
      }

      var content = _react2.default.createElement(
        "li",
        { className: "li-" + this.props.className, key: i },
        _react2.default.createElement(
          "div",
          { style: style, className: "icon-circle" },
          _react2.default.createElement("i", { className: "fa fa-" + d.icon })
        ),
        _react2.default.createElement(
          "div",
          { style: styleText },
          text
        )
      );

      return content;
    }
  }, {
    key: "getIconLinkLi",
    value: function getIconLinkLi(d, i) {
      var style = {
        background: d.color,
        color: "white",
        fontSize: this.props.il_font,
        width: this.props.il_dimension,
        height: this.props.il_dimension,
        float: "left"
      };

      var styleText = {
        float: "right"
      };

      var text = null;
      if (typeof d.text !== "undefined") {
        text = d.text;
      }

      if (typeof d.isNavLink === "undefined") {
        d.isNavLink = false;
      }

      var linkView = d.isNavLink ? _react2.default.createElement(
        _reactRouterDom.NavLink,
        { to: d.url },
        _react2.default.createElement(
          "div",
          { style: style, className: "icon-circle" },
          _react2.default.createElement("i", { className: "fa fa-" + d.icon })
        ),
        _react2.default.createElement(
          "div",
          { style: styleText },
          text
        )
      ) : _react2.default.createElement(
        "a",
        { href: d.url, target: "blank" },
        _react2.default.createElement(
          "div",
          { style: style, className: "icon-circle" },
          _react2.default.createElement("i", { className: "fa fa-" + d.icon }),
          _react2.default.createElement(
            "div",
            { style: styleText },
            text
          )
        )
      );

      var onClick = d.onClick ? d.onClick : this.props.onClick;
      var content = _react2.default.createElement(
        "li",
        { onClick: onClick, className: "li-" + this.props.className, key: i },
        linkView
      );

      return _react2.default.createElement(_tooltip2.default, {
        debug: false,
        width: this.props.il_tooltip.width,
        left: this.props.il_tooltip.left,
        bottom: this.props.il_tooltip.bottom,
        content: content,
        tooltip: d.label
      });
    }
  }, {
    key: "getIconLi",
    value: function getIconLi(d, i) {
      return _react2.default.createElement(
        "li",
        {
          onClick: this.props.onClick,
          className: "li-" + this.props.className,
          key: i
        },
        d.label ? _react2.default.createElement(
          "div",
          { className: "cli-label" },
          d.icon ? _react2.default.createElement("i", { className: "fa fa-" + d.icon }) : null,
          d.label
        ) : null,
        d.value ? _react2.default.createElement(
          "div",
          { className: "cli-value" },
          d.value
        ) : null
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _this9 = this;

      // console.log(this.props.className, this.props.items)
      // console.log(this.props.className, this.props.items)
      // console.log(this.props.className, this.props.items)
      // console.log(this.props.className, this.props.items)
      if (this.props.items.length === 0) {
        if (typeof this.props.emptyMessage !== "undefined") {
          return _react2.default.createElement(
            "div",
            { className: "text-muted" },
            this.props.emptyMessage
          );
        } else {
          return _react2.default.createElement(
            "div",
            { className: "text-muted" },
            "Nothing To Show Here"
          );
        }
      }

      var view = this.props.items.map(function (d, i) {
        switch (_this9.props.className) {
          case "empty":
            return _react2.default.createElement(
              "li",
              { onClick: _this9.props.onClick, key: i },
              d
            );
            break;
          case "normal":
            return _react2.default.createElement(
              "li",
              { className: "normal", onClick: _this9.props.onClick, key: i },
              d
            );
            break;
          case "table":
            return _this9.getTableLi(d, i);
            break;
          case "label":
            return _this9.getLabelLi(d, i);
            break;
          case "icon-link":
            return _this9.getIconLinkLi(d, i);
            break;
          case "icon-list":
            return _this9.getIconList(d, i);
            break;
          case "icon":
            return _this9.getIconLi(d, i);
            break;
        }
      });

      var className = "";
      if (this.props.className != "normal") {
        className += "custom-list-" + this.props.className + " ";
      } else {
        className += this.props.className;
      }

      className += this.props.ux ? " li-ux " : "";
      className += this.props.isSmall ? " li-sm " : "";

      var style = {
        justifyContent: this.props.alignCenter ? "center" : "start"
      };

      return _react2.default.createElement(
        "ul",
        { style: style, className: className },
        view
      );
    }
  }]);

  return CustomList;
}(_react.Component);

CustomList.propTypes = {
  // specifically for iconLink
  il_text_width: _propTypes2.default.string,
  il_dimension: _propTypes2.default.string,
  il_font: _propTypes2.default.string,
  il_tooltip: _propTypes2.default.object,
  isSmall: _propTypes2.default.bool, // used in student listing
  alignCenter: _propTypes2.default.bool,
  items: _propTypes2.default.array.isRequired,
  emptyMessage: _propTypes2.default.any,
  className: _propTypes2.default.oneOf(["empty", "normal", "icon", "label", "icon-link", "icon-list"]),
  onClick: _propTypes2.default.func,
  ux: _propTypes2.default.bool // added class "li-ux" if true then is user interactive, on hover on active
};

CustomList.defaultProps = {
  il_text_width: null,
  il_dimension: "26px",
  il_font: "initial",
  il_tooltip: {},
  isSmall: false,
  alignCenter: true
};

// to create icon link list
// with different size
function createIconLink(size, items) {
  var alignCenter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var onClick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var emptyMessage = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;

  var tooltip = {};
  var dimension = "";
  var font = "";
  switch (size) {
    case "sm":
      dimension = "26px";
      tooltip.width = "90px";
      tooltip.left = "-31px";
      tooltip.bottom = "28px";
      font = "initial";
      break;
    case "lg":
      dimension = "70px";
      tooltip.width = "120px";
      tooltip.left = "-22px";
      tooltip.bottom = "75px";
      font = "35px";
      break;
  }

  return _react2.default.createElement(CustomList, {
    className: "icon-link",
    il_dimension: dimension,
    il_tooltip: tooltip,
    il_font: font,
    alignCenter: alignCenter,
    emptyMessage: emptyMessage,
    onClick: onClick,
    items: items
  });
}

// to create icon link list
// with different size
function createIconList(size, items, width, _ref) {
  var customTextWidth = _ref.customTextWidth,
      customIconDimension = _ref.customIconDimension,
      customIconFont = _ref.customIconFont;

  var dimension = "";
  var font = "";
  switch (size) {
    case "sm":
      dimension = "26px";
      font = "initial";
      break;
    case "lg":
      dimension = "70px";
      font = "35px";
      break;
  }

  if (customIconDimension) {
    dimension = customIconDimension;
  }
  if (customIconFont) {
    font = customIconFont;
  }

  var alignCenter = true;
  return _react2.default.createElement(
    "div",
    { className: "text-center", style: { maxWidth: width, margin: "auto" } },
    _react2.default.createElement(CustomList, {
      className: "icon-list",
      il_text_width: customTextWidth,
      il_dimension: dimension,
      il_font: font,
      alignCenter: alignCenter,
      items: items
    })
  );
}

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};





















var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

















var set = function set(object, property, value, receiver) {
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent !== null) {
      set(parent, property, value, receiver);
    }
  } else if ("value" in desc && desc.writable) {
    desc.value = value;
  } else {
    var setter = desc.set;

    if (setter !== undefined) {
      setter.call(receiver, value);
    }
  }

  return value;
};

function Enum(value) {
  if (!(this instanceof Enum)) return new Enum(value);
  this.value = value;
}

function isString(obj) {
  return typeof obj === 'string';
}

function isEnum(obj) {
  return obj instanceof Enum;
}

function isArray(obj) {
  return Array.isArray(obj);
}

function isObject(obj) {
  return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;
}

function isFunction(obj) {
  return typeof obj === 'function';
}

function escapeString(str) {
  if (!isString(str)) return '';
  return String(str).replace(/\\/gm, '\\\\').replace(/\//gm, '\\/').replace(/\b/gm, '').replace(/\f/gm, '\\f').replace(/\n/gm, '\\n').replace(/\r/gm, '\\r').replace(/\t/gm, '\\t').replace(/"/gm, '\\"');
}

function includes(obj, key) {
  return isArray(obj) && obj.indexOf(key) !== -1;
}

function forEach(obj, fn) {
  try {
    if (isArray(obj)) {
      var idx = 0;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = obj[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var val = _step.value;

          if (fn(val, idx) === false) break;
          idx++;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    } else {
      for (var key in obj) {
        if (fn(obj[key], key) === false) break;
      }
    }
  } catch (err) {
    return;
  }
}

function map(obj, fn) {
  var output = [];
  forEach(obj, function (v, k) {
    return output.push(fn(v, k));
  });
  return output;
}

function circular(obj) {
  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '[Circular]';

  var circularEx = function circularEx(_obj) {
    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var seen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    seen.push(_obj);
    if (isObject(_obj)) {
      forEach(_obj, function (o, i) {
        if (includes(seen, o)) _obj[i] = isFunction(value) ? value(_obj, key, seen.slice(0)) : value;else circularEx(o, i, seen.slice(0));
      });
    }
    return _obj;
  };

  if (!obj) throw new Error('circular requires an object to examine');
  return circularEx(obj, value);
}

var utils = {
  Enum: Enum,
  isString: isString,
  isEnum: isEnum,
  isArray: isArray,
  isObject: isObject,
  isFunction: isFunction,
  escapeString: escapeString,
  includes: includes,
  forEach: forEach,
  map: map,
  circular: circular
};

/*
 * @name - graphql-obj2arg
 * @description - Convert JavaScript a object into a GraphQL argument string
 * @author - Branden Horiuchi <bhoriuchi@gmail.com>
 *
 */
var ARRAY = 'array';
var BOOLEAN = 'boolean';
var DATE = 'date';
var ENUM = 'enum';
var FLOAT = 'float';
var INT = 'int';
var NULL = 'null';
var NUMBER = 'number';
var OBJECT = 'object';
var STRING = 'string';
var UNDEFINED = 'undefined';
var RX_BOOLEAN = /^Boolean::/;
var RX_DATE = /^Date::/;
var RX_ENUM = /^Enum::/;
var RX_FLOAT = /^Float::/;
var RX_INT = /^Int::/;
var RX_OUTER_BRACES = /^{|^\[|\]$|}$/g;

function getType(obj) {
  if (obj === null) {
    return { obj: obj, type: NULL };
  } else if (obj === undefined) {
    return { obj: obj, type: UNDEFINED };
  } else if (obj instanceof utils.Enum) {
    return { obj: obj.value, type: ENUM };
  } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === STRING) {
    if (obj.match(RX_BOOLEAN)) return { obj: Boolean(obj.replace(RX_BOOLEAN, '')), type: BOOLEAN };
    if (obj.match(RX_DATE)) return { obj: new Date(obj.replace(RX_DATE, '')), type: DATE };
    if (obj.match(RX_ENUM)) return { obj: obj.replace(RX_ENUM, ''), type: ENUM };
    if (obj.match(RX_FLOAT)) return { obj: obj.replace(RX_FLOAT, ''), type: FLOAT };
    if (obj.match(RX_INT)) return { obj: obj.replace(RX_INT, ''), type: INT };
    return { obj: obj, type: STRING };
  } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === BOOLEAN) {
    return { obj: obj, type: BOOLEAN };
  } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === NUMBER) {
    return obj % 1 === 0 ? { obj: obj, type: INT } : { obj: obj, type: FLOAT };
  } else if (Array.isArray(obj)) {
    return { obj: obj, type: ARRAY };
  } else if (obj instanceof Date) {
    return { obj: obj, type: DATE };
  } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === OBJECT) {
    return { obj: obj, type: OBJECT };
  } else {
    return { obj: obj, type: UNDEFINED };
  }
}

var toArguments = function toArguments(obj) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var keepNulls = options.keepNulls === true ? true : false;
  var noOuterBraces = options.noOuterBraces === true ? true : false;

  var toLiteral = function toLiteral(o) {
    var _getType = getType(o),
        obj = _getType.obj,
        type = _getType.type;

    var _ret = function () {
      switch (type) {
        case ARRAY:
          var arrList = [];
          utils.forEach(obj, function (v) {
            var arrVal = toLiteral(v);
            if (arrVal === NULL && keepNulls || arrVal && arrVal !== NULL) arrList.push(arrVal);
          });
          return {
            v: '[' + arrList.join(',') + ']'
          };
        case OBJECT:
          var objList = [];
          utils.forEach(obj, function (v, k) {
            var objVal = toLiteral(v);
            if (objVal === NULL && keepNulls || objVal && objVal !== NULL) objList.push(k + ':' + objVal);
          });
          return {
            v: '{' + objList.join(',') + '}'
          };
        case DATE:
          return {
            v: '"' + obj.toISOString() + '"'
          };
        case FLOAT:
          var s = String(obj);
          return {
            v: s.indexOf('.') === -1 ? s + '.0' : s
          };
        case NULL:
          return {
            v: NULL
          };
        case STRING:
          return {
            v: '"' + utils.escapeString(obj) + '"'
          };
        case UNDEFINED:
          return {
            v: undefined
          };
        default:
          return {
            v: String(obj)
          };
      }
    }();

    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
  };

  var objStr = toLiteral(utils.circular(obj));
  return noOuterBraces ? objStr.replace(RX_OUTER_BRACES, '') : objStr;
};

toArguments.Enum = utils.Enum;
toArguments.escapeString = utils.escapeString;

module.exports = toArguments;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStyleBannerObj = exports.getStyleImageObj = exports.getDefaultProfileImg = exports.createImageElement = exports.getImageObj = exports.PCType = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _appConfig = __webpack_require__(4);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _buttons = __webpack_require__(15);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _reactRouterDom = __webpack_require__(7);

var _profileCardImg = __webpack_require__(90);

var _profileCardImg2 = _interopRequireDefault(_profileCardImg);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/profile-card.scss");
/*
 This Component will create a standardize circle picture and title and subtitle and also some children to be append to body
 */

var PCType = exports.PCType = {
  STUDENT: "student",
  RECRUITER: "recruiter",
  COMPANY: "company",
  BANNER: "banner"
};
var pc = "pc-";

// return in from {img_url, img_size, img_pos}
var getImageObj = exports.getImageObj = function getImageObj(obj) {
  if (obj != null && typeof obj !== "undefined") {
    var r = {};
    r.img_url = obj.img_url;
    r.img_size = obj.img_size;
    r.img_pos = typeof obj.img_pos != "undefined" ? obj.img_pos : obj.img_position;
    return r;
  } else {
    return getDefaultProfileImg(PCType.STUDENT);
  }
};

var createImageElement = exports.createImageElement = function createImageElement(img_url, img_pos, img_size, img_dimension, className) {
  var type = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : PCType.STUDENT;
  var customStyle = arguments[6];
  var isOnline = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;

  return _react2.default.createElement(ProfileCard, {
    isOnline: isOnline,
    type: type,
    img_url: img_url,
    img_pos: img_pos,
    img_size: img_size,
    title: null,
    body: null,
    subtitle: null,
    img_dimension: img_dimension,
    className: className,
    customStyle: customStyle
  });
};

var getDefaultProfileImg = exports.getDefaultProfileImg = function getDefaultProfileImg(type) {
  var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  if (url == null || url == "null") {
    switch (type) {
      case PCType.STUDENT:
        url = _appConfig.ImgConfig.DefUser;
        break;
      case PCType.RECRUITER:
        url = _appConfig.ImgConfig.DefUser;
        break;
      case PCType.COMPANY:
        url = _appConfig.ImgConfig.DefCompany;
        break;
      case PCType.BANNER:
        url = _appConfig.ImgConfig.DefCompanyBanner;
        break;
    }
  }

  return {
    backgroundImage: "url('" + url + "')",
    backgroundSize: "cover",
    backgroundPosition: "50% 50%"
  };
};

var getStyleImageObj = exports.getStyleImageObj = function getStyleImageObj(type, img_url, img_size, img_pos, dimension) {
  var stylePicture = null;

  if (typeof img_url === "undefined" || img_url == null || img_url == "") {
    stylePicture = getDefaultProfileImg(type);
  } else {
    stylePicture = {
      backgroundImage: "url('" + img_url + "')",
      backgroundSize: (0, _profileCardImg.getSizeStr)(img_size),
      backgroundPosition: (0, _profileCardImg.getPositionStr)(dimension, img_pos, "px", true)
    };
  }

  if (type == PCType.BANNER) {
    stylePicture["height"] = _profileCardImg.BANNER_HEIGHT + "px";
    stylePicture["width"] = "100%";
    stylePicture["borderRadius"] = "0%";
  } else {
    stylePicture["height"] = dimension;
    stylePicture["width"] = dimension;
  }

  return stylePicture;
};

/**
 *
 * @param {String} url
 * @param {String} size
 * @param {String} pos
 * @param {String px} width
 * @param {String px} height
 */
var getStyleBannerObj = exports.getStyleBannerObj = function getStyleBannerObj(url, size, pos, width, height) {
  var dimensionBanner = {
    x: width,
    y: height
  };
  var styleBanner = getStyleImageObj(PCType.BANNER, url, size, pos, dimensionBanner);

  // add height
  styleBanner.height = height;
  styleBanner.backgroundRepeat = "no-repeat";

  return styleBanner;
};

var ProfileCard = function (_React$Component) {
  _inherits(ProfileCard, _React$Component);

  function ProfileCard(props) {
    _classCallCheck(this, ProfileCard);

    var _this = _possibleConstructorReturn(this, (ProfileCard.__proto__ || Object.getPrototypeOf(ProfileCard)).call(this, props));

    _this.openPictureOps = _this.openPictureOps.bind(_this);
    return _this;
  }

  _createClass(ProfileCard, [{
    key: "openPictureOps",
    value: function openPictureOps(stylePicture) {
      var type = this.props.type == PCType.COMPANY ? "company" : "user";

      if (this.props.type == PCType.BANNER) {
        type = "banner";
      }

      layoutActions.storeUpdateFocusCard("Edit Image", _profileCardImg2.default, {
        img_url: this.props.img_url,
        id: this.props.id,
        type: type,
        stylePicture: stylePicture
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var styleParent = {
        color: this.props.theme == "dark" ? "white" : "black",
        width: this.props.custom_width
      };

      if (this.props.customStyleParent != null) {
        styleParent = _extends({}, styleParent, this.props.customStyleParent);
      }

      var dimension = this.props.img_dimension ? this.props.img_dimension : "100px";

      var stylePicture = getStyleImageObj(this.props.type, this.props.img_url, this.props.img_size, this.props.img_pos, dimension);

      if (this.props.customStyle != null) {
        stylePicture = _extends({}, stylePicture, this.props.customStyle);
      }

      // if (typeof this.props.img_url === "undefined" || this.props.img_url == null || this.props.img_url == "") {
      //     stylePicture = this.getDefaultProfileImg(this.props.type);
      // } else {
      //     stylePicture = {
      //         backgroundImage: `url('${this.props.img_url}')`,
      //         backgroundSize: getSizeStr(this.props.img_size),
      //         backgroundPosition: getPositionStr(dimension, this.props.img_pos, "px", true)
      //     }
      // }

      // stylePicture["height"] = dimension;
      // stylePicture["width"] = dimension;

      // bagde used in queue card
      var badge = null;
      if (this.props.badge != null) {
        badge = _react2.default.createElement(
          "div",
          { className: pc + "badge " + (this.props.badge == "" ? "small" : "") },
          this.props.badge_tooltip ? _react2.default.createElement(
            "span",
            null,
            _react2.default.createElement("div", { className: pc + "badge-tooltip-arrow" }),
            _react2.default.createElement(
              "div",
              { className: pc + "badge-tooltip" },
              this.props.badge_tooltip
            )
          ) : null,
          this.props.badge
        );
      }

      // only for edit profile and edit company
      var img_ops = null;
      if (this.props.add_img_ops) {
        img_ops = _react2.default.createElement(
          "div",
          { className: pc + "picture-ops" },
          _react2.default.createElement(_buttons.ButtonIcon, {
            icon: "edit",
            theme: "dark",
            onClick: function onClick() {
              return _this2.openPictureOps(stylePicture);
            }
          })
        );
      }

      //online indicator
      var img_online_indicator = null;
      if (this.props.isOnline) {
        img_online_indicator = _react2.default.createElement("div", { className: pc + "online" });
      }

      var className = "profile-card";
      if (this.props.className) {
        className += " " + this.props.className;
      }

      // New Banner for profile pic
      var banner = null;
      if (this.props.addBanner) {
        var styleBanner = getStyleBannerObj(this.props.banner_url, this.props.banner_size, this.props.banner_pos, this.props.custom_width, this.props.banner_height);
        banner = _react2.default.createElement("div", { className: pc + "banner", style: styleBanner });
      }

      var onlineBar = null;
      if (this.props.isShowOnlineBar) {
        onlineBar = _react2.default.createElement(
          "div",
          { className: pc + "online-bar" },
          "Online"
        );
      }

      var body = [banner, onlineBar, this.props.header ? this.props.header : null, badge, _react2.default.createElement(
        "div",
        { className: pc + "picture", style: stylePicture },
        img_ops,
        img_online_indicator
      ), _react2.default.createElement(
        "div",
        { className: pc + "title" },
        this.props.title
      ), this.props.subtitle ? _react2.default.createElement(
        "div",
        { className: pc + "subtitle" },
        this.props.subtitle
      ) : null, _react2.default.createElement(
        "div",
        { className: pc + "body" },
        this.props.body ? this.props.body : null
      )];

      if (this.props.to) {
        return _react2.default.createElement(
          _reactRouterDom.NavLink,
          { to: this.props.to,
            className: className,
            style: styleParent },
          body
        );
      } else {
        return _react2.default.createElement(
          "div",
          {
            onClick: this.props.onClick,
            className: className,
            style: styleParent
          },
          body
        );
      }
      //this.openPictureOps(stylePicture);
      // return (
      //   <div
      //     onClick={this.props.onClick}
      //     className={className}
      //     style={styleParent}
      //   >
      //     {banner}
      //     {onlineBar}
      //     {this.props.header ? this.props.header : null}
      //     {badge}
      //     <div className={`${pc}picture`} style={stylePicture}>
      //       {img_ops}
      //     </div>
      //     <div className={`${pc}title`}>{this.props.title}</div>
      //     {this.props.subtitle ? (
      //       <div className={`${pc}subtitle`}>{this.props.subtitle}</div>
      //     ) : null}
      //     <div className={`${pc}body`}>
      //       {this.props.body ? this.props.body : null}
      //     </div>
      //   </div>
      // );
    }
  }]);

  return ProfileCard;
}(_react2.default.Component);

exports.default = ProfileCard;


ProfileCard.propTypes = {
  isOnline: _propTypes2.default.bool,
  custom_width: _propTypes2.default.string,
  type: _propTypes2.default.oneOf([PCType.STUDENT, PCType.RECRUITER, PCType.COMPANY]).isRequired,
  id: _propTypes2.default.number, // id to adjust save profile image
  title: _propTypes2.default.string.isRequired,
  subtitle: _propTypes2.default.any,
  badge: _propTypes2.default.string,
  badge_tooltip: _propTypes2.default.string,
  onClick: _propTypes2.default.func,
  to: _propTypes2.default.string,

  isShowOnlineBar: _propTypes2.default.bool,

  addBanner: _propTypes2.default.bool,
  banner_height: _propTypes2.default.string,
  banner_url: _propTypes2.default.string,
  banner_pos: _propTypes2.default.string,
  banner_size: _propTypes2.default.string,

  img_url: _propTypes2.default.string,
  img_pos: _propTypes2.default.string,
  img_size: _propTypes2.default.string,
  add_img_ops: _propTypes2.default.bool,
  img_dimension: _propTypes2.default.string,
  customStyleParent: _propTypes2.default.object,
  customStyle: _propTypes2.default.object,
  className: _propTypes2.default.string,
  theme: _propTypes2.default.oneOf(["dark"]),
  header: _propTypes2.default.element, // put as the first child of profile card,
  body: _propTypes2.default.element // append to pc-body
};

ProfileCard.defaultProps = {
  isOnline: false,
  isShowOnlineBar: false,
  addBanner: false,
  customStyle: null,
  customStyleParent: null
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ButtonAction = exports.ButtonIcon = exports.ButtonLink = exports.ButtonExport = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _otherActions = __webpack_require__(30);

var _reactRouterDom = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/buttons.scss");

var ButtonExport = exports.ButtonExport = function (_React$Component) {
    _inherits(ButtonExport, _React$Component);

    function ButtonExport() {
        _classCallCheck(this, ButtonExport);

        return _possibleConstructorReturn(this, (ButtonExport.__proto__ || Object.getPrototypeOf(ButtonExport)).apply(this, arguments));
    }

    _createClass(ButtonExport, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            //this.url =;
        }
    }, {
        key: 'render',
        value: function render() {
            var style = {
                marginBottom: "5px"
            };
            return _react2.default.createElement(
                'a',
                { style: style, className: 'btn btn-sm btn-success', href: (0, _otherActions.getXLSUrl)(this.props.action, this.props.filter) },
                _react2.default.createElement('i', { className: 'fa fa-file-excel-o left' }),
                this.props.text
            );
        }
    }]);

    return ButtonExport;
}(_react2.default.Component);

ButtonExport.propsType = {
    action: _propTypes2.default.string.isRequired,
    filter: _propTypes2.default.any,
    text: _propTypes2.default.string
};

ButtonExport.defaultProps = {
    text: "Export Data"
};

var ButtonLink = exports.ButtonLink = function (_React$Component2) {
    _inherits(ButtonLink, _React$Component2);

    function ButtonLink(props) {
        _classCallCheck(this, ButtonLink);

        return _possibleConstructorReturn(this, (ButtonLink.__proto__ || Object.getPrototypeOf(ButtonLink)).call(this, props));
    }

    _createClass(ButtonLink, [{
        key: 'render',
        value: function render() {
            if (this.props.href) {
                return _react2.default.createElement(
                    'a',
                    { target: '' + this.props.target, href: '' + this.props.href, className: 'btn_link' },
                    this.props.label
                );
            } else {
                return _react2.default.createElement(
                    'a',
                    { onClick: this.props.onClick, className: 'btn_link' },
                    this.props.label
                );
            }
        }
    }]);

    return ButtonLink;
}(_react2.default.Component);

/*
 * onClick
 * icon
 * size : lg | md | [any string]
 * theme : dark | empty
 */


var ButtonIcon = exports.ButtonIcon = function (_React$Component3) {
    _inherits(ButtonIcon, _React$Component3);

    function ButtonIcon() {
        _classCallCheck(this, ButtonIcon);

        return _possibleConstructorReturn(this, (ButtonIcon.__proto__ || Object.getPrototypeOf(ButtonIcon)).apply(this, arguments));
    }

    _createClass(ButtonIcon, [{
        key: 'render',
        value: function render() {
            var fontSize = "";
            switch (this.props.size) {
                case 'lg':
                    fontSize = "2em";
                    break;
                case 'md':
                    fontSize = "1em";
                    break;
                default:
                    fontSize = this.props.size;
                    break;
            }
            var style = this.props.style ? this.props.style : {};
            style["fontSize"] = fontSize;

            var theme = this.props.theme ? this.props.theme : "";
            var icon = _react2.default.createElement('i', { className: 'fa fa-' + this.props.icon });
            if (this.props.href) {
                return _react2.default.createElement(
                    'a',
                    { style: style,
                        target: '' + this.props.target, href: '' + this.props.href,
                        className: 'button-icon ' + theme },
                    icon
                );
            } else {
                return _react2.default.createElement(
                    'a',
                    { style: style,
                        onClick: this.props.onClick,
                        className: 'button-icon ' + theme },
                    icon
                );
            }
        }
    }]);

    return ButtonIcon;
}(_react2.default.Component);

ButtonIcon.propsType = {
    onClick: _propTypes2.default.func.isRequired,
    size: _propTypes2.default.oneOf(["lg", "md", _propTypes2.default.string]).isRequired,
    icon: _propTypes2.default.string.isRequired,
    theme: _propTypes2.default.oneOf(["dark"]),
    style: _propTypes2.default.object
};

var ButtonAction = exports.ButtonAction = function (_React$Component4) {
    _inherits(ButtonAction, _React$Component4);

    function ButtonAction() {
        _classCallCheck(this, ButtonAction);

        return _possibleConstructorReturn(this, (ButtonAction.__proto__ || Object.getPrototypeOf(ButtonAction)).apply(this, arguments));
    }

    _createClass(ButtonAction, [{
        key: 'handleOnClick',
        value: function handleOnClick(isSub) {
            if (isSub) {
                this.isSub = true;
                console.log("is sub");
                this.props.subButtonOnClick();
            } else if (!this.isSub) {
                console.log("is main");
                this.props.onClick();
            }

            if (!isSub) {
                this.isSub = false;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            var body = [_react2.default.createElement('i', { className: 'fa fa-' + this.props.iconSize + ' fa-' + this.props.icon }), _react2.default.createElement('br', null), _react2.default.createElement(
                'b',
                null,
                this.props.mainText
            ), _react2.default.createElement('br', null)];

            var sub = null;
            if (this.props.subText) {
                sub = _react2.default.createElement(
                    'small',
                    null,
                    this.props.subText
                );
            }

            if (this.props.subButtonText) {
                sub = _react2.default.createElement(
                    'small',
                    null,
                    _react2.default.createElement(
                        'div',
                        {
                            onClick: function onClick() {
                                _this5.handleOnClick(true);
                            },
                            className: 'inner-link' },
                        this.props.subButtonText
                    )
                );
            }

            body.push(sub);

            if (this.props.to) {
                return _react2.default.createElement(
                    _reactRouterDom.NavLink,
                    { style: this.props.style,
                        className: 'btn ' + this.props.btnClass + ' btn-action',
                        to: this.props.to },
                    body
                );
            } else if (this.props.onClick) {
                return _react2.default.createElement(
                    'div',
                    { style: this.props.style,
                        className: 'btn ' + this.props.btnClass + ' btn-action',
                        onClick: function onClick() {
                            _this5.handleOnClick(false);
                        } },
                    body
                );
            }
        }
    }]);

    return ButtonAction;
}(_react2.default.Component);

ButtonAction.propsType = {
    style: _propTypes2.default.any,
    to: _propTypes2.default.any,
    onClick: _propTypes2.default.any,

    btnClass: _propTypes2.default.any,
    iconSize: _propTypes2.default.any,
    icon: _propTypes2.default.any,
    // main text
    mainText: _propTypes2.default.any,

    // sub text
    subText: _propTypes2.default.any,
    subButtonText: _propTypes2.default.any,
    subButtonOnClick: _propTypes2.default.any

};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyFunction = __webpack_require__(39);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (false) {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.emitLogout = exports.emitLiveFeed = exports.emitChatMessage = exports.emitHallActivity = exports.emitChatOpenClose = exports.emitQueueStatus = exports.emitState = exports.emitProgess = exports.socketEmit = exports.socketOn = exports.initSocket = undefined;
exports.isSocketOkay = isSocketOkay;

var _socket = __webpack_require__(454);

var _socket2 = _interopRequireDefault(_socket);

var _socketConfig = __webpack_require__(32);

var _appConfig = __webpack_require__(4);

var _authActions = __webpack_require__(2);

var _userActions = __webpack_require__(51);

var _layoutActions = __webpack_require__(6);

var _hallActions = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

console.socket = function (event, m) {
    console.log('SOCKET - [' + event + ']', m);
};

// Establishing socket connection
var socket = null;

//#####################################################################################
// init functions
var initSocket = exports.initSocket = function initSocket(page) {
    try {
        console.socket("TRY CONNECT", _socketConfig.Url);
        socket = _socket2.default.connect(_socketConfig.Url);
        console.socket("SUCCESS", socket);
    } catch (err) {
        socket = false;
        console.socket("ERROR CONNECT", err);
    }

    if (!(0, _authActions.isAuthorized)()) {
        return false;
    }

    initOn();
};

function isSocketOkay() {
    if (socket === false) {
        return false;
    } else {
        return socket.connected;
    }
}

function initOn() {
    var user = (0, _authActions.getAuthUser)();
    socketOn("okay", function () {
        console.log("okay connected///");
        var joinData = {
            id: user.ID,
            role: user.role,
            company_id: user.rec_company,
            cf: (0, _authActions.getCF)()
        };

        socketEmit(_socketConfig.C2S.JOIN, joinData);
    });
    // inital ons
    socketOn(_socketConfig.BOTH.CONNECTION, function () {
        console.log("connected///");
        var joinData = {
            id: user.ID,
            role: user.role,
            company_id: user.rec_company,
            cf: (0, _authActions.getCF)()
        };

        socketEmit(_socketConfig.C2S.JOIN, joinData);
    });

    socketOn(_socketConfig.S2C.ONLINE_USER, function (data) {
        (0, _userActions.setOnlineUsers)(data);
    });

    socketOn(_socketConfig.S2C.ONLINE_COMPANY, function (data) {
        (0, _userActions.setOnlineCompanies)(data);
    });

    socketOn(_socketConfig.BOTH.CHAT_OPEN_CLOSE, function (data) {
        var isSessionPage = location.pathname.indexOf('session/' + data.session_id) >= 0;
        var actionText = null;
        var actionHandler = null;
        var href = null;
        var title = null;

        if (data.action == "open") {
            title = data.from_name + ' has joined the session';

            if (isSessionPage) {
                actionText = "Got It!";
            } else {
                href = _appConfig.RootPath + '/app/session/' + data.session_id;
                actionText = "Go To Session";
            }
        }

        if (data.action == "close") {
            title = data.from_name + ' has ' + ((0, _authActions.isRoleRec)() ? 'left' : 'ended') + ' the session';
            if (isSessionPage) {
                //href = `${RootPath}/app/career-fair`;
                href = _appConfig.RootPath + '/app/';
                actionText = (0, _authActions.isRoleRec)() ? "Start Session With Other Student" : "Got It!";
            } else {
                actionText = "Got It!";

                // if career fair page, need to reload all activity
                var isCFPage = location.pathname.indexOf('career-fair') >= 0;
                if (isCFPage) {
                    (0, _hallActions.storeLoadActivity)();
                }
            }
        }

        if (title != null) {
            (0, _layoutActions.customBlockLoader)(title, actionText, actionHandler, href);
        }
    });

    socketOn(_socketConfig.BOTH.HALL_ACTIVITY, function (data) {
        (0, _hallActions.storeLoadActivity)(data.entity);
    });
}

//#####################################################################################
// general helper

var socketOn = exports.socketOn = function socketOn(event, handler) {
    if (!socket) {
        console.log("failed socket");
        return;
    }

    socket.on(event, function (data) {
        console.socket("ON EVENT", event);
        console.socket("ON DATA", data);
        handler(data);
    });
};

var socketEmit = exports.socketEmit = function socketEmit(event, data) {
    if (!socket) {
        return;
    }
    console.socket("EMIT EVENT", event);
    console.socket("EMIT DATA", data);
    socket.emit(event, data);
};

//#####################################################################################
// emit helper


var emitProgess = exports.emitProgess = function emitProgess() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    socketEmit(_socketConfig.BOTH.PROGRESS, {
        params: params
    });
};

var emitState = exports.emitState = function emitState() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    socketEmit(_socketConfig.BOTH.STATE, {
        params: params
    });
};

var emitQueueStatus = exports.emitQueueStatus = function emitQueueStatus(company_id, student_id, action) {
    socketEmit(_socketConfig.BOTH.QUEUE_STATUS, {
        company_id: company_id,
        student_id: student_id,
        action: action
    });
};

var emitChatOpenClose = exports.emitChatOpenClose = function emitChatOpenClose(action, from_name, to_id, session_id) {

    if (action == "close") {
        //var href = `${RootPath}/app/career-fair`;
        var href = _appConfig.RootPath + '/app/';
        var actionText = (0, _authActions.isRoleRec)() ? "Start Session With Other Student"
        //: "Start Queue With Other Company"
        : "Go Back To Home";
        (0, _layoutActions.customBlockLoader)("Session has ended", actionText, null, href);
    }

    socketEmit(_socketConfig.BOTH.CHAT_OPEN_CLOSE, {
        action: action,
        from_name: from_name,
        to_id: to_id,
        session_id: session_id
    });
};

var emitHallActivity = exports.emitHallActivity = function emitHallActivity(entity, to_id, to_company) {
    socketEmit(_socketConfig.BOTH.HALL_ACTIVITY, {
        entity: entity,
        to_id: to_id,
        to_company: to_company
    });
};

var emitChatMessage = exports.emitChatMessage = function emitChatMessage(from_id, to_id, is_to_company, message, created_at, id_message_number) {
    socketEmit(_socketConfig.BOTH.CHAT_MESSAGE, {
        from_id: from_id,
        to_id: to_id,
        is_to_company: is_to_company,
        message: message,
        created_at: created_at,
        id_message_number: id_message_number
    });
};

var emitLiveFeed = exports.emitLiveFeed = function emitLiveFeed(title, content, type, cf, created_at) {
    socketEmit(_socketConfig.BOTH.LIVE_FEED, {
        title: title,
        content: content,
        type: type,
        cf: cf,
        created_at: created_at
    });
};

var emitLogout = exports.emitLogout = function emitLogout() {
    socketEmit(_socketConfig.C2S.LOGOUT, { id: (0, _authActions.getAuthUser)().ID });
};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.isValueEmpty = isValueEmpty;
exports.toggleSubmit = toggleSubmit;
exports.getDataCareerFair = getDataCareerFair;
exports.checkDiff = checkDiff;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _loader = __webpack_require__(8);

var _buttons = __webpack_require__(15);

var _appConfig = __webpack_require__(4);

var _authActions = __webpack_require__(2);

var _inputSuggestion = __webpack_require__(158);

var _inputSuggestion2 = _interopRequireDefault(_inputSuggestion);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../css/form.scss');

function isValueEmpty(v) {
  return v == "" || typeof v === "undefined" || v == null;
}
function toggleSubmit(obj) {
  var newState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  obj.setState(function (prevState) {
    newState.disableSubmit = !prevState.disableSubmit;
    return newState;
  });
}

function getDataCareerFair(type) {
  var ret = [];
  var CareerFair = (0, _authActions.getAllCF)();
  for (var cf in CareerFair) {
    var d = CareerFair[cf];

    if (type == "login" && !d.can_login) {
      continue;
    }

    if (type == "register" && !d.can_register) {
      continue;
    }

    var newD = {
      key: cf,
      label: _react2.default.createElement(
        "span",
        null,
        _react2.default.createElement("img", { src: _appConfig.ImgConfig.getFlag(d.flag, 24) }),
        " " + d.title
      )
    };
    ret.push(newD);
  }
  return ret;
}

function checkDiff(obj, original, d) {
  var discard = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];

  var hasDiff = false;
  var update = {};

  //get differences
  for (var k in d) {
    if (discard.indexOf(k) >= 0) {
      continue;
    }

    if (force.indexOf(k) >= 0) {
      hasDiff = true;
      update[k] = d[k];
      continue;
    }

    if (_typeof(d[k]) == "object" && _typeof(original[k]) == "object") {
      if (JSON.stringify(d[k]) != JSON.stringify(original[k])) {
        hasDiff = true;
        update[k] = d[k];
      }
    } else if (d[k] != original[k]) {
      hasDiff = true;
      update[k] = d[k];
    }
  }

  //return;
  if (!hasDiff) {
    toggleSubmit(obj, { error: "No Changes Has Been Made" });
    return false;
  } else {
    return update;
  }
}

var Form = function (_React$Component) {
  _inherits(Form, _React$Component);

  function Form(props) {
    _classCallCheck(this, Form);

    var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));

    _this.form = {};
    //this.onChange = this.onChange.bind(this);
    _this.onSubmit = _this.onSubmit.bind(_this);
    _this.onBlur = _this.onBlur.bind(_this);
    _this.getSelectOptions = _this.getSelectOptions.bind(_this);

    _this.state = {
      input_suggestion_form: {},
      isInit: true,
      multiple: {},
      warning: {}
    };

    _this.hasInit = false;
    return _this;
  }

  _createClass(Form, [{
    key: "onBlur",
    value: function onBlur(event) {
      var name = event.target.name;
      if (Object.keys(this.state.warning).length > 0) {
        this.hasError(name);
      }
    }
  }, {
    key: "hasError",
    value: function hasError() {
      var defName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      // check if has warning
      var warning = {};
      var doHas = false;
      var toFocus = null;
      for (var i in this.form) {
        var w = "";
        var formObj = this.form[i];
        if (formObj == null) {
          continue;
        }

        var name = formObj.name;
        var value = formObj.value;
        //console.log(name,value);
        if (defName !== null && name != name) {
          continue;
        }

        if (formObj.type == "number" && value == "" && formObj.required) {
          w = "Please enter a number";
        } else if (formObj.type == "email" && value != "") {
          var regex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
          if (!regex.test(value)) {
            w = "Please enter a valid email";
          }
        } else if (formObj.required && value == "") {
          w = "This field is required";
        }

        if (w !== "") {
          doHas = true;
          warning[name] = w;
          if (toFocus === null) {
            toFocus = formObj;
          }

          if (formObj.type == "input_suggestion") {
            toFocus = formObj.el;
          }
        }
      }

      this.setState(function (prevState) {
        return { warning: warning };
      });

      if (doHas && toFocus !== null && defName === null) {
        toFocus.focus();
        window.scrollBy(0, -80);
      }

      return doHas;
    }
  }, {
    key: "onSubmit",
    value: function onSubmit(event) {
      var _this2 = this;

      event.preventDefault();
      var ignore = []; // to ignore multiple if any
      var data_form = {};

      if (this.hasError()) {
        return;
      }

      for (var i in this.form) {
        var formObj = this.form[i];

        if (formObj != null) {
          var name = formObj.name;
          var value = formObj.value;

          if (formObj.type == "input_suggestion") {
            value = formObj.val;
          }

          //parse to Number
          if (formObj.type == "number" && value !== "") {
            try {
              value = Number.parseFloat(value);
            } catch (err) {}
          }

          // ignore the multiple
          if (ignore.indexOf(name) >= 0) {
            continue;
          }

          // handle checkbox
          if (formObj.type == "checkbox") {
            var checkboxName = name.split("::")[0];
            console.log(checkboxName);
            if (formObj.checked) {
              if (!data_form[checkboxName]) {
                data_form[checkboxName] = [];
              }
              data_form[checkboxName].push(value);
            }
            continue;
          }

          // only one can be selected
          if (formObj.type == "radio") {
            var radioName = name.split("::")[0];
            if (formObj.checked) {
              data_form[radioName] = value;
            }
            continue;
          }

          // handle multiple input
          if (this.state.multiple[name]) {
            // if the parent of multiple is not empty,
            // search for child input as well
            if (value !== "") {
              value = [value];

              this.state.multiple[name].map(function (d, i) {
                var multiName = name + "::" + (i + 1);
                var multiValue = _this2.form[multiName].value;
                if (multiValue != "") {
                  value.push(multiValue);
                }

                ignore.push(multiName);
              });
            }
          }

          data_form[name] = value;
        }
      }

      // major change here
      this.props.onSubmit(data_form);
    }
  }, {
    key: "getSelectOptions",
    value: function getSelectOptions(data) {
      return data.map(function (d, i) {
        console.log(typeof d === "undefined" ? "undefined" : _typeof(d));
        var value = (typeof d === "undefined" ? "undefined" : _typeof(d)) == "object" ? d.key : d;
        var label = (typeof d === "undefined" ? "undefined" : _typeof(d)) == "object" ? d.label : d;

        return _react2.default.createElement(
          "option",
          { key: i, value: value },
          label
        );
      });
    }

    //called in renderItem and addMultiple::onClickAdd

  }, {
    key: "getChildMultipleItem",
    value: function getChildMultipleItem(d, index) {
      var defaultVal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

      var newData = Object.assign({}, d);
      newData.name += "::" + index;
      newData.required = false;
      return this.getInputElement(newData, defaultVal);
    }

    //called in render

  }, {
    key: "addMultiple",
    value: function addMultiple(d) {
      var _this3 = this;

      if (!d.multiple) {
        return null;
      }

      var onClickAdd = function onClickAdd() {
        _this3.setState(function (prevState) {
          var multis = prevState.multiple[d.name];
          var newItem = _this3.getChildMultipleItem(d, multis.length + 1);
          prevState.multiple[d.name].push(newItem);
          return prevState;
        });
      };

      var onClickRemove = function onClickRemove() {
        _this3.setState(function (prevState) {
          prevState.multiple[d.name].pop();
          return prevState;
        });
      };

      //init multi into state
      if (!this.state.multiple[d.name]) {
        this.state.multiple[d.name] = [];
      }

      // create multi element from state
      var multi = this.state.multiple[d.name].map(function (d, i) {
        var style = { marginTop: "5px" };
        return _react2.default.createElement(
          "div",
          { style: style },
          d
        );
      });

      return _react2.default.createElement(
        "div",
        null,
        multi,
        _react2.default.createElement(_buttons.ButtonLink, { onClick: onClickAdd, label: "Add" }),
        " ",
        this.state.multiple[d.name].length <= 0 ? null : _react2.default.createElement(_buttons.ButtonLink, { onClick: onClickRemove, label: "Remove" })
      );
    }
  }, {
    key: "emptyForm",
    value: function emptyForm() {
      for (var i in this.form) {
        if (this.form[i] !== null) {
          if (this.form[i].disabled !== true) {
            this.form[i].value = "";
          }
        }
      }
    }
  }, {
    key: "inputSuggestionOnChange",
    value: function inputSuggestionOnChange(e, name) {
      var v = "";
      if (typeof e === "string") {
        v = e;
      } else {
        v = e.target.value;
      }
      this.form[name] = {
        type: "input_suggestion",
        val: v,
        name: name,
        el: e.target
      };
      this.setState(function (prevState) {
        prevState.input_suggestion_form[name] = v;
        return { input_suggestion_form: prevState.input_suggestion_form };
      });
    }
  }, {
    key: "getInputElement",
    value: function getInputElement(d, defaultVal) {
      var _this4 = this;

      if (this.props.success && this.props.emptyOnSuccess) {
        defaultVal = "";
        this.emptyForm();
      }
      var item = null;
      var formClass = "form-control input-sm";
      switch (d.type) {
        case "input_suggestion":
          item = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(_inputSuggestion2.default, _extends({
              is_in_normal_form: true
            }, d, {
              input_val: this.state.input_suggestion_form[d.name] || this.props.defaultValues[d.name],
              onChoose: function onChoose(v, name) {
                _this4.inputSuggestionOnChange(v, name);
              },
              input_onChange: function input_onChange(e, name) {
                _this4.inputSuggestionOnChange(e, name);
              },
              input_onBlur: function input_onBlur(e, name) {
                _this4.inputSuggestionOnChange(e, name);
              }
            }))
          );
          break;
        case "textarea":
          item = _react2.default.createElement("textarea", {
            className: formClass,
            hidden: d.hidden,
            onChange: d.onChange,
            disabled: d.disabled,
            name: d.name,
            rows: d.rows ? d.rows : 4,
            required: d.required,
            placeholder: d.placeholder,
            ref: function ref(v) {
              return _this4.form[d.name] = v;
            },
            defaultValue: defaultVal
          });
          break;
        case "select":
          item = _react2.default.createElement(
            "select",
            {
              className: formClass,
              hidden: d.hidden,
              onChange: d.onChange,
              disabled: d.disabled,
              name: d.name,
              required: d.required,
              ref: function ref(v) {
                return _this4.form[d.name] = v;
              },
              defaultValue: defaultVal
            },
            this.getSelectOptions(d.data)
          );
          break;
        case "checkbox":
          //onChange={this.onChange}
          item = d.data.map(function (data, i) {
            var name = d.name + "::" + (i + 1);
            var checked = false;
            var disabled = false;
            if (_this4.props.defaultValues[d.name]) {
              checked = _this4.props.defaultValues[d.name].indexOf(data.key) >= 0;
              if (checked && d.disabledOnChecked) {
                disabled = true;
                data.label = _react2.default.createElement(
                  "div",
                  null,
                  data.label,
                  " ",
                  d.disabledOnChecked
                );
              }
            }
            return _react2.default.createElement(
              "div",
              { key: i, className: "checkbox" },
              _react2.default.createElement(
                "label",
                { className: "checkbox-inline" },
                _react2.default.createElement("input", {
                  onBlur: _this4.onBlur,
                  onChange: d.onChange,
                  disabled: d.disabled || disabled,
                  hidden: d.hidden,
                  name: name,
                  type: d.type,
                  value: data.key,
                  defaultChecked: checked,
                  min: d.min,
                  max: d.max,
                  step: d.step,
                  required: d.required,
                  placeholder: d.placeholder,
                  defaultValue: defaultVal,
                  ref: function ref(v) {
                    return _this4.form[name] = v;
                  }
                }),
                data.label
              )
            );
          });
          break;
        case "radio":
          item = d.data.map(function (data, i) {
            var name = d.name + "::" + (i + 1);
            var checked = _this4.props.defaultValues[d.name] == data.key;
            return _react2.default.createElement(
              "div",
              { key: i, className: "radio" },
              _react2.default.createElement(
                "label",
                { className: "radio-inline" },
                _react2.default.createElement("input", {
                  onBlur: _this4.onBlur,
                  onChange: d.onChange,
                  disabled: d.disabled,
                  hidden: d.hidden,
                  name: d.name,
                  type: d.type,
                  value: data.key,
                  defaultChecked: checked,
                  min: d.min,
                  max: d.max,
                  step: d.step,
                  required: d.required,
                  placeholder: d.placeholder,
                  defaultValue: defaultVal,
                  ref: function ref(v) {
                    return _this4.form[name] = v;
                  }
                }),
                data.label
              )
            );
          });
          break;
        default:
          //onChange={this.onChange}
          item = _react2.default.createElement("input", {
            className: formClass,
            onBlur: this.onBlur,
            onChange: d.onChange,
            disabled: d.disabled,
            hidden: d.hidden,
            name: d.name,
            type: d.type,
            maxLength: d.len,
            min: d.min,
            max: d.max,
            step: d.step,
            required: d.required,
            placeholder: d.placeholder,
            defaultValue: defaultVal,
            ref: function ref(v) {
              return _this4.form[d.name] = v;
            }
          });
          break;
      }

      if (item !== null) {
        return item;
      } else {
        return null;
      }
    }

    //called in render

  }, {
    key: "getWarning",
    value: function getWarning(d) {
      if (!this.state.warning[d.name]) {
        return null;
      }

      return _react2.default.createElement(
        "div",
        { className: "form-warning" },
        this.state.warning[d.name]
      );
    }

    //called in render

  }, {
    key: "renderItem",
    value: function renderItem(d) {
      var _this5 = this;

      //default value
      var defaultVal = "";

      if (this.props.defaultValues) {
        defaultVal = this.props.defaultValues[d.name];
        //default value for multiple
        if (d.multiple) {
          try {
            var defArray = JSON.parse(defaultVal);

            //the first item is parent
            defaultVal = defArray[0];

            //if have def array then add new item
            if (defArray !== null) {
              var newState = [];
              defArray.map(function (data, i) {
                if (i > 0) {
                  newState.push(_this5.getChildMultipleItem(d, i, data));
                }
              });

              if (this.state.isInit) {
                this.setState(function (prevState) {
                  prevState.multiple[d.name] = newState;
                  prevState.isInit = false;
                  return prevState;
                });
              }
            }
          } catch (err) {
            console.log("Failed to parse multiple default value");
            //console.log(err);
            defaultVal = defaultVal;
          }
        }

        if (typeof defaultVal === "undefined" || defaultVal == null) {
          defaultVal = "";
        }
      }

      return this.getInputElement(d, defaultVal);
    }
  }, {
    key: "render",
    value: function render() {
      var _this6 = this;

      //console.log("render form", this.props.defaultValues);
      // 1. form items ---------
      var formItems = this.props.items.map(function (d, i) {
        // a. label ------
        var label = null;

        if (d.label != null && d.hidden !== true && d.hideLabel !== true) {
          label = _react2.default.createElement(
            "div",
            { className: "form-label" },
            d.label,
            d.required ? " *" : null
          );
        }

        //b. sublabel ----
        var sublabel = d.sublabel && d.hidden !== true ? _react2.default.createElement(
          "div",
          { className: "form-sublabel" },
          d.sublabel
        ) : null;

        // bootstrap form class
        //var formClass = "form-item form-group";
        var formClass = "form-group";
        if (_this6.state.warning[d.name]) {
          formClass += " has-feedback has-error";
        }

        return d.header ? _react2.default.createElement(
          "div",
          { className: "form-header", key: i },
          d.header
        ) : _react2.default.createElement(
          "div",
          { className: "form-item" },
          label,
          sublabel,
          _react2.default.createElement(
            "div",
            { className: formClass, key: i },
            _react2.default.createElement(
              "div",
              { className: "form-input" },
              _this6.renderItem(d),
              _this6.addMultiple(d)
            ),
            _this6.getWarning(d)
          )
        );
      });

      // 2. form submit ---------
      var disableSubmit = this.props.disableSubmit;
      var submitText = this.props.submitText ? this.props.submitText : "Submit";
      if (disableSubmit) {
        submitText = _react2.default.createElement(_loader.Loader, { text_pos: "right", text: "Please Wait" });
      }

      var formSubmit = _react2.default.createElement(
        "div",
        { className: "form-submit" },
        _react2.default.createElement(
          "button",
          {
            type: "submit",
            className: "btn btn-md btn-" + this.props.btnColorClass,
            disabled: disableSubmit
          },
          submitText
        )
      );

      // 3. form error ---------
      var formError = this.props.error ? _react2.default.createElement(
        "div",
        { className: "form-error alert alert-danger" },
        this.props.error,
        " "
      ) : null;

      // 4. form success ---------
      if (this.props.success) {
        window.scrollTo(0, 0);
      }
      var formSuccess = this.props.success ? _react2.default.createElement(
        "div",
        { className: "form-error alert alert-success" },
        this.props.success,
        " "
      ) : null;

      return _react2.default.createElement(
        "form",
        {
          noValidate: "novalidate",
          className: this.props.className,
          onSubmit: this.onSubmit
        },
        formSuccess,
        this.props.errorPosition === "top" ? formError : null,
        _react2.default.createElement(
          "div",
          { className: "form-item-container" },
          formItems
        ),
        this.props.errorPosition !== "top" ? formError : null,
        this.props.hideSubmit ? null : formSubmit,
        this.props.contentBottom
      );
    }
  }]);

  return Form;
}(_react2.default.Component);

exports.default = Form;

Form.propTypes = {
  contentBottom: _propTypes.PropTypes.object,
  hideSubmit: _propTypes.PropTypes.bool,
  onSubmit: _propTypes.PropTypes.func.isRequired, //function(data_form)
  //[{header} | {name,type,required,placeholder,rows,defaultValue}]
  items: _propTypes.PropTypes.arrayOf(_propTypes.PropTypes.object).isRequired,
  className: _propTypes.PropTypes.oneOf(["form-row", "form-col"]),
  disableSubmit: _propTypes.PropTypes.bool.isRequired,
  submitText: _propTypes.PropTypes.string,
  btnColorClass: _propTypes.PropTypes.string,
  defaultValues: _propTypes.PropTypes.object,
  errorPosition: _propTypes.PropTypes.oneOf(["top"]),
  error: _propTypes.PropTypes.string,
  emptyOnSuccess: _propTypes.PropTypes.bool,
  success: _propTypes.PropTypes.string
};

Form.defaultProps = {
  hideSubmit: false,
  defaultValues: {},
  btnColorClass: "primary"
};

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var DOMProperty = __webpack_require__(70);
var ReactDOMComponentFlags = __webpack_require__(192);

var invariant = __webpack_require__(10);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SET_NON_AXIOS = exports.FETCH_COMPANIES = exports.TRAFFIC = exports.ACTIVITY = exports.ActivityType = undefined;
exports.getActivityQueryAttr = getActivityQueryAttr;
exports.getActivityQuery = getActivityQuery;
exports.loadActivity = loadActivity;
exports.storeLoadActivity = storeLoadActivity;
exports.loadTraffic = loadTraffic;
exports.loadCompanies = loadCompanies;
exports.setNonAxios = setNonAxios;

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _authActions = __webpack_require__(2);

var _store = __webpack_require__(34);

/***** ACTIVITY ***************************/
var ActivityType = exports.ActivityType = {
    SESSION: _dbConfig.Session.TABLE,
    QUEUE: _dbConfig.Queue.TABLE,
    SESSION_REQUEST: _dbConfig.SessionRequest.TABLE,
    PRESCREEN: _dbConfig.Prescreen.TABLE,
    ZOOM_INVITE: _dbConfig.ZoomInvite.TABLE,
    GROUP_SESSION_JOIN: _dbConfig.GroupSessionJoin.TABLE,
    NOTIFICATION_COUNT: _dbConfig.Notifications.TABLE,
    INBOX_COUNT: _dbConfig.Message.TABLE
};

var AllActivityType = [];
for (var k in ActivityType) {
    AllActivityType.push(ActivityType[k]);
}

function getEntitySelect(role, type) {
    var extra = "";
    if (role === _dbConfig.UserEnum.ROLE_RECRUITER && (type == ActivityType.SESSION_REQUEST || type == ActivityType.PRESCREEN)) {
        extra = "doc_links {ID url label}";
    }

    return role === _dbConfig.UserEnum.ROLE_STUDENT ? ' company{ID name img_url img_position img_size ' + extra + ' } ' : ' student{ID first_name last_name img_url img_pos img_size ' + extra + ' } ';
}

function getIndependentQuery(oriQuery, types) {
    var user_id = (0, _authActions.getAuthUser)().ID;
    var query = oriQuery;
    // untuk yang independent query
    if (types.length == 1 && types[0] == ActivityType.NOTIFICATION_COUNT) {
        if (typeof user_id !== "undefined") {
            query = 'query{\n              notifications(user_id : ' + user_id + ', is_read:0, ttl:true){\n               ttl\n              }\n            }';
        }
    }

    // untuk yang independent query
    if (types.length == 1 && types[0] == ActivityType.INBOX_COUNT) {
        if (typeof user_id !== "undefined") {
            if ((0, _authActions.isRoleStudent)()) {
                query = 'query{\n                    messages_count(user_id : ' + user_id + '){\n                    total_unread\n                  }\n                }';
            } else if ((0, _authActions.isRoleRec)()) {
                var c_id = (0, _authActions.getAuthUser)().rec_company;
                query = 'query{\n                    messages_count(company_id : ' + c_id + '){\n                    total_unread\n                  }\n                }';
            }
        }
    }

    return query;
}

function getActivityQueryAttr(type) {
    var select = "";
    var role = (0, _authActions.getAuthUser)().role;
    switch (type) {
        case ActivityType.SESSION:
            select = ' ID created_at ' + getEntitySelect(role, type) + ' ';
            break;
        case ActivityType.QUEUE:
            select = ' ID queue_num created_at ' + getEntitySelect(role, type) + ' ';
            break;
        case ActivityType.SESSION_REQUEST:
            select = ' ID status created_at ' + getEntitySelect(role, type) + ' ';
            break;
        case ActivityType.PRESCREEN:
            select = ' ID company_id is_expired is_onsite_call join_url start_url appointment_time updated_at special_type status ' + getEntitySelect(role, type) + ' ';
            break;
        case ActivityType.ZOOM_INVITE:
            select = ' ID join_url session_id created_at recruiter { first_name last_name user_email } ' + getEntitySelect(role, type) + ' ';
            break;
        case ActivityType.GROUP_SESSION_JOIN:
            select = ' ID title join_id updated_at start_time is_expired is_canceled join_url ' + getEntitySelect(role, type) + ' ';
            break;
    }
    return select;
}

function getActivityQuery(types) {
    var user_id = (0, _authActions.getAuthUser)().ID;
    var select = "";
    if (typeof types === "string") {
        types = [types];
    }
    types.map(function (d, i) {
        switch (d) {
            case ActivityType.SESSION:
                select += ' sessions { ' + getActivityQueryAttr(d) + '} ';
                break;
            case ActivityType.QUEUE:
                select += ' queues { ' + getActivityQueryAttr(d) + '} ';
                break;
            case ActivityType.SESSION_REQUEST:
                select += ' session_requests { ' + getActivityQueryAttr(d) + '} ';
                break;
            case ActivityType.PRESCREEN:
                select += ' prescreens { ' + getActivityQueryAttr(d) + '} ';
                break;
            case ActivityType.ZOOM_INVITE:
                select += (0, _authActions.isRoleRec)() ? ' zoom_invites { ' + getActivityQueryAttr(d) + '} ' : "";
                break;
            case ActivityType.GROUP_SESSION_JOIN:
                select += (0, _authActions.isRoleStudent)() ? ' group_sessions { ' + getActivityQueryAttr(d) + ' }' : "";
                break;
        }
    });
    var query = null;
    if (select != "") {
        query = 'query{user(ID:' + user_id + '){' + select + '}}';
    }
    return query;
}

var ACTIVITY = exports.ACTIVITY = "ACTIVITY";
function loadActivity() {
    var types = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : AllActivityType;

    var type = "";
    if (typeof types === "string") {
        types = [types];
    }
    types.map(function (d) {
        type += ":" + d;
    });

    var query = getActivityQuery(types);
    query = getIndependentQuery(query, types);

    if (query != null) {
        return function (dispatch) {
            dispatch({
                type: ACTIVITY + type,
                payload: (0, _apiHelper.getAxiosGraphQLQuery)(query)
            });
        };
    }
}

function storeLoadActivity() {
    var types = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : AllActivityType;

    _store.store.dispatch(loadActivity(types));
}

/***** COMPANY and TRAFFIC ***************************/
// this is real time
var TRAFFIC = exports.TRAFFIC = "HALL_TRAFFIC";
function loadTraffic() {
    return function (dispatch) {
        dispatch({
            type: TRAFFIC,
            payload: (0, _apiHelper.getAxiosGraphQLQuery)('query{\n                        companies(cf:"' + (0, _authActions.getCF)() + '") {\n                            ID\n                            active_queues_count\n                            active_prescreens_count\n                        }}')
        });
    };
}

var FETCH_COMPANIES = exports.FETCH_COMPANIES = "FETCH_COMPANIES";
function loadCompanies(limitLoad) {
    // vacancies_count
    // status
    // group_url
    var limitArgs = "";
    if (limitLoad) {
        limitArgs = ',page:1, offset: ' + limitLoad;
    }
    return function (dispatch) {
        dispatch({
            type: FETCH_COMPANIES,
            payload: (0, _apiHelper.getAxiosGraphQLQuery)('query{\n                        companies(cf:"' + (0, _authActions.getCF)() + '" ' + limitArgs + ') {\n                            ID\n                            img_url\n                            img_size\n                            img_position\n                            banner_url\n                            banner_size\n                            banner_position\n                            name\n                            tagline\n                            type  \n                        }\n                }')
        });
    };
}

var SET_NON_AXIOS = exports.SET_NON_AXIOS = "SET_NON_AXIOS";
function setNonAxios(key, data) {
    return function (dispatch) {
        dispatch({
            type: SET_NON_AXIOS,
            payload: {
                key: key,
                data: data
            }
        });
    };
}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../css/tooltip.scss');

var Tooltip = function (_React$Component) {
  _inherits(Tooltip, _React$Component);

  function Tooltip(props) {
    _classCallCheck(this, Tooltip);

    var _this = _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, props));

    _this.debug = _this.props.debug;

    _this.onMouseEnter = _this.onMouseEnter.bind(_this);
    _this.onMouseLeave = _this.onMouseLeave.bind(_this);
    _this.state = {
      show: _this.debug ? true : false
    };
    return _this;
  }

  _createClass(Tooltip, [{
    key: "onMouseEnter",
    value: function onMouseEnter() {
      if (this.props.tooltip === null) {
        return;
      }

      this.setState(function () {
        return { show: true };
      });
    }
  }, {
    key: "onMouseLeave",
    value: function onMouseLeave() {
      if (this.props.tooltip === null || this.debug) {
        return;
      }

      this.setState(function () {
        return { show: false };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var style = {
        bottom: this.props.bottom,
        left: this.props.left,
        width: this.props.width
      };

      if (this.props.alignCenter) {
        style.textAlign = "center";
      }

      var arrow = null;
      if (!this.props.noArrow) {
        switch (this.props.arrowPosition) {
          case "bottom":
            arrow = _react2.default.createElement("div", { className: "my-tt-arrow" });
            break;
          case "right":
            arrow = _react2.default.createElement("div", { className: "my-tt-arrow-right" });
            break;
          case "left":
            arrow = _react2.default.createElement("div", { className: "my-tt-arrow-left" });
            break;
        }
      }

      var tooltip = this.state.show ? _react2.default.createElement(
        "div",
        { className: "my-tt-container", style: style },
        _react2.default.createElement(
          "div",
          { className: "my-tt-mes" },
          this.props.tooltip
        ),
        arrow
      ) : null;

      return _react2.default.createElement(
        "span",
        {
          className: "my-tooltip",
          onMouseEnter: this.onMouseEnter,
          onMouseLeave: this.onMouseLeave
        },
        _react2.default.createElement(
          "span",
          { className: "my-tt-content" },
          this.props.content
        ),
        tooltip
      );
    }
  }]);

  return Tooltip;
}(_react2.default.Component);

exports.default = Tooltip;


Tooltip.propTypes = {
  content: _propTypes2.default.any.isRequired,
  tooltip: _propTypes2.default.element.isRequired,
  debug: _propTypes2.default.bool,
  arrowPosition: _propTypes2.default.string,
  bottom: _propTypes2.default.string,
  width: _propTypes2.default.string,
  left: _propTypes2.default.string,
  alignCenter: _propTypes2.default.bool,
  noArrow: _propTypes2.default.bool
};

Tooltip.defaultProps = {
  arrowPosition: "bottom",
  debug: false,
  noArrow: false,
  width: "200px",
  bottom: "30px",
  left: "-90px",
  alignCenter: false
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openDeletePopup = exports.openEditPopup = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _confirmPopup = __webpack_require__(122);

var _confirmPopup2 = _interopRequireDefault(_confirmPopup);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchForm = function (_React$Component) {
  _inherits(SearchForm, _React$Component);

  function SearchForm(props) {
    _classCallCheck(this, SearchForm);

    var _this = _possibleConstructorReturn(this, (SearchForm.__proto__ || Object.getPrototypeOf(SearchForm)).call(this, props));

    _this.state = {
      error: null,
      disableSubmit: false,
      success: null
    };
    return _this;
  }

  _createClass(SearchForm, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.formItem = this.props.formItem;
    }
  }, {
    key: "render",
    value: function render() {
      var form = _react2.default.createElement(_form2.default, {
        className: "form-row",
        items: this.formItem,
        onSubmit: this.props.formOnSubmit,
        submitText: _react2.default.createElement(
          "span",
          null,
          _react2.default.createElement("i", { className: "fa fa-search left" }),
          "Search"
        ),
        btnColorClass: "success btn-lg",
        disableSubmit: this.state.disableSubmit,
        error: this.state.error,
        errorPosition: "top",
        emptyOnSuccess: true,
        success: this.state.success,
        contentBottom: this.props.contentBottom
      });

      return _react2.default.createElement(
        "div",
        null,
        form
      );
    }
  }]);

  return SearchForm;
}(_react2.default.Component);

SearchForm.propTypes = {
  formItem: _propTypes2.default.object.isRequired,
  formOnSubmit: _propTypes2.default.func.isRequired,
  contentBottom: _propTypes2.default.object
};

var GeneralForm = function (_React$Component2) {
  _inherits(GeneralForm, _React$Component2);

  function GeneralForm(props) {
    _classCallCheck(this, GeneralForm);

    var _this2 = _possibleConstructorReturn(this, (GeneralForm.__proto__ || Object.getPrototypeOf(GeneralForm)).call(this, props));

    _this2.state = {
      error: null,
      disableSubmit: false,
      success: null,
      currentFile: null
    };
    _this2.formOnSubmit = _this2.formOnSubmit.bind(_this2);
    _this2.Entity = _this2.props.entity_singular;
    return _this2;
  }

  _createClass(GeneralForm, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.formDefault = this.props.formDefault;
      this.formItem = this.props.formItem;
    }
  }, {
    key: "formOnSubmit",
    value: function formOnSubmit(d) {
      var _this3 = this;

      (0, _form.toggleSubmit)(this, { error: null });

      // empty field become null
      for (var i in d) {
        if (this.props.acceptEmpty.indexOf(i) >= 0) {
          continue;
        }
        if (d[i] == "") {
          d[i] = null;
        }
      }

      // for edit
      if (this.props.edit) {
        var discardDiff = ["ID"];
        if (this.props.discardDiff) {
          discardDiff.push.apply(discardDiff, _toConsumableArray(this.props.discardDiff));
        }
        var update = (0, _form.checkDiff)(this, this.props.edit, d, discardDiff, this.props.forceDiff);

        if (update === false) {
          return;
        }
        update.ID = this.props.edit.ID;
        d = update;
      }

      // hook before submit to alter the data one last time
      if (this.props.formWillSubmit) {
        d = this.props.formWillSubmit(d, this.props.edit);

        //if error will return string
        if (typeof d === "string") {
          (0, _form.toggleSubmit)(this, { error: d });
          return;
        }
      }

      var query = "mutation{" + (this.props.edit ? "edit" : "add") + "_" + this.props.entity + " \n            (" + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + "){ID}}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var mes = _this3.props.edit ? "Successfully Edit " + _this3.Entity + "!" : "Successfully Added New " + _this3.Entity + "!";
        (0, _form.toggleSubmit)(_this3, { error: null, success: mes });
        if (_this3.props.onSuccessNew) {
          _this3.props.onSuccessNew(d);
        }
      }, function (err) {
        (0, _form.toggleSubmit)(_this3, { error: err.response.data });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var form = _react2.default.createElement(_form2.default, {
        className: "form-row",
        items: this.formItem,
        onSubmit: this.formOnSubmit,
        submitText: (this.props.edit ? "Edit" : "Add") + " " + this.props.entity_singular,
        defaultValues: this.formDefault,
        btnColorClass: this.props.btnColorClass,
        disableSubmit: this.state.disableSubmit,
        error: this.state.error,
        errorPosition: "bottom",
        emptyOnSuccess: true,
        success: this.state.success
      });

      return _react2.default.createElement(
        "div",
        null,
        form
      );
    }
  }]);

  return GeneralForm;
}(_react2.default.Component);

GeneralForm.propTypes = {
  entity: _propTypes2.default.string.isRequired,
  entity_singular: _propTypes2.default.string.isRequired,
  formItem: _propTypes2.default.array.isRequired,
  edit: _propTypes2.default.obj, // edit object
  formDefault: _propTypes2.default.object,
  onSuccessNew: _propTypes2.default.func,
  btnColorClass: _propTypes2.default.string,
  formWillSubmit: _propTypes2.default.func,
  discardDiff: _propTypes2.default.array,
  forceDiff: _propTypes2.default.array,
  acceptEmpty: _propTypes2.default.array
};

GeneralForm.defaultProps = {
  acceptEmpty: [],
  btnColorClass: "primary"
};

var GeneralFormPage = function (_React$Component3) {
  _inherits(GeneralFormPage, _React$Component3);

  function GeneralFormPage(props) {
    _classCallCheck(this, GeneralFormPage);

    var _this4 = _possibleConstructorReturn(this, (GeneralFormPage.__proto__ || Object.getPrototypeOf(GeneralFormPage)).call(this, props));

    _this4.addPopup = _this4.addPopup.bind(_this4);
    _this4.searchPopup = _this4.searchPopup.bind(_this4);
    _this4.getAddForm = _this4.getAddForm.bind(_this4);
    _this4.onSuccessOperation = _this4.onSuccessOperation.bind(_this4);
    _this4.state = {
      error: null,
      disableSubmit: false,
      success: null,
      loading: true,
      key: 1,
      loadingDelete: false,
      hasFilter: false
    };
    _this4.Entity = _this4.props.entity_singular;
    return _this4;
  }

  _createClass(GeneralFormPage, [{
    key: "onSuccessOperation",
    value: function onSuccessOperation(action) {
      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if (action == "add" && this.props.successAddHandler) {
        this.props.successAddHandler(data);
      }

      layoutActions.storeHideFocusCard();
      // this is how to update the child component use state keyy
      // damnnn
      this.setState(function (prevState) {
        return { key: prevState.key + 1 };
      });
    }

    // if showAddForm is set to true, in session-notes

  }, {
    key: "getAddForm",
    value: function getAddForm() {
      return _react2.default.createElement(GeneralForm, {
        entity: this.props.entity,
        entity_singular: this.props.entity_singular,
        formItem: this.props.getFormItem(false),
        formDefault: this.props.newFormDefault,
        onSuccessNew: this.onSuccessOperation,
        btnColorClass: this.props.btnColorClass,
        formWillSubmit: this.props.formWillSubmit
      });
    }

    // create general form for add new record

  }, {
    key: "addPopup",
    value: function addPopup() {
      var _this5 = this;

      var generateForm = function generateForm(formItem) {
        layoutActions.storeUpdateFocusCard("Add " + _this5.Entity, GeneralForm, {
          discardDiff: _this5.props.discardDiff,
          forceDiff: _this5.props.forceDiff,
          entity: _this5.props.entity,
          entity_singular: _this5.props.entity_singular,
          formItem: formItem,
          formDefault: _this5.props.newFormDefault,
          onSuccessNew: function onSuccessNew(d) {
            _this5.onSuccessOperation("add", d);
          },
          formWillSubmit: _this5.props.formWillSubmit
        });
      };

      if (this.props.getFormItemAsync) {
        this.props.getFormItemAsync(false).then(function (formItem) {
          generateForm(formItem);
        });
      } else {
        generateForm(this.props.getFormItem(false));
      }
    }

    // create general form for edit record

  }, {
    key: "editPopup",
    value: function editPopup(e) {
      var _this6 = this;

      var id = e.currentTarget.id;

      var generateForm = function generateForm(formItem) {
        layoutActions.loadingBlockLoader("Fetching information..");
        _this6.props.getEditFormDefault(id).then(function (res) {
          layoutActions.storeHideBlockLoader();
          layoutActions.storeUpdateFocusCard("Editing " + _this6.Entity + " #" + id, GeneralForm, {
            discardDiff: _this6.props.discardDiff,
            forceDiff: _this6.props.forceDiff,
            acceptEmpty: _this6.props.acceptEmpty,
            entity: _this6.props.entity,
            entity_singular: _this6.props.entity_singular,
            formItem: formItem,
            formDefault: res,
            onSuccessNew: function onSuccessNew(d) {
              _this6.onSuccessOperation("edit", d);
            },
            formWillSubmit: _this6.props.formWillSubmit,
            edit: res
          });
        });
      };

      if (this.props.getFormItemAsync) {
        this.props.getFormItemAsync(true).then(function (formItem) {
          generateForm(formItem);
        });
      } else {
        generateForm(this.props.getFormItem(true));
      }
    }
  }, {
    key: "deletePopup",
    value: function deletePopup(e) {
      var _this7 = this;

      var id = e.currentTarget.id;
      var onYes = function onYes() {
        var del_query = "mutation{delete_" + _this7.props.entity + "(ID:" + id + ")}";
        layoutActions.storeUpdateProps({ loading: true });
        (0, _apiHelper.getAxiosGraphQLQuery)(del_query).then(function (res) {
          _this7.onSuccessOperation("delete");
        }, function (err) {
          alert(err.response.data);
        });
      };

      layoutActions.storeUpdateFocusCard("Confirm Delete Item", _confirmPopup2.default, { title: "Continue delete this item ?", onYes: onYes }, "small");
    }
  }, {
    key: "searchPopup",
    value: function searchPopup() {
      var _this8 = this;

      console.log("searchPopup");
      layoutActions.storeUpdateFocusCard("Search " + this.props.entity_singular, SearchForm, {
        contentBottom: this.props.searchFormContentBottom,
        formItem: this.props.searchFormItem,
        formOnSubmit: function formOnSubmit(d) {
          _this8.props.searchFormOnSubmit(d);
          _this8.onSuccessOperation("search");
          _this8.setState(function (prevState) {
            return { hasFilter: true };
          });
        }
      });
    }
  }, {
    key: "resetFilter",
    value: function resetFilter() {
      this.setState(function (prevState) {
        return { hasFilter: false };
      });
      this.props.searchFormOnSubmit({});
      this.onSuccessOperation("search");
    }
  }, {
    key: "render",
    value: function render() {
      var _this9 = this;

      if (this.props.formOnly) {
        this.addPopup();
        return _react2.default.createElement("div", null);
      }

      // wrap data with key to force it recreate new component when needed
      var listType = this.props.tableHeader !== null ? "table" : "list";

      var view = null;
      var renderList = function renderList(d, i) {
        var editAct = _react2.default.createElement(
          "a",
          { id: d.ID, onClick: _this9.editPopup.bind(_this9) },
          "Edit"
        );
        var delAct = _react2.default.createElement(
          "a",
          { id: d.ID, onClick: _this9.deletePopup.bind(_this9) },
          "Delete"
        );

        var action = null;
        var row = [];
        if (!_this9.props.noMutation) {
          action = _react2.default.createElement(
            "td",
            { className: "text-right" },
            editAct,
            " | ",
            delAct
          );
        } else if (_this9.props.canEdit) {
          action = _react2.default.createElement(
            "td",
            { className: "text-right" },
            editAct
          );
        }

        if (_this9.props.actionFirst) {
          row.push(action);
          row.push(_this9.props.renderRow(d));
        } else {
          row.push(_this9.props.renderRow(d));
          row.push(action);
        }

        // var row = [];
        // if (this.props.actionFirst) {
        //     row = addAction(row);
        //     row.push(this.props.renderRow(d));
        // } else {
        //     row = this.props.renderRow(d);
        //     row = addAction(row);
        // }

        if (listType == "table") {
          return _react2.default.createElement(
            "tr",
            null,
            row
          );
        } else {
          return row;
        }
      };

      var datas = _react2.default.createElement(
        "div",
        { key: this.state.key },
        _react2.default.createElement(_list2.default, {
          loadCount: this.props.loadCount,
          getCountFromRes: this.props.getCountFromRes,
          type: listType,
          tableHeader: this.props.tableHeader,
          getDataFromRes: this.props.getDataFromRes,
          loadData: this.props.loadData,
          offset: this.props.dataOffset,
          renderList: renderList
        })
      );

      /*
          {
              !this.props.showAddForm
              ? <a className="btn btn-success btn-sm" onClick={this.addPopup}>{this.props.addButtonText}</a>
              : this.getAddForm()
          }
          */

      var addForm = null;
      if (this.props.canAdd || !this.props.noMutation) {
        addForm = !this.props.showAddForm ? _react2.default.createElement(
          "h4",
          null,
          _react2.default.createElement(
            "a",
            { onClick: this.addPopup },
            _react2.default.createElement("i", { className: "fa fa-plus left" }),
            this.props.addButtonText
          )
        ) : this.getAddForm();
      }

      // console.log("this.props.searchFormItem ", this.props.searchFormItem);
      // console.log("this.props.searchFormItem ", this.props.searchFormItem);
      // console.log("this.props.searchFormItem ", this.props.searchFormItem);
      // console.log("this.props.searchFormItem ", this.props.searchFormItem);
      // console.log("this.props.searchFormItem ", this.props.searchFormItem);

      var showFilter = this.props.hasResetFilter && this.state.hasFilter;
      var searchForm = null;
      var resetFilterView = showFilter ? _react2.default.createElement(
        "div",
        { className: "reset-filter" },
        _react2.default.createElement(
          "a",
          {
            onClick: function onClick() {
              _this9.resetFilter();
            }
          },
          _react2.default.createElement("i", { className: "fa fa-refresh left" }),
          "Reset Filter"
        )
      ) : null;

      if (this.props.searchFormItem) {
        if (this.props.searchFormNonPopup) {
          searchForm = _react2.default.createElement(
            "div",
            { className: "form-flex search-form-flex" },
            _react2.default.createElement(SearchForm, {
              formItem: this.props.searchFormItem,
              contentBottom: _react2.default.createElement(
                "div",
                { style: { marginTop: "7px" } },
                this.props.searchFormContentBottom,
                resetFilterView
              ),
              formOnSubmit: function formOnSubmit(d) {
                _this9.props.searchFormOnSubmit(d);
                _this9.onSuccessOperation("search");
                _this9.setState(function (prevState) {
                  return { hasFilter: true };
                });
              }
            })
          );
        } else {
          searchForm = _react2.default.createElement(
            "h4",
            null,
            _react2.default.createElement(
              "a",
              { onClick: this.searchPopup },
              _react2.default.createElement("i", { className: "fa fa-search left" }),
              "Filter Record"
            ),
            showFilter ? " | " : null,
            resetFilterView
          );
        }
      }

      return _react2.default.createElement(
        "div",
        null,
        this.props.dataTitle !== null ? _react2.default.createElement(
          "h2",
          null,
          this.props.dataTitle
        ) : null,
        addForm,
        searchForm,
        this.props.contentBelowFilter,
        _react2.default.createElement(
          "div",
          { style: { marginTop: "15px" } },
          datas
        )
      );
    }
  }]);

  return GeneralFormPage;
}(_react2.default.Component);

exports.default = GeneralFormPage;


GeneralFormPage.propTypes = {
  searchFormContentBottom: _propTypes2.default.object,
  searchFormNonPopup: _propTypes2.default.bool,
  hasResetFilter: _propTypes2.default.bool,
  contentBelowFilter: _propTypes2.default.obj,
  entity: _propTypes2.default.string.isRequired, // for table name
  entity_singular: _propTypes2.default.string.isRequired, // for display
  searchFormItem: _propTypes2.default.obj,
  searchFormOnSubmit: _propTypes2.default.func,
  loadData: _propTypes2.default.func.isRequired,
  addButtonText: _propTypes2.default.string.isRequired,
  renderRow: _propTypes2.default.func.isRequired,
  tableHeader: _propTypes2.default.element,
  dataTitle: _propTypes2.default.string.isRequired,
  getFormItem: _propTypes2.default.func,
  getFormItemAsync: _propTypes2.default.func,
  newFormDefault: _propTypes2.default.array.isRequired,
  getEditFormDefault: _propTypes2.default.func.isRequired,
  dataOffset: _propTypes2.default.number,
  formWillSubmit: _propTypes2.default.func,
  showAddForm: _propTypes2.default.bool,
  btnColorClass: _propTypes2.default.string,
  successAddHandler: _propTypes2.default.func,
  discardDiff: _propTypes2.default.array,
  forceDiff: _propTypes2.default.array,
  acceptEmpty: _propTypes2.default.array, // for edit, accept empty value.. used in auditorium
  actionFirst: _propTypes2.default.bool,
  noMutation: _propTypes2.default.bool, // disable add, edit and delete
  canEdit: _propTypes2.default.bool, // bypass noMutation
  canAdd: _propTypes2.default.bool, // bypass noMutation
  formOnly: _propTypes2.default.bool // formOnly
};

GeneralFormPage.defaultProps = {
  searchFormNonPopup: false,
  hasResetFilter: false,
  contentBelowFilter: null,
  searchFormItem: null,
  actionFirst: false,
  noMutation: false,
  canEdit: false,
  canAdd: false,
  dataOffset: 10,
  showAddForm: false,
  btnColorClass: "primary",
  discardDiff: [],
  forceDiff: [],
  acceptEmpty: [],
  formOnly: false,
  tableHeader: null
};

/////////////////////////////////////////////

var openEditPopup = exports.openEditPopup = function openEditPopup(id, entity, entity_singular, formItem, formDefault, willSubmit, onSuccess) {
  var closeOnSuccess = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;

  layoutActions.storeUpdateFocusCard("Editing " + entity_singular + " #" + id, GeneralForm, {
    forceDiff: [],
    dicardDiff: [],
    entity: entity,
    entity_singular: entity_singular,
    formItem: formItem,
    formDefault: formDefault,
    onSuccessNew: function onSuccessNew(d) {
      if (closeOnSuccess) {
        layoutActions.storeHideFocusCard();
      }
      onSuccess(d);
    },
    formWillSubmit: willSubmit,
    edit: formDefault
  });
};

var openDeletePopup = exports.openDeletePopup = function openDeletePopup(id, entity, onSuccess) {
  var closeOnSuccess = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  var onYes = function onYes() {
    var del_query = "mutation{delete_" + entity + "(ID:" + id + ")}";
    layoutActions.storeUpdateProps({ loading: true });
    (0, _apiHelper.getAxiosGraphQLQuery)(del_query).then(function (res) {
      if (closeOnSuccess) {
        layoutActions.storeHideFocusCard();
      }
      onSuccess(res);
    }, function (err) {
      alert(err.response.data);
    });
  };

  layoutActions.storeUpdateFocusCard("Confirm Delete Item", _confirmPopup2.default, { title: "Continue delete this item ?", onYes: onYes }, "small");
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.createUserMajorList = createUserMajorList;
exports.createVideoDropbox = createVideoDropbox;
exports.createUserDocLinkList = createUserDocLinkList;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _dataConfig = __webpack_require__(175);

var _appConfig = __webpack_require__(4);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _list = __webpack_require__(11);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _authActions = __webpack_require__(2);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _otherActions = __webpack_require__(30);

var _scheduledInterview = __webpack_require__(28);

var _gallery = __webpack_require__(125);

var _reactRouterDom = __webpack_require__(7);

var _scheduledInterview2 = __webpack_require__(28);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function createUserMajorList(major) {
  var r = null;

  try {
    r = "";
    major = JSON.parse(major);
    major.map(function (d, i) {
      if (i > 0) {
        r += ", ";
      }
      r += d;
    });
  } catch (err) {
    r = major;
  }

  return r;
}

function createVideoDropbox(url) {
  var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "100%";
  var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "200";

  return _react2.default.createElement(
    "video",
    { style: { background: "black" }, width: width, height: height, controls: true },
    _react2.default.createElement("source", { src: url, type: "video/mp4" })
  );
}
// isIconOnly will only consider label with label style set in DocLinkEnum
function createUserDocLinkList(doc_links, student_id) {
  var alignCenter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var isIconOnly = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var isSimple = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  var isSmall = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

  //document and link
  var ret = null;
  var onClickDocLink = function onClickDocLink() {
    (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_USER_DOC, student_id);
  };

  var dl = [];
  var doc_link = null;

  if (isIconOnly) {
    doc_links.map(function (d, i) {
      if (d == null) return;

      var style = _dbConfig.DocLinkEnum.LABEL_STYLE[d.label];
      if (style && dl.length < 4) {
        d.icon = style.icon;
        d.color = style.color;
        dl.push(d);
      }
    });
    ret = (0, _list.createIconLink)("sm", dl, alignCenter, onClickDocLink, "No Document Or Links Uploaded");
  } else if (isSimple) {
    ret = doc_links.map(function (d, i) {
      if (d == null) return;

      return _react2.default.createElement(
        "a",
        { target: "_blank", href: "" + d.url },
        d.label + " "
      );
    });
  } else {
    dl = doc_links.map(function (d, i) {
      if (d == null) return;

      var icon = d.type === _dbConfig.DocLinkEnum.TYPE_DOC ? "file-text" : "link";
      return _react2.default.createElement(
        "span",
        null,
        _react2.default.createElement("i", { className: "fa left fa-" + icon }),
        _react2.default.createElement(
          "a",
          { target: "_blank", href: "" + d.url },
          d.label + " "
        )
      );
    });
    ret = _react2.default.createElement(_list.CustomList, {
      className: "label",
      isSmall: isSmall,
      emptyMessage: "No Document Or Links Uploaded",
      alignCenter: alignCenter,
      items: dl,
      onClick: onClickDocLink
    });
  }

  return ret;
}

var UserPopup = function (_Component) {
  _inherits(UserPopup, _Component);

  function UserPopup(props) {
    _classCallCheck(this, UserPopup);

    var _this = _possibleConstructorReturn(this, (UserPopup.__proto__ || Object.getPrototypeOf(UserPopup)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.isSelfUser = false;
    _this.state = {
      data: null,
      loading: true
    };
    return _this;
  }

  _createClass(UserPopup, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      var id = null;

      if (this.props.match) {
        id = this.props.match.params.id;
      } else {
        id = this.props.id;
      }

      this.id = id;

      if (this.id == this.authUser.ID) {
        this.isSelfUser = true;
      }

      console.log("UserPage", "componentWillMount");
      var query = this.props.role === _dbConfig.UserEnum.ROLE_STUDENT ? "query {\n              user(ID:" + id + ") {\n                ID\n                user_email\n                img_url\n                img_pos\n                img_size\n                role\n                degree_level\n                first_name\n                last_name\n                country_study\n                university\n                qualification\n                graduation_month\n                graduation_year\n                working_availability_month\n                working_availability_year\n                grade\n                where_in_malaysia\n                phone_number\n                sponsor\n                description\n                skill {val}\n                extracurricular {val}\n                field_study {val}\n                looking_for_position {val}\n                interested_role {val}\n                interested_job_location {val}\n                doc_links{label url type}\n                video_resume {ID url}\n            }}" : "query {\n              user(ID:" + id + ") {\n                ID\n                user_email\n                first_name\n                last_name\n                description\n                role\n                img_url\n                img_pos\n                img_size\n                rec_position\n                rec_company\n                company{name}\n            }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.setState(function () {
          return { data: res.data.data.user, loading: false };
        });
      });
    }
  }, {
    key: "isValueEmpty",
    value: function isValueEmpty(val) {
      if (val == null || val == "") {
        return true;
      }

      if (Array.isArray(val) && val.length <= 0) {
        return true;
      }
      return false;
    }
  }, {
    key: "createListForMulti",
    value: function createListForMulti(arr) {
      var ret = [];

      for (var i in arr) {
        var v = arr[i].val;
        ret.push(v);
        ret.push(_react2.default.createElement("br", null));
      }
      return ret;
    }
  }, {
    key: "getBasicInfo",
    value: function getBasicInfo(d) {
      var notSpecifed = _react2.default.createElement(
        "small",
        null,
        _react2.default.createElement(
          "i",
          { className: "text-muted" },
          "Not Specified"
        )
      );

      var items = [{
        label: "Email",
        icon: "envelope",
        value: d.user_email
      }];

      if (d.role === _dbConfig.UserEnum.ROLE_RECRUITER) {
        if (d.company !== null) {
          items.push({
            label: "Company",
            icon: "suitcase",
            value: _react2.default.createElement(
              "a",
              {
                onClick: function onClick() {
                  return layoutActions.storeUpdateFocusCard(d.company.name, _companyPopup2.default, { id: d.rec_company });
                }
              },
              d.company.name
            )
          }, {
            label: "Position",
            icon: "black-tie",
            value: d.rec_position ? d.rec_position : _react2.default.createElement(
              "span",
              { className: "text-muted" },
              "Position Not Specified"
            )
          });
        } else {
          items.push({
            label: "Company",
            icon: "suitcase",
            value: _react2.default.createElement(
              "span",
              { className: "text-muted" },
              "No Company"
            )
          });
        }
      }

      if (d.role === _dbConfig.UserEnum.ROLE_STUDENT) {
        items.push({
          label: "Phone Number",
          icon: "phone",
          value: this.isValueEmpty(d.phone_number) ? notSpecifed : d.phone_number
        });

        // field_study --------------------------------
        // items.push({
        //   label: "Field Of Study",
        //   icon: "graduation-cap",
        //   value: this.isValueEmpty(d.field_study)
        //     ? notSpecifed
        //     : this.createListForMulti(d.field_study)
        // });

        items.push({
          label: "University",
          icon: "university",
          value: this.isValueEmpty(d.university) ? notSpecifed : d.university
        }, {
          label: "Expected Graduation",
          icon: "calendar",
          value: this.isValueEmpty(d.graduation_month) ? notSpecifed : d.graduation_month + " " + d.graduation_year
        }, {
          label: "Working Availability",
          icon: "calendar",
          value: this.isValueEmpty(d.working_availability_month) ? notSpecifed : d.working_availability_month + " " + d.working_availability_year
        }, {
          label: "Looking For",
          icon: "search",
          value: this.isValueEmpty(d.looking_for_position) ? notSpecifed : this.createListForMulti(d.looking_for_position)
        }, {
          label: "Grade / CGPA",
          icon: "book",
          value: this.isValueEmpty(d.grade) ? notSpecifed : d.grade
        }, {
          label: "City/State in Malaysia",
          icon: "map-marker",
          value: this.isValueEmpty(d.where_in_malaysia) ? notSpecifed : d.where_in_malaysia
        }
        // {
        //   label: "Work Availability Date",
        //   icon: "suitcase",
        //   value: this.getWorkAvailable(
        //     d.available_month,
        //     d.available_year,
        //     notSpecifed
        //   )
        // }
        );
      }

      return _react2.default.createElement(_list.CustomList, { className: "icon", items: items });
    }
  }, {
    key: "getWorkAvailable",
    value: function getWorkAvailable(m, y, notSpecifed) {
      if (m) {
        if (m == y) {
          return m;
        } else {
          return (0, _dataConfig.getMonthLabel)(m) + " " + y;
        }
      } else {
        return notSpecifed;
      }
    }
  }, {
    key: "getRecruiterBody",
    value: function getRecruiterBody(user) {
      //about
      var basic = this.getBasicInfo(user);
      var pcBody = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_pageSection2.default, { title: "About", body: basic })
      );

      return pcBody;
    }
  }, {
    key: "getTitle",
    value: function getTitle(label, icon) {
      return _react2.default.createElement(
        "span",
        null,
        _react2.default.createElement("i", { style: { marginRight: "10px" }, className: "fa fa-" + icon + " left" }),
        label
      );
    }
  }, {
    key: "getStudentBody",
    value: function getStudentBody(user) {
      var _this3 = this;

      //about
      var basic = this.getBasicInfo(user);

      //schedule interview jenis lama for pre screen maybe
      // only admin can access
      var si_btn = (0, _authActions.isRoleAdmin)() ? _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "a",
          {
            className: "btn btn-blue",
            onClick: function onClick() {
              (0, _scheduledInterview.openSIAddForm)(_this3.props.id, _this3.props.company_id, _dbConfig.PrescreenEnum.ST_PROFILE);
            }
          },
          _react2.default.createElement("i", { className: "fa fa-comments left" }),
          "Schedule For Session"
        )
      ) : null;

      var doc_link = createUserDocLinkList(user.doc_links, this.id, false);

      var field_study = _react2.default.createElement(_list.CustomList, {
        alignCenter: false,
        className: "label",
        items: user.field_study.map(function (d, i) {
          return d.val;
        })
      });

      var interested_role = _react2.default.createElement(_list.CustomList, {
        alignCenter: false,
        className: "label",
        items: user.interested_role.map(function (d, i) {
          return d.val;
        })
      });

      var skill = _react2.default.createElement(_list.CustomList, {
        alignCenter: false,
        className: "label",
        items: user.skill.map(function (d, i) {
          return d.val;
        })
      });

      var extracurricular = _react2.default.createElement(_list.CustomList, {
        alignCenter: false,
        className: "label",
        items: user.extracurricular.map(function (d, i) {
          return d.val;
        })
      });

      var interested_job_location = _react2.default.createElement(_list.CustomList, {
        alignCenter: false,
        className: "label",
        items: user.interested_job_location.map(function (d, i) {
          return d.val;
        })
      });

      var pageClassName = this.props.isSessionPage ? "" : "left";
      var leftBody = _react2.default.createElement(
        "div",
        null,
        si_btn,
        _react2.default.createElement(_pageSection2.default, {
          title: this.getTitle("About", "user"),
          className: pageClassName,
          body: basic
        }),
        _react2.default.createElement(_pageSection2.default, {
          alignCenter: false,
          className: pageClassName,
          title: this.getTitle("Field Of Study", "graduation-cap"),
          body: field_study
        }),
        _react2.default.createElement(_pageSection2.default, {
          className: pageClassName,
          title: this.getTitle("Skills", "star"),
          body: skill
        }),
        user.description != "" && user.description != null ? _react2.default.createElement(_pageSection2.default, {
          maxHeight: 143,
          className: pageClassName,
          title: this.getTitle("More Info", "info-circle"),
          body: _react2.default.createElement(
            "p",
            null,
            user.description
          )
        }) : null
      );
      var rightBody = _react2.default.createElement(
        "div",
        null,
        user.video_resume != null && user.video_resume.url ? _react2.default.createElement(_pageSection2.default, {
          className: pageClassName,
          title: this.getTitle("Video Resume", "youtube-play"),
          body: createVideoDropbox(user.video_resume.url)
        }) : null,
        _react2.default.createElement(_pageSection2.default, {
          className: pageClassName,
          title: this.getTitle("Attachments", "file-text"),
          body: doc_link
        }),
        _react2.default.createElement(_pageSection2.default, {
          className: pageClassName,
          title: this.getTitle("Interested Job Position", "suitcase"),
          body: interested_role
        }),
        _react2.default.createElement(_pageSection2.default, {
          className: pageClassName,
          title: this.getTitle("Interested Job Location", "map-marker"),
          body: interested_job_location
        }),
        _react2.default.createElement(_pageSection2.default, {
          className: pageClassName,
          title: this.getTitle("Organization / Extracurricular Activities", "podcast"),
          body: extracurricular
        })
      );

      if (this.props.isSessionPage) {
        return _react2.default.createElement(
          "div",
          null,
          leftBody,
          rightBody
        );
      } else {
        return {
          left: leftBody,
          right: rightBody
        };
      }
    }
  }, {
    key: "getBanner",
    value: function getBanner() {
      var data = this.state.data;
      data.banner_url = "";
      data.banner_position = "";
      data.banner_url = "";

      var isInvalid = function isInvalid(d) {
        if (typeof d === "undefined" || d == "" || d == null || d == "null") {
          return true;
        }

        return false;
      };

      data.banner_url = isInvalid(data.banner_url) ? _appConfig.ImgConfig.DefUserBanner : data.banner_url;
      var style = {
        backgroundImage: "url(" + data.banner_url + ")",
        backgroundSize: isInvalid(data.banner_size) ? "" : data.banner_size,
        backgroundPosition: isInvalid(data.banner_position) ? "center center" : data.banner_position
      };

      return _react2.default.createElement("div", { className: "fc-banner", style: style });
    }
  }, {
    key: "getDocLinks",
    value: function getDocLinks(doc_links) {
      if (doc_links.length <= 0) {
        return null;
      }

      var iframe = [];
      var link = [];

      // separate document and link
      for (var i in doc_links) {
        var item = doc_links[i];
        var isIframe = item.type == _dbConfig.DocLinkEnum.TYPE_DOC || item.url.containText("youtube");

        if (isIframe) {
          iframe.push(item);
        } else {
          link.push(item);
        }
      }

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_gallery.Gallery, { student_id: this.props.id, data: link, size: "lg" }),
        _react2.default.createElement("br", null),
        _react2.default.createElement(_gallery.Gallery, { student_id: this.props.id, data: iframe, size: "lg" })
      );
    }
  }, {
    key: "getStartChat",
    value: function getStartChat(user) {
      if (!(0, _authActions.isRoleRec)()) {
        return null;
      }
      return _react2.default.createElement(
        _reactRouterDom.NavLink,
        {
          style: { minWidth: "200px" },
          className: "btn btn-blue btn-lg",
          to: _appConfig.RootPath + "/app/student-chat/" + user.ID,
          onClick: function onClick(e) {
            layoutActions.storeHideFocusCard();
          }
        },
        _react2.default.createElement("i", { className: "fa fa-comments left" }),
        "Start Chat"
      );
    }
  }, {
    key: "getScheduleCall",
    value: function getScheduleCall(user) {
      var _this4 = this;

      if (!(0, _authActions.isRoleRec)()) {
        return null;
      }
      var canSchedule = _dbConfig.CompanyEnum.hasPriv(this.props.companyPrivs, _dbConfig.CompanyEnum.PRIV.SCHEDULE_PRIVATE_SESSION);

      var actionHandler = function actionHandler() {
        if (canSchedule) {
          var company_id = (0, _authActions.getAuthUser)().rec_company;
          (0, _scheduledInterview2.openSIFormAnytime)(_this4.props.id, company_id);
        } else {
          // EUR FIX
          // See Availability
          layoutActions.errorBlockLoader("Opps.. It seems that you don't have privilege to schedule private session yet");
        }
      };

      return _react2.default.createElement(
        "a",
        {
          style: { minWidth: "200px" },
          className: "btn btn-success btn-lg",
          onClick: function onClick(e) {
            actionHandler();
          }
        },
        _react2.default.createElement("i", { className: "fa fa-video-camera left" }),
        "Schedule Call"
      );
    }
  }, {
    key: "render",
    value: function render() {
      var id = null;
      var user = this.state.data;
      var view = null;
      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { size: "3", text: "Loading Student Information..." });
      } else {
        var userBody = this.props.role === _dbConfig.UserEnum.ROLE_STUDENT ? this.getStudentBody(user) : this.getRecruiterBody(user);

        var actionForRec = _react2.default.createElement(
          "div",
          { style: { marginTop: "10px", marginBottom: "18px" } },
          this.getStartChat(user),
          this.getScheduleCall(user)
        );

        var profilePic = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_profileCard2.default, {
            type: "student",
            title: _react2.default.createElement(
              "h3",
              null,
              user.first_name,
              _react2.default.createElement("br", null),
              _react2.default.createElement(
                "small",
                null,
                user.last_name
              )
            ),
            img_url: user.img_url,
            img_pos: user.img_pos,
            img_size: user.img_size,
            body: actionForRec
          })
        );

        if (this.props.role === _dbConfig.UserEnum.ROLE_STUDENT && !this.props.isSessionPage) {
          view = _react2.default.createElement(
            "div",
            null,
            this.getBanner(),
            _react2.default.createElement(
              "div",
              { className: "container-fluid" },
              _react2.default.createElement(
                "div",
                { className: "row" },
                _react2.default.createElement(
                  "div",
                  {
                    className: "col-md-12 com-pop-left",
                    style: { marginBottom: "-25px" }
                  },
                  _react2.default.createElement(
                    "div",
                    {
                      className: "com-pop-pic",
                      style: { textAlign: "center", marginTop: "-65px" }
                    },
                    profilePic
                  )
                ),
                _react2.default.createElement(
                  "div",
                  { className: "col-md-6" },
                  userBody.left
                ),
                _react2.default.createElement(
                  "div",
                  { className: "col-md-6" },
                  userBody.right
                )
              )
            )
          );
        } else {
          view = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(_profileCard2.default, {
              type: "student",
              title: user.first_name,
              subtitle: user.last_name,
              img_url: user.img_url,
              img_pos: user.img_pos,
              img_size: user.img_size,
              body: userBody
            })
          );
        }
      }

      return view;
    }
  }]);

  return UserPopup;
}(_react.Component);

exports.default = UserPopup;


UserPopup.propTypes = {
  id: _propTypes2.default.number.isRequired,
  role: _propTypes2.default.string,
  companyPrivs: _propTypes2.default.object,
  company_id: _propTypes2.default.number,
  isSessionPage: _propTypes2.default.bool
};

UserPopup.defaultProps = {
  role: _dbConfig.UserEnum.ROLE_STUDENT,
  isSessionPage: false
};

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Provider__ = __webpack_require__(423);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__connect_connect__ = __webpack_require__(427);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Provider", function() { return __WEBPACK_IMPORTED_MODULE_0__components_Provider__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "createProvider", function() { return __WEBPACK_IMPORTED_MODULE_0__components_Provider__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "connectAdvanced", function() { return __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return __WEBPACK_IMPORTED_MODULE_2__connect_connect__["a"]; });





/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__combineReducers__ = __webpack_require__(441);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__ = __webpack_require__(442);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__ = __webpack_require__(443);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compose__ = __webpack_require__(229);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_warning__ = __webpack_require__(228);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "createStore", function() { return __WEBPACK_IMPORTED_MODULE_0__createStore__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineReducers", function() { return __WEBPACK_IMPORTED_MODULE_1__combineReducers__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bindActionCreators", function() { return __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "applyMiddleware", function() { return __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return __WEBPACK_IMPORTED_MODULE_4__compose__["a"]; });







/*
* This is a dummy function to check if the function name has been altered by minification.
* If the function has been minified and NODE_ENV !== 'production', warn the user.
*/
function isCrushed() {}

if (false) {
  warning('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}



/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//importing for list


exports.createUserTitle = createUserTitle;
exports.createUserTitle2Line = createUserTitle2Line;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _buttons = __webpack_require__(15);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _authActions = __webpack_require__(2);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function createUserTitle(d) {
  var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  var hideEmail = arguments[2];
  var nameBreakLine = arguments[3];
  var otherPropForPopup = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  hideEmail = typeof hideEmail === "undefined" ? false : hideEmail;
  nameBreakLine = typeof nameBreakLine === "undefined" ? false : nameBreakLine;

  var name = "";
  if (nameBreakLine) {
    name = d.first_name + "<br><small>" + d.last_name + "</small>";
  } else {
    name = d.first_name + " " + d.last_name;
  }

  var focusedName = name.focusSubstring(search);
  focusedName = _react2.default.createElement("a", {
    onClick: function onClick() {
      layoutActions.storeUpdateFocusCard(name, _userPopup2.default, _extends({
        id: d.ID
      }, otherPropForPopup));
    },
    dangerouslySetInnerHTML: { __html: focusedName }
  });

  var focusedEmail = null;
  if (d.user_email) {
    focusedEmail = d.user_email.focusSubstring(search);
    focusedEmail = _react2.default.createElement(
      "span",
      null,
      _react2.default.createElement("span", { dangerouslySetInnerHTML: { __html: focusedEmail } })
    );
  }

  var v = null;
  if (hideEmail) {
    v = d.first_name ? focusedName : focusedEmail;
  } else {
    v = _react2.default.createElement(
      "span",
      null,
      focusedName,
      _react2.default.createElement("br", null),
      focusedEmail
    );
  }

  return v;
}

function createUserTitle2Line(d) {
  var nameBreakLine = true;
  return createUserTitle(d, "", undefined, nameBreakLine);
}

var UsersPage = function (_React$Component) {
  _inherits(UsersPage, _React$Component);

  function UsersPage(props) {
    _classCallCheck(this, UsersPage);

    return _possibleConstructorReturn(this, (UsersPage.__proto__ || Object.getPrototypeOf(UsersPage)).call(this, props));
  }

  _createClass(UsersPage, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      this.offset = 10;
      this.tableHeader = _react2.default.createElement(
        "thead",
        null,
        _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "th",
            null,
            "ID"
          ),
          _react2.default.createElement(
            "th",
            null,
            "CF"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Student"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Phone Number"
          ),
          _react2.default.createElement(
            "th",
            null,
            "University"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Major & Minor"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Registered At"
          )
        )
      );

      //##########################################
      //  search
      this.searchParams = "";
      this.search = {};
      this.searchFormItem = [{ header: "Enter Your Search Query" }, {
        label: "Find Student",
        name: "search_user",
        type: "text",
        placeholder: "Type student name or email"
      }, {
        label: "Find University",
        name: "search_university",
        type: "text",
        placeholder: "Iowa State University"
      }, {
        label: "Find Major / Minor",
        name: "search_degree",
        type: "text",
        placeholder: "Engineering"
      }];

      this.searchFormOnSubmit = function (d) {
        _this2.search = d;
        _this2.searchParams = "";
        if (d != null) {
          _this2.searchParams += d.search_user ? "search_user:\"" + d.search_user + "\"," : "";
          _this2.searchParams += d.search_university ? "search_university:\"" + d.search_university + "\"," : "";
          _this2.searchParams += d.search_degree ? "search_degree:\"" + d.search_degree + "\"," : "";
        }
      };

      this.loadData = function (page, offset) {
        return (0, _apiHelper.getAxiosGraphQLQuery)("\n            query{\n            users(" + _this2.searchParams + " role:\"student\", page:" + page + ", offset:" + offset + "){\n                ID\n                cf\n                user_email\n                first_name\n                last_name\n                phone_number\n                university\n                major\n                minor\n                user_registered \n            }\n        }");
      };

      this.renderRow = function (d, i) {
        var row = [];
        var dismiss = ["user_email", "last_name", "minor"];

        for (var key in d) {
          if (dismiss.indexOf(key) >= 0) {
            continue;
          }
          if (key == "first_name") {
            row.push(_react2.default.createElement(
              "td",
              null,
              createUserTitle(d, _this2.search.search_user)
            ));
          } else if (key == "major") {
            var degree = d.major + " " + d.minor;
            degree = degree.focusSubstring(_this2.search.search_degree);
            degree = _react2.default.createElement("span", { dangerouslySetInnerHTML: { __html: degree } });
            row.push(_react2.default.createElement(
              "td",
              null,
              degree
            ));
          } else if (key == "university") {
            if (d.university == null) {
              row.push(_react2.default.createElement("td", null));
              continue;
            }
            var university = d.university.focusSubstring(_this2.search.search_university);
            university = _react2.default.createElement("span", { dangerouslySetInnerHTML: { __html: university } });
            row.push(_react2.default.createElement(
              "td",
              null,
              university
            ));
          } else if (key == "user_registered") {
            row.push(_react2.default.createElement(
              "td",
              null,
              _time.Time.getString(d.user_registered)
            ));
          } else if (key == "cf" && d.cf.length > 1) {
            row.push(_react2.default.createElement(
              "td",
              null,
              JSON.stringify(d.cf)
            ));
          } else {
            row.push(_react2.default.createElement(
              "td",
              null,
              d[key]
            ));
          }
        }
        return row;
      };

      this.getDataFromRes = function (res) {
        return res.data.data.users;
      };
    }

    // <List type="table"
    // tableHeader={this.tableHeader}
    // getDataFromRes={this.getDataFromRes}
    // loadData={this.loadData}
    // offset={1}
    // renderList={this.renderList}></List>

  }, {
    key: "render",
    value: function render() {
      document.setTitle("Students");
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h3",
          null,
          "Students"
        ),
        _react2.default.createElement(
          "small",
          null,
          _react2.default.createElement(_buttons.ButtonExport, {
            text: "All Students",
            action: "students",
            filter: { cf: (0, _authActions.getCF)() }
          }),
          _react2.default.createElement(_buttons.ButtonExport, {
            text: "New And Returning Students",
            action: "students",
            filter: { cf: (0, _authActions.getCF)(), new_only: 1 }
          })
        ),
        _react2.default.createElement(_generalForm2.default, {
          entity_singular: "Student",
          dataTitle: this.dataTitle,
          noMutation: true,
          dataOffset: 20,
          searchFormItem: this.searchFormItem,
          searchFormOnSubmit: this.searchFormOnSubmit,
          tableHeader: this.tableHeader,
          renderRow: this.renderRow,
          getDataFromRes: this.getDataFromRes,
          loadData: this.loadData
        })
      );
    }
  }]);

  return UsersPage;
}(_react2.default.Component);

exports.default = UsersPage;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScheduledInterview = exports.isNormalSI = undefined;

var _ScheduledInterview$d;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.openSIFormNew = openSIFormNew;
exports.openSIFormAnytime = openSIFormAnytime;
exports.openSIAddForm = openSIAddForm;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _hallActions = __webpack_require__(21);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _appConfig = __webpack_require__(4);

var _time = __webpack_require__(9);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _scheduledInterviewNew = __webpack_require__(581);

var _scheduledInterviewNew2 = _interopRequireDefault(_scheduledInterviewNew);

var _users = __webpack_require__(27);

var _socketClient = __webpack_require__(17);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _userPopup = __webpack_require__(24);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Normal SI is limited to today for appmnt time
var isNormalSI = exports.isNormalSI = function isNormalSI(type) {
  var ar = [_dbConfig.PrescreenEnum.ST_INTV_REQUEST, _dbConfig.PrescreenEnum.ST_FORUM, _dbConfig.PrescreenEnum.ST_RESUME_DROP, _dbConfig.PrescreenEnum.ST_PROFILE];

  return ar.indexOf(type) >= 0;
};

function openSIFormNew(student_id, company_id) {
  layoutActions.storeUpdateFocusCard("Scheduled A Call", _scheduledInterviewNew2.default, {
    company_id: company_id,
    student_id: student_id
  });
}

// Create
function openSIFormAnytime(student_id, company_id) {
  if (!(student_id && (0, _authActions.isRoleAdmin)())) {
    if (!(student_id && company_id)) {
      layoutActions.errorBlockLoader("Something went wrong. Unable to open Schedule Session Form. Please contact our support and report this issue");
      return;
    }
  }

  var defaultFormItem = {};
  defaultFormItem[_dbConfig.Prescreen.SPECIAL_TYPE] = _dbConfig.PrescreenEnum.ST_NEW;
  defaultFormItem[_dbConfig.Prescreen.STUDENT_ID] = student_id;
  defaultFormItem[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM;

  //if (isNormalSI(type)) {
  var dt = _time.Time.getInputFromUnix(_time.Time.getUnixTimestampNow());
  defaultFormItem[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"] = dt.date;
  //}

  layoutActions.storeUpdateFocusCard("Add A New Scheduled Session", ScheduledInterview, {
    company_id: company_id,
    isFormStudentListing: true,
    isFormHidden: function isFormHidden(name) {
      var doHide = [_dbConfig.Prescreen.SPECIAL_TYPE, _dbConfig.Prescreen.STUDENT_ID, _dbConfig.Prescreen.STATUS];
      if (doHide.indexOf(name) >= 0) {
        return true;
      }

      return false;
    },
    formOnly: true,
    successAddHandlerExternal: function successAddHandlerExternal(data) {
      console.log("success", data);
    },
    defaultFormItem: defaultFormItem
  });
}

// Create Scheduled Interview 2
function openSIAddForm(student_id, company_id, type, success) {
  console.log("company_id", company_id);
  if (!(student_id && (0, _authActions.isRoleAdmin)())) {
    if (!(student_id && company_id)) {
      layoutActions.errorBlockLoader("Something went wrong. Unable to open Schedule Session Form. Please contact our support and report this issue");
      return;
    }
  }

  var defaultFormItem = {};
  defaultFormItem[_dbConfig.Prescreen.SPECIAL_TYPE] = type;
  defaultFormItem[_dbConfig.Prescreen.STUDENT_ID] = student_id;
  defaultFormItem[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_APPROVED;

  //if (isNormalSI(type)) {
  var dt = _time.Time.getInputFromUnix(_time.Time.getUnixTimestampNow());
  defaultFormItem[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"] = dt.date;
  //}

  layoutActions.storeUpdateFocusCard("Add A New Scheduled Session", ScheduledInterview, {
    company_id: company_id,
    formOnly: true,
    successAddHandlerExternal: success,
    defaultFormItem: defaultFormItem
  });
}

// included in my-activity for recruiter
// add as form only in past session in my-activity

var ScheduledInterview = exports.ScheduledInterview = function (_React$Component) {
  _inherits(ScheduledInterview, _React$Component);

  function ScheduledInterview(props) {
    _classCallCheck(this, ScheduledInterview);

    var _this = _possibleConstructorReturn(this, (ScheduledInterview.__proto__ || Object.getPrototypeOf(ScheduledInterview)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.search = {};
    return _this;
  }

  _createClass(ScheduledInterview, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      this.dataTitle = this.props.prescreen_only ? _react2.default.createElement(
        "span",
        null,
        "Pre-Screen",
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "small",
          null,
          "Click edit to set appointment time."
        )
      ) : _react2.default.createElement(
        "span",
        null,
        "Scheduled Session",
        _react2.default.createElement(_tooltip2.default, {
          left: "-62px",
          bottom: "28px",
          width: "150px",
          content: _react2.default.createElement(
            "small",
            null,
            " ",
            _react2.default.createElement("i", { className: "fa fa-question-circle" })
          ),
          tooltip: "Manage scheduled session from Next Round, Pre-Screen, Forum, Session Request and Resume Drop"
        })
      );

      this.successAddHandler = function (d) {
        if (_this2.props.formOnly) {
          var link = (0, _authActions.isRoleAdmin)() ? _appConfig.RootPath + "/app/manage-company/" + d.company_id + "/scheduled-interview" : _appConfig.RootPath + "/app/my-activity/scheduled-session";

          var mes = _react2.default.createElement(
            "div",
            null,
            "New Session Have Been Successfully Scheduled",
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              _reactRouterDom.NavLink,
              {
                onClick: function onClick() {
                  layoutActions.storeHideBlockLoader();
                },
                to: link
              },
              "Manage Scheduled Session"
            )
          );

          if (_this2.props.isFormStudentListing) {
            mes = _react2.default.createElement(
              "div",
              null,
              "New private call has been successfully scheduled. View call at",
              " ",
              _react2.default.createElement(
                _reactRouterDom.NavLink,
                {
                  onClick: function onClick() {
                    layoutActions.storeHideBlockLoader();
                  },
                  to: _appConfig.RootPath + "/app/"
                },
                "Home Page"
              ),
              " ",
              "under My Activity section."
            );
          }

          layoutActions.successBlockLoader(mes);

          if (_this2.props.successAddHandlerExternal) {
            _this2.props.successAddHandlerExternal(d);
          }

          // after success add scheduled interview
          // emit to student only
          // emit to reload scheduled interview
          (0, _socketClient.emitHallActivity)(_hallActions.ActivityType.PRESCREEN, d.student_id);
        }
      };

      //##########################################
      // render table
      this.renderRow = function (d) {
        return [_react2.default.createElement(
          "td",
          null,
          d.ID
        ), _react2.default.createElement(
          "td",
          null,
          (0, _users.createUserTitle)(d.student, _this2.search.student),
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "small",
            null,
            (0, _userPopup.createUserDocLinkList)(d.student.doc_links, d.student.ID, true, false, true)
          )
        ), _react2.default.createElement(
          "td",
          null,
          (0, _userPopup.createUserMajorList)(d.student.major)
        ), _react2.default.createElement(
          "td",
          null,
          (0, _userPopup.createUserMajorList)(d.student.minor)
        ), _react2.default.createElement(
          "td",
          null,
          d.student.university
        ), _react2.default.createElement(
          "td",
          null,
          d.status
        ), _react2.default.createElement(
          "td",
          null,
          _time.Time.getString(d[_dbConfig.Prescreen.APPNMENT_TIME])
        ),
        // <td>{d[Prescreen.IS_ONSITE_CALL]}</td>,
        _react2.default.createElement(
          "td",
          null,
          d.special_type
        ), _react2.default.createElement(
          "td",
          null,
          _time.Time.getString(d.updated_at)
        )];
      };

      this.tableHeader = _react2.default.createElement(
        "thead",
        null,
        _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "td",
            null,
            "#"
          ),
          _react2.default.createElement(
            "th",
            null,
            "ID"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Student"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Major"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Minor"
          ),
          _react2.default.createElement(
            "th",
            null,
            "University"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Status"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Appointment Time"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Is Onsite Call?"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Type"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Last Updated"
          )
        )
      );

      //##########################################
      //  search
      this.searchParams = "";
      this.searchFormItem = [{ header: "Enter Your Search Query" }, {
        label: "Find Student",
        name: "student",
        type: "text",
        placeholder: "Type student name or email"
      }, {
        label: "Find University",
        name: "university",
        type: "text",
        placeholder: "Type university name"
      }, {
        label: "Status",
        name: _dbConfig.Prescreen.STATUS,
        type: "select",
        data: ["ALL", _dbConfig.PrescreenEnum.STATUS_APPROVED, _dbConfig.PrescreenEnum.STATUS_PENDING, _dbConfig.PrescreenEnum.STATUS_DONE]
      }];

      if (!this.props.prescreen_only) {
        this.searchFormItem.push({
          label: "Type",
          name: _dbConfig.Prescreen.SPECIAL_TYPE,
          type: "select",
          data: ["ALL", _dbConfig.PrescreenEnum.ST_NEXT_ROUND, _dbConfig.PrescreenEnum.ST_FORUM, _dbConfig.PrescreenEnum.ST_PROFILE, _dbConfig.PrescreenEnum.ST_INTV_REQUEST, _dbConfig.PrescreenEnum.ST_RESUME_DROP]
        });
      }

      this.searchFormOnSubmit = function (d) {
        _this2.search = d;
        _this2.searchParams = "";
        if (d != null) {
          _this2.searchParams += d.student ? "student_name:\"" + d.student + "\"," : "";
          _this2.searchParams += d.student ? "student_email:\"" + d.student + "\"," : "";
          _this2.searchParams += d.university ? "student_university:\"" + d.university + "\"," : "";
          _this2.searchParams += d.special_type && d.special_type != "ALL" ? "special_type:\"" + d.special_type + "\"," : "";
          _this2.searchParams += d.status && d.status != "ALL" ? "status:\"" + d.status + "\"," : "";
        }
      };

      //##########################################
      //  loadData
      this.loadData = function (page, offset) {
        var st = _this2.props.prescreen_only ? "special_type:\"" + _dbConfig.PrescreenEnum.ST_PRE_SCREEN + "\"," : "not_prescreen:1";
        var query = "query{\n                prescreens(" + _this2.searchParams + " " + st + "\n                company_id:" + _this2.props.company_id + ",page:" + page + ", offset:" + offset + ",order_by:\"updated_at desc\") {\n                  ID\n                  status\n                  special_type\n                  \n                  appointment_time\n                  updated_at\n                  student{\n                    ID university major minor doc_links{url label}\n                    first_name last_name user_email\n                  }\n                }\n              }";
        //is_onsite_call
        console.log(query);
        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      // get actual data from loadData
      // can alter any data here too
      this.getDataFromRes = function (res) {
        var ps = res.data.data.prescreens;

        for (var i in ps) {
          var r = ps[i];
          if (r[_dbConfig.Prescreen.SPECIAL_TYPE] == null || r[_dbConfig.Prescreen.SPECIAL_TYPE] == "") {
            ps[i][_dbConfig.Prescreen.SPECIAL_TYPE] = _dbConfig.PrescreenEnum.ST_PRE_SCREEN;
          }
        }

        return ps;
      };

      //##########################################
      // form operation properties
      // hook before submit
      this.formWillSubmit = function (d, edit) {
        if (d.status == _dbConfig.PrescreenEnum.STATUS_PENDING) {
          if (d[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"] || d[_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"]) {
            return "For status Pending, appointment date and time must be blank. To set appointment time, set status to Approved";
          }
        }

        // if approved time cannot be null
        if (d.status == _dbConfig.PrescreenEnum.STATUS_APPROVED) {
          if (!d[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"] || !d[_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"]) {
            return "For status Approved, appointment date and time is needed";
          }
        }

        // there is no created_by column in this table,
        // malas nk tambah
        //udpated by for both create and update
        d[_dbConfig.Prescreen.UPDATED_BY] = (0, _authActions.getAuthUser)().ID;

        // convert to number
        if (typeof d[_dbConfig.Prescreen.STUDENT_ID] !== "undefined") {
          d[_dbConfig.Prescreen.STUDENT_ID] = Number.parseInt(d[_dbConfig.Prescreen.STUDENT_ID]);
        }
        // if (typeof d[Prescreen.IS_ONSITE_CALL] !== "undefined") {
        //   d[Prescreen.IS_ONSITE_CALL] = Number.parseInt(d[Prescreen.IS_ONSITE_CALL]);
        // }

        //for create new
        // kalau admin akan masukkan dalam d
        // if (!edit && !isRoleAdmin()) {
        if (!edit) {
          d[_dbConfig.Prescreen.COMPANY_ID] = _this2.props.company_id;
          d[_dbConfig.Prescreen.COMPANY_ID] = Number.parseInt(d[_dbConfig.Prescreen.COMPANY_ID]);
        }

        //for create new
        // if (!edit && isRoleAdmin()) {
        //   d[Prescreen.COMPANY_ID] = Number.parseInt(d[Prescreen.COMPANY_ID]);
        // }

        if (d.status == _dbConfig.PrescreenEnum.STATUS_PENDING) {
          d[_dbConfig.Prescreen.APPNMENT_TIME] = null;
        }
        // date time handling only for not pending only
        else if (d[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"] || d[_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"]) {
            d[_dbConfig.Prescreen.APPNMENT_TIME] = _time.Time.getUnixFromDateTimeInput(d[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"], d[_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"]);

            // appointment time must be bigger than current time
            if (_this2.props.isFormStudentListing) {
              if (d[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"] && d[_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"]) {
                if (_time.Time.getUnixTimestampNow() > d[_dbConfig.Prescreen.APPNMENT_TIME]) {
                  return _time.Time.getString(d[_dbConfig.Prescreen.APPNMENT_TIME]) + " is not a valid appointment time. Please choose appointment time later than current time.";
                }
              } else {
                return "Please fill in Appointment Time and Appointment Date";
              }
            }

            //appointment time must be only on the last day
            // if (!isRoleAdmin()) {
            //     var lastDay = Time.convertDBTimeToUnix(getCFObj().end);
            //     if (d[Prescreen.APPNMENT_TIME] < lastDay && d[Prescreen.SPECIAL_TYPE] == PrescreenEnum.ST_NEXT_ROUND) {
            //         return `Next Round interview only allowed to be scheduled on the last day of the Career Fair. Please change the appoinment date and time to be later than ${Time.getString(lastDay)}`;
            //     }
            // }
          }

        delete d[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"];
        delete d[_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"];

        return d;
      };

      // date time need to be forced diff
      this.forceDiff = [_dbConfig.Prescreen.APPNMENT_TIME + "_DATE", _dbConfig.Prescreen.APPNMENT_TIME + "_TIME", _dbConfig.Prescreen.SPECIAL_TYPE, _dbConfig.Prescreen.STATUS];

      this.getEditFormDefault = function (ID) {
        var query = "query{prescreen(ID:" + ID + "){\n                ID\n                student_id\n                status\n                special_type\n                appointment_time}}";

        //                is_onsite_call


        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var data = res.data.data.prescreen;
          // setup time
          if (data[_dbConfig.Prescreen.APPNMENT_TIME]) {
            var dt = _time.Time.getInputFromUnix(data[_dbConfig.Prescreen.APPNMENT_TIME]);
            data[_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"] = dt.date;
            data[_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"] = dt.time;
          }
          if (data[_dbConfig.Prescreen.SPECIAL_TYPE] == null) {
            data[_dbConfig.Prescreen.SPECIAL_TYPE] = _dbConfig.PrescreenEnum.ST_PRE_SCREEN;
          }

          return data;
        });
      };

      this.newFormDefault = this.props.defaultFormItem;

      // ni utk create from student listing
      this.getFormItem = function (edit) {
        var studentData = [{
          key: _this2.props.defaultFormItem[_dbConfig.Prescreen.STUDENT_ID],
          label: "This Student"
        }];
        var singleStudent = _this2.props.formOnly;
        return _this2.getFormData(edit, singleStudent, studentData, null);
      };

      // create form add new default
      this.getFormItemAsync = function (edit) {
        var singleStudent = _this2.props.formOnly;
        var studentId = _this2.props.defaultFormItem[_dbConfig.Prescreen.STUDENT_ID];
        var query = "";
        if (typeof studentId !== "undefined") {
          query = "query{user(ID:" + _this2.props.defaultFormItem[_dbConfig.Prescreen.STUDENT_ID] + ")\n                    {ID\n                    first_name\n                    last_name}}";
        } else {
          // this not really needed
          query = "query{prescreen(ID:1){ID}}";
        }

        /*
              var query = (!singleStudent)
                  ? // need  list of student for new
                  
                  :// for student only
                  `query{user(ID:${this.props.defaultFormItem[Prescreen.STUDENT_ID]})
                      {ID
                      first_name
                      last_name}}`;
              */

        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var isNormal = isNormalSI(_this2.props.defaultFormItem[_dbConfig.Prescreen.SPECIAL_TYPE]);
          var studentData = [];
          if (singleStudent) {
            var user = res.data.data.user;
            studentData = [{ key: user.ID, label: user.first_name + " " + user.last_name }];
          }

          if (_this2.props.company_id !== null) {
            return _this2.getFormData(edit, singleStudent, studentData, null);
          } else {
            var queryCompany = "query{\n                            companies{\n                              ID\n                              name\n                            }\n                          }";
            return (0, _apiHelper.getAxiosGraphQLQuery)(queryCompany).then(function (resCompany) {
              var com = resCompany.data.data.companies;
              var companyData = com.map(function (d, i) {
                return { key: d.ID, label: d.name };
              });
              return _this2.getFormData(edit, singleStudent, studentData, companyData);
            });
          }
        });
      };

      // kalau utk isFormStudentListing kita taknak load user or company info dulu
      if (this.props.isFormStudentListing === true) {
        this.getFormItemAsync = undefined;
      }
    }
  }, {
    key: "getFormData",
    value: function getFormData(edit, singleStudent, studentData, companyData) {
      var ret = [{ header: "Scheduled Session Form" }];

      // TODO
      if (companyData !== null) {
        ret.push({
          label: "Company",
          name: _dbConfig.Prescreen.COMPANY_ID,
          hidden: this.props.isFormHidden(_dbConfig.Prescreen.COMPANY_ID),
          type: "select",
          sublabel: "Company",
          required: true,
          disabled: !(0, _authActions.isRoleAdmin)() || companyData == null,
          data: companyData
        });
      }

      ret.push({
        label: "Type",
        name: _dbConfig.Prescreen.SPECIAL_TYPE,
        type: "select",
        sublabel: "Created From",
        required: true,
        hidden: this.props.isFormHidden(_dbConfig.Prescreen.SPECIAL_TYPE),
        disabled: edit || this.props.formOnly,
        data: ["", _dbConfig.PrescreenEnum.ST_NEW, _dbConfig.PrescreenEnum.ST_INTV_REQUEST, _dbConfig.PrescreenEnum.ST_RESUME_DROP, _dbConfig.PrescreenEnum.ST_NEXT_ROUND, _dbConfig.PrescreenEnum.ST_PROFILE, _dbConfig.PrescreenEnum.ST_FORUM, _dbConfig.PrescreenEnum.ST_PRE_SCREEN]
      });

      //for create only
      if (!edit && singleStudent) {
        ret.push.apply(ret, [{
          label: "Student",
          sublabel: "Only showing students that already had session with the company",
          name: _dbConfig.Prescreen.STUDENT_ID,
          hidden: this.props.isFormHidden(_dbConfig.Prescreen.STUDENT_ID),
          type: "select",
          data: studentData,
          required: true,
          disabled: this.props.formOnly
        }]);
      }

      ret.push.apply(ret, [{
        label: "Status",
        sublabel: "Only session with status 'Approved' will be shown in Career Fair page under Scheduled Session",
        name: _dbConfig.Prescreen.STATUS,
        hidden: this.props.isFormHidden(_dbConfig.Prescreen.STATUS),
        type: "select",
        required: true,
        disabled: this.props.formOnly,
        data: [_dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM, _dbConfig.PrescreenEnum.STATUS_REJECTED, _dbConfig.PrescreenEnum.STATUS_STARTED, _dbConfig.PrescreenEnum.STATUS_APPROVED, _dbConfig.PrescreenEnum.STATUS_PENDING, _dbConfig.PrescreenEnum.STATUS_DONE]
      },
      /*
      limit for today only
      {
          label: "Appointment Date",
          sublabel: <span>Please enter your local time
              {(isNormal)
                  ? <span><br></br>Date cannot be change</span>
                  : ""}
          </span>,
          name: Prescreen.APPNMENT_TIME + "_DATE",
          type: "date",
          placeholder: "",
          // for schedule interview must is disabled
          // set to todays date only
          disabled: isNormal,
      }, 
      */
      // {
      //   label: "Is On Site Call",
      //   name: Prescreen.IS_ONSITE_CALL,
      //   hidden: this.props.isFormHidden(Prescreen.IS_ONSITE_CALL),
      //   type: "select",
      //   data: [
      //     { key: "0", label: "No" },
      //     { key: "1", label: "Yes" }
      //   ]
      // },
      {
        label: "Appointment Date",
        sublabel: _react2.default.createElement(
          "span",
          null,
          "Please enter your local time"
        ),
        name: _dbConfig.Prescreen.APPNMENT_TIME + "_DATE",
        hidden: this.props.isFormHidden(_dbConfig.Prescreen.APPNMENT_TIME + "_DATE"),
        type: "date",
        placeholder: ""
      }, {
        label: "Appointment Time",
        sublabel: "Please enter your local time",
        name: _dbConfig.Prescreen.APPNMENT_TIME + "_TIME",
        hidden: this.props.isFormHidden(_dbConfig.Prescreen.APPNMENT_TIME + "_TIME"),
        type: "time",
        placeholder: ""
      }]);

      return ret;
    }
  }, {
    key: "render",
    value: function render() {
      var _React$createElement;

      return _react2.default.createElement(_generalForm2.default, (_React$createElement = {
        dataTitle: this.dataTitle,
        noMutation: true,
        actionFirst: true,
        canEdit: true,
        entity: "prescreen"
      }, _defineProperty(_React$createElement, "actionFirst", true), _defineProperty(_React$createElement, "entity_singular", "Scheduled Session"), _defineProperty(_React$createElement, "addButtonText", "Add New"), _defineProperty(_React$createElement, "noMutation", true), _defineProperty(_React$createElement, "canEdit", true), _defineProperty(_React$createElement, "dataOffset", 20), _defineProperty(_React$createElement, "searchFormItem", this.searchFormItem), _defineProperty(_React$createElement, "searchFormOnSubmit", this.searchFormOnSubmit), _defineProperty(_React$createElement, "forceDiff", this.forceDiff), _defineProperty(_React$createElement, "tableHeader", this.tableHeader), _defineProperty(_React$createElement, "newFormDefault", this.newFormDefault), _defineProperty(_React$createElement, "getEditFormDefault", this.getEditFormDefault), _defineProperty(_React$createElement, "getFormItem", this.getFormItem), _defineProperty(_React$createElement, "getFormItemAsync", this.getFormItemAsync), _defineProperty(_React$createElement, "renderRow", this.renderRow), _defineProperty(_React$createElement, "getDataFromRes", this.getDataFromRes), _defineProperty(_React$createElement, "loadData", this.loadData), _defineProperty(_React$createElement, "successAddHandler", this.successAddHandler), _defineProperty(_React$createElement, "formWillSubmit", this.formWillSubmit), _defineProperty(_React$createElement, "formOnly", this.props.formOnly), _React$createElement));
    }
  }]);

  return ScheduledInterview;
}(_react2.default.Component);

ScheduledInterview.PropTypes = {
  isFormStudentListing: _propTypes2.default.bool,
  isFormHidden: _propTypes2.default.func,
  company_id: _propTypes2.default.number.isRequired,
  prescreen_only: _propTypes2.default.bool,
  defaultFormItem: _propTypes2.default.object,
  successAddHandlerExternal: _propTypes2.default.func,
  formOnly: _propTypes2.default.bool // to create from past sessions list
};

ScheduledInterview.defaultProps = (_ScheduledInterview$d = {
  isFormStudentListing: false,
  isFormHidden: function isFormHidden(name) {
    return false;
  },
  prescreen_only: false,
  successAddHandlerExternal: false
}, _defineProperty(_ScheduledInterview$d, "prescreen_only", false), _defineProperty(_ScheduledInterview$d, "formOnly", false), _defineProperty(_ScheduledInterview$d, "defaultFormItem", {}), _ScheduledInterview$d);

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.addLog = addLog;
exports.getXLSUrl = getXLSUrl;

var _axios = __webpack_require__(89);

var _axios2 = _interopRequireDefault(_axios);

var _appConfig = __webpack_require__(4);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function addLog(event) {
    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var user_id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

    if (user_id == null) {
        user_id = (0, _authActions.getAuthUser)().ID;
    }

    if (_appConfig.TestUser.indexOf(user_id) >= 0) {
        //return;
    }

    if (data !== null && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === "object") {
        data = JSON.stringify(data);
    }

    return _axios2.default.post(_appConfig.AppConfig.Api + "/add-log", {
        event: event,
        data: data,
        user_id: user_id
    });
}

function getXLSUrl(action) {
    var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    var user = (0, _authActions.getAuthUser)();

    filter = filter == null ? "null" : JSON.stringify(filter);
    return _appConfig.SiteUrl + ('/xls/' + action + '/' + filter + '/' + user.user_pass + '/' + user.ID);
}

/***/ }),
/* 31 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isProd = "production" === "production";
var Port = 5000;
var Url = isProd ? "https://seedsjobfairapp.com/socket" : "http://localhost:" + Port;
//Url = "https://seedsjobfairapp.com/socket";
// both emit
// both on
var BOTH = {
    // admin stuff only
    STATE: "state",

    PROGRESS: "progress",

    CONNECTION: "connection",

    //live feed
    LIVE_FEED: "live_feed",

    // queue
    QUEUE_STATUS: "queue_status",

    // session
    CHAT_OPEN_CLOSE: "chat_open_close", //both -> {from_name,to_id,session_id}
    CHAT_MESSAGE: "chat_message", //both -> {from_id,to_id,message,time}

    // hall activity
    HALL_ACTIVITY: "hall_activity"
};

// server to client
// server emit
// client on
var S2C = {
    // user status .. store in user reducer
    ONLINE_USER: "online_user",

    // hall
    ONLINE_COMPANY: "online_company"

};

// client to server
// client emit
// server on
var C2S = {
    // first handshake
    JOIN: "join",

    // auto emit by socket disconnect
    DISCONNECT: "disconnect",

    LOGOUT: "logout"
};

var Event = {
    CONNECTION: "connection",
    ON_SEND_MESSAGE: "send_message",
    ON_JOIN: "join",
    ON_DISCONNECT: "disconnect",
    ON_OPEN_CHAT: "open_chat",
    SESSION_END: "session_end",

    DASHBOARD_NEWSFEED: "dashboard_newsfeed",

    NOTIFICATION: "notification",

    //trigger by start Queue and cancel Queue
    ON_IN_QUEUE: "in_queue_trigger",
    EMIT_IN_QUEUE: "in_queue_emit",

    // on-> expected data {other_id, entity},
    // emit-> to other id {entity},
    // the trigger to client when to query.
    CF_TRIGGER: "cf_trigger",

    EMIT_RECEIVED_MESSAGE: "receive_message",
    EMIT_OTHER_OFFLINE: "other_offline",
    EMIT_OTHER_ONLINE: "other_online",

    EMIT_ALL_ONLINE_USER: "all_online_user",
    EMIT_ALL_ONLINE_COMPANY: "all_online_company",

    //for rec view (home)
    // on-> expected data {student_id:status,....}
    // emit-> diff in same format.. if nothing changed, return empty object {}
    CF_STUDENT_STATUS: "cf_student_status",
    STATUS_ONLINE: 1,
    STATUS_OFFLINE: 0,

    //for admin
    LIVE_MONITOR: "live_monitor",
    HARD_RESET: "hard_reset",

    // data
    PAGE_SESSION: "session",
    PAGE_HOME: "home",

    ROLE_STUDENT: "student",
    ROLE_REC: "recruiter",

    TB_IN_QUEUE: "in_queues",
    TB_PRE_SCREEN: "pre_screens",
    TB_SESSION: "sesssions"
};

module.exports = { BOTH: BOTH, S2C: S2C, C2S: C2S, Port: Port, Url: Url };

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(166)('wks');
var uid = __webpack_require__(116);
var Symbol = __webpack_require__(31).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.store = undefined;

var _redux = __webpack_require__(26);

var _reduxThunk = __webpack_require__(449);

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _reduxLogger = __webpack_require__(450);

var _reduxPromiseMiddleware = __webpack_require__(451);

var _reduxPromiseMiddleware2 = _interopRequireDefault(_reduxPromiseMiddleware);

var _userReducer = __webpack_require__(453);

var _userReducer2 = _interopRequireDefault(_userReducer);

var _authReducer = __webpack_require__(508);

var _authReducer2 = _interopRequireDefault(_authReducer);

var _hallReducer = __webpack_require__(509);

var _hallReducer2 = _interopRequireDefault(_hallReducer);

var _layoutReducer = __webpack_require__(250);

var _layoutReducer2 = _interopRequireDefault(_layoutReducer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import generalReducer from "./reducer/general-reducer";


/* import all reducer */
var allReducers = {
	//general : generalReducer,
	user: _userReducer2.default,
	auth: _authReducer2.default,
	hall: _hallReducer2.default,
	layout: _layoutReducer2.default
};

var rootReducer = (0, _redux.combineReducers)(allReducers);

//somehow this order of middleware is important
var middleware = (0, _redux.applyMiddleware)((0, _reduxPromiseMiddleware2.default)(), _reduxThunk2.default, _reduxLogger.logger);

var store = exports.store = (0, _redux.createStore)(rootReducer, {}, middleware);

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(245);
var isBuffer = __webpack_require__(485);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _reactRouterDom = __webpack_require__(7);

var _apiHelper = __webpack_require__(3);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

var _dbConfig = __webpack_require__(5);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _socketClient = __webpack_require__(17);

var _appConfig = __webpack_require__(4);

var _vacancyPopup = __webpack_require__(121);

var _vacancyPopup2 = _interopRequireDefault(_vacancyPopup);

var _resumeDropPopup = __webpack_require__(286);

var _resumeDropPopup2 = _interopRequireDefault(_resumeDropPopup);

var _otherActions = __webpack_require__(30);

var _feedback = __webpack_require__(57);

var _groupSession = __webpack_require__(178);

var _gallery = __webpack_require__(125);

var _validationStudentAction = __webpack_require__(124);

var _validationStudentAction2 = _interopRequireDefault(_validationStudentAction);

var _actionBox = __webpack_require__(288);

var _actionBox2 = _interopRequireDefault(_actionBox);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// #################################################################
// #################################################################

var VacancyList = function (_React$Component) {
  _inherits(VacancyList, _React$Component);

  function VacancyList(props) {
    _classCallCheck(this, VacancyList);

    var _this = _possibleConstructorReturn(this, (VacancyList.__proto__ || Object.getPrototypeOf(VacancyList)).call(this, props));

    _this.loadData = _this.loadData.bind(_this);
    return _this;
  }

  _createClass(VacancyList, [{
    key: "loadData",
    value: function loadData(page, offset) {
      return (0, _apiHelper.getAxiosGraphQLQuery)("\n        query{\n            vacancies(company_id:" + this.props.company_id + ", page:" + page + ", offset:" + offset + "){\n                ID\n                title\n                type\n                description\n            }\n        }");
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      this.offset = 5;
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var param = { id: d.ID };
      var title = _react2.default.createElement(
        "a",
        {
          onClick: function onClick() {
            return layoutActions.storeUpdateFocusCard(d.title, _vacancyPopup2.default, param);
          }
        },
        d.title
      );
      return _react2.default.createElement(_list.SimpleListItem, {
        title: title,
        subtitle: d.type,
        body: d.description,
        key: i
      });
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      return res.data.data.vacancies;
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(_list2.default, {
        type: "list",
        pageClass: "text-center",
        getDataFromRes: this.getDataFromRes,
        loadData: this.loadData,
        offset: this.offset,
        renderList: this.renderList
      });
    }
  }]);

  return VacancyList;
}(_react2.default.Component);

VacancyList.propTypes = {
  company_id: _propTypes2.default.number.isRequired
};

// #####################################################################
// #####################################################################
// #####################################################################

var CompanyPopup = function (_Component) {
  _inherits(CompanyPopup, _Component);

  function CompanyPopup(props) {
    _classCallCheck(this, CompanyPopup);

    var _this2 = _possibleConstructorReturn(this, (CompanyPopup.__proto__ || Object.getPrototypeOf(CompanyPopup)).call(this, props));

    _this2.state = {
      qsLastSubmitted: Date.now(),
      data: null,
      loading: true,
      isHiddenValidation: true,
      keyValidation: 0
    };

    _this2.forum_id = "company_" + _this2.props.id;
    _this2.authUser = (0, _authActions.getAuthUser)();
    _this2.isRec = (0, _authActions.getAuthUser)().rec_company == _this2.props.id || (0, _authActions.isRoleAdmin)();
    _this2.FEEDBACK_LIMIT_SR = 3;

    _this2.getRecs = _this2.getRecs.bind(_this2);
    _this2.startQueue = _this2.startQueue.bind(_this2);
    _this2.addSessionRequest = _this2.addSessionRequest.bind(_this2);
    return _this2;
  }

  _createClass(CompanyPopup, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this3 = this;

      var id = null;

      if (this.props.match) {
        id = this.props.match.params.id;
      } else {
        id = this.props.id;
      }

      var logData = {
        id: Number.parseInt(id),
        location: window.location.pathname
      };
      (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_VISIT_COMPANY, JSON.stringify(logData), (0, _authActions.getAuthUser)().ID);

      var rec_query = this.props.displayOnly ? "" : "recruiters{\n            first_name\n            last_name\n            rec_position\n            img_url img_pos img_size\n        }";

      var query = "query {\n              company(ID:" + id + ") {\n                ID\n                name\n                tagline\n                description\n                status\n                group_url\n                img_url\n                img_position\n                img_size\n                banner_url\n                banner_position\n                banner_size\n                rec_privacy\n                doc_links{ID label url type}\n                more_info\n                " + rec_query + "\n                vacancies{\n                    ID\n                    title\n                    type\n                    description\n                }\n            }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this3.setState(function (prevState) {
          return { data: res.data.data.company, loading: false };
        });
      });
    }
  }, {
    key: "addSessionRequest",
    value: function addSessionRequest() {
      var _this4 = this;

      var stu_id = this.authUser.ID;
      var com_id = this.props.id;

      // first filter
      var invalid = activityActions.invalidSessionRequest(com_id);
      if (invalid !== false) {
        layoutActions.errorBlockLoader(invalid);
        return false;
      } else {
        layoutActions.loadingBlockLoader("Adding Request");

        // check for feedback
        var query = "query { has_feedback (user_id: " + stu_id + ") } ";
        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var has_feedback = res.data.data.has_feedback;
          var ttl_pending = activityActions.pendingSessionRequestCount(com_id);

          // if no feedback open popup
          if (ttl_pending >= _this4.FEEDBACK_LIMIT_SR && !has_feedback) {
            //layoutActions.storeUpdate("Feedback", getFeedbackPopupView());
            layoutActions.errorBlockLoader((0, _feedback.getFeedbackPopupView)(false));
          } else {
            // add session request
            activityActions.addSessionRequest(stu_id, com_id).then(function (res) {
              var mes = _react2.default.createElement(
                "div",
                null,
                "Successfully send interview request to",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "b",
                  null,
                  _this4.state.data.name
                ),
                _react2.default.createElement("br", null),
                "The request status will be shown under Interview Request"
              );

              (0, _socketClient.emitHallActivity)(hallAction.ActivityType.SESSION_REQUEST, null, com_id);

              layoutActions.successBlockLoader(mes);
              hallAction.storeLoadActivity([hallAction.ActivityType.SESSION_REQUEST]);
            }, function (err) {
              layoutActions.errorBlockLoader(err);
            });
          }
        });
      }
    }
  }, {
    key: "startQueue",
    value: function startQueue() {
      var _this5 = this;

      var stu_id = (0, _authActions.getAuthUser)().ID;
      var com_id = this.props.id;

      var invalid = activityActions.invalidQueue(com_id);
      if (invalid !== false) {
        layoutActions.errorBlockLoader(invalid);
        return false;
      }

      layoutActions.loadingBlockLoader("Start Queuing");

      activityActions.startQueue(stu_id, com_id).then(function (res) {
        var mes = _react2.default.createElement(
          "div",
          null,
          "Successfully joined queue for",
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "b",
            null,
            _this5.state.data.name
          ),
          _react2.default.createElement("br", null),
          "Your queue number is ",
          _react2.default.createElement(
            "b",
            null,
            res.queue_num
          )
        );

        (0, _socketClient.emitQueueStatus)(com_id, stu_id, "startQueue");
        (0, _socketClient.emitHallActivity)(hallAction.ActivityType.QUEUE, null, com_id);

        layoutActions.successBlockLoader(mes);
        hallAction.storeLoadActivity([hallAction.ActivityType.QUEUE]);
      }, function (err) {
        layoutActions.errorBlockLoader(err);
      });
    }
  }, {
    key: "getVacancies",
    value: function getVacancies(company_id) {
      return _react2.default.createElement(VacancyList, { company_id: company_id });
    }
  }, {
    key: "getRecs",
    value: function getRecs(list, rec_privacy) {
      if (list == null || typeof list == "undefined") {
        return null;
      }

      if (list.length === 0) {
        return _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "Nothing To Show Here"
        );
      }
      // console.log(rec_privacy);
      // console.log(this.isRec);
      if (rec_privacy && !this.isRec) {
        return _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "This information is private"
        );
      }

      var view = list.map(function (d, i) {
        var name = _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "Name Not Available"
        );
        if (d.first_name != "" && d.last_name != "") {
          name = _react2.default.createElement(
            "span",
            null,
            d.first_name,
            _react2.default.createElement(
              "small",
              null,
              " ",
              d.last_name
            )
          );
        }

        if (d.rec_position == null) {
          d.rec_position = _react2.default.createElement(
            "div",
            { className: "text-muted" },
            "Position Not Available"
          );
        }

        return _react2.default.createElement(_list.ProfileListItem, {
          title: name,
          img_url: d.img_url,
          img_pos: d.img_pos,
          img_size: d.img_size,
          subtitle: d.rec_position,
          type: "recruiter",
          key: i
        });
      });

      return _react2.default.createElement(
        "div",
        null,
        !rec_privacy ? null : _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "This information is private to others.",
          _react2.default.createElement("br", null)
        ),
        view
      );
    }
  }, {
    key: "joinGroupSessionOld",
    value: function joinGroupSessionOld(data) {
      if (data.group_url == "" || data.group_url == null) {
        layoutActions.errorBlockLoader("Group session has started. Please try again in a few minutes");
      } else {
        window.open(data.group_url, "_blank");
      }
    }
  }, {
    key: "getDocLinks",
    value: function getDocLinks(doc_links) {
      if (doc_links.length <= 0) {
        return null;
      }

      var iframe = [];
      var link = [];

      // separate document and link
      for (var i in doc_links) {
        var item = doc_links[i];
        //var isIframe = item.type == DocLinkEnum.TYPE_DOC || item.url.containText("youtube");
        var isIframe = (0, _gallery.isGalleryIframe)(item.type, item.url);

        if (isIframe) {
          iframe.push(item);
        } else {
          link.push(item);
        }
      }

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_gallery.Gallery, { company_id: this.props.id, data: link, size: "lg" }),
        _react2.default.createElement("br", null),
        _react2.default.createElement(_gallery.Gallery, { company_id: this.props.id, data: iframe, size: "lg" })
      );
    }
  }, {
    key: "getAskForum",
    value: function getAskForum() {
      return null;
    }
  }, {
    key: "getBanner",
    value: function getBanner() {
      var data = this.state.data;

      var isInvalid = function isInvalid(d) {
        if (typeof d === "undefined" || d == "" || d == null || d == "null") {
          return true;
        }

        return false;
      };

      data.banner_url = isInvalid(data.banner_url) ? _appConfig.ImgConfig.DefCompanyBanner : data.banner_url;
      var style = {
        backgroundImage: "url(" + data.banner_url + ")",
        backgroundSize: isInvalid(data.banner_size) ? "" : data.banner_size,
        backgroundPosition: isInvalid(data.banner_position) ? "center center" : data.banner_position
      };

      return _react2.default.createElement("div", { className: "fc-banner", style: style });
    }
  }, {
    key: "openResumeDrop",
    value: function openResumeDrop() {
      var data = this.state.data;
      layoutActions.storeUpdateFocusCard("Resume Drop - " + data.name, _resumeDropPopup2.default, { company_id: data.ID });
    }
  }, {
    key: "getStudentActionBox",
    value: function getStudentActionBox(data) {
      var _this6 = this;

      if (!(0, _authActions.isRoleStudent)() || this.props.displayOnly) {
        return null;
      }

      var qs_successView = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h3",
          { className: "text-success" },
          "Successfully Submitted Your Question"
        ),
        "See your posted question in",
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          _reactRouterDom.NavLink,
          {
            onClick: function onClick(e) {
              layoutActions.storeHideBlockLoader();
              layoutActions.storeHideFocusCard();
            },
            to: _appConfig.AppPath + ("/forum/" + this.forum_id)
          },
          "company forum"
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "button",
          {
            onClick: function onClick(e) {
              layoutActions.storeHideBlockLoader();
            },
            className: "btn btn-sm btn-blue"
          },
          "Got It!"
        )
      );

      var qs_onSubmit = function qs_onSubmit(data) {
        layoutActions.loadingBlockLoader("Submitting Your Question...");

        // todos insert to forum
        var ins = {
          user_id: (0, _authActions.getAuthUser)().ID,
          content: data,
          is_owner: 0,
          forum_id: _this6.forum_id
        };

        var query = "mutation{ add_forum_comment (" + (0, _graphqlObj2arg2.default)(ins, {
          noOuterBraces: true
        }) + ") { ID } }";
        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          _this6.setState(function (prevState) {
            return { qsLastSubmitted: Date.now() };
          });

          layoutActions.customViewBlockLoader(null, qs_successView);
        });
      };

      var btn_onClickResume = function btn_onClickResume() {
        _this6.setState(function (prevState) {
          return {
            isHiddenValidation: false,
            keyValidation: new Date().getTime()
          };
        });
      };

      return _react2.default.createElement(
        "div",
        { className: "row", style: { marginTop: "15px" } },
        _react2.default.createElement(
          "div",
          { className: "col-md-6" },
          _react2.default.createElement(_actionBox2.default, {
            key: this.state.qsLastSubmitted,
            title: "Ask Us A Question",
            isQuestion: true,
            qs_onSubmit: qs_onSubmit
          })
        ),
        _react2.default.createElement(
          "div",
          { className: "col-md-6" },
          _react2.default.createElement(_actionBox2.default, {
            title: "Drop Your Resume",
            isButton: true,
            btn_onClick: btn_onClickResume
          })
        )
      );
    }
    // getStudentAction(data) {
    //   // tukar action kepada button
    //   const onClickResume = () => {
    //     this.setState(prevState => {
    //       return {
    //         isHiddenValidation: false,
    //         keyValidation: new Date().getTime()
    //       };
    //     });
    //   };
    //   var action =
    //     !isRoleStudent() || this.props.displayOnly ? null : (
    //       <div>
    //         <button className="btn btn-blue btn-block" onClick={onClickResume}>
    //           <i className="fa fa-download left" />
    //           Drop Your Resume
    //         </button>
    //         <NavLink
    //           to={`${RootPath}/app/forum/company_${data.ID}`}
    //           onClick={() => {
    //             layoutActions.storeHideFocusCard();
    //           }}
    //           className="btn btn-primary btn-block"
    //         >
    //           <i className="fa fa-comments left" />
    //           Ask A Question
    //         </NavLink>
    //       </div>
    //     );

    //   return action;
    // }

  }, {
    key: "render",
    value: function render() {
      var _this7 = this;

      var id = null;
      var data = this.state.data;
      var view = null;

      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { size: "3", text: "Loading Company Information..." });
      } else {
        var vacancies = this.getVacancies(data.ID);
        var recs = this.getRecs(data.recruiters, data.rec_privacy);
        var doc_link = this.getDocLinks(data.doc_links);
        var askForum = this.getAskForum();

        // ##################################################################################
        // for group session

        var gSession = !(0, _authActions.isRoleStudent)() || this.props.displayOnly ? null : _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_groupSession.GroupSessionView, {
            forStudent: true,
            company_id: this.props.id,
            user_id: this.authUser.ID
          })
        );

        // ##################################################################################
        // for action

        //var action = this.getStudentAction(data);
        var actionBox = this.getStudentActionBox(data);

        // ##################################################################################
        // create body

        // var pcBody = <div>
        //     <div>
        //         {(data.description == "") ? null : <PageSection canToggle={this.props.canToggle} className="left" title="About" body={<p>{data.description}</p>}></PageSection>}
        //         <PageSection canToggle={this.props.canToggle} initShow={true} className="left" title="Job Opportunities" body={vacancies}></PageSection>
        //         <PageSection canToggle={this.props.canToggle} className="left" title="Document & Link" body={doc_link}></PageSection>
        //         {(data.more_info == "") ? null : <PageSection canToggle={this.props.canToggle} className="left" title="Additional Information" body={<p>{data.more_info}</p>}></PageSection>}
        //         {(recs === null) ? null : <PageSection canToggle={this.props.canToggle} className="left" title="Recruiters" body={recs}></PageSection>}
        //     </div>
        //     {action}
        //     {gSession}
        //     {(this.props.displayOnly) ? null :
        //         <div>
        //             <br></br>
        //             <a onClick={layoutActions.storeHideFocusCard}>Close</a>
        //         </div>
        //     }
        // </div>;

        // view = <div>
        //     <ProfileCard type="company"
        //         title={data.name} subtitle={data.tagline}
        //         img_url={data.img_url} img_pos={data.img_position} img_size={data.img_size}
        //         body={pcBody}></ProfileCard>
        // </div>;

        //
        var profilePic = _react2.default.createElement(_profileCard2.default, {
          type: "company",
          img_dimension: "130px",
          img_url: data.img_url,
          img_pos: data.img_position,
          img_size: data.img_size,
          title: _react2.default.createElement(
            "h3",
            null,
            data.name
          ),
          subtitle: data.tagline,
          body: null
        });

        // var rightBody = (
        //   <div>
        //     {action}
        //     <hr />
        //     {gSession}
        //   </div>
        // );

        var forumLink = _react2.default.createElement(
          _reactRouterDom.NavLink,
          {
            onClick: function onClick(e) {
              layoutActions.storeHideBlockLoader();
              layoutActions.storeHideFocusCard();
            },
            to: _appConfig.AppPath + ("/forum/" + this.forum_id)
          },
          _react2.default.createElement(
            "small",
            null,
            "Go To Company Forum"
          )
        );

        var rightBody = _react2.default.createElement(
          "div",
          null,
          gSession,
          _react2.default.createElement("hr", null),
          this.props.displayOnly ? null : forumLink
        );

        var maxHeight = 143;
        var leftBody = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "div",
            null,
            actionBox,
            askForum == null ? null : _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              className: "left",
              title: "Ask Us Anything",
              body: askForum
            }),
            doc_link == null ? null : _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              className: "left",
              title: "Gallery",
              body: doc_link
            }),
            data.description == "" ? null : _react2.default.createElement(_pageSection2.default, {
              maxHeight: maxHeight,
              canToggle: this.props.canToggle,
              className: "left",
              title: "About",
              body: _react2.default.createElement(
                "p",
                null,
                data.description
              )
            }),
            _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              initShow: true,
              className: "left",
              title: "Job Details",
              body: vacancies
            }),
            data.more_info == "" ? null : _react2.default.createElement(_pageSection2.default, {
              maxHeight: maxHeight,
              canToggle: this.props.canToggle,
              className: "left",
              title: "Additional Information",
              body: _react2.default.createElement(
                "p",
                null,
                data.more_info
              )
            }),
            recs === null ? null : _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              className: "left",
              title: "Recruiters",
              body: recs
            })
          )
        );

        view = this.props.displayOnly ? _react2.default.createElement(
          "div",
          null,
          profilePic,
          rightBody,
          leftBody
        ) : _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_validationStudentAction2.default, {
            source: _validationStudentAction.ValidationSource.DROP_RESUME,
            key: this.state.keyValidation,
            isHidden: this.state.isHiddenValidation,
            successHandler: function successHandler() {
              return _this7.openResumeDrop();
            }
          }),
          _react2.default.createElement(
            "div",
            { className: "container-fluid" },
            _react2.default.createElement(
              "div",
              { className: "row" },
              _react2.default.createElement(
                "div",
                { className: "col-md-3 com-pop-left" },
                _react2.default.createElement(
                  "div",
                  { className: "com-pop-pic" },
                  profilePic
                ),
                rightBody
              ),
              _react2.default.createElement(
                "div",
                { className: "col-md-9" },
                leftBody
              )
            ),
            _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement("br", null),
              _react2.default.createElement(
                "a",
                { onClick: layoutActions.storeHideFocusCard },
                "Close"
              )
            )
          ),
          this.getBanner()
        );
      }

      return view;
    }
  }]);

  return CompanyPopup;
}(_react.Component);

exports.default = CompanyPopup;


CompanyPopup.propTypes = {
  id: _propTypes2.default.number.isRequired,
  displayOnly: _propTypes2.default.bool, // set true in session
  canToggle: _propTypes2.default.bool, // set true in session
  isPreEvent: _propTypes2.default.bool
};

CompanyPopup.defaultProps = {
  displayOnly: false,
  isPreEvent: false
};

/***/ }),
/* 37 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if (false) {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14),
    _assign = __webpack_require__(18);

var CallbackQueue = __webpack_require__(196);
var PooledClass = __webpack_require__(58);
var ReactFeatureFlags = __webpack_require__(197);
var ReactReconciler = __webpack_require__(71);
var Transaction = __webpack_require__(100);

var invariant = __webpack_require__(10);

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + 'updates are not being batched.');
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _InitFacebook = __webpack_require__(172);

var _InitFacebook2 = _interopRequireDefault(_InitFacebook);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Parser = (_temp2 = _class = function (_Component) {
  (0, _inherits3.default)(Parser, _Component);

  function Parser() {
    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Parser);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleFacebookReady = function (facebook) {
      _this.facebook = facebook;
      _this.parse();
    }, _this.handleContainer = function (container) {
      _this.container = container;
      _this.parse();
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  Parser.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
    return false;
  };

  Parser.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    var oldChildren = this.props.children;
    var children = props.children;


    if (!children || !oldChildren) {
      return;
    }

    var changed = Object.keys(oldChildren.props).find(function (propName) {
      var oldValue = oldChildren.props[propName];
      var newValue = children.props[propName];

      return oldValue !== newValue;
    });

    if (changed) {
      this.rerender();
    }
  };

  Parser.prototype.rerender = function rerender() {
    this.forceUpdate();

    this.parsed = false;
    this.parse();
  };

  Parser.prototype.parse = function parse() {
    var parsed = this.parsed,
        container = this.container,
        facebook = this.facebook;

    if (parsed || !container || !facebook) {
      return false;
    }

    this.parsed = true;

    var parseResponse = facebook.parse(container);

    var onParse = this.props.onParse;

    if (onParse) {
      onParse(parseResponse);
    }

    return parseResponse;
  };

  Parser.prototype.render = function render() {
    var _props = this.props,
        className = _props.className,
        children = _props.children;


    return _react2.default.createElement(
      _InitFacebook2.default,
      { onReady: this.handleFacebookReady },
      _react2.default.createElement(
        'div',
        { className: className, ref: this.handleContainer },
        children
      )
    );
  };

  return Parser;
}(_react.Component), _class.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node.isRequired,
  onParse: _propTypes2.default.func
}, _class.defaultProps = {
  className: undefined,
  onParse: undefined
}, _temp2);
exports.default = Parser;
//# sourceMappingURL=Parser.js.map

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//importing for list


exports.isGruveoLink = isGruveoLink;
exports.isDailyCoLink = isDailyCoLink;
exports.addLogCreateCall = addLogCreateCall;
exports.createGruveoLink = createGruveoLink;
exports.joinVideoCall = joinVideoCall;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _loader = __webpack_require__(8);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _navigation = __webpack_require__(254);

var Navigation = _interopRequireWildcard(_navigation);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _appConfig = __webpack_require__(4);

var _time = __webpack_require__(9);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _authActions = __webpack_require__(2);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _userActions = __webpack_require__(51);

var _otherActions = __webpack_require__(30);

var _dbConfig = __webpack_require__(5);

var _reactRedux = __webpack_require__(25);

var _socketConfig = __webpack_require__(32);

var _socketClient = __webpack_require__(17);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import { ButtonLink } from '../../../component/buttons.jsx';
//import UserPopup from '../popup/user-popup';
//import { Redirect, NavLink } from 'react-router-dom';

// require("../../../css/chat.scss");

// New Gruveo
function isGruveoLink(join_url) {
  var isGruveo = join_url.indexOf("video-call?room_code") >= 0;
  return isGruveo;
}

function isDailyCoLink(join_url) {
  var isDailyCo = join_url.indexOf("daily.co") >= 0;
  return isDailyCo;
}

function addLogCreateCall(_ref) {
  var isDailyCo = _ref.isDailyCo,
      isZoom = _ref.isZoom,
      isGruveo = _ref.isGruveo,
      pre_screen_id = _ref.pre_screen_id,
      session_id = _ref.session_id,
      group_session_id = _ref.group_session_id,
      url = _ref.url;

  var log = null;
  var param = {};

  if (isGruveo == true) {
    log = _dbConfig.LogEnum.EVENT_CALL_GRUVEO;
  } else if (isZoom == true) {
    log = _dbConfig.LogEnum.EVENT_CALL_ZOOM;
  } else if (isDailyCo == true) {
    log = _dbConfig.LogEnum.EVENT_CALL_DAILY_CO;
  }

  if (typeof pre_screen_id !== "undefined") {
    param.pre_screen_id = pre_screen_id;
  }

  if (typeof session_id !== "undefined") {
    param.session_id = session_id;
  }

  if (typeof group_session_id !== "undefined") {
    param.group_session_id = group_session_id;
  }

  // for gruveo and daily co
  if (typeof url !== "undefined") {
    param.url = url;
  }

  if (log != null) {
    (0, _otherActions.addLog)(log, param);
  }
}

// New Gruveo
function createGruveoLink(id, isGroupSession) {
  isGroupSession = typeof isGroupSession === "undefined" ? false : isGroupSession;

  var date = new Date();
  var timestamp = date.getTime();
  var room_code = "sjf" + timestamp + (isGroupSession ? "gsid" : "sid") + id;
  var toRet = _appConfig.SiteUrl + "/video-call?room_code=" + room_code;
  return toRet;
}

function joinVideoCall(join_url, session_id) {
  var expiredHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var group_session_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var pre_screen_id = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
  var start_url = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;

  (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_JOIN_VIDEO_CALL, {
    pre_screen_id: pre_screen_id,
    group_session_id: group_session_id,
    session_id: session_id,
    join_url: join_url
  });

  var isJoin = false;
  var windowPopup = null;
  var windowId = "zoom_" + Date.now();
  var windowParam = "scrollbars=no,resizable=no,status=no,location=no, toolbar=no,menubar=no,\n                width=600,height=400,left=100,top=100";
  if (start_url != null) {
    windowPopup = window.open(start_url, windowId, windowParam);
  } else {
    isJoin = true;
    windowPopup = window.open(join_url, windowId, windowParam);
  }
  if (isGruveoLink(join_url) || isDailyCoLink(join_url)) {
    return;
  }

  // #####################################################
  // start post join action
  layoutActions.loadingBlockLoader("Please Wait..");
  var loaded = 0;
  var toLoad = isJoin ? 2 : 1;
  var hasError = false;
  var closeBlockLoader = function closeBlockLoader() {
    loaded++;
    if (loaded >= toLoad && !hasError) {
      layoutActions.storeHideBlockLoader();
    }
  };

  // 0. prepare data for zoom_ajax request
  var data = {
    join_url: join_url
  };
  if (pre_screen_id !== null) {
    data.pre_screen_id = pre_screen_id;
  }
  if (session_id !== null) {
    data.session_id = session_id;
  }
  if (group_session_id !== null) {
    data.group_session_id = group_session_id;
  }

  // 1. check if expired
  var successInterceptorExpired = function successInterceptorExpired(data) {
    if (data == 1) {
      windowPopup.close();
      layoutActions.errorBlockLoader("This Video Call Session Has Expired.");
      hasError = true;
      if (expiredHandler != null) {
        expiredHandler();
      }
    } else {
      closeBlockLoader();
    }
  };
  (0, _apiHelper.getWpAjaxAxios)("wzs21_zoom_ajax", _extends({
    query: "is_meeting_expired"
  }, data), successInterceptorExpired, true);

  // 2. check if recruiter not ready
  if (isJoin) {
    var successInterceptorStatus = function successInterceptorStatus(data) {
      var recNotReady = false;
      if (data.status == 0 && typeof data.error === "undefined") {
        recNotReady = true;
      }
      if (recNotReady) {
        windowPopup.close();
        layoutActions.errorBlockLoader("Recruiter is not ready yet. Please try again in a few minutes");
        hasError = true;
      } else {
        closeBlockLoader();
      }
    };
    (0, _apiHelper.getWpAjaxAxios)("wzs21_zoom_ajax", _extends({
      query: "get_meeting_status"
    }, data), successInterceptorStatus, true);
  }
}

var Chat = function (_React$Component) {
  _inherits(Chat, _React$Component);

  function Chat(props) {
    _classCallCheck(this, Chat);

    var _this = _possibleConstructorReturn(this, (Chat.__proto__ || Object.getPrototypeOf(Chat)).call(this, props));

    _this.loadData = _this.loadData.bind(_this);
    _this.parseMessage = _this.parseMessage.bind(_this);
    _this.createMessageJSON = _this.createMessageJSON.bind(_this);
    _this.parseMessageJSON = _this.parseMessageJSON.bind(_this);
    _this.parseMessageHTML = _this.parseMessageHTML.bind(_this);
    _this.createVideoCall = _this.createVideoCall.bind(_this);
    _this.getStartVideoCallForm = _this.getStartVideoCallForm.bind(_this);
    _this.inviteForPanelInterview = _this.inviteForPanelInterview.bind(_this);

    _this.renderList = _this.renderList.bind(_this);
    _this.componentDidUpdateList = _this.componentDidUpdateList.bind(_this);
    _this.getChatInput = _this.getChatInput.bind(_this);
    _this.getChatHeader = _this.getChatHeader.bind(_this);
    _this.addChatToView = _this.addChatToView.bind(_this);
    _this.sendChat = _this.sendChat.bind(_this);

    _this.state = {
      extraData: []
    };

    _this.updateHasRead = false;
    _this.currentDateList = null;
    _this.currentDateExtra = null;

    _this.MESSAGE_JSON = "MESSAGE_JSON";
    _this.MESSAGE_HTML = "MESSAGE_HTML";

    _this.JSON_ZOOM = "ZOOM";
    _this.unmounted = false;
    return _this;
  }

  _createClass(Chat, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // console.log("componentWillUnmount", this.props.other_data.first_name +" "+ this.props.other_data.last_name)
      // console.log("componentWillUnmount", this.props.other_data.first_name +" "+ this.props.other_data.last_name)
      // console.log("componentWillUnmount", this.props.other_data.first_name +" "+ this.props.other_data.last_name)
      // console.log("componentWillUnmount", this.props.other_data.first_name +" "+ this.props.other_data.last_name)

      this.unmounted = true;
      // socketOff(BOTH.CHAT_MESSAGE);
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      this.offset = 20;

      (0, _socketClient.socketOn)(_socketConfig.BOTH.CHAT_MESSAGE, function (data) {
        if (Navigation.isPageMyInbox()) {
          // console.log("this.props", this.props.other_data.first_name +" "+ this.props.other_data.last_name)
          // console.log("this.unmounted",this.unmounted)
          // console.log("this.props", this.props.other_data.first_name +" "+ this.props.other_data.last_name)
          // console.log("this.props", this.props.other_data.first_name +" "+ this.props.other_data.last_name)
          // console.log("this.props.other_id",this.props.other_id);
          // console.log("data.from_id",data.from_id);
          if (_this2.props.other_id == data.from_id && !_this2.unmounted) {
            // console.log("update done");
            // console.log("update done");
            _this2.addChatToView(data.from_id, data.message, data.created_at, 0, data.id_message_number);
          }
        }
      });
    }
  }, {
    key: "parseMessage",
    value: function parseMessage(message) {
      var parsed = false;

      if (parsed == false) {
        parsed = this.parseMessageHTML(message);
      }

      if (parsed == false) {
        parsed = this.parseMessageJSON(message);
      }

      if (parsed == false) {
        parsed = message;
      }

      return parsed;
    }

    // to detect html from previous app
    // onclick="chatActionTrigger

  }, {
    key: "parseMessageHTML",
    value: function parseMessageHTML(message) {
      if (message.indexOf(this.MESSAGE_HTML) >= 0 || message.indexOf("onclick=\"chatActionTrigger") >= 0) {
        return _react2.default.createElement("div", { dangerouslySetInnerHTML: { __html: message } });
      } else {
        return false;
      }
    }
  }, {
    key: "parseMessageJSON",
    value: function parseMessageJSON(message) {
      var _this3 = this;

      if (message.indexOf(this.MESSAGE_JSON) >= 0) {
        var mesData = message.replace(this.MESSAGE_JSON, "");
        try {
          mesData = JSON.parse(mesData);
          console.log("parseMessageJSON", mesData);
          if (mesData.type == this.JSON_ZOOM) {
            // console.log(mesData);
            // do something with mesData
            return _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement(
                "small",
                null,
                "[AUTO MESSAGE]"
              ),
              _react2.default.createElement("br", null),
              "I have created a video call session.",
              _react2.default.createElement(
                "div",
                { style: { margin: "7px 0" } },
                _react2.default.createElement(
                  "div",
                  {
                    className: (this.props.isRec ? "btn-blue" : "btn-default") + " btn btn-block btn-sm",
                    onClick: function onClick() {
                      joinVideoCall(mesData.data.join_url, _this3.props.session_id);
                    }
                  },
                  "Join Now"
                )
              )
            );
          } else {
            return JSON.stringify(mesData);
          }
        } catch (err) {
          return false;
        }
      }

      return false;
    }
  }, {
    key: "createMessageJSON",
    value: function createMessageJSON(type, data) {
      var am = {
        type: type,
        data: data
      };
      return this.MESSAGE_JSON + JSON.stringify(am);
    }
  }, {
    key: "isSelfCompany",
    value: function isSelfCompany() {
      return this.props.is_company_self;
    }
  }, {
    key: "isOtherCompany",
    value: function isOtherCompany() {
      return this.props.is_company_other;
    }
  }, {
    key: "getWhichCompany",
    value: function getWhichCompany(selfKey, otherKey) {
      if (this.props.is_company_chat === true) {
        if (this.props.is_company_self) {
          return selfKey;
        }

        if (this.props.is_company_other) {
          return otherKey;
        }
      }

      return "";
    }

    // ##############################################################
    // function for list

  }, {
    key: "loadData",
    value: function loadData(page, offset) {
      // todos
      var query = "query{\n            messages(which_company : \"" + this.getWhichCompany("user_1", "user_2") + "\",\n                user_1:" + this.props.self_id + ", user_2:" + this.props.other_id + ", \n                page:" + page + ",offset:" + offset + "){\n                id_message_number message has_read from_user_id created_at}}";

      return (0, _apiHelper.getAxiosGraphQLQuery)(query);
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      return res.data.data.messages;
    }
  }, {
    key: "addChatToView",
    value: function addChatToView(from, message, created_at) {
      var has_read = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
      var id_message_number = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;

      var mesObj = {
        from_user_id: from,
        message: message,
        created_at: created_at,
        has_read: has_read,
        id_message_number: id_message_number
      };
      var newData = this.renderList(mesObj, 0, true);

      // add to view
      this.setState(function (prevState) {
        prevState.extraData.push(newData);
        return { extraData: prevState.extraData };
      });
    }
  }, {
    key: "scrollToBottom",
    value: function scrollToBottom() {
      if (this.chatBox) {
        this.chatBox.scrollTop = 99999999;
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.scrollToBottom();
    }
  }, {
    key: "sendChat",
    value: function sendChat() {
      var _this4 = this;

      var mes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      if (this.props.disableChat) {
        return;
      }

      if (mes == null) {
        mes = this.chatInput.value;
      }

      if (mes == "" || mes == null) {
        return;
      }

      // post to server -- db and socket
      var ins = {
        sender_id: this.props.self_id,
        receiver_id: this.props.other_id,
        which_company: this.getWhichCompany("sender_id", "receiver_id"),
        message: mes
      };

      // add to db
      // todos
      var query = "mutation{add_message(" + (0, _graphqlObj2arg2.default)(ins, {
        noOuterBraces: true
      }) + ") {id_message_number}}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var id_message_number = res.data.data.add_message.id_message_number;
        // add to socket
        // todos
        (0, _socketClient.emitChatMessage)(_this4.props.self_id, _this4.props.other_id, _this4.props.is_company_other, mes, _time.Time.getUnixTimestampNow(), id_message_number);

        // empty value
        _this4.chatInput.value = "";

        _this4.addChatToView(_this4.props.self_id, mes, _time.Time.getUnixTimestampNow(), 1, id_message_number);
      });

      // // add to socket
      // // todos
      // emitChatMessage(this.props.self_id, this.props.other_id, this.props.is_company_other, mes, Time.getUnixTimestampNow());

      // // empty value
      // this.chatInput.value = "";

      // this.addChatToView(this.props.self_id, mes, Time.getUnixTimestampNow(), 1);
    }
  }, {
    key: "inviteForPanelInterview",
    value: function inviteForPanelInterview(recs, zoom_meeting_id, join_url) {
      // this.props.session_id;
      console.log(recs);
      for (var i in recs) {
        var key = recs[i].split("::");
        var user_id = Number.parseInt(key[0]);
        var user_email = key[1];

        // 1. send email to rec id
        console.log("send invitaion email to", user_email);

        // 2. add to tabel zoom_invites
        var add = {
          user_id: user_id,
          zoom_meeting_id: zoom_meeting_id,
          join_url: join_url,
          session_id: this.props.session_id,
          host_id: this.props.self_id,
          participant_id: this.props.other_id
        };

        var add_query = "mutation{add_zoom_invite(" + (0, _graphqlObj2arg2.default)(add, {
          noOuterBraces: true
        }) + ") \n                {ID}}";

        (0, _apiHelper.getAxiosGraphQLQuery)(add_query).then(function (res) {
          (0, _socketClient.emitHallActivity)(_hallActions.ActivityType.ZOOM_INVITE, user_id);
        });
      }
    }
  }, {
    key: "getStartVideoCallFormWithInvite",
    value: function getStartVideoCallFormWithInvite(zoom_data) {
      var _this5 = this;

      var listRecs = [];
      (0, _authActions.getOtherRecs)().map(function (d, i) {
        if (_this5.props.self_id == d.ID) {
          return false;
        }
        listRecs.push({ key: d.ID + "::" + d.user_email, label: d.user_email });
      });

      var items = this.props.can_do_multiple && listRecs.length > 0 ? [{
        label: "Invite other recruiters to join (optional)",
        type: "checkbox",
        name: "recs",
        data: listRecs
      }] : [];

      var onSubmit = function onSubmit(data) {
        if (_this5.props.can_do_multiple) {
          _this5.inviteForPanelInterview(data.recs, zoom_data.id, zoom_data.join_url);
        }

        layoutActions.storeHideBlockLoader();
        _this5.sendChat(_this5.createMessageJSON(_this5.JSON_ZOOM, { join_url: zoom_data.join_url }));
        window.open(zoom_data.start_url);
      };

      return _react2.default.createElement(_form2.default, {
        items: items,
        onSubmit: onSubmit,
        btnColorClass: "blue",
        submitText: "Start Video Call"
      });
    }

    /**
     *
     * @param {join_url, start_url} videoCallData
     */

  }, {
    key: "getStartVideoCallForm",
    value: function getStartVideoCallForm(videoCallData) {
      var _this6 = this;

      var onSubmit = function onSubmit(data) {
        layoutActions.storeHideBlockLoader();
        _this6.sendChat(_this6.createMessageJSON(_this6.JSON_ZOOM, {
          join_url: videoCallData.join_url
        }));
        window.open(videoCallData.start_url);
      };

      var items = [];
      return _react2.default.createElement(_form2.default, {
        items: items,
        onSubmit: onSubmit,
        btnColorClass: "blue",
        submitText: "Start Video Call"
      });
    }
  }, {
    key: "createVideoCall",
    value: function createVideoCall() {
      var _this7 = this;

      addLogCreateCall({ isZoom: true, session_id: this.props.session_id });

      if (this.props.disableChat) {
        layoutActions.errorBlockLoader("Session Has Expired. Unable To Create Video Call Session");
        return;
      }

      layoutActions.loadingBlockLoader("Creating Video Call Session. Please Do Not Close Window.");

      var successInterceptor = function successInterceptor(data) {
        /*
              {"uuid":"bou80/LrR6a0cmDKC4V5aA=="
              ,"id":646923659,"host_id":"-9e--206RFiZFE0hSh-RPQ"
              ,"topic":"Let's start a video call."
              ,"password":"","h323_password":""
              ,"status":0,"option_jbh":false
              ,"option_start_type":"video"
              ,"option_host_video":true,"option_participants_video":true
              ,"option_cn_meeting":false,"option_enforce_login":false
              ,"option_enforce_login_domains":"","option_in_meeting":false
              ,"option_audio":"both","option_alternative_hosts":""
              ,"option_use_pmi":false,"type":1,"start_time":""
              ,"duration":0,"timezone":"America/Los_Angeles"
              ,"start_url":"https://zoom.us/s/646923659?zpk=NcbawuQ7mSE9jfEBdcGMfwxumZzC21eWgm2v6bQ9S6k.AwckNGQwMWY3NWQtNDZhMC00MzU2LTg0M2MtNGVlNWI1MmUzOWY5Fi05ZS0tMjA2UkZpWkZFMGhTaC1SUFEWLTllLS0yMDZSRmlaRkUwaFNoLVJQURJ0ZXN0LnJlY0BnbWFpbC5jb21jAHBTRm01T3I3ZVprU0RGczJCeVRFTlZ5N1k0cE1Zcm5scFF5R3pQZ2RLQjY4LkJnUWdVMDVMU1U1cGNFVmpWeTlESzB0NVVGRm5SbWx3YnpNNFRFNVdWSGxZWjJrQUFBd3pRMEpCZFc5cFdWTXpjejBBAAAWcDF2Skd0YUJRV3k0WC15NzVGRmVtQQIBAQA"
              ,"join_url":"https://zoom.us/j/646923659","created_at":"2018-01-31T02:08:02Z"}
              */

        if (data == null || data == "" || (typeof data === "undefined" ? "undefined" : _typeof(data)) != "object") {
          layoutActions.errorBlockLoader("Failed to create video call session. Please check your internet connection");
          return;
        }

        console.log("success createVideoCall", data);
        var body = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "h4",
            { className: "text-primary" },
            "Successfully Created Video Call Session"
          ),
          _this7.getStartVideoCallForm(data)
        );
        layoutActions.customBlockLoader(body, null, null, null);
        // layoutActions.customBlockLoader("Successfully Created Video Call Session"
        //     , "Start Video Call", () => {

        //         if (this.props.can_do_multiple) {

        //         }

        //         this.sendChat(this.createMessageJSON(this.JSON_ZOOM, { join_url: data.join_url }));
        //         window.open(data.start_url);
        //     }, null);
      };

      var data = {
        query: "create_meeting",
        host_id: this.props.self_id,
        session_id: this.props.session_id
      };

      (0, _apiHelper.getWpAjaxAxios)("wzs21_zoom_ajax", data, successInterceptor, true);
    }

    // New Gruveo

  }, {
    key: "createVideoCallGruveo",
    value: function createVideoCallGruveo() {
      if (this.props.disableChat) {
        layoutActions.errorBlockLoader("Session Has Expired. Unable To Create Video Call Session");
        return;
      }

      var url = createGruveoLink(this.props.session_id);
      addLogCreateCall({
        isGruveo: true,
        session_id: this.props.session_id,
        url: url
      });

      layoutActions.loadingBlockLoader("Creating Video Call Session. Please Do Not Close Window.");

      var data = {
        start_url: url,
        join_url: url
      };
      var body = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h4",
          { className: "text-primary" },
          "Successfully Created Video Call Session"
        ),
        this.getStartVideoCallForm(data)
      );
      layoutActions.customBlockLoader(body, null, null, null);
    }
  }, {
    key: "getChatHeader",
    value: function getChatHeader() {
      var _this8 = this;

      if (this.props.is_hide_header) {
        return null;
      }
      var d = this.props.other_data;

      // info -------
      var label = _react2.default.createElement(
        "span",
        null,
        d.first_name + " ",
        _react2.default.createElement(
          "small",
          null,
          d.last_name
        )
      );
      var title = label;
      /*
          var title = (!this.props.isRec) ? label
              : <ButtonLink
                  onClick={() => layoutActions.storeUpdateFocusCard(d.first_name + " " + d.last_name, UserPopup, { id: d.ID })}
                  label={label}>
              </ButtonLink>;*/

      var status = null;
      if (this.props.is_company_other) {
        status = (0, _userActions.isCompanyOnline)(this.props.online_companies, this.props.other_id) ? "Online" : "Offline";
      } else {
        status = this.props.online_users[d.ID] == 1 ? "Online" : "Offline";
      }

      var info = _react2.default.createElement(_list.ProfileListItem, {
        title: title,
        img_url: d.img_url,
        img_pos: d.img_pos,
        img_size: d.img_size,
        subtitle: status,
        img_dimension: "50px",
        type: "student"
      });

      // action -------
      var action = [];

      // New Gruveo
      if (this.props.isRec) {
        // Remove Gruveo
        if (_appConfig.IsGruveoEnable) {
          action.push(_react2.default.createElement(
            "a",
            {
              onClick: function onClick() {
                return _this8.createVideoCallGruveo();
              },
              className: "action-item"
            },
            _react2.default.createElement("i", { className: "fa fa-video-camera left" }),
            _react2.default.createElement(
              "small",
              null,
              "Call With Chrome"
            )
          ));
          action.push(_react2.default.createElement(
            "small",
            null,
            "   |   "
          ));
          action.push(_react2.default.createElement(
            "a",
            { onClick: function onClick() {
                return _this8.createVideoCall();
              }, className: "action-item" },
            _react2.default.createElement(
              "small",
              null,
              "Call With Zoom"
            )
          ));
        } else {
          action.push(_react2.default.createElement(
            "a",
            { onClick: function onClick() {
                return _this8.createVideoCall();
              }, className: "action-item" },
            _react2.default.createElement("i", { className: "fa fa-video-camera left" }),
            _react2.default.createElement(
              "small",
              null,
              "Start Video Call"
            )
          ));
        }
      }

      return _react2.default.createElement(
        "div",
        { className: "chat-header" },
        _react2.default.createElement(
          "div",
          { className: "ch-info" },
          info
        ),
        _react2.default.createElement(
          "div",
          { className: "ch-action" },
          action
        )
      );
    }
  }, {
    key: "getChatInput",
    value: function getChatInput() {
      var _this9 = this;

      return _react2.default.createElement(
        "div",
        { className: "chat-input" },
        _react2.default.createElement("textarea", {
          ref: function ref(v) {
            return _this9.chatInput = v;
          },
          rows: "3",
          onKeyPress: function onKeyPress(ev) {
            //console.log(ev.ctrlKey);
            if (ev.key == "Enter" && !ev.ctrlKey) {
              _this9.sendChat();
              ev.preventDefault();
            }

            if (ev.key == "Enter" && ev.ctrlKey && _this9.chatInput.value != "") {
              //console.log(this.chatInput.value);
              ev.persist();
              _this9.chatInput.value += "\n";
              ev.preventDefault();
            }
          },
          placeholder: "Ask New Question..",
          name: "message"
        }),
        _react2.default.createElement(
          "button",
          {
            disabled: this.props.disableChat,
            className: "btn btn-blue",
            onClick: function onClick() {
              return _this9.sendChat();
            }
          },
          "Send"
        )
      );
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      // create date item starts --------------------
      var dateItem = null;
      var date = _time.Time.getDate(d.created_at);
      var toCreateDate = null;
      if (!isExtraData && date != this.currentDateList) {
        toCreateDate = this.currentDateList;
        // the first one has to be the default of currentDateExtra
        if (this.currentDateList == null) {
          this.currentDateExtra = date;
        }
        this.currentDateList = date;
      }

      if (isExtraData && date != this.currentDateExtra) {
        toCreateDate = date;
        this.currentDateExtra = date;
      }

      if (toCreateDate !== null) {
        dateItem = _react2.default.createElement(
          "div",
          { className: "chat-item special-item" },
          toCreateDate
        );
      }
      // create date Item finish -----------------------

      var itemClass = d.from_user_id == this.props.self_id ? "self-item" : "other-item";
      var chatItem = _react2.default.createElement(
        "div",
        { className: "chat-item " + itemClass },
        _react2.default.createElement(
          "p",
          { className: "message" },
          this.parseMessage(d.message)
        ),
        _react2.default.createElement(
          "div",
          { className: "timestamp" },
          _time.Time.getStringShort(d.created_at)
        )
      );

      // update has read to 1
      if (d.has_read == 0) {
        if (d.from_user_id != this.props.self_id) {
          this.updateToHasRead(d.id_message_number);
        }
      }

      if (dateItem == null) {
        return chatItem;
      } else {
        return [dateItem, chatItem];
      }
    }
  }, {
    key: "updateToHasRead",
    value: function updateToHasRead(id_message_number) {
      (0, _apiHelper.getAxiosGraphQLQuery)("mutation{edit_message\n        (id_message_number :\"" + id_message_number + "\", has_read:1){\n            has_read }}");

      this.updateHasRead = true;
    }
  }, {
    key: "componentDidUpdateList",
    value: function componentDidUpdateList(isAppend) {
      if (!isAppend) {
        this.scrollToBottom();
      }

      if (this.updateHasRead) {
        hallAction.storeLoadActivity(hallAction.ActivityType.INBOX_COUNT);
        this.updateHasRead = false;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this10 = this;

      return _react2.default.createElement(
        "div",
        { id: "chat" },
        this.getChatHeader(),
        _react2.default.createElement(
          "div",
          { className: "chat-box", ref: function ref(v) {
              return _this10.chatBox = v;
            } },
          _react2.default.createElement(_list2.default, {
            type: "append-top",
            appendText: "Load Previous",
            getDataFromRes: this.getDataFromRes,
            loadData: this.loadData,
            extraData: this.state.extraData,
            offset: this.offset,
            componentDidUpdate: this.componentDidUpdateList,
            renderList: this.renderList
          })
        ),
        this.getChatInput()
      );
    }
  }]);

  return Chat;
}(_react2.default.Component);

Chat.propTypes = {
  is_company_chat: _react.PropTypes.bool,
  is_company_self: _react.PropTypes.bool,
  is_company_other: _react.PropTypes.bool,
  is_hide_header: _react.PropTypes.bool,
  can_do_multiple: _react.PropTypes.bool,
  self_id: _react.PropTypes.number.isRequired,
  isRec: _react.PropTypes.bool.isRequired,
  session_id: _react.PropTypes.number.isRequired,
  disableChat: _react.PropTypes.bool.isRequired,
  other_id: _react.PropTypes.number.isRequired,
  other_data: _react.PropTypes.object.isRequired
};

Chat.defaultProps = {
  is_hide_header: false,
  is_company_chat: false,
  is_company_self: false,
  is_company_other: false,
  can_do_multiple: false
};

function mapStateToProps(state, ownProps) {
  return {
    online_users: state.user.online_users,
    online_companies: state.user.online_companies
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, null)(Chat);

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

module.exports = ReactCurrentOwner;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var PooledClass = __webpack_require__(58);

var emptyFunction = __webpack_require__(39);
var warning = __webpack_require__(16);

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (false) {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (false) {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (false) {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (false) {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

/** Proxying after everything set on SyntheticEvent
  * to resolve Proxy issue on some WebKit browsers
  * in which some Event properties are set to undefined (GH#10010)
  */
if (false) {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
     false ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openNewTab = openNewTab;
exports.getDangerousHtml = getDangerousHtml;
exports.getWindowWidth = getWindowWidth;
exports.smoothScrollTo = smoothScrollTo;
exports.focusOnInput = focusOnInput;
exports.addClassEl = addClassEl;
exports.removeClassEl = removeClassEl;
exports.scrollToY = scrollToY;
exports.scrollToX = scrollToX;
exports.getParamUrl = getParamUrl;
exports._GET = _GET;

var _authActions = __webpack_require__(2);

if (false) {
  console.log = function (mes) {
    return;
  };
}

function openNewTab(url) {
  var win = window.open(url, "_blank");
  win.focus();
}

function getDangerousHtml(str) {
  var toSet = str;
  if (typeof str === "string") {
    if (str.indexOf("<script>") >= 0) {
      toSet = str;
      toSet = toSet.replaceAll("<script>", "");
      toSet = toSet.replaceAll("</script>", "");
    }
  }

  return {
    __html: toSet
  };
}

function getWindowWidth() {
  var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
  return width;
}

function smoothScrollTo(idToGo) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -100;

  var elToGo = document.getElementById(idToGo);
  if (elToGo) {
    var yCoordinate = elToGo.getBoundingClientRect().top + window.pageYOffset;
    window.scrollTo({
      top: yCoordinate + offset,
      behavior: "smooth"
    });
  }
}

function focusOnInput(id) {
  var el = document.getElementById(id);
  var input = el.getElementsByTagName("input");
  if (input.length > 0) {
    input[0].focus();
  }
}

function addClassEl(el, className) {
  if (el) {
    el.className += " " + className;
  }
}

function removeClassEl(el, className) {
  if (el) {
    var cs = el.className;

    var arr = cs.split(" ");

    var newCs = "";
    for (var i in arr) {
      if (arr[i] !== className) {
        newCs += " " + arr[i] + " ";
      }
    }

    el.className = newCs;
  }
}

function scrollToY(element, to, duration) {
  if (duration <= 0) return;
  var difference = to - element.scrollTop;
  var perTick = difference / duration * 10;

  setTimeout(function () {
    element.scrollTop = element.scrollTop + perTick;
    if (element.scrollTop === to) return;
    scrollToY(element, to, duration - 10);
  }, 10);
}

function scrollToX(element, to, duration) {
  if (duration <= 0) return;
  var difference = to - element.scrollLeft;
  var perTick = difference / duration * 10;

  setTimeout(function () {
    element.scrollLeft = element.scrollLeft + perTick;
    if (element.scrollLeft === to) return;
    scrollToX(element, to, duration - 10);
  }, 10);
}

function getParamUrl(url, parameterName) {
  var result = null;
  var tmp = [];
  var search = "";
  url = url.split("?");
  search = url[1];
  var items = search.split("&");
  for (var index = 0; index < items.length; index++) {
    tmp = items[index].split("=");
    if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
  }
  return result;
}

function _GET(parameterName) {
  var result = null,
      tmp = [];
  var items = location.search.substr(1).split("&");
  for (var index = 0; index < items.length; index++) {
    tmp = items[index].split("=");
    if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
  }
  return result;
}

String.prototype.parseJson = function () {
  try {
    return JSON.parse(this);
  } catch (err) {
    return null;
  }
};

String.prototype.containText = function (text) {
  return this.toUpperCase().indexOf(text.toUpperCase()) >= 0;
};

String.prototype.endsWith = function (text) {
  var last4 = this.substring(this.length - text.length);
  return last4.toUpperCase() == text.toUpperCase();
};

String.prototype.replaceAll = function (search, replacement) {
  var ignoreCase = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var i = ignoreCase ? "i" : "";
  var target = this;
  return target.replace(new RegExp(search, i + "g"), replacement);
};

String.prototype.insertSubstring = function (substring, position) {
  var target = this;
  return [target.slice(0, position), substring, target.slice(position)].join("");
};

String.prototype.capitalizeAll = function () {
  var arr = this.split(" ");

  var toRet = "";
  for (var i in arr) {
    if (i > 0) {
      toRet += " ";
    }
    toRet += arr[i].capitalize();
  }
  return toRet;
};

String.prototype.capitalize = function () {
  return this.charAt(0).toUpperCase() + this.slice(1);
};

String.prototype.focusSubstring = function (substring) {
  if (typeof substring !== "string" || substring == "" || substring == null) {
    return this;
  }
  var target = this;
  var re = new RegExp(substring, "ig");
  var match = re.exec(target);
  if (match == null) {
    return target;
  }
  var start = match["index"];
  var end = start + substring.length;
  target = target.insertSubstring("</b>", end);
  target = target.insertSubstring("<b>", start);
  return target;
};

document.setTitle = function (title) {
  document.title = (0, _authActions.getCF)() + " | " + title;
};

// #############################################################

console.error = function (err, err2, err3, err4, err5) {
  var discardArr = ["Warning:"];

  for (var i in discardArr) {
    if (err.indexOf(discardArr[i]) == 0) {
      //console.log("discard error logging");
      return;
    }
  }

  var otherErrs = [err2, err3, err4, err5];

  var color = "color: #FE0505";
  console.log("%c" + err, color);
  err = err.toString();

  for (var i in otherErrs) {
    if (typeof otherErrs[i] !== "undefined") {
      console.log("%c" + otherErrs[i], color);
      err += " " + otherErrs[i].toString();
    }
  }
};

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(54);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SR_LIMIT = exports.QUEUE_LIMIT = undefined;
exports.invalidJoinGroupSession = invalidJoinGroupSession;
exports.cancelJoinGroupSession = cancelJoinGroupSession;
exports.invalidQueue = invalidQueue;
exports.cancelQueue = cancelQueue;
exports.startQueue = startQueue;
exports.pendingSessionRequestCount = pendingSessionRequestCount;
exports.invalidSessionRequest = invalidSessionRequest;
exports.addSessionRequest = addSessionRequest;
exports.updateSessionRequest = updateSessionRequest;
exports.invalidSession = invalidSession;
exports.createSession = createSession;

var _axios = __webpack_require__(89);

var _axios2 = _interopRequireDefault(_axios);

var _store = __webpack_require__(34);

var _appConfig = __webpack_require__(4);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import { Time } from '../../lib/time';

var _require = __webpack_require__(5),
    Queue = _require.Queue,
    QueueEnum = _require.QueueEnum,
    Session = _require.Session,
    Prescreen = _require.Prescreen,
    SessionRequestEnum = _require.SessionRequestEnum;

var obj2arg = __webpack_require__(12);

//** GROUP SESSION ***************************************************/
//export function invalidJoinGroupSession(company_id) {
function invalidJoinGroupSession(id) {
    var joins = _store.store.getState().hall.activity.group_session_joins;
    //console.log("joins",joins);
    //console.log("id",id);
    for (var i in joins) {
        //var com = joins[i].company;
        //var start_time = Time.getString(joins[i].start_time);
        // if (com.ID === company_id && !joins[i].is_expired && !joins[i].is_canceled) {
        //     return `Cannot join more than one group session with the same company`;
        // }

        // new
        var joinId = joins[i].ID;
        if (joinId == id && !joins[i].is_expired && !joins[i].is_canceled) {
            return 'You have already joined this group session';
        }
    }

    return false;
}

function cancelJoinGroupSession(id) {
    var query = 'mutation{edit_group_session_join(ID:' + id + ', is_canceled:1){ID}}';
    return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        return res.data.data.edit_group_session_join;
    }, function (err) {
        return err.response.data;
    });
}

//** QUEUE ***************************************************/
var QUEUE_LIMIT = exports.QUEUE_LIMIT = 3;
function invalidQueue(company_id) {
    var queues = _store.store.getState().hall.activity.queues;

    for (var i in queues) {
        if (queues[i].company.ID === company_id) {
            return 'You are already queuing for this company.';
        }
    }

    if (queues.length >= QUEUE_LIMIT) {
        return 'You have already reached ' + QUEUE_LIMIT + ' queue limit. Please cancel current queue and try again.';
    }

    return false;
}

function cancelQueue(id) {
    var query = 'mutation{edit_queue(ID:' + id + ', status:"' + QueueEnum.STATUS_CANCELED + '"){ID}}';
    return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        return res.data.data.edit_queue;
    }, function (err) {
        return err.response.data;
    });
}

function startQueue(student_id, company_id) {
    var params = {
        student_id: student_id,
        company_id: company_id,
        status: QueueEnum.STATUS_QUEUING
    };

    var query = 'mutation {add_queue(' + obj2arg(params, { noOuterBraces: true }) + ') {ID queue_num} }';
    return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        return res.data.data.add_queue;
    }, function (err) {
        return err.response.data;
    });
}

//** Session Request ***************************************************/
function pendingSessionRequestCount(company_id) {
    var srs = _store.store.getState().hall.activity.session_requests;
    var total_pending = 0;
    for (var i in srs) {
        if (srs[i].status === SessionRequestEnum.STATUS_PENDING) {
            total_pending++;
        }
    }

    return total_pending;
}

var SR_LIMIT = exports.SR_LIMIT = 10;
function invalidSessionRequest(company_id) {
    var session_requests = _store.store.getState().hall.activity.session_requests;

    var total_pending = 0;
    for (var i in session_requests) {
        var sr = session_requests[i];
        if (sr.company.ID === company_id && sr.status === SessionRequestEnum.STATUS_PENDING) {
            return 'You already have a pending interview request for this company. Check your requests list under Interview Request section.';
        }

        if (sr.status === SessionRequestEnum.STATUS_PENDING) {
            total_pending++;
        }
    }

    if (total_pending >= SR_LIMIT) {
        return 'You already have reached ' + SR_LIMIT + ' pending interview request limit. Please cancel current request and try again.';
    }

    return false;
}

function addSessionRequest(student_id, company_id) {
    var params = {
        student_id: student_id,
        company_id: company_id,
        status: SessionRequestEnum.STATUS_PENDING
    };

    var query = 'mutation {add_session_request(' + obj2arg(params, { noOuterBraces: true }) + ') {ID} }';
    return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        res = res.data.data.add_session_request;
        return res;
    }, function (err) {
        return err.response.data;
    });
}

function updateSessionRequest(id, status) {
    var updated_by = (0, _authActions.getAuthUser)().ID;

    var query = 'mutation{edit_session_request(ID:' + id + ', status:"' + status + '", updated_by:' + updated_by + ') {ID, student_id, company_id}}';
    return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        return res.data.data.edit_session_request;
    }, function (err) {
        return err.response.data;
    });
}

//** Session ***************************************************/
function invalidSession() {
    var sessions = _store.store.getState().hall.activity.sessions;

    if (sessions.length >= 1) {
        return 'You currently have an active session now. Please end the session before creating a new one';
    }

    return false;
}

function createSession(host_id, participant_id, entity, entity_id) {
    return _axios2.default.post(_appConfig.AppConfig.Api + "/activity/create-session", {
        host_id: host_id,
        participant_id: participant_id,
        entity: entity,
        entity_id: entity_id
    });
}

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "production" !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if (false) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SET_ONLINE_COMPANIES = exports.SET_ONLINE_USERS = undefined;
exports.setOnlineUsers = setOnlineUsers;
exports.setOnlineCompanies = setOnlineCompanies;
exports.isUserOnline = isUserOnline;
exports.isCompanyOnline = isCompanyOnline;

var _socketClient = __webpack_require__(17);

var _socketConfig = __webpack_require__(32);

var _store = __webpack_require__(34);

var _authActions = __webpack_require__(2);

var SET_ONLINE_USERS = exports.SET_ONLINE_USERS = "SET_ONLINE_USERS";
var SET_ONLINE_COMPANIES = exports.SET_ONLINE_COMPANIES = "SET_ONLINE_COMPANIES";

function setOnlineUsers(data) {
    _store.store.dispatch({
        type: SET_ONLINE_USERS,
        payload: data
    });
};

function setOnlineCompanies(data) {
    _store.store.dispatch({
        type: SET_ONLINE_COMPANIES,
        payload: data
    });
};

function isUserOnline(store_online_users, userId) {
    return store_online_users[userId] == 1;
}

function isCompanyOnline(store_online_companies, companyId) {
    // check if you are rec of the company
    try {
        if ((0, _authActions.isRoleRec)() && (0, _authActions.getAuthUser)().rec_company == companyId) {
            return true;
        }
    } catch (err) {}

    try {
        var online_companies = store_online_companies;
        var cObj = online_companies[companyId];
        for (var i in cObj) {
            if (cObj[i] == "Online") {
                return true;
            }
        }
        return false;
    } catch (err) {
        return false;
    }
}

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../css/page-sec.scss');

var sec = "page-sec";

var PageSection = function (_React$Component) {
    _inherits(PageSection, _React$Component);

    function PageSection(props) {
        _classCallCheck(this, PageSection);

        var _this = _possibleConstructorReturn(this, (PageSection.__proto__ || Object.getPrototypeOf(PageSection)).call(this, props));

        _this.toggleBody = _this.toggleBody.bind(_this);
        _this.MAXEST = "999999px";

        var showBody = true;
        if (_this.props.canToggle && !_this.props.initShow) {
            showBody = false;
        }

        _this.state = {
            showBody: showBody,
            maxHeight: _this.props.maxHeight
        };

        return _this;
    }

    _createClass(PageSection, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (this.refs.body.clientHeight < this.props.maxHeight) {
                this.setState(function (prevState) {
                    return { maxHeight: null };
                });
            }
        }
    }, {
        key: 'toggleBody',
        value: function toggleBody(ev) {
            this.setState(function (prevState) {
                return { showBody: !prevState.showBody };
            });
        }
    }, {
        key: 'toggleShowMoreLess',
        value: function toggleShowMoreLess() {
            var _this2 = this;

            this.setState(function (prevState) {
                var newHeight = prevState.maxHeight !== _this2.MAXEST ? _this2.MAXEST : _this2.props.maxHeight;
                return { maxHeight: newHeight };
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var body = this.props.body;
            if (typeof body === "function") {
                body = _react2.default.createElement(body, {});
            }
            var title = !this.props.canToggle ? _react2.default.createElement(
                'h3',
                { className: sec + '-title' },
                this.props.title
            ) : _react2.default.createElement(
                'h3',
                { onClick: function onClick(ev) {
                        _this3.toggleBody(ev);
                    }, className: sec + '-title' },
                _react2.default.createElement(
                    'a',
                    null,
                    this.props.title
                )
            );

            var showOverflow = this.props.showOverflow ? sec + '-overflow' : "";

            return _react2.default.createElement(
                'div',
                { className: sec + ' ' + this.props.className },
                title,
                !this.state.showBody ? null : _react2.default.createElement(
                    'div',
                    { className: sec + '-body ' + showOverflow, style: { maxHeight: this.state.maxHeight }, ref: 'body' },
                    body
                ),
                this.state.maxHeight === null ? null : _react2.default.createElement(
                    'div',
                    { style: { marginTop: "" } },
                    _react2.default.createElement(
                        'a',
                        { onClick: function onClick() {
                                _this3.toggleShowMoreLess();
                            } },
                        this.state.maxHeight == this.MAXEST ? "Show Less" : _react2.default.createElement(
                            'span',
                            null,
                            '..................',
                            _react2.default.createElement('br', null),
                            'Show More'
                        )
                    )
                )
            );
        }
    }]);

    return PageSection;
}(_react2.default.Component);

exports.default = PageSection;


PageSection.propTypes = {
    title: _propTypes2.default.string.isRequired,
    body: _propTypes2.default.element.isRequired,
    className: _propTypes2.default.oneOf(["left"]),
    canToggle: _propTypes2.default.bool,
    initShow: _propTypes2.default.bool,
    maxHeight: _propTypes2.default.number,
    showOverflow: _propTypes2.default.bool
};

PageSection.defaultProps = {
    canToggle: false,
    initShow: false,
    maxHeight: null,
    showOverflow: false

    //                

};

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(31);
var core = __webpack_require__(37);
var ctx = __webpack_require__(93);
var hide = __webpack_require__(62);
var has = __webpack_require__(65);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 54 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(271);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(552);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(556);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(271);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FeedbackForm = exports.ManageFeedback = exports.FeedbackList = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.openFeedbackBlockRec = openFeedbackBlockRec;
exports.getFeedbackPopupView = getFeedbackPopupView;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _reactRouterDom = __webpack_require__(7);

var _loader = __webpack_require__(8);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _dbConfig = __webpack_require__(5);

var _appConfig = __webpack_require__(4);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _users = __webpack_require__(27);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// for recruiters
function openFeedbackBlockRec() {
    if ((0, _authActions.isRoleRec)()) {
        // check if last day
        var endtime = _time.Time.convertDBTimeToUnix((0, _authActions.getCFObj)().end);
        var now = _time.Time.getUnixTimestampNow();
        if (now >= endtime) {
            var q = 'query {has_feedback(user_id: ' + (0, _authActions.getAuthUser)().ID + ') }';
            (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                if (!res.data.data.has_feedback) {
                    var body = _react2.default.createElement(
                        'h3',
                        { style: { color: "#286090" } },
                        'Help Us To Improve',
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                            'small',
                            null,
                            'Please answer a short feedback questions to continue viewing this page'
                        )
                    );
                    (0, _layoutActions.customBlockLoader)(body, "Open Feedback Form", null, _appConfig.RootPath + '/app/feedback/recruiter', true);
                }
            });
        }
    }
}

// for students
function getFeedbackPopupView() {
    var isDropResume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;


    var onClick = function onClick() {
        (0, _layoutActions.storeHideFocusCard)();
        (0, _layoutActions.storeHideBlockLoader)();
    };

    return _react2.default.createElement(
        'div',
        null,
        'Your feedback is very valuable to us.',
        _react2.default.createElement('br', null),
        'Please answer a short feedback questions',
        isDropResume ? " to drop more resume." : " to request more session with company.",
        _react2.default.createElement('br', null),
        _react2.default.createElement('br', null),
        _react2.default.createElement(
            _reactRouterDom.NavLink,
            { onClick: onClick,
                className: 'btn btn-blue',
                to: _appConfig.RootPath + '/app/feedback/student' },
            'Open Feedback Form'
        )
    );
}

// #########################################################################################################
// #########################################################################################################

var FeedbackList = exports.FeedbackList = function (_React$Component) {
    _inherits(FeedbackList, _React$Component);

    function FeedbackList(props) {
        _classCallCheck(this, FeedbackList);

        var _this = _possibleConstructorReturn(this, (FeedbackList.__proto__ || Object.getPrototypeOf(FeedbackList)).call(this, props));

        _this.loadFeedbackQs = _this.loadFeedbackQs.bind(_this);
        _this.createFeedbackView = _this.createFeedbackView.bind(_this);

        _this.authUser = (0, _authActions.getAuthUser)();

        _this.state = {
            loading: true,
            qs: {}
        };
        return _this;
    }

    _createClass(FeedbackList, [{
        key: 'loadFeedbackQs',
        value: function loadFeedbackQs() {
            var _this2 = this;

            var q = 'query{ feedback_qs {ID, question} }';
            (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                var qs = {};
                res.data.data.feedback_qs.map(function (d, i) {
                    qs[d.ID] = d.question;
                });
                _this2.setState({ qs: qs, loading: false });
            });
        }

        // return array of tds

    }, {
        key: 'createFeedbackView',
        value: function createFeedbackView(raw) {
            var data = JSON.parse(raw);
            console.log(data);
            var v = [];
            var style = { marginBottom: "5px" };
            for (var id in data) {
                var d = data[id];

                var qs = _react2.default.createElement(_tooltip2.default, {
                    left: '-204px',
                    bottom: '-11px',
                    noArrow: true,
                    content: _react2.default.createElement(
                        'small',
                        null,
                        _react2.default.createElement(
                            'i',
                            null,
                            _react2.default.createElement(
                                'b',
                                null,
                                'Question Id ',
                                id
                            )
                        )
                    ),
                    tooltip: this.state.qs[id] });

                v.push(_react2.default.createElement(
                    'td',
                    { style: style },
                    qs,
                    _react2.default.createElement('br', null),
                    d
                ));
            }

            return v;
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this3 = this;

            this.loadFeedbackQs();

            this.ROLE_DATA = [_dbConfig.UserEnum.ROLE_STUDENT, _dbConfig.UserEnum.ROLE_RECRUITER];
            this.offset = 20;
            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'User'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Role'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Feedback'
                    )
                )
            );

            this.renderRow = function (d, i) {
                var row = [];
                row.push(_react2.default.createElement(
                    'td',
                    null,
                    (0, _users.createUserTitle)(d)
                ));
                row.push(_react2.default.createElement(
                    'td',
                    null,
                    d.role
                ));
                row.push.apply(row, _toConsumableArray(_this3.createFeedbackView(d.feedback)));
                return row;
            };

            //##########################################
            //  search
            this.searchParams = "";
            this.search = {};
            this.searchFormItem = [{ header: "Enter Your Search Query" }, {
                label: "Feedback From",
                name: "user_role",
                type: "select",
                data: this.ROLE_DATA
            }];

            this.searchFormOnSubmit = function (d) {
                _this3.search = d;
                _this3.searchParams = "";
                if (d != null) {
                    _this3.searchParams += d.user_role ? 'role:"' + d.user_role + '",' : "";
                }
            };

            this.loadData = function (page, offset) {
                return (0, _apiHelper.getAxiosGraphQLQuery)('query{\n                users(has_feedback:1, ' + _this3.searchParams + ' page:' + page + ', offset:' + offset + '){\n                ID\n                first_name last_name \n                user_email feedback\n                role }}');
            };

            this.getDataFromRes = function (res) {
                return res.data.data.users;
            };

            this.formWillSubmit = function (d, edit) {
                if (typeof d.is_disabled === "string") {
                    d.is_disabled = Number.parseInt(d.is_disabled);
                }
                if (edit) {
                    d.updated_by = _this3.authUser.ID;
                } else {
                    d.created_by = _this3.authUser.ID;
                }
                return d;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("User Feedback");

            var v = null;

            if (this.state.loading) {
                v = _react2.default.createElement(_loader.Loader, { size: '2', text: 'Loading user feedback' });
            } else {
                v = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'h3',
                        null,
                        'User Feedback'
                    ),
                    _react2.default.createElement(_generalForm2.default, {
                        dataTitle: this.dataTitle,
                        noMutation: true,
                        formWillSubmit: this.formWillSubmit,
                        dataOffset: 20,
                        searchFormItem: this.searchFormItem,
                        searchFormOnSubmit: this.searchFormOnSubmit,
                        tableHeader: this.tableHeader,
                        renderRow: this.renderRow,
                        getDataFromRes: this.getDataFromRes,
                        loadData: this.loadData })
                );
            }

            return v;
        }
    }]);

    return FeedbackList;
}(_react2.default.Component);

// #########################################################################################################
// #########################################################################################################

var ManageFeedback = exports.ManageFeedback = function (_React$Component2) {
    _inherits(ManageFeedback, _React$Component2);

    function ManageFeedback(props) {
        _classCallCheck(this, ManageFeedback);

        var _this4 = _possibleConstructorReturn(this, (ManageFeedback.__proto__ || Object.getPrototypeOf(ManageFeedback)).call(this, props));

        _this4.authUser = (0, _authActions.getAuthUser)();
        return _this4;
    }

    _createClass(ManageFeedback, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this5 = this;

            this.ROLE_DATA = [_dbConfig.UserEnum.ROLE_STUDENT, _dbConfig.UserEnum.ROLE_RECRUITER];
            this.offset = 20;
            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'ID'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'User'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Question'
                    )
                )
            );

            //##########################################
            //  search
            this.searchParams = "";
            this.search = {};
            this.searchFormItem = [{ header: "Enter Your Search Query" }, {
                label: "Feedback For",
                name: "user_role",
                type: "select",
                data: this.ROLE_DATA
            }];

            this.searchFormOnSubmit = function (d) {
                _this5.search = d;
                _this5.searchParams = "";
                if (d != null) {
                    _this5.searchParams += d.user_role ? 'user_role:"' + d.user_role + '",' : "";
                }
            };

            this.loadData = function (page, offset) {
                return (0, _apiHelper.getAxiosGraphQLQuery)('query{\n                        feedback_qs(' + _this5.searchParams + ' order_by: "is_disabled asc, ID"\n                ,page:' + page + ', offset:' + offset + '){\n                        ID\n                  user_role\n                    question\n                  is_disabled\n                }\n              }');
            };

            // create form add new default
            this.newFormDefault = {};

            this.getFormItem = function (edit) {
                var ret = [{ header: "Feeback Question Form" }];
                ret.push.apply(ret, [{
                    label: "Question",
                    name: _dbConfig.FeedbackQs.QUESTION,
                    type: "textarea",
                    required: true,
                    placeholder: "Write feedback question here.."
                }, {
                    label: "For User",
                    name: _dbConfig.FeedbackQs.USER_ROLE,
                    type: "select",
                    data: _this5.ROLE_DATA,
                    required: true
                }]);

                var extra = [];
                if (edit) {
                    extra = [{
                        label: "Is Active",
                        name: _dbConfig.FeedbackQs.IS_DISABLED,
                        type: "select",
                        data: [{ key: 0, label: "Yes" }, { key: 1, label: "No" }],
                        required: true
                    }];
                }

                ret.push.apply(ret, _toConsumableArray(extra));

                return ret;
            };

            this.getEditFormDefault = function (ID) {
                var query = 'query{\n                        feedback_qs(ID: ' + ID + '){\n                        ID\n                  user_role\n                    question\n                  is_disabled\n                }\n              }';

                return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    var qs = res.data.data.feedback_qs[0];
                    return qs;
                });
            };

            this.renderRow = function (d, i) {
                var row = [];
                for (var key in d) {
                    if (key == "is_disabled") {
                        var is_disabled = d.is_disabled ? _react2.default.createElement(
                            'label',
                            { className: 'label label-danger' },
                            'Not Active'
                        ) : _react2.default.createElement(
                            'label',
                            { className: 'label label-success' },
                            'Active'
                        );
                        row.push(_react2.default.createElement(
                            'td',
                            { className: 'text-center' },
                            is_disabled
                        ));
                    } else {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            d[key]
                        ));
                    }
                }
                return row;
            };

            this.getDataFromRes = function (res) {
                return res.data.data.feedback_qs;
            };

            this.formWillSubmit = function (d, edit) {
                if (typeof d.is_disabled === "string") {
                    d.is_disabled = Number.parseInt(d.is_disabled);
                }
                if (edit) {
                    d.updated_by = _this5.authUser.ID;
                } else {
                    d.created_by = _this5.authUser.ID;
                }
                return d;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Manage Feedback");
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    'Manage Feedback'
                ),
                _react2.default.createElement(
                    _reactRouterDom.NavLink,
                    { className: 'btn btn-success', to: _appConfig.RootPath + '/app/feedback/student' },
                    'Student Feedback'
                ),
                _react2.default.createElement(
                    _reactRouterDom.NavLink,
                    { className: 'btn btn-blue', to: _appConfig.RootPath + '/app/feedback/recruiter' },
                    'Recruiter Feedback'
                ),
                _react2.default.createElement(_generalForm2.default, {
                    entity_singular: 'Feedback Question',
                    entity: 'feedback_qs',
                    addButtonText: 'Add New Feedback Question',
                    dataTitle: this.dataTitle,
                    getFormItem: this.getFormItem,
                    newFormDefault: this.newFormDefault,
                    getEditFormDefault: this.getEditFormDefault,
                    noMutation: true,
                    formWillSubmit: this.formWillSubmit,
                    canEdit: true,
                    canAdd: true,
                    dataOffset: 20,
                    searchFormItem: this.searchFormItem,
                    searchFormOnSubmit: this.searchFormOnSubmit,
                    tableHeader: this.tableHeader,
                    renderRow: this.renderRow,
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData })
            );
        }
    }]);

    return ManageFeedback;
}(_react2.default.Component);

// #########################################################################################################
// #########################################################################################################

var FeedbackForm = exports.FeedbackForm = function (_React$Component3) {
    _inherits(FeedbackForm, _React$Component3);

    function FeedbackForm(props) {
        _classCallCheck(this, FeedbackForm);

        var _this6 = _possibleConstructorReturn(this, (FeedbackForm.__proto__ || Object.getPrototypeOf(FeedbackForm)).call(this, props));

        _this6.authUser = (0, _authActions.getAuthUser)();
        _this6.user_role = _this6.props.match.params.user_role;

        _this6.state = {
            error: null,
            disableSubmit: false,
            success: null,
            qs: [],
            formLoading: true
        };
        return _this6;
    }

    _createClass(FeedbackForm, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this7 = this;

            //load forms
            var query = 'query{ feedback_qs(user_role: "' + this.user_role + '", is_disabled:0){\n                        ID question } }';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                var qs = res.data.data.feedback_qs;
                _this7.setState(function () {
                    return { qs: qs, formLoading: false };
                });
            });

            this.formOnSubmit = function (d) {
                //toggleSubmit(this, { error: null });
                var value = JSON.stringify(d);
                value = JSON.stringify(value);

                var query = 'mutation{\n                        edit_user(ID: ' + _this7.authUser.ID + ',feedback:' + value + '){ID}}';

                (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    var edit = res.data.data.edit_user;
                    if (edit.ID == _this7.authUser.ID) {
                        (0, _form.toggleSubmit)(_this7, { success: true });
                    } else {
                        (0, _form.toggleSubmit)(_this7, { error: "Something went wrong. Failed to submit form" });
                    }
                });
            };
        }
    }, {
        key: 'getForm',
        value: function getForm(qs) {
            if (qs == null || qs.length == 0) {
                return _react2.default.createElement(
                    'div',
                    { className: 'text-muted' },
                    'Invalid url'
                );
            }

            var formItem = [];
            for (var i in qs) {
                var q = qs[i];
                formItem.push({
                    label: q.question,
                    name: q.ID,
                    required: true,
                    type: "textarea"
                });
            }

            return _react2.default.createElement(_form2.default, { className: 'form-row',
                items: formItem,
                onSubmit: this.formOnSubmit,
                submitText: 'Submit',
                disableSubmit: this.state.disableSubmit,
                error: this.state.error,
                errorPosition: 'bottom',
                success: this.state.success });
        }
    }, {
        key: 'render',
        value: function render() {
            var v = null;
            if (this.state.formLoading) {
                v = _react2.default.createElement(_loader.Loader, { text: 'Loading Feedback Form..' });
            } else if (this.state.success == null) {
                v = this.getForm(this.state.qs);
            } else {
                window.scrollTo(0, 0);
                v = _react2.default.createElement(
                    'div',
                    null,
                    'Your feedback has been successfully submitted',
                    _react2.default.createElement('br', null),
                    'Thank you for your time.',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        _reactRouterDom.NavLink,
                        { className: 'btn btn-blue', to: _appConfig.RootPath + '/app/' },
                        'Go Back To Career Fair'
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    'Feedback',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        this.user_role.capitalize()
                    )
                ),
                v
            );
        }
    }]);

    return FeedbackForm;
}(_react2.default.Component);

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;

/***/ }),
/* 59 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(514);


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _promise = __webpack_require__(516);

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(63);
var createDesc = __webpack_require__(114);
module.exports = __webpack_require__(64) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(46);
var IE8_DOM_DEFINE = __webpack_require__(258);
var toPrimitive = __webpack_require__(163);
var dP = Object.defineProperty;

exports.f = __webpack_require__(64) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(94)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 65 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InterestedButton = exports.InterestedUserList = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _authActions = __webpack_require__(2);

var _apiHelper = __webpack_require__(3);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _loader = __webpack_require__(8);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _profileCard = __webpack_require__(13);

var _users = __webpack_require__(27);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InterestedUserList = exports.InterestedUserList = function (_React$Component) {
  _inherits(InterestedUserList, _React$Component);

  function InterestedUserList(props) {
    _classCallCheck(this, InterestedUserList);

    var _this = _possibleConstructorReturn(this, (InterestedUserList.__proto__ || Object.getPrototypeOf(InterestedUserList)).call(this, props));

    _this.loadData = _this.loadData.bind(_this);
    _this.renderList = _this.renderList.bind(_this);
    _this.authUser = (0, _authActions.getAuthUser)();
    return _this;
  }

  _createClass(InterestedUserList, [{
    key: "loadData",
    value: function loadData(page, offset) {
      // description
      return (0, _apiHelper.graphql)("query{ \n      interested_list(entity:\"" + this.props.entity + "\", \n      entity_id:" + this.props.entity_id + ",\n      page: " + page + ",\n      offset: " + offset + ",\n      is_interested : 1\n      ){\n      user_id\n      user{ID first_name last_name img_url img_pos img_size}}}");
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      this.offset = 8;
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var img = (0, _profileCard.createImageElement)(d.user.img_url, d.user.img_pos, d.user.img_size, "50px", "", _profileCard.PCType.STUDENT);

      return _react2.default.createElement(
        "div",
        {
          className: "flex-center",
          style: { margin: "0px", width: "50%", justifyContent: "flex-start" }
        },
        _react2.default.createElement(
          "div",
          null,
          img
        ),
        _react2.default.createElement(
          "div",
          { className: "text-left", style: { marginLeft: "10px" } },
          _react2.default.createElement(
            "b",
            null,
            (0, _users.createUserTitle)(d.user, {}, true, true)
          )
        )
      );
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      return res.data.data.interested_list;
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { style: { padding: "10px" } },
        _react2.default.createElement(
          "h3",
          { className: "text-left" },
          "Liked By"
        ),
        _react2.default.createElement(_list2.default, {
          isHidePagingTop: true,
          type: "list",
          listClass: "flex-wrap-start",
          pageClass: "text-left",
          getDataFromRes: this.getDataFromRes,
          loadData: this.loadData,
          offset: this.offset,
          renderList: this.renderList
        })
      );
    }
  }]);

  return InterestedUserList;
}(_react2.default.Component);

InterestedUserList.propTypes = {
  entity: _propTypes2.default.string,
  entity_id: _propTypes2.default.number
};

var InterestedButton = exports.InterestedButton = function (_React$Component2) {
  _inherits(InterestedButton, _React$Component2);

  function InterestedButton(props) {
    _classCallCheck(this, InterestedButton);

    var _this2 = _possibleConstructorReturn(this, (InterestedButton.__proto__ || Object.getPrototypeOf(InterestedButton)).call(this, props));

    _this2.onClickModeCount = _this2.onClickModeCount.bind(_this2);
    _this2.onClickModeAction = _this2.onClickModeAction.bind(_this2);
    _this2.authUser = (0, _authActions.getAuthUser)();
    _this2.state = {
      loading: false,
      ID: _this2.props.ID,
      is_interested: _this2.props.is_interested,
      count: 0
    };
    return _this2;
  }

  _createClass(InterestedButton, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this3 = this;

      if (this.props.isModeCount) {
        this.setState({ loading: true });
        var q = "query{ \n        interested_count(entity:\"" + this.props.entity + "\", entity_id:" + this.props.entity_id + ", is_interested:1) \n        {\n          total\n        }\n      }";

        (0, _apiHelper.graphql)(q).then(function (res) {
          _this3.setState({
            count: res.data.data.interested_count.total,
            loading: false
          });
        });
      }
    }
  }, {
    key: "onClickModeCount",
    value: function onClickModeCount(e) {
      if (this.props.isNonClickable) {
        return;
      }
      layoutActions.storeUpdateFocusCard("Liked By", InterestedUserList, {
        entity: this.props.entity,
        entity_id: this.props.entity_id
      });
    }
  }, {
    key: "onClickModeAction",
    value: function onClickModeAction(e) {
      var _this4 = this;

      if (this.props.isNonClickable) {
        return;
      }
      if (this.state.loading) {
        return;
      }
      this.setState({
        loading: true
      });

      var mutation = "";
      var q = "";
      if (this.state.ID) {
        // update
        var new_is_interested = this.state.is_interested == 1 ? 0 : 1;
        mutation = "edit_interested";
        q = "mutation { edit_interested (\n        ID:" + this.state.ID + ", \n        is_interested:" + new_is_interested + "\n        ) {ID is_interested} }";
      } else {
        // create
        mutation = "add_interested";
        q = "mutation { add_interested (\n        user_id:" + (this.props.customUserId ? this.props.customUserId : this.authUser.ID) + ", \n        entity:\"" + this.props.entity + "\",\n        entity_id:" + this.props.entity_id + "\n        ) {ID is_interested} }";
      }

      (0, _apiHelper.graphql)(q).then(function (res) {
        var d = res.data.data[mutation];

        if (_this4.props.finishHandler) {
          _this4.props.finishHandler(d.is_interested);
        }

        _this4.setState({
          ID: d.ID,
          is_interested: d.is_interested,
          loading: false
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      if (this.props.customView) {
        return this.props.customView({
          loading: this.state.loading,
          isModeCount: this.props.isModeCount,
          isModeAction: this.props.isModeAction,
          is_interested: this.state.is_interested,
          like_count: this.state.count,
          onClickModeCount: this.onClickModeCount,
          onClickModeAction: this.onClickModeAction
        });
      }

      var classBottom = this.props.isBottom ? "interested-bottom" : "";
      var v = null;
      if (this.props.isModeCount) {
        v = _react2.default.createElement(
          "div",
          {
            style: this.props.customStyle,
            className: "interested " + classBottom + " in-count"
          },
          this.state.loading ? _react2.default.createElement("i", { className: "fa fa-spinner fa-pulse" }) : _react2.default.createElement(
            "div",
            { onClick: this.onClickModeCount },
            _react2.default.createElement("i", { className: "fa fa-heart left" }),
            this.state.count
          )
        );
      } else if (this.props.isModeAction) {
        var iconLike = null;
        if (this.props.tooltipObj) {
          iconLike = _react2.default.createElement(_tooltip2.default, _extends({}, this.props.tooltipObj, {
            alignCenter: true,
            content: _react2.default.createElement("i", { onClick: this.onClickModeAction, className: "fa fa-heart" })

          }));
        } else {
          iconLike = _react2.default.createElement("i", { onClick: this.onClickModeAction, className: "fa fa-heart" });
        }

        v = _react2.default.createElement(
          "div",
          {
            style: this.props.customStyle,
            className: "interested " + classBottom + " in-action " + (this.state.is_interested == 1 ? "selected" : "")
          },
          this.state.loading ? _react2.default.createElement("i", { className: "fa fa-spinner fa-pulse" }) : iconLike
        );
      }

      return v;
    }
  }]);

  return InterestedButton;
}(_react2.default.Component);

InterestedButton.propTypes = {
  tooltipObj: _propTypes2.default.obj,
  finishHandler: _propTypes2.default.func,
  customStyle: _propTypes2.default.object,
  isBottom: _propTypes2.default.bool,
  customUserId: _propTypes2.default.number,
  customView: _propTypes2.default.func,
  isModeCount: _propTypes2.default.bool,
  isModeAction: _propTypes2.default.bool,
  isNonClickable: _propTypes2.default.bool,
  ID: _propTypes2.default.number,
  is_interested: _propTypes2.default.number,
  entity: _propTypes2.default.string,
  entity_id: _propTypes2.default.number
};

InterestedButton.defaultProps = {
  tooltipObj: null,
  customStyle: {},
  isBottom: false,
  isModeCount: false,
  isModeAction: false,
  isNonClickable: false
};

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(3),
    getAxiosGraphQLQuery = _require.getAxiosGraphQLQuery,
    getPHPApiAxios = _require.getPHPApiAxios,
    getWpAjaxAxios = _require.getWpAjaxAxios;

var _require2 = __webpack_require__(5),
    Queue = _require2.Queue,
    QueueEnum = _require2.QueueEnum,
    Session = _require2.Session,
    SessionEnum = _require2.SessionEnum,
    Prescreen = _require2.Prescreen;

var _require3 = __webpack_require__(4),
    SiteUrl = _require3.SiteUrl;

var _require4 = __webpack_require__(75),
    AuthUserKey = _require4.AuthUserKey;

var obj2arg = __webpack_require__(12);

var ActivityAPIErr = {
    HAS_SESSION: "HAS_SESSION"
};

var ActivityAPI = function () {
    function ActivityAPI() {
        _classCallCheck(this, ActivityAPI);
    }

    _createClass(ActivityAPI, [{
        key: 'createSession',
        value: function createSession(host_id, participant_id, entity, entity_id) {

            // 1. check if student has active session ------- start
            var query = 'query {user(ID:' + participant_id + ') {sessions{ID} } }';
            return getAxiosGraphQLQuery(query).then(function (res) {
                var s = res.data.data.user.sessions;

                if (s.length > 0) {
                    return ActivityAPIErr.HAS_SESSION;
                }

                // 2. create session ---------start
                var params = {
                    host_id: Number.parseInt(host_id),
                    participant_id: Number.parseInt(participant_id),
                    status: SessionEnum.STATUS_ACTIVE,
                    entity: entity,
                    entity_id: Number.parseInt(entity_id)
                };

                var query = 'mutation {add_session (' + obj2arg(params, { noOuterBraces: true }) + ') {ID} }';
                return getAxiosGraphQLQuery(query).then(function (res) {
                    var session = res.data.data.add_session;

                    // 3. update entity status to Done --start
                    var params = {
                        ID: Number.parseInt(entity_id),
                        status: "Done"
                    };

                    var mutation = "";
                    if (entity == Prescreen.TABLE) {
                        params.updated_by = Number.parseInt(host_id);
                        mutation = "edit_prescreen";
                    }

                    if (entity == Queue.TABLE) {
                        mutation = "edit_queue";
                    }

                    var query = 'mutation {' + mutation + ' (' + obj2arg(params, { noOuterBraces: true }) + ') {ID} }';

                    return getAxiosGraphQLQuery(query).then(function (res) {
                        return session;
                    }, function (err) {
                        return err.response.data;
                    });
                    // 3. -end
                }, function (err) {
                    return err.response.data;
                });
                // 2. -end
            }, function (err) {
                return err.response.data;
            });
            // 1. -end
        }
    }, {
        key: 'startQueue',
        value: function startQueue(student_id, company_id) {
            var params = {
                student_id: student_id,
                company_id: company_id,
                status: QueueEnum.STATUS_QUEUING
            };

            var query = 'mutation {add_queue(' + obj2arg(params, { noOuterBraces: true }) + ') {ID queue_num} }';
            return getAxiosGraphQLQuery(query).then(function (res) {
                return res.data.data.add_queue;
            }, function (err) {
                return err.response.data;
            });
        }
    }, {
        key: 'cancelQueue',
        value: function cancelQueue(id) {
            var query = 'mutation{edit_queue(ID:' + id + ', status:"' + QueueEnum.STATUS_CANCELED + '"){ID}}';
            return getAxiosGraphQLQuery(query).then(function (res) {
                return res.data.data.edit_queue;
            }, function (err) {
                return err.response.data;
            });
        }
    }]);

    return ActivityAPI;
}();

ActivityAPI = new ActivityAPI();
module.exports = { ActivityAPI: ActivityAPI, ActivityAPIErr: ActivityAPIErr };

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var ReactBaseClasses = __webpack_require__(186);
var ReactChildren = __webpack_require__(308);
var ReactDOMFactories = __webpack_require__(313);
var ReactElement = __webpack_require__(69);
var ReactPropTypes = __webpack_require__(314);
var ReactVersion = __webpack_require__(318);

var createReactClass = __webpack_require__(319);
var onlyChild = __webpack_require__(321);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (false) {
  var lowPriorityWarning = require('./lowPriorityWarning');
  var canDefineProperty = require('./canDefineProperty');
  var ReactElementValidator = require('./ReactElementValidator');
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;
var createMixin = function (mixin) {
  return mixin;
};

if (false) {
  var warnedForSpread = false;
  var warnedForCreateMixin = false;
  __spread = function () {
    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
    warnedForSpread = true;
    return _assign.apply(null, arguments);
  };

  createMixin = function (mixin) {
    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
    warnedForCreateMixin = true;
    return mixin;
  };
}

var React = {
  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: createReactClass,
  createFactory: createFactory,
  createMixin: createMixin,

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

if (false) {
  var warnedForCreateClass = false;
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });

    Object.defineProperty(React, 'createClass', {
      get: function () {
        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
        warnedForCreateClass = true;
        return createReactClass;
      }
    });
  }

  // React.DOM factories are deprecated. Wrap these methods so that
  // invocations of the React.DOM namespace and alert users to switch
  // to the `react-dom-factories` package.
  React.DOM = {};
  var warnedForFactories = false;
  Object.keys(ReactDOMFactories).forEach(function (factory) {
    React.DOM[factory] = function () {
      if (!warnedForFactories) {
        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
        warnedForFactories = true;
      }
      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
    };
  });
}

module.exports = React;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var ReactCurrentOwner = __webpack_require__(43);

var warning = __webpack_require__(16);
var canDefineProperty = __webpack_require__(188);
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = __webpack_require__(189);

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (false) {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (false) {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (false) {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (false) {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (false) {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (false) {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (false) {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {
  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactRef = __webpack_require__(331);
var ReactInstrumentation = __webpack_require__(38);

var warning = __webpack_require__(16);

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
  {
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }
};

module.exports = ReactReconciler;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMNamespaces = __webpack_require__(136);
var setInnerHTML = __webpack_require__(102);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(137);
var setTextContent = __webpack_require__(201);

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createBrowserHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createHashHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return createMemoryHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return createLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return locationsAreEqual; });
/* unused harmony export parsePath */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return createPath; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_resolve_pathname__ = __webpack_require__(401);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_value_equal__ = __webpack_require__(402);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_tiny_warning__ = __webpack_require__(403);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_tiny_invariant__ = __webpack_require__(404);






function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}
function hasBasename(path, prefix) {
  return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
}
function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}
function createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}

function createLocation(path, state, key, currentLocation) {
  var location;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = Object(__WEBPACK_IMPORTED_MODULE_1_resolve_pathname__["a" /* default */])(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
}
function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && Object(__WEBPACK_IMPORTED_MODULE_2_value_equal__["a" /* default */])(a.state, b.state);
}

function createTransitionManager() {
  var prompt = null;

  function setPrompt(nextPrompt) {
     false ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }

  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
           false ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }

  var listeners = [];

  function appendListener(fn) {
    var isActive = true;

    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */

function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

function isExtraneousPopstateEvent(event) {
  event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}

var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';

function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ?  false ? invariant(false, 'Browser history needs a DOM') : Object(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false) : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props,
      _props$forceRefresh = _props.forceRefresh,
      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';

  function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
     false ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path, state, key);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }

  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }

  var forceNextPop = false;

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }

  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + createPath(location);
  }

  function push(path, state) {
     false ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         false ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;
        window.location.href = href;
      }
    });
  }

  function replace(path, state) {
     false ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         false ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;
        window.location.replace(href);
      }
    });
  }

  function go(n) {
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

var HashChangeEvent$1 = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};

function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}

function pushHashPath(path) {
  window.location.hash = path;
}

function replaceHashPath(path) {
  var hashIndex = window.location.href.indexOf('#');
  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
}

function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ?  false ? invariant(false, 'Hash history needs a DOM') : Object(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false) : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$hashType = _props.hashType,
      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  function getDOMLocation() {
    var path = decodePath(getHashPath());
     false ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  var forceNextPop = false;
  var ignorePath = null;

  function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.


  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)]; // Public interface

  function createHref(location) {
    return '#' + encodePath(basename + createPath(location));
  }

  function push(path, state) {
     false ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
         false ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;
        setState();
      }
    });
  }

  function replace(path, state) {
     false ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
     false ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */


function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      getUserConfirmation = _props.getUserConfirmation,
      _props$initialEntries = _props.initialEntries,
      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
      _props$initialIndex = _props.initialIndex,
      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();

  function setState(nextState) {
    Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = createPath;

  function push(path, state) {
     false ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }

  function replace(path, state) {
     false ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    return transitionManager.setPrompt(prompt);
  }

  function listen(listener) {
    return transitionManager.appendListener(listener);
  }

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}




/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var keys = __webpack_require__(470);
var hasBinary = __webpack_require__(238);
var sliceBuffer = __webpack_require__(472);
var after = __webpack_require__(473);
var utf8 = __webpack_require__(474);

var base64encoder;
if (typeof ArrayBuffer !== 'undefined') {
  base64encoder = __webpack_require__(475);
}

/**
 * Check if we are running an android browser. That requires us to use
 * ArrayBuffer with polling transports...
 *
 * http://ghinda.net/jpeg-blob-ajax-android/
 */

var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

/**
 * Check if we are running in PhantomJS.
 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
 * https://github.com/ariya/phantomjs/issues/11395
 * @type boolean
 */
var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

/**
 * When true, avoids using Blobs to encode payloads.
 * @type boolean
 */
var dontSendBlobs = isAndroid || isPhantomJS;

/**
 * Current protocol version.
 */

exports.protocol = 3;

/**
 * Packet types.
 */

var packets = exports.packets = {
    open:     0    // non-ws
  , close:    1    // non-ws
  , ping:     2
  , pong:     3
  , message:  4
  , upgrade:  5
  , noop:     6
};

var packetslist = keys(packets);

/**
 * Premade error packet.
 */

var err = { type: 'error', data: 'parser error' };

/**
 * Create a blob api even for blob builder when vendor prefixes exist
 */

var Blob = __webpack_require__(476);

/**
 * Encodes a packet.
 *
 *     <packet type id> [ <data> ]
 *
 * Example:
 *
 *     5hello world
 *     3
 *     4
 *
 * Binary is encoded in an identical principle
 *
 * @api private
 */

exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = false;
  }

  if (typeof utf8encode === 'function') {
    callback = utf8encode;
    utf8encode = null;
  }

  var data = (packet.data === undefined)
    ? undefined
    : packet.data.buffer || packet.data;

  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {
    return encodeArrayBuffer(packet, supportsBinary, callback);
  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
    return encodeBlob(packet, supportsBinary, callback);
  }

  // might be an object with { base64: true, data: dataAsBase64String }
  if (data && data.base64) {
    return encodeBase64Object(packet, callback);
  }

  // Sending data as a utf-8 string
  var encoded = packets[packet.type];

  // data fragment is optional
  if (undefined !== packet.data) {
    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);
  }

  return callback('' + encoded);

};

function encodeBase64Object(packet, callback) {
  // packet data is an object { base64: true, data: dataAsBase64String }
  var message = 'b' + exports.packets[packet.type] + packet.data.data;
  return callback(message);
}

/**
 * Encode packet helpers for binary types
 */

function encodeArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var data = packet.data;
  var contentArray = new Uint8Array(data);
  var resultBuffer = new Uint8Array(1 + data.byteLength);

  resultBuffer[0] = packets[packet.type];
  for (var i = 0; i < contentArray.length; i++) {
    resultBuffer[i+1] = contentArray[i];
  }

  return callback(resultBuffer.buffer);
}

function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var fr = new FileReader();
  fr.onload = function() {
    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);
  };
  return fr.readAsArrayBuffer(packet.data);
}

function encodeBlob(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  if (dontSendBlobs) {
    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
  }

  var length = new Uint8Array(1);
  length[0] = packets[packet.type];
  var blob = new Blob([length.buffer, packet.data]);

  return callback(blob);
}

/**
 * Encodes a packet with binary data in a base64 string
 *
 * @param {Object} packet, has `type` and `data`
 * @return {String} base64 encoded message
 */

exports.encodeBase64Packet = function(packet, callback) {
  var message = 'b' + exports.packets[packet.type];
  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
    var fr = new FileReader();
    fr.onload = function() {
      var b64 = fr.result.split(',')[1];
      callback(message + b64);
    };
    return fr.readAsDataURL(packet.data);
  }

  var b64data;
  try {
    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
  } catch (e) {
    // iPhone Safari doesn't let you apply with typed arrays
    var typed = new Uint8Array(packet.data);
    var basic = new Array(typed.length);
    for (var i = 0; i < typed.length; i++) {
      basic[i] = typed[i];
    }
    b64data = String.fromCharCode.apply(null, basic);
  }
  message += btoa(b64data);
  return callback(message);
};

/**
 * Decodes a packet. Changes format to Blob if requested.
 *
 * @return {Object} with `type` and `data` (if any)
 * @api private
 */

exports.decodePacket = function (data, binaryType, utf8decode) {
  if (data === undefined) {
    return err;
  }
  // String data
  if (typeof data === 'string') {
    if (data.charAt(0) === 'b') {
      return exports.decodeBase64Packet(data.substr(1), binaryType);
    }

    if (utf8decode) {
      data = tryDecode(data);
      if (data === false) {
        return err;
      }
    }
    var type = data.charAt(0);

    if (Number(type) != type || !packetslist[type]) {
      return err;
    }

    if (data.length > 1) {
      return { type: packetslist[type], data: data.substring(1) };
    } else {
      return { type: packetslist[type] };
    }
  }

  var asArray = new Uint8Array(data);
  var type = asArray[0];
  var rest = sliceBuffer(data, 1);
  if (Blob && binaryType === 'blob') {
    rest = new Blob([rest]);
  }
  return { type: packetslist[type], data: rest };
};

function tryDecode(data) {
  try {
    data = utf8.decode(data, { strict: false });
  } catch (e) {
    return false;
  }
  return data;
}

/**
 * Decodes a packet encoded in a base64 string
 *
 * @param {String} base64 encoded message
 * @return {Object} with `type` and `data` (if any)
 */

exports.decodeBase64Packet = function(msg, binaryType) {
  var type = packetslist[msg.charAt(0)];
  if (!base64encoder) {
    return { type: type, data: { base64: true, data: msg.substr(1) } };
  }

  var data = base64encoder.decode(msg.substr(1));

  if (binaryType === 'blob' && Blob) {
    data = new Blob([data]);
  }

  return { type: type, data: data };
};

/**
 * Encodes multiple messages (payload).
 *
 *     <length>:data
 *
 * Example:
 *
 *     11:hello world2:hi
 *
 * If any contents are binary, they will be encoded as base64 strings. Base64
 * encoded strings are marked with a b before the length specifier
 *
 * @param {Array} packets
 * @api private
 */

exports.encodePayload = function (packets, supportsBinary, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = null;
  }

  var isBinary = hasBinary(packets);

  if (supportsBinary && isBinary) {
    if (Blob && !dontSendBlobs) {
      return exports.encodePayloadAsBlob(packets, callback);
    }

    return exports.encodePayloadAsArrayBuffer(packets, callback);
  }

  if (!packets.length) {
    return callback('0:');
  }

  function setLengthHeader(message) {
    return message.length + ':' + message;
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {
      doneCallback(null, setLengthHeader(message));
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(results.join(''));
  });
};

/**
 * Async array map using after
 */

function map(ary, each, done) {
  var result = new Array(ary.length);
  var next = after(ary.length, done);

  var eachWithIndex = function(i, el, cb) {
    each(el, function(error, msg) {
      result[i] = msg;
      cb(error, result);
    });
  };

  for (var i = 0; i < ary.length; i++) {
    eachWithIndex(i, ary[i], next);
  }
}

/*
 * Decodes data when a payload is maybe expected. Possible binary contents are
 * decoded from their base64 representation
 *
 * @param {String} data, callback method
 * @api public
 */

exports.decodePayload = function (data, binaryType, callback) {
  if (typeof data !== 'string') {
    return exports.decodePayloadAsBinary(data, binaryType, callback);
  }

  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var packet;
  if (data === '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

  var length = '', n, msg;

  for (var i = 0, l = data.length; i < l; i++) {
    var chr = data.charAt(i);

    if (chr !== ':') {
      length += chr;
      continue;
    }

    if (length === '' || (length != (n = Number(length)))) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    msg = data.substr(i + 1, n);

    if (length != msg.length) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    if (msg.length) {
      packet = exports.decodePacket(msg, binaryType, false);

      if (err.type === packet.type && err.data === packet.data) {
        // parser error in individual packet - ignoring payload
        return callback(err, 0, 1);
      }

      var ret = callback(packet, i + n, l);
      if (false === ret) return;
    }

    // advance cursor
    i += n;
    length = '';
  }

  if (length !== '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

};

/**
 * Encodes multiple messages (payload) as binary.
 *
 * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
 * 255><data>
 *
 * Example:
 * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
 *
 * @param {Array} packets
 * @return {ArrayBuffer} encoded payload
 * @api private
 */

exports.encodePayloadAsArrayBuffer = function(packets, callback) {
  if (!packets.length) {
    return callback(new ArrayBuffer(0));
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(data) {
      return doneCallback(null, data);
    });
  }

  map(packets, encodeOne, function(err, encodedPackets) {
    var totalLength = encodedPackets.reduce(function(acc, p) {
      var len;
      if (typeof p === 'string'){
        len = p.length;
      } else {
        len = p.byteLength;
      }
      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
    }, 0);

    var resultArray = new Uint8Array(totalLength);

    var bufferIndex = 0;
    encodedPackets.forEach(function(p) {
      var isString = typeof p === 'string';
      var ab = p;
      if (isString) {
        var view = new Uint8Array(p.length);
        for (var i = 0; i < p.length; i++) {
          view[i] = p.charCodeAt(i);
        }
        ab = view.buffer;
      }

      if (isString) { // not true binary
        resultArray[bufferIndex++] = 0;
      } else { // true binary
        resultArray[bufferIndex++] = 1;
      }

      var lenStr = ab.byteLength.toString();
      for (var i = 0; i < lenStr.length; i++) {
        resultArray[bufferIndex++] = parseInt(lenStr[i]);
      }
      resultArray[bufferIndex++] = 255;

      var view = new Uint8Array(ab);
      for (var i = 0; i < view.length; i++) {
        resultArray[bufferIndex++] = view[i];
      }
    });

    return callback(resultArray.buffer);
  });
};

/**
 * Encode as Blob
 */

exports.encodePayloadAsBlob = function(packets, callback) {
  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(encoded) {
      var binaryIdentifier = new Uint8Array(1);
      binaryIdentifier[0] = 1;
      if (typeof encoded === 'string') {
        var view = new Uint8Array(encoded.length);
        for (var i = 0; i < encoded.length; i++) {
          view[i] = encoded.charCodeAt(i);
        }
        encoded = view.buffer;
        binaryIdentifier[0] = 0;
      }

      var len = (encoded instanceof ArrayBuffer)
        ? encoded.byteLength
        : encoded.size;

      var lenStr = len.toString();
      var lengthAry = new Uint8Array(lenStr.length + 1);
      for (var i = 0; i < lenStr.length; i++) {
        lengthAry[i] = parseInt(lenStr[i]);
      }
      lengthAry[lenStr.length] = 255;

      if (Blob) {
        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
        doneCallback(null, blob);
      }
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(new Blob(results));
  });
};

/*
 * Decodes data when a payload is maybe expected. Strings are decoded by
 * interpreting each byte as a key code for entries marked to start with 0. See
 * description of encodePayloadAsBinary
 *
 * @param {ArrayBuffer} data, callback method
 * @api public
 */

exports.decodePayloadAsBinary = function (data, binaryType, callback) {
  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var bufferTail = data;
  var buffers = [];

  while (bufferTail.byteLength > 0) {
    var tailArray = new Uint8Array(bufferTail);
    var isString = tailArray[0] === 0;
    var msgLength = '';

    for (var i = 1; ; i++) {
      if (tailArray[i] === 255) break;

      // 310 = char length of Number.MAX_VALUE
      if (msgLength.length > 310) {
        return callback(err, 0, 1);
      }

      msgLength += tailArray[i];
    }

    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
    msgLength = parseInt(msgLength);

    var msg = sliceBuffer(bufferTail, 0, msgLength);
    if (isString) {
      try {
        msg = String.fromCharCode.apply(null, new Uint8Array(msg));
      } catch (e) {
        // iPhone Safari doesn't let you apply to typed arrays
        var typed = new Uint8Array(msg);
        msg = '';
        for (var i = 0; i < typed.length; i++) {
          msg += String.fromCharCode(typed[i]);
        }
      }
    }

    buffers.push(msg);
    bufferTail = sliceBuffer(bufferTail, msgLength);
  }

  var total = buffers.length;
  buffers.forEach(function(buffer, i) {
    callback(exports.decodePacket(buffer, binaryType, true), i, total);
  });
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var AuthUserKey = ["ID", "user_email", "user_pass", "user_status", "first_name", "last_name", "role", "rec_company", "cf", "img_url", "img_pos", "img_size"];

var AuthAPIErr = {
	WRONG_PASS: "WRONG_PASS",
	INVALID_EMAIL: "INVALID_EMAIL",
	NOT_ACTIVE: "NOT_ACTIVE",
	INVALID_ACTIVATION: "INVALID_ACTIVATION",
	INVALID_CF: "INVALID_CF",
	TOKEN_INVALID: "TOKEN_INVALID",
	TOKEN_EXPIRED: "TOKEN_EXPIRED"
};

module.exports = {
	AuthUserKey: AuthUserKey,
	AuthAPIErr: AuthAPIErr
};

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(261);
var defined = __webpack_require__(161);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(560);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = getCurrentHref;

var _canUseDom = __webpack_require__(274);

var _canUseDom2 = _interopRequireDefault(_canUseDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getCurrentHref() {
  if (!_canUseDom2.default) {
    return 'http://www.facebook.com';
  }

  return location.href;
}
//# sourceMappingURL=getCurrentHref.js.map

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TYPE_PRIVATE_SESSION = exports.TYPE_GROUP_SESSION = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.startVideoCall = startVideoCall;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _chat = __webpack_require__(42);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _time = __webpack_require__(9);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _dbConfig = __webpack_require__(5);

var _socketClient = __webpack_require__(17);

var _appConfig = __webpack_require__(4);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TYPE_GROUP_SESSION = exports.TYPE_GROUP_SESSION = "TYPE_GROUP_SESSION";
var TYPE_PRIVATE_SESSION = exports.TYPE_PRIVATE_SESSION = "TYPE_PRIVATE_SESSION";

function startVideoCall(e, _ref) {
  var type = _ref.type,
      user_id = _ref.user_id,
      bindedSuccessHandler = _ref.bindedSuccessHandler;

  var id = void 0,
      start_time = void 0,
      to_trigger_ids = void 0,
      to_trigger_entity = void 0,
      fn_recDoStart_getQuery = void 0;

  switch (type) {
    case TYPE_GROUP_SESSION:
      id = e.currentTarget.dataset.id;
      id = Number.parseInt(id);

      start_time = e.currentTarget.dataset.start_time;
      start_time = Number.parseInt(start_time);

      to_trigger_ids = e.currentTarget.dataset.joiners;
      to_trigger_ids = JSON.parse(to_trigger_ids);

      to_trigger_entity = hallAction.ActivityType.GROUP_SESSION_JOIN;

      fn_recDoStart_getQuery = function fn_recDoStart_getQuery(join_url, start_url) {
        var updateData = {};
        updateData[_dbConfig.GroupSession.ID] = id;
        updateData[_dbConfig.GroupSession.JOIN_URL] = join_url;
        updateData[_dbConfig.GroupSession.START_URL] = start_url;
        updateData[_dbConfig.GroupSession.UPDATED_BY] = user_id;

        // update group session with join_url data
        var query = "mutation { edit_group_session \n                    (" + (0, _graphqlObj2arg2.default)(updateData, { noOuterBraces: true }) + ")\n                    {ID}\n                }";
        return query;
      };
      break;

    case TYPE_PRIVATE_SESSION:
      id = e.currentTarget.dataset.id;
      id = Number.parseInt(id);

      start_time = e.currentTarget.dataset.appointment_time;
      start_time = Number.parseInt(start_time);

      to_trigger_ids = e.currentTarget.dataset.participant_id;
      to_trigger_ids = [to_trigger_ids];

      to_trigger_entity = hallAction.ActivityType.PRESCREEN;

      fn_recDoStart_getQuery = function fn_recDoStart_getQuery(join_url, start_url) {
        var updateData = {};
        updateData[_dbConfig.Prescreen.ID] = id;
        updateData[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_STARTED;
        updateData[_dbConfig.Prescreen.JOIN_URL] = join_url;
        updateData[_dbConfig.Prescreen.START_URL] = start_url;
        updateData[_dbConfig.Prescreen.UPDATED_BY] = user_id;

        // update group session with join_url data
        var query = "mutation { edit_prescreen \n                    (" + (0, _graphqlObj2arg2.default)(updateData, { noOuterBraces: true }) + ")\n                    {ID}\n                }";
        return query;
      };
      break;
  }

  // var host_id = getAuthUser().ID;
  // var participant_id = e.currentTarget.dataset.pid;
  // var entity = e.currentTarget.dataset.entity;
  // var entity_id = e.currentTarget.dataset.entity_id;

  var recDoStart = function recDoStart(join_url, start_url) {
    var query = fn_recDoStart_getQuery(join_url, start_url);
    (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
      // emit to joiners to reload group session dorang
      for (var i in to_trigger_ids) {
        (0, _socketClient.emitHallActivity)(to_trigger_entity, to_trigger_ids[i], null);
      }
      layoutActions.storeHideBlockLoader();
      bindedSuccessHandler();
    });
  };

  var confirmCreateWithGruveo = function confirmCreateWithGruveo() {
    var url = (0, _chat.createGruveoLink)(id, true);
    (0, _chat.addLogCreateCall)({
      isGruveo: true,
      pre_screen_id: type == TYPE_PRIVATE_SESSION ? id : undefined,
      group_session_id: type == TYPE_GROUP_SESSION ? id : undefined,
      url: url
    });
    recDoStart(url, url);
    window.open(url);
  };

  var confirmCreateWithDailyCo = function confirmCreateWithDailyCo() {
    (0, _chat.addLogCreateCall)({
      isDailyCo: true,
      pre_screen_id: type == TYPE_PRIVATE_SESSION ? id : undefined,
      group_session_id: type == TYPE_GROUP_SESSION ? id : undefined
    });

    layoutActions.loadingBlockLoader("Creating Video Call Session. Please Do Not Close Window.");

    (0, _apiHelper.postAxios)(_appConfig.DailyCoCreateRoomUrl, {}).then(function (data) {
      data = data.data;
      console.log("DailyCoCreateRoomUrl", data);
      if (data == null || data == "" || (typeof data === "undefined" ? "undefined" : _typeof(data)) != "object") {
        layoutActions.errorBlockLoader("Failed to create video call session. Please check your internet connection");
        return;
      }

      var body = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h4",
          { className: "text-primary" },
          "Successfully Created Video Call Session"
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "a",
          {
            href: data.url,
            target: "_blank",
            className: "btn btn-success btn-lg",
            onClick: function onClick() {
              recDoStart(data.url, data.url);
            }
          },
          "Start Video Call"
        )
      );
      layoutActions.customBlockLoader(body, null, null, null);
    }).catch(function (err) {
      console.log("DailyCoCreateRoomUrl", err);
      console.log("DailyCoCreateRoomUrl", err.data);
      layoutActions.errorBlockLoader("Failed to create video call session. Please check your internet connection");
      return;
    });
  };

  var confirmCreateWithZoom = function confirmCreateWithZoom() {
    (0, _chat.addLogCreateCall)({
      isZoom: true,
      pre_screen_id: type == TYPE_PRIVATE_SESSION ? id : undefined,
      group_session_id: type == TYPE_GROUP_SESSION ? id : undefined
    });

    layoutActions.loadingBlockLoader("Creating Video Call Session. Please Do Not Close Window.");
    var successInterceptor = function successInterceptor(data) {
      /*
            {"uuid":"bou80/LrR6a0cmDKC4V5aA=="
            ,"id":646923659,"host_id":"-9e--206RFiZFE0hSh-RPQ"
            ,"topic":"Let's start a video call."
            ,"password":"","h323_password":""
            ,"status":0,"option_jbh":false
            ,"option_start_type":"video"
            ,"option_host_video":true,"option_participants_video":true
            ,"option_cn_meeting":false,"option_enforce_login":false
            ,"option_enforce_login_domains":"","option_in_meeting":false
            ,"option_audio":"both","option_alternative_hosts":""
            ,"option_use_pmi":false,"type":1,"start_time":""
            ,"duration":0,"timezone":"America/Los_Angeles"
            ,"start_url":"https://zoom.us/s/646923659?zpk=NcbawuQ7mSE9jfEBdcGMfwxumZzC21eWgm2v6bQ9S6k.AwckNGQwMWY3NWQtNDZhMC00MzU2LTg0M2MtNGVlNWI1MmUzOWY5Fi05ZS0tMjA2UkZpWkZFMGhTaC1SUFEWLTllLS0yMDZSRmlaRkUwaFNoLVJQURJ0ZXN0LnJlY0BnbWFpbC5jb21jAHBTRm01T3I3ZVprU0RGczJCeVRFTlZ5N1k0cE1Zcm5scFF5R3pQZ2RLQjY4LkJnUWdVMDVMU1U1cGNFVmpWeTlESzB0NVVGRm5SbWx3YnpNNFRFNVdWSGxZWjJrQUFBd3pRMEpCZFc5cFdWTXpjejBBAAAWcDF2Skd0YUJRV3k0WC15NzVGRmVtQQIBAQA"
            ,"join_url":"https://zoom.us/j/646923659","created_at":"2018-01-31T02:08:02Z"}
            */

      if (data == null || data == "" || (typeof data === "undefined" ? "undefined" : _typeof(data)) != "object") {
        layoutActions.errorBlockLoader("Failed to create video call session. Please check your internet connection");
        return;
      }

      console.log("success createVideoCall", data);
      var body = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h4",
          { className: "text-primary" },
          "Successfully Created Video Call Session"
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "a",
          {
            href: data.start_url,
            target: "_blank",
            className: "btn btn-success btn-lg",
            onClick: function onClick() {
              recDoStart(data.join_url, data.start_url);
            }
          },
          "Start Video Call"
        )
      );
      layoutActions.customBlockLoader(body, null, null, null);
    };

    var data = {
      query: "create_meeting",
      host_id: user_id
    };
    if (type == TYPE_GROUP_SESSION) {
      data.group_session_id = id;
    } else if (type == TYPE_PRIVATE_SESSION) {
      data.pre_screen_id = id;
    }

    (0, _apiHelper.getWpAjaxAxios)("wzs21_zoom_ajax", data, successInterceptor, true);
  };

  // New Gruveo
  // choose between zoom or chrome
  var recConfirmCreate = function recConfirmCreate() {
    if (_appConfig.IsDailyCoEnable) {
      confirmCreateWithDailyCo();
    } else if (_appConfig.IsGruveoEnable) {
      var width = "100px";
      var v = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "div",
          {
            onClick: function onClick() {
              confirmCreateWithGruveo();
            },
            style: { width: width },
            className: "btn btn-blue"
          },
          "Chrome"
        ),
        _react2.default.createElement(
          "div",
          {
            onClick: function onClick() {
              confirmCreateWithZoom();
            },
            style: { width: width },
            className: "btn btn-blue"
          },
          "Zoom"
        )
      );
      layoutActions.customViewBlockLoader("Create Video Call With", v);
    } else {
      confirmCreateWithZoom();
    }
  };

  // open confirmation if time now is less than start time
  if (_time.Time.getUnixTimestampNow() < start_time) {
    var title = _react2.default.createElement(
      "div",
      null,
      "It is not the time yet",
      _react2.default.createElement("br", null),
      _react2.default.createElement(
        "small",
        null,
        "This session was scheduled on",
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "u",
          null,
          _time.Time.getString(start_time)
        ),
        _react2.default.createElement("br", null),
        "Continue to start video call now?"
      )
    );
    layoutActions.confirmBlockLoader(title, function () {
      recConfirmCreate();
    });
  } else {
    recConfirmCreate();
  }
}

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _time = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/toogle-timezone.scss");

var ToogleTimezone = function (_React$Component) {
  _inherits(ToogleTimezone, _React$Component);

  function ToogleTimezone(props) {
    _classCallCheck(this, ToogleTimezone);

    var _this = _possibleConstructorReturn(this, (ToogleTimezone.__proto__ || Object.getPrototypeOf(ToogleTimezone)).call(this, props));

    _this.defaultTimezone = _time.Time.ALT_TIMEZONE_SHORT;
    _this.myTimezone = _time.Time.getTimezoneShort();

    var defaultTime = _this.props.createDefaultTime(_this.props.unixtimestamp, _this.myTimezone);

    console.log("this.defaultTimezone", _this.defaultTimezone);
    console.log("this.myTimezone", _this.myTimezone);

    _this.state = {
      isDefaultTime: false,
      body: _this.props.createBody(defaultTime)
    };

    return _this;
  }

  _createClass(ToogleTimezone, [{
    key: "onClickCheckbox",
    value: function onClickCheckbox() {
      var _this2 = this;

      this.setState(function (prevState) {
        var newBody = null;
        if (prevState.isDefaultTime) {
          newBody = _this2.props.createBody(_this2.props.createDefaultTime(_this2.props.unixtimestamp, _this2.myTimezone));
        } else {
          newBody = _this2.props.createBody(_this2.props.createAlternateTime(_this2.props.unixtimestamp, _this2.defaultTimezone));
        }

        return {
          body: newBody,
          isDefaultTime: !prevState.isDefaultTime
        };
      });
    }
  }, {
    key: "getTextStyle",
    value: function getTextStyle(txt) {
      var toRet = {};
      if (txt.length > 3) {
        toRet["fontSize"] = "75%";
      }

      return toRet;
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var onClick = function onClick(ev) {
        _this3.onClickCheckbox();
      };
      var toggler = null;
      if (this.props.createCustomToggler) {
        toggler = this.props.createCustomToggler(this.state.isDefaultTime, onClick);
      } else {
        toggler = _react2.default.createElement(
          "label",
          { className: "app-switch" },
          _react2.default.createElement("input", {
            type: "checkbox",
            onClick: onClick
          }),
          _react2.default.createElement(
            "span",
            { className: "as-slider round" },
            _react2.default.createElement(
              "div",
              { className: "as-text-container" },
              _react2.default.createElement(
                "div",
                { style: this.getTextStyle(this.defaultTimezone),
                  className: "as-text text-left flex-center" },
                this.defaultTimezone
              ),
              _react2.default.createElement(
                "div",
                { style: this.getTextStyle(this.myTimezone),
                  className: "as-text text-right flex-center" },
                this.myTimezone
              )
            )
          )
        );
      }
      return _react2.default.createElement(
        "div",
        null,
        this.props.createView(this.state.body, toggler)
      );
    }
  }]);

  return ToogleTimezone;
}(_react2.default.Component);

exports.default = ToogleTimezone;


ToogleTimezone.propTypes = {
  createCustomToggler: _propTypes2.default.func,
  unixtimestamp: _propTypes2.default.any.isRequired,
  createBody: _propTypes2.default.func,
  createView: _propTypes2.default.func,
  createDefaultTime: _propTypes2.default.func,
  createAlternateTime: _propTypes2.default.func
};

ToogleTimezone.defaultProps = {};

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _loader = __webpack_require__(8);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _time = __webpack_require__(9);

var _authActions = __webpack_require__(2);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// min interval
// require('../css/availability.scss');

var IS_SET = "is-set";
var IS_BOOKED = "is-booked";
var IS_DEFAULT = "is-default";
var IS_SELECT = "is-select";
var IS_EMPTY = "is-empty";

var AvailabilityView = function (_React$Component) {
    _inherits(AvailabilityView, _React$Component);

    function AvailabilityView(props) {
        _classCallCheck(this, AvailabilityView);

        var _this = _possibleConstructorReturn(this, (AvailabilityView.__proto__ || Object.getPrototypeOf(AvailabilityView)).call(this, props));

        _this.INTERVAL_MIN = 30;
        _this.minHour = 99999;
        _this.maxHour = 0;

        // init to today
        var curDateUnix = _time.Time.getUnixFromDateTimeInput(_time.Time.getDateDay("now"), "00:00");
        _this.state = {
            data: [],
            loading: true,
            curDateUnix: curDateUnix
        };

        _this.cfStartUnix = null;
        _this.cfEndUnix = null;
        _this.validUnix = [];

        _this.initScheduleTime();
        return _this;
    }

    _createClass(AvailabilityView, [{
        key: 'initScheduleTime',
        value: function initScheduleTime() {
            if (!this.isFeatureAvailable()) {
                return;
            }

            var schObj = (0, _authActions.getCFObj)().schedule;
            var timezone = schObj.timezone;
            var data = schObj.data;
            var startStr = data[0].date + " " + data[0].start + " " + timezone;
            var endStr = data[data.length - 1].date + " " + data[data.length - 1].end + " " + timezone;

            for (var i in data) {
                var startStr = data[i].date + " " + data[i].start + " " + timezone;
                var endStr = data[i].date + " " + data[i].end + " " + timezone;

                var startUnix = _time.Time.convertDBTimeToUnix(startStr);
                var endUnix = _time.Time.convertDBTimeToUnix(endStr);

                // set valid unix
                this.validUnix.push({ start: startUnix, end: endUnix });

                // set cf start unix
                if (this.cfStartUnix == null || startUnix < this.cfStartUnix) {
                    this.cfStartUnix = startUnix;
                }

                // set cf end unix
                if (this.cfEndUnix == null || endUnix > this.cfEndUnix) {
                    this.cfEndUnix = endUnix;
                }
            }
        }
    }, {
        key: 'isFeatureAvailable',
        value: function isFeatureAvailable() {
            var cfObj = (0, _authActions.getCFObj)();
            return typeof cfObj.schedule !== "undefined" && cfObj.schedule !== null;
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            if (!this.isFeatureAvailable() || this.props.user_id === null) {
                this.setState(function () {
                    return { loading: false };
                });

                return;
            }

            var query = 'query{ availabilities(user_id:' + this.props.user_id + ') \n            { ID timestamp is_booked company{ID name} } }';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                _this2.setState(function () {
                    return { data: res.data.data.availabilities, loading: false };
                });
            });
        }
    }, {
        key: 'convertCFTimeStrToInt',
        value: function convertCFTimeStrToInt(cfTime) {
            var ret = _time.Time.convertDBTimeToUnix(cfTime);
            return this.convertUnixToInt(ret);
        }
    }, {
        key: 'convertUnixToInt',
        value: function convertUnixToInt(unix) {
            var ret = _time.Time.getDateTime(unix);
            ret = this.convertTimeToInt(ret);
            return ret;
        }
    }, {
        key: 'convertTimeToInt',
        value: function convertTimeToInt(time) {
            var ret = time.replace(":", "");
            ret = Number.parseInt(ret);
            return ret;
        }
        // set the min and mix hour in this timezone

    }, {
        key: 'addToMinMaxHour',
        value: function addToMinMaxHour(unix) {
            var hourInt = this.convertUnixToInt(unix);
            if (hourInt < this.minHour) {
                this.minHour = hourInt;
            }
            if (hourInt > this.maxHour) {
                this.maxHour = hourInt;
            }
        }
    }, {
        key: 'isTimestampValid',
        value: function isTimestampValid(unix) {
            // check from this.validUnix
            for (var i in this.validUnix) {
                var start = this.validUnix[i].start;
                var end = this.validUnix[i].end;
                if (unix >= start && unix < end) {
                    return true;
                }
            }

            return false;

            // time = this.convertTimeToInt(time);

            // this.hourStart = this.convertCFTimeStrToInt(cfObj.schedule_time_start);
            // this.hourEnd = this.convertCFTimeStrToInt(cfObj.schedule_time_end);
            // return false;
        }
    }, {
        key: 'mapDataAsTimestamp',
        value: function mapDataAsTimestamp(data) {
            var ret = {};
            for (var i in data) {
                var key = data[i].timestamp + "";
                ret[key] = data[i];
                ret[key]["index"] = i;
            }

            return ret;
        }
    }, {
        key: 'dbCreateAv',
        value: function dbCreateAv(timestamp, handler) {
            var query = 'mutation{add_availability(user_id:' + this.props.user_id + ',timestamp:' + timestamp + ') { ID } }';
            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                handler(res.data.data.add_availability);
            });
        }
    }, {
        key: 'dbDeleteAv',
        value: function dbDeleteAv(ID, handler) {
            var query = 'mutation{ delete_availability(ID:' + ID + ')}';
            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                handler(res);
            });
        }
        // dbUpdateAv(company_id, handler) {
        //     var query = `query{ availabilities(user_id:${this.props.user_id}) 
        //     { ID timestamp is_booked company{ID name} } }`;

        //     getAxiosGraphQLQuery(query).then((res) => {
        //         handler(res);
        //     });
        // }

    }, {
        key: 'onClickLi',
        value: function onClickLi(e) {
            var _this3 = this;

            var index = e.currentTarget.dataset.index;
            var id = e.currentTarget.dataset.id;
            var timestamp = e.currentTarget.dataset.timestamp;
            var className = e.currentTarget.className;
            //console.log(index, id, timestamp, className);


            var isDefault = className.indexOf(IS_DEFAULT) >= 0;
            var isSet = className.indexOf(IS_SET) >= 0;
            var isBooked = className.indexOf(IS_BOOKED) >= 0;

            // for edit profile
            if (this.props.set_only) {
                // set to is set
                if (isDefault) {
                    console.log("do set from default to is set");
                    this.dbCreateAv(timestamp, function (res) {
                        _this3.setState(function (prevState) {
                            var newData = { ID: res.ID, timestamp: timestamp };
                            prevState.data.push(newData);
                            return { data: prevState.data };
                        });
                    });
                }
                // reset to default
                else if (isSet) {
                        console.log("do set from is set to default");
                        this.dbDeleteAv(id, function (res) {
                            _this3.setState(function (prevState) {
                                prevState.data.splice(index, 1);
                                return { data: prevState.data };
                            });
                        });
                    }
            }
            // for schedule
            else if (this.props.book_only) {
                    // set to is book
                    if (isSet) {
                        console.log("do set from is set to booked");
                        this.props.onSelect(id, timestamp);
                    }
                }
                // for general purpose select
                else if (this.props.for_general) {
                        if (isDefault) {
                            this.props.onSelect(id, timestamp);
                        }
                    }
        }
    }, {
        key: 'getPlaceholderData',
        value: function getPlaceholderData(data) {
            var startUnix = this.cfStartUnix;
            var endUnix = this.cfEndUnix;

            var mappedData = this.mapDataAsTimestamp(data);
            var r = {};
            var cur = startUnix;
            while (cur < endUnix) {

                var curDay = _time.Time.getDateDay(cur);
                if (typeof r[curDay] === "undefined") {
                    r[curDay] = [];
                }

                // create data for placeholder
                var time = _time.Time.getDateTime(cur);
                var dayStr = _time.Time.getDateDayStr(cur);
                var is_set = false;
                var is_booked = false;
                var ID = null;
                var raw = null;
                var index = null;
                var count = this.props.count_data[cur] !== "undefined" ? this.props.count_data[cur] : null;

                if (this.isTimestampValid(cur)) {
                    if (typeof mappedData[cur] !== "undefined") {
                        raw = mappedData[cur];
                        is_set = true;
                        is_booked = raw.is_booked;
                        index = raw.index;
                        ID = raw.ID;
                    }

                    var timeStr = _time.Time.getDateTime(cur, true);
                    r[curDay].push({
                        index: index,
                        ID: ID,
                        is_set: is_set,
                        is_booked: is_booked,
                        timestamp: cur,
                        time: timeStr,
                        dayStr: dayStr,
                        raw: raw,
                        count: count
                    });
                    this.addToMinMaxHour(cur);
                } else {
                    //r[curDay].push(this.getEmptyItem(dayStr));
                }

                cur += this.INTERVAL_MIN * 60;
            }

            // add empty hour according to min and max
            for (var day in r) {
                var items = r[day];
                var firstUnix = items[0].timestamp;
                var diff = this.convertUnixToInt(firstUnix) - this.minHour;

                if (diff > 0) {
                    var emptyCount = diff / this.INTERVAL_MIN * 60 / 100;
                    for (var i = 0; i < emptyCount; i++) {
                        r[day].unshift(this.getEmptyItem(items[0].dayStr));
                    }
                }

                var lastUnix = items[items.length - 1].timestamp;
                var diff = this.maxHour - this.convertUnixToInt(lastUnix);

                if (diff > 0) {
                    var emptyCount = diff / this.INTERVAL_MIN * 60 / 100;
                    for (var i = 0; i < emptyCount; i++) {
                        r[day].push(this.getEmptyItem(items[0].dayStr));
                    }
                }
            }

            return r;
        }
    }, {
        key: 'getEmptyItem',
        value: function getEmptyItem(dayStr) {
            return {
                is_empty: true,
                dayStr: dayStr,
                time: "N/A"
            };
        }
    }, {
        key: 'getPlaceholderView',
        value: function getPlaceholderView(data) {
            var _this4 = this;

            var r = this.getPlaceholderData(data);

            console.log("minmax", this.minHour, this.maxHour);
            console.log("this.props.select_timestamp", this.props.select_timestamp);

            var view = [];
            for (var day in r) {
                var dayData = r[day];
                var dayStr = null;
                var list = dayData.map(function (d, i) {

                    var cls = "av-li";
                    if (d.is_empty === true) {
                        cls += " " + IS_EMPTY;
                    } else if (_this4.props.select_id == d.ID) {
                        cls += " " + IS_SELECT;
                    } else if (_this4.props.select_timestamp == d.timestamp) {
                        cls += " " + IS_SELECT;
                    } else if (d.is_booked) {
                        cls += " " + IS_BOOKED;
                    } else if (d.is_set) {
                        cls += " " + IS_SET;
                    } else {
                        cls += " " + IS_DEFAULT;
                    }

                    dayStr = d.dayStr;
                    var tooltip = null;

                    // for student is set only
                    // show tooltip in booked
                    if (d.is_booked && _this4.props.set_only) {
                        if (d.raw !== null && d.raw.company) {
                            tooltip = 'Scheduled Call with ' + d.raw.company.name;
                        }
                    }

                    var debug = tooltip == null ? false : true;

                    var content = _react2.default.createElement(
                        'li',
                        { onClick: function onClick(e) {
                                _this4.onClickLi(e);
                            },
                            'data-id': d.ID,
                            'data-timestamp': d.timestamp,
                            'data-index': d.index,
                            className: cls },
                        d.time,
                        d.count == null ? null : _react2.default.createElement(
                            'div',
                            { className: 'av-li-count' },
                            d.count
                        )
                    );

                    return _react2.default.createElement(_tooltip2.default, {
                        bottom: '35px',
                        left: '-68px',
                        width: '140px',
                        alignCenter: true,
                        debug: false,
                        content: content,
                        tooltip: tooltip });

                    //return <li data-id={d.ID} data-timestamp={d.timestamp} className={cls}>{d.time}</li>
                });

                view.push(_react2.default.createElement(
                    'div',
                    { className: 'av-group' },
                    _react2.default.createElement(
                        'div',
                        { className: 'av-day' },
                        dayStr
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'av-date' },
                        day
                    ),
                    _react2.default.createElement(
                        'ul',
                        null,
                        list
                    )
                ));
            }

            // debug
            //return [<div className="availability set-only">{view}</div>
            //    , <div className="availability book-only">{view}</div>];

            var clsName = "";
            if (this.props.set_only) {
                clsName = "set-only";
            } else if (this.props.book_only) {
                clsName = "book-only";
            } else if (this.props.for_general) {
                clsName = "for-general";
            }

            return _react2.default.createElement(
                'div',
                { className: 'availability ' + clsName },
                view
            );

            //return <div className="availability">{view}</div>;
        }
    }, {
        key: 'render',
        value: function render() {
            var view = null;
            var errMes = null;
            if (this.state.loading) {
                view = _react2.default.createElement(_loader.Loader, { size: '2', text: 'Loading Availability..' });
            } else {
                if (this.isFeatureAvailable()) {
                    view = this.getPlaceholderView(this.state.data);
                    if (this.props.user_id !== null && (!Array.isArray(this.state.data) || this.state.data.length <= 0)) {
                        errMes = _react2.default.createElement(
                            'span',
                            null,
                            'It seems that this student had not set his/her availability.',
                            _react2.default.createElement('br', null),
                            'Please continue with other student'
                        );
                    }
                } else {
                    view = _react2.default.createElement(
                        'span',
                        null,
                        'This feature does not available for ',
                        (0, _authActions.getCFObj)().title
                    );
                }
            }

            return _react2.default.createElement(
                'div',
                null,
                this.props.set_only ? _react2.default.createElement(
                    'h3',
                    { 'class': 'text-muted' },
                    'Availability',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        'Set Your Availability For Scheduled Call'
                    ),
                    this.props.for_sign_up ? _react2.default.createElement(
                        'small',
                        null,
                        _react2.default.createElement('br', null),
                        '** This can be changed later **'
                    ) : null
                ) : _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'h4',
                        { 'class': 'text-muted' },
                        'Select A Time For ',
                        this.props.select_for
                    ),
                    errMes !== null ? _react2.default.createElement(
                        'div',
                        { className: 'form-error alert alert-danger' },
                        errMes
                    ) : null
                ),
                view
            );
        }
    }]);

    return AvailabilityView;
}(_react2.default.Component);

exports.default = AvailabilityView;


AvailabilityView.propTypes = {
    user_id: _propTypes2.default.number,
    set_only: _propTypes2.default.bool,
    book_only: _propTypes2.default.bool,
    for_general: _propTypes2.default.bool,
    select_id: _propTypes2.default.number,
    select_timestamp: _propTypes2.default.number,
    select_for: _propTypes2.default.string,
    for_sign_up: _propTypes2.default.bool,
    onSelect: _propTypes2.default.func,

    // for create group session recruiter
    // {timestamp : count}
    count_data: _propTypes2.default.object
};

AvailabilityView.defaultProps = {
    count_data: [],
    user_id: null,
    for_sign_up: false,
    select_id: -1,
    select_timestamp: -1,
    select_for: "Scheduled Call"
};

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.createCompanyTitle = createCompanyTitle;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _buttons = __webpack_require__(15);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _authActions = __webpack_require__(2);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _appConfig = __webpack_require__(4);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _reactRouterDom = __webpack_require__(7);

var _dbConfig = __webpack_require__(5);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//importing for list


function createCompanyTitleLink(d) {
    var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

    if (d == null) {
        return null;
    }
    var name = d.name;
    var focusedName = name.focusSubstring(search);
    focusedName = _react2.default.createElement(_reactRouterDom.NavLink, { target: '_blank', to: _appConfig.AppPath + ('/company/' + d.ID), dangerouslySetInnerHTML: { __html: focusedName } });
    return _react2.default.createElement(
        'span',
        null,
        focusedName
    );
}

function createCompanyTitle(d) {
    var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

    if (_appConfig.IsNewHall) {
        return createCompanyTitleLink(d, search);
    }

    if (d == null) {
        return null;
    }

    var name = d.name;
    var focusedName = name.focusSubstring(search);
    focusedName = _react2.default.createElement('a', { onClick: function onClick() {
            layoutActions.storeUpdateFocusCard(name, _companyPopup2.default, { id: d.ID, displayOnly: true });
        }, dangerouslySetInnerHTML: { __html: focusedName } });

    return _react2.default.createElement(
        'span',
        null,
        focusedName
    );
}

var CompaniesPage = function (_React$Component) {
    _inherits(CompaniesPage, _React$Component);

    function CompaniesPage(props) {
        _classCallCheck(this, CompaniesPage);

        var _this = _possibleConstructorReturn(this, (CompaniesPage.__proto__ || Object.getPrototypeOf(CompaniesPage)).call(this, props));

        _this.formOnSubmit = _this.formOnSubmit.bind(_this);
        _this.state = {
            error: null,
            disableSubmit: false,
            success: null,
            key: 1
        };
        return _this;
    }

    _createClass(CompaniesPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.offset = 5;
            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        '#'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'ID'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'CF'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Company'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'About'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Privilege'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Export Data'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Recruiters'
                    )
                )
            );

            this.addFormItem = [{
                name: _dbConfig.Company.NAME,
                type: "text",
                placeholder: "Company Name",
                required: true
            }];
        }
    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            var _this2 = this;

            //getAxiosGraphQLQuery
            (0, _form.toggleSubmit)(this, { error: null });
            (0, _apiHelper.getAxiosGraphQLQuery)('mutation{add_company(name:"' + d.name + '"){ID name}}').then(function (res) {
                var mes = 'Successfully Added New Company!';
                (0, _form.toggleSubmit)(_this2, { error: null, success: mes, key: _this2.state.key + 1 });
            });
        }
    }, {
        key: 'loadData',
        value: function loadData(page, offset) {
            var params = {
                include_sponsor: 1,
                order_by: "updated_at desc",
                page: page,
                offset: offset
            };

            if ((0, _authActions.isRoleOrganizer)()) {
                params["cf"] = (0, _authActions.getCF)();
            }

            return (0, _apiHelper.getAxiosGraphQLQuery)('\n        query{\n            companies(' + (0, _graphqlObj2arg2.default)(params, { noOuterBraces: true }) + '){\n                ID\n                cf\n                name\n                type\n                status\n                accept_prescreen\n                sponsor_only\n                recruiters{\n                    ID user_email\n                }\n                priviledge\n            }\n        }');
        }
    }, {
        key: 'renderList',
        value: function renderList(d, i) {
            var row = [];

            //action
            row.push(_react2.default.createElement(
                'td',
                { className: 'text-center' },
                _react2.default.createElement(
                    _reactRouterDom.NavLink,
                    { to: _appConfig.RootPath + '/app/manage-company/' + d.ID + '/about' },
                    'Edit'
                )
            ));

            // data from query
            var dismiss = ["type", "sponsor_only", "accept_prescreen"];
            var recs = null;
            for (var key in d) {
                if (dismiss.indexOf(key) >= 0) {
                    continue;
                }
                if (key == "name") {
                    var name = _react2.default.createElement(
                        'b',
                        null,
                        _react2.default.createElement(_buttons.ButtonLink, {
                            onClick: function onClick() {
                                return layoutActions.storeUpdateFocusCard(d.name, _companyPopup2.default, { id: d.ID });
                            },
                            label: d.name })
                    );
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        name,
                        _react2.default.createElement('br', null),
                        _dbConfig.CompanyEnum.getTypeStr(d.type)
                    ));
                } else if (key == "status") {
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        _react2.default.createElement(
                            'small',
                            null,
                            _react2.default.createElement(
                                'ul',
                                { className: 'normal' },
                                _react2.default.createElement(
                                    'li',
                                    null,
                                    d.status
                                ),
                                d.sponsor_only ? _react2.default.createElement(
                                    'li',
                                    null,
                                    'Sponsor Only'
                                ) : null,
                                d.accept_prescreen ? _react2.default.createElement(
                                    'li',
                                    null,
                                    'Accept Prescreen'
                                ) : null
                            )
                        )
                    ));
                } else if (key == "recruiters") {
                    recs = d[key].map(function (rec, i) {
                        return _react2.default.createElement(
                            'li',
                            null,
                            rec.user_email + ' (' + rec.ID + ')'
                        );
                    });
                } else if (key == "priviledge") {
                    var privs = d[key];
                    privs = _dbConfig.CompanyEnum.parsePrivs(privs);
                    var privsList = privs.map(function (d, i) {
                        return _react2.default.createElement(
                            'li',
                            null,
                            d
                        );
                    });
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        privsList
                    ));
                } else if (key == "cf" && d.cf.length > 1) {
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        JSON.stringify(d.cf)
                    ));
                } else {
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        d[key]
                    ));
                }
            }

            // {d.accept_prescreen ? <ButtonExport action="prescreens" text="Prescreens"
            //         filter={{ company_id: d.ID }}></ButtonExport> : null}
            //export data
            row.push(_react2.default.createElement(
                'td',
                { className: 'text-center' },
                _react2.default.createElement(_buttons.ButtonExport, { action: 'student_listing', text: 'Student Listing',
                    filter: { company_id: d.ID, cf: (0, _authActions.getCF)() } })
            ));

            //recruiter
            row.push(_react2.default.createElement(
                'td',
                null,
                _react2.default.createElement(
                    'ul',
                    null,
                    recs
                )
            ));

            return _react2.default.createElement(
                'tr',
                null,
                row
            );
        }
    }, {
        key: 'getDataFromRes',
        value: function getDataFromRes(res) {
            return res.data.data.companies;
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Companies");
            var view = null;

            return _react2.default.createElement(
                'div',
                null,
                (0, _authActions.isRoleOrganizer)() ? null : _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'h3',
                        null,
                        'Add New Company'
                    ),
                    _react2.default.createElement(_form2.default, { className: 'form-row',
                        items: this.addFormItem,
                        onSubmit: this.formOnSubmit,
                        submitText: 'Add Company',
                        disableSubmit: this.state.disableSubmit,
                        error: this.state.error,
                        errorPosition: 'top',
                        emptyOnSuccess: true,
                        success: this.state.success })
                ),
                _react2.default.createElement(
                    'h3',
                    null,
                    'Companies'
                ),
                _react2.default.createElement(_list2.default, { type: 'table',
                    tableHeader: this.tableHeader,
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData,
                    offset: this.offset,
                    key: this.state.key,
                    renderList: this.renderList })
            );
        }
    }]);

    return CompaniesPage;
}(_react2.default.Component);

exports.default = CompaniesPage;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var EventPluginHub = __webpack_require__(85);
var EventPluginUtils = __webpack_require__(130);

var accumulateInto = __webpack_require__(193);
var forEachAccumulated = __webpack_require__(194);
var warning = __webpack_require__(16);

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var EventPluginRegistry = __webpack_require__(129);
var EventPluginUtils = __webpack_require__(130);
var ReactErrorUtils = __webpack_require__(131);

var accumulateInto = __webpack_require__(193);
var forEachAccumulated = __webpack_require__(194);
var invariant = __webpack_require__(10);

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {
  /**
   * Methods for injecting dependencies.
   */
  injection: {
    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }
};

module.exports = EventPluginHub;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticEvent = __webpack_require__(44);

var getEventTarget = __webpack_require__(132);

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {
  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }
};

module.exports = ReactInstanceMap;

/***/ }),
/* 88 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(484);

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BANNER_HEIGHT = exports.BANNER_WIDTH = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.getSizeStr = getSizeStr;
exports.getPositionStr = getPositionStr;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _buttons = __webpack_require__(15);

var _uploader = __webpack_require__(159);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _dbConfig = __webpack_require__(5);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/profile-card.scss");
var pc = "pc-";

var BANNER_WIDTH = exports.BANNER_WIDTH = 870;
var BANNER_HEIGHT = exports.BANNER_HEIGHT = 200;

function getSizeStr(sizeStr) {
    if (typeof sizeStr === "undefined" || sizeStr == "" || sizeStr == null) {
        return "cover";
    }

    return sizeStr;
}

//default is 100px
function getPositionStr(dimension, posStr) {
    var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "px";
    var toString = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;


    var DEBUG = posStr == "602px -16px";

    if (typeof posStr === "undefined" || posStr == "" || posStr == null) {
        return "50% 50%";
    }
    if (posStr.indexOf("%") >= 0) {
        return posStr;
    }

    // untuk profile picture
    var DEF_X = 100;
    var DEF_Y = 100;

    var dimensionX = dimension;
    var dimensionY = dimension;

    if (typeof dimension == "string") {
        dimension = Number(dimension.replace("px", ""));
        dimensionX = dimension;
        dimensionY = dimension;
    } else if ((typeof dimension === 'undefined' ? 'undefined' : _typeof(dimension)) == "object") {
        // untuk banner
        DEF_X = BANNER_WIDTH;
        DEF_Y = BANNER_HEIGHT;
        dimensionX = Number(dimension.x.replace("px", ""));
        dimensionY = Number(dimension.y.replace("px", ""));
    }

    var ret = {};

    try {
        var temp = posStr.split(unit);
        ret.x = Number(temp[0]);
        ret.y = Number(temp[1].split(" ")[1]);
    } catch (err) {
        ret.x = 0;
        ret.y = 0;
    }

    ret.x = ret.x / (DEF_X / dimensionX);
    ret.y = ret.y / (DEF_Y / dimensionY);

    if (DEBUG) {
        console.log("----------------------------------------------------------");
        console.log("ret", ret);
        console.log("def", DEF_X);
        console.log("dimensionX", dimensionX);
        console.log("dimensionY", dimensionY);
    }

    if (toString) {
        return ret.x + 'px ' + ret.y + 'px';
    }

    return ret;
}

var ProfileCardImg = function (_React$Component) {
    _inherits(ProfileCardImg, _React$Component);

    function ProfileCardImg(props) {
        _classCallCheck(this, ProfileCardImg);

        var _this = _possibleConstructorReturn(this, (ProfileCardImg.__proto__ || Object.getPrototypeOf(ProfileCardImg)).call(this, props));

        var fixedSize = _this.props.stylePicture.backgroundSize.replace("100%", "101%");
        var pos = _this.props.stylePicture.backgroundPosition === null || _this.props.stylePicture.backgroundPosition == "" ? "50% 50%" : _this.props.stylePicture.backgroundPosition;

        //change dimension for banner
        _this.DIMENSION_HEIGHT = "100px";
        _this.DIMENSION_WIDTH = "100px";
        _this.BORDER_RADIUS = "100%";
        _this.ARROW_DIM_NEG = "-15px";
        _this.ARROW_DIM_POS = "45px";

        if (_this.props.type == "banner") {
            _this.DIMENSION_HEIGHT = BANNER_HEIGHT + "px";
            _this.DIMENSION_WIDTH = "100%";
            _this.BORDER_RADIUS = "0%";
            _this.ARROW_DIM_NEG = "-15px";
            _this.ARROW_DIM_POS = "50%";
        }

        _this.state = {
            backgroundImage: _this.props.stylePicture.backgroundImage,
            backgroundSize: fixedSize, //default : cover
            backgroundPosition: pos, // default : 50% 50%
            height: _this.DIMENSION_HEIGHT,
            width: _this.DIMENSION_WIDTH,
            borderRadius: _this.BORDER_RADIUS,
            newImage: null,
            error: null,
            disableSubmit: false,
            success: null
        };
        _this.editPos = _this.editPos.bind(_this);
        _this.editSize = _this.editSize.bind(_this);
        _this.mouseDownPos = _this.mouseDownPos.bind(_this);
        _this.mouseUpPos = _this.mouseUpPos.bind(_this);
        _this.formOnSubmit = _this.formOnSubmit.bind(_this);
        _this.mouseMovePos = _this.mouseMovePos.bind(_this);
        _this.uploaderOnChange = _this.uploaderOnChange.bind(_this);
        _this.uploaderOnError = _this.uploaderOnError.bind(_this);
        _this.uploaderOnSuccess = _this.uploaderOnSuccess.bind(_this);
        _this.ZOOM_IN = "ZI";
        _this.ZOOM_OUT = "ZO";
        _this.LEFT = "left";
        _this.RIGHT = "right";
        _this.UP = "up";
        _this.DOWN = "down";
        _this.PAGE_X = null;
        _this.PAGE_Y = null;
        _this.POS_X;
        _this.POS_Y;
        _this.SIZE_X;
        _this.SIZE_Y;
        _this.ZOOM_OFFSET = 5;
        _this.MIN_POS_X = 0;
        _this.MAX_POS_X = 100;
        _this.MIN_POS_Y = 0;
        _this.MAX_POS_Y = 100;
        _this.POS_OFFSET = 2;
        _this.EVENT_INTERVAL = 10;
        _this.dimension_size = null;
        _this.EVENT_MOUSEDOWN = false;
        return _this;
    }

    _createClass(ProfileCardImg, [{
        key: 'componentWillMount',
        value: function componentWillMount() {

            this.formItems = [{
                label: "Img Size",
                name: "backgroundSize",
                type: "text",
                hidden: true,
                required: true
            }, {
                label: "Img Url",
                name: "backgroundImage",
                type: "text",
                hidden: true,
                required: true
            }, {
                label: "Img Pos",
                name: "backgroundPosition",
                type: "text",
                hidden: true,
                required: true
            }];
            this.initImgProp();
        }
    }, {
        key: 'initImgProp',
        value: function initImgProp() {
            this.SIZE_X = this.state.backgroundSize.split(" ")[0];
            this.SIZE_Y = this.state.backgroundSize.split(" ")[1];
            if (typeof this.SIZE_Y == 'undefined') {
                this.SIZE_X = "100%";
                this.SIZE_Y = "auto";
            }

            //set to dimension_size
            this.getImageDimension(this.props.img_url);
            this.POS_X = this.state.backgroundPosition.split(" ")[0];
            this.POS_Y = this.state.backgroundPosition.split(" ")[1];
            //this.debug();
        }
    }, {
        key: 'getImageDimension',
        value: function getImageDimension(url) {
            var _this2 = this;

            //if already set
            if (this.SIZE_X === "auto") {
                this.dimension_size = "y";
                return;
            } else if (this.SIZE_Y === "auto") {
                this.dimension_size = "x";
                return;
            }

            // new image 
            var img = new Image();
            img.onload = function () {
                var height = img.height;
                var width = img.width;
                if (height < width) {
                    _this2.dimension_size = "y";
                } else {
                    _this2.dimension_size = "x";
                }
            };
            img.src = url;
        }
    }, {
        key: 'debug',
        value: function debug() {
            console.log(this.POS_X);
            console.log(this.POS_Y);
            console.log(this.SIZE_X);
            console.log(this.SIZE_Y);
        }
    }, {
        key: 'mouseDownPos',
        value: function mouseDownPos(event) {
            this.EVENT_MOUSEDOWN = true;
        }
    }, {
        key: 'mouseUpPos',
        value: function mouseUpPos(event) {
            this.EVENT_MOUSEDOWN = false;
        }
    }, {
        key: 'mouseMovePos',
        value: function mouseMovePos(event) {
            if (this.EVENT_MOUSEDOWN) {
                if (this.PAGE_X > event.pageX) {
                    this.editPos(this.RIGHT);
                }

                if (this.PAGE_X < event.pageX) {
                    this.editPos(this.LEFT);
                }

                if (this.PAGE_Y < event.pageY) {
                    this.editPos(this.DOWN);
                }

                if (this.PAGE_Y > event.pageY) {
                    this.editPos(this.UP);
                }
            }

            this.PAGE_X = event.pageX;
            this.PAGE_Y = event.pageY;
        }
    }, {
        key: 'editPos',
        value: function editPos(action) {
            var _this3 = this;

            var dimension;
            var direction;
            switch (action) {
                case this.RIGHT:
                    dimension = "x";
                    direction = "+";
                    break;
                case this.LEFT:
                    dimension = "x";
                    direction = "-";
                    break;
                case this.UP:
                    dimension = "y";
                    direction = "+";
                    break;
                case this.DOWN:
                    dimension = "y";
                    direction = "-";
                    break;
            }

            this.setState(function (prevState) {

                //reposition.css("background-position", "50% 100%");
                // unit to be used in new app

                // if use px the display will vary based on picture dimension
                // so need to adjust it to fit 100px before save
                var unit = "px";
                // to override unit from old app
                if (prevState["backgroundPosition"].indexOf("%") >= 0) {
                    _this3.POS_Y = "0px";
                    _this3.POS_X = "0px";
                    prevState["backgroundPosition"] = "0px 0px";
                }

                //var unit = "%";
                var ob = getPositionStr(100, prevState["backgroundPosition"], unit);
                var temp_POS_X = ob.x;
                var temp_POS_Y = ob.y;
                var offset = direction === '-' ? _this3.POS_OFFSET : -1 * _this3.POS_OFFSET;
                switch (dimension) {
                    case 'x':
                        temp_POS_X = temp_POS_X + offset;
                        if (temp_POS_X < _this3.MIN_POS_X || temp_POS_X > _this3.MAX_POS_X) {
                            console.log("return 1");
                            //return;
                        }
                        _this3.POS_X = temp_POS_X + unit;
                        break;
                    case 'y':
                        temp_POS_Y = temp_POS_Y + offset;
                        if (temp_POS_Y < _this3.MIN_POS_Y || temp_POS_Y > _this3.MAX_POS_Y) {
                            console.log("return 2");
                            //return;
                        }
                        _this3.POS_Y = temp_POS_Y + unit;
                        break;
                }

                prevState["backgroundPosition"] = _this3.POS_X + " " + _this3.POS_Y;
                _this3.debug();
                return prevState;
            });
        }
    }, {
        key: 'editSize',
        value: function editSize(action) {
            var _this4 = this;

            this.setState(function (prevState) {
                var temp_SIZE_Y = "";
                var temp_SIZE_X = "";
                var offset = action === _this4.ZOOM_IN ? _this4.ZOOM_OFFSET : -1 * _this4.ZOOM_OFFSET;
                switch (_this4.dimension_size) {
                    case 'x':
                        temp_SIZE_X = _this4.SIZE_X.split("%")[0];
                        temp_SIZE_X = Number(temp_SIZE_X) + offset;
                        if (isNaN(temp_SIZE_X)) {
                            console.log("Return 1");
                            _this4.dimension_size = 'y';
                            return;
                        }

                        if (temp_SIZE_X < _this4.MIN_SIZE || temp_SIZE_X > _this4.MAX_SIZE) {
                            console.log("Return 2");
                            return;
                        }

                        if (temp_SIZE_X == 100) {
                            temp_SIZE_X++;
                        }

                        _this4.SIZE_X = temp_SIZE_X + "%";
                        _this4.SIZE_Y = "auto";
                        prevState["backgroundSize"] = _this4.SIZE_X + " " + _this4.SIZE_Y;
                        break;
                    case 'y':
                        temp_SIZE_Y = _this4.SIZE_Y.split("%")[0];
                        temp_SIZE_Y = Number(temp_SIZE_Y) + offset;
                        if (isNaN(temp_SIZE_Y)) {
                            _this4.dimension_size = 'x';
                            return;
                        }

                        if (temp_SIZE_Y < _this4.MIN_SIZE || temp_SIZE_Y > _this4.MAX_SIZE) {
                            return;
                        }

                        if (temp_SIZE_Y == 100) {
                            temp_SIZE_Y++;
                        }

                        _this4.SIZE_Y = temp_SIZE_Y + "%";
                        _this4.SIZE_X = "auto";
                        prevState["backgroundSize"] = _this4.SIZE_X + " " + _this4.SIZE_Y;
                        break;
                }
                return prevState;
            });
        }

        /* props for Uploader --Start */

    }, {
        key: 'uploaderOnChange',
        value: function uploaderOnChange(file) {
            console.log("uploaderOnChange");
            (0, _form.toggleSubmit)(this, { error: null, newImage: null });
        }
    }, {
        key: 'uploaderOnError',
        value: function uploaderOnError(err) {
            console.log("uploaderOnError");
            (0, _form.toggleSubmit)(this, { error: err, newImage: null });
        }
    }, {
        key: 'uploaderOnSuccess',
        value: function uploaderOnSuccess(file) {
            var _this5 = this;

            (0, _form.toggleSubmit)(this, { error: null });
            var reader = new FileReader();
            reader.onload = function (e) {
                _this5.setState(function () {
                    return { backgroundImage: "url(" + e.target.result + ")", newImage: file };
                });
            };
            reader.readAsDataURL(file);
        }
        /* props for Uploader --End */

        /* props for Form */

    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            var _this6 = this;

            if (this.state.newImage !== null) {
                console.log("handle new image");
                var fileName = this.props.type + '-' + this.props.id;
                (0, _uploader.uploadFile)(this.state.newImage, _uploader.FileType.IMG, fileName).then(function (res) {
                    console.log(res.data.url);
                    if (res.data.url !== null) {
                        _this6.saveToDb(d, res.data.url);
                    }
                });
            } else {
                this.saveToDb(d);
            }
        }
    }, {
        key: 'saveToDb',
        value: function saveToDb(d) {
            var _this7 = this;

            var newImage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            (0, _form.toggleSubmit)(this, { error: null });
            var updateTemp = (0, _form.checkDiff)(this, d, this.imgVal);
            if (updateTemp === false) {
                return;
            }

            //standardize prop 
            // handle diff in backend
            var update = {};
            update["ID"] = this.props.id;
            if (newImage !== null) {
                update["img_url"] = _appConfig.UploadUrl + '/' + newImage;
            } else {
                update["img_url"] = updateTemp.backgroundImage;
            }

            update["img_size"] = updateTemp.backgroundSize;
            console.log("save current state", update);
            var edit_query = "";

            if (this.props.type == "user") {
                update["img_pos"] = updateTemp.backgroundPosition;
                edit_query = 'mutation{\n                edit_user(' + (0, _graphqlObj2arg2.default)(update, { noOuterBraces: true }) + ') {\n                    img_url\n                    img_pos\n                    img_size\n                }}';
            } else if (this.props.type == "company") {
                update["img_position"] = updateTemp.backgroundPosition;
                edit_query = 'mutation{\n                edit_company(' + (0, _graphqlObj2arg2.default)(update, { noOuterBraces: true }) + ') {\n                    img_url\n                    img_position\n                    img_size\n                }}';
            } else if (this.props.type == "banner") {
                update["img_position"] = updateTemp.backgroundPosition;

                var newUpdate = {};
                newUpdate["ID"] = this.props.id;
                newUpdate["banner_url"] = update["img_url"];
                newUpdate["banner_position"] = update["img_position"];
                newUpdate["banner_size"] = update["img_size"];

                edit_query = 'mutation{\n                edit_company(' + (0, _graphqlObj2arg2.default)(newUpdate, { noOuterBraces: true }) + ') {\n                    banner_url\n                    banner_position\n                    banner_size\n                }}';
            }

            console.log(edit_query);
            //toggleSubmit(this, {error: null, success: "Your Change Has Been Saved!"});
            //return;
            (0, _apiHelper.getAxiosGraphQLQuery)(edit_query).then(function (res) {

                if (_this7.props.type == "user") {
                    console.log(res.data.data.edit_user);
                    (0, _authActions.updateAuthUser)(res.data.data.edit_user);
                    (0, _form.toggleSubmit)(_this7, { error: null, success: "Your Change Has Been Saved!" });
                }

                location.reload();
            }, function (err) {
                (0, _form.toggleSubmit)(_this7, { error: err.response.data });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this8 = this;

            var stylePicture = this.state;
            var stylePictureBack = Object.assign({}, stylePicture);
            stylePictureBack["position"] = "absolute";
            stylePictureBack["opacity"] = "0.3";
            stylePictureBack["backgroundRepeat"] = "no-repeat";
            stylePictureBack["margin"] = "auto";

            this.imgVal = {};
            this.imgVal.backgroundImage = stylePicture.backgroundImage;
            this.imgVal.backgroundPosition = stylePicture.backgroundPosition;
            this.imgVal.backgroundSize = stylePicture.backgroundSize;
            var btn_size = "20px";
            var parentStyle = { marginTop: "60px" };

            return _react2.default.createElement(
                'div',
                { style: parentStyle, className: 'profile-card edit-img' },
                _react2.default.createElement(
                    'div',
                    { className: pc + 'picture', style: stylePicture,
                        onMouseMove: this.mouseMovePos, onMouseLeave: this.mouseUpPos,
                        onMouseUp: this.mouseUpPos, onMouseDown: this.mouseDownPos },
                    _react2.default.createElement('div', { style: stylePictureBack }),
                    _react2.default.createElement(_buttons.ButtonIcon, { style: { right: 0, position: "absolute" }, size: btn_size, icon: 'search-plus', theme: 'dark', onClick: function onClick() {
                            return _this8.editSize(_this8.ZOOM_IN);
                        } }),
                    _react2.default.createElement(_buttons.ButtonIcon, { style: { left: 0, position: "absolute" }, size: btn_size, icon: 'search-minus', theme: 'dark', onClick: function onClick() {
                            return _this8.editSize(_this8.ZOOM_OUT);
                        } }),
                    _react2.default.createElement(
                        'div',
                        { className: 'arrows' },
                        _react2.default.createElement(_buttons.ButtonIcon, { style: { left: this.ARROW_DIM_NEG, top: this.ARROW_DIM_POS, position: "absolute" }, icon: 'arrow-left',
                            size: btn_size, theme: 'dark', onClick: function onClick() {
                                return _this8.editPos(_this8.RIGHT);
                            } }),
                        _react2.default.createElement(_buttons.ButtonIcon, { style: { top: this.ARROW_DIM_NEG, left: this.ARROW_DIM_POS, position: "absolute" }, icon: 'arrow-up',
                            size: btn_size, theme: 'dark', onClick: function onClick() {
                                return _this8.editPos(_this8.UP);
                            } }),
                        _react2.default.createElement(_buttons.ButtonIcon, { style: { bottom: this.ARROW_DIM_NEG, left: this.ARROW_DIM_POS, position: "absolute" }, icon: 'arrow-down',
                            size: btn_size, theme: 'dark', onClick: function onClick() {
                                return _this8.editPos(_this8.DOWN);
                            } }),
                        _react2.default.createElement(_buttons.ButtonIcon, { style: { right: this.ARROW_DIM_NEG, top: this.ARROW_DIM_POS, position: "absolute" }, icon: 'arrow-right',
                            size: btn_size, theme: 'dark', onClick: function onClick() {
                                return _this8.editPos(_this8.LEFT);
                            } })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(_uploader.Uploader, { label: 'Upload A New Picture', name: 'new-picture', type: _uploader.FileType.IMG, onSuccess: this.uploaderOnSuccess,
                        onChange: this.uploaderOnChange, onError: this.uploaderOnError })
                ),
                _react2.default.createElement(_form2.default, { className: 'form-row',
                    items: this.formItems,
                    onSubmit: this.formOnSubmit,
                    submitText: 'Save',
                    defaultValues: this.imgVal,
                    disableSubmit: this.state.disableSubmit,
                    error: this.state.error,
                    success: this.state.success })
            );
        }
    }]);

    return ProfileCardImg;
}(_react2.default.Component);

exports.default = ProfileCardImg;


ProfileCardImg.propsType = {
    img_url: _propTypes2.default.string.isRequired, // to get image dimension
    id: _propTypes2.default.number.isRequired,
    type: _propTypes2.default.oneOf(["user", "company"]).isRequired,
    stylePicture: _propTypes2.default.object.isRequired
};

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCompanyCSSClass = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _reactRouterDom = __webpack_require__(7);

var _profileCardImg = __webpack_require__(90);

var _dbConfig = __webpack_require__(5);

var _appConfig = __webpack_require__(4);

var _buttons = __webpack_require__(15);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _socketConfig = __webpack_require__(32);

var _socketClient = __webpack_require__(17);

var _authActions = __webpack_require__(2);

var _userActions = __webpack_require__(51);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../../../css/company-sec.scss");

function mapStateToProps(state, ownProps) {
  return {
    traffic: state.hall.traffic,
    online_companies: state.user.online_companies,
    companies: state.hall.companies,
    //onlineCompanies: state.hall.onlineCompanies,
    queueCompanies: state.hall.queueCompanies
  };
}

var getCompanyCSSClass = exports.getCompanyCSSClass = function getCompanyCSSClass(type) {
  var className = "";
  switch (type) {
    case _dbConfig.CompanyEnum.TYPE_SPECIAL:
      className = "blue";
      break;
    case _dbConfig.CompanyEnum.TYPE_PLATINUM:
      className = "blue";
      break;
    case _dbConfig.CompanyEnum.TYPE_GOLD:
      className = "gold";
      break;
    case _dbConfig.CompanyEnum.TYPE_SILVER:
      className = "silver";
      break;
    case _dbConfig.CompanyEnum.TYPE_BRONZE:
      className = "bronze";
      break;
  }

  return className;
};

var sec = "com-sec";

//real time with socket need to use redux

var CompanyBooth = function (_React$Component) {
  _inherits(CompanyBooth, _React$Component);

  function CompanyBooth(props) {
    _classCallCheck(this, CompanyBooth);

    var _this = _possibleConstructorReturn(this, (CompanyBooth.__proto__ || Object.getPrototypeOf(CompanyBooth)).call(this, props));

    _this.getCount = _this.getCount.bind(_this);
    _this.ID = _this.props.company.ID;
    return _this;
  }

  // update by socket


  _createClass(CompanyBooth, [{
    key: "loadOnlineRec",
    value: function loadOnlineRec() {
      //socket.on("rec_online")
      // check if ID is equal to this ID
    }
  }, {
    key: "getCount",
    value: function getCount() {
      var countItem = [
        //     {
        //     count: this.props.onlineRec,
        //     label: "Recruiters Online"
        // }
        /*, {
                  //count: (this.props.traffic !== null) ? this.props.traffic.active_queues_count : 0,
                  count: this.props.countQueue,
                  label: "Students Queueing"
              }*/
        /*, {
                  count: (this.props.traffic !== null) ? this.props.traffic.active_prescreens_count : 0,
                  label: "Students PreScreen"
              }*/
        // , {
        // count: this.props.company.vacancies_count,
        // //label: "Open Vacancy"
        // // EUR FIX
        // label: "Job Details"
        //    }
      ];

      countItem = countItem.map(function (d, i) {
        var style = {};
        if (d.count > 0) {
          style = {
            color: "green",
            opacity: "1"
          };
        }
        return _react2.default.createElement(
          "li",
          { key: i, style: style },
          _react2.default.createElement(
            "div",
            { className: sec + "-count" },
            d.count
          ),
          _react2.default.createElement(
            "div",
            { className: sec + "-label" },
            d.label
          )
        );
      });

      var counts = _react2.default.createElement(
        "ul",
        { className: sec + "-status" },
        countItem
      );

      return counts;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var onClick = function onClick() {
        _this2.props.history.push("/app/company/" + _this2.props.company.ID);
        //layoutActions.storeUpdateFocusCard(this.props.company.name, CompanyPopup, { isPreEvent: this.props.isPreEvent, id: this.props.company.ID });
      };

      var pcTitle = this.props.company.name;
      var pcSubtitle = this.props.company.tagline;
      var pcBody = null;
      var badge = null;
      var badge_tooltip = null;

      // if (!this.props.isPreEvent) {
      //   // pcBody = <span>
      //   //     {this.getCount()}
      //   // </span>
      //   badge = this.props.onlineRec > 0 ? "" : null;
      //   badge_tooltip = `Company Currently Online`;
      // }

      var header = _react2.default.createElement("div", { style: { marginTop: "30px" } });
      //var className = getCompanyCSSClass(this.props.company.type);
      var className = "";

      var isShowOnlineBar = (0, _userActions.isCompanyOnline)(this.props.online_companies, this.props.company.ID);

      return _react2.default.createElement(_profileCard2.default, {
        to: _appConfig.AppPath + "/company/" + this.props.company.ID
        //onClick={onClick}
        , className: className,
        type: "company",
        header: header,
        title: pcTitle,
        subtitle: pcSubtitle,
        badge: badge,
        badge_tooltip: badge_tooltip,
        custom_width: _profileCardImg.BANNER_WIDTH / 2.5 + "px",
        banner_height: _profileCardImg.BANNER_HEIGHT / 2.5 + "px",
        addBanner: true,
        isShowOnlineBar: isShowOnlineBar,
        banner_url: this.props.company.banner_url,
        banner_pos: this.props.company.banner_position,
        banner_size: this.props.company.banner_size,
        img_url: this.props.company.img_url,
        img_pos: this.props.company.img_position,
        img_size: this.props.company.img_size,
        body: pcBody
      })
      //</NavLink>
      ;
    }
  }]);

  return CompanyBooth;
}(_react2.default.Component);

CompanyBooth.propTypes = {
  company: _propTypes2.default.object.isRequired,
  traffic: _propTypes2.default.object,
  onlineRec: _propTypes2.default.number.isRequired,
  countQueue: _propTypes2.default.number.isRequired,
  isPreEvent: _propTypes2.default.bool
};

CompanyBooth.defaultProps = {
  isPreEvent: false
};

CompanyBooth = (0, _reactRedux.connect)(mapStateToProps
// mapDispatchToProps
)(CompanyBooth);

var CompaniesSection = function (_React$Component2) {
  _inherits(CompaniesSection, _React$Component2);

  function CompaniesSection(props) {
    _classCallCheck(this, CompaniesSection);

    var _this3 = _possibleConstructorReturn(this, (CompaniesSection.__proto__ || Object.getPrototypeOf(CompaniesSection)).call(this, props));

    _this3.loadData = _this3.loadData.bind(_this3);
    _this3.renderList = _this3.renderList.bind(_this3);

    _this3.page = 1;
    _this3.traffic = {};
    return _this3;
  }

  _createClass(CompaniesSection, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this4 = this;

      //this.props.loadCompanies(this.props.limitLoad);
      // socketOn(S2C.ONLINE_COMPANY, data => {
      //   this.props.setNonAxios("onlineCompanies", data);
      // });

      this.getMainQueryParam = function (page, offset) {
        var paging_param = "";
        if (page && offset) {
          paging_param = "page:" + page + ", offset:" + offset;
        }

        return "cf:\"" + (0, _authActions.getCF)() + "\", " + paging_param;
      };

      this.loadCount = function () {
        var query = "query{\n        companies_count(" + _this4.getMainQueryParam() + ")\n       }";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      this.getCountFromRes = function (res) {
        return res.data.data.companies_count;
      };
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      return res.data.data.companies;
    }
  }, {
    key: "loadData",
    value: function loadData(page, offset) {
      return (0, _apiHelper.graphql)("query{\n      companies(" + this.getMainQueryParam(page, offset) + ") {\n                ID\n                img_url\n                img_size\n                img_position\n                banner_url\n                banner_size\n                banner_position\n                name\n                tagline\n                type  \n            }\n      }");
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      return _react2.default.createElement(CompanyBooth, _extends({}, this.props, {
        isPreEvent: this.props.isPreEvent,
        key: i,
        company: d,
        traffic: []
      }));
    }
  }, {
    key: "render",
    value: function render() {

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "div",
          { className: sec },
          _react2.default.createElement(_list2.default, {
            loadCount: this.loadCount,
            getCountFromRes: this.getCountFromRes,
            type: "list",
            listClass: "flex-wrap-center",
            pageClass: "text-right",
            getDataFromRes: this.getDataFromRes,
            loadData: this.loadData,
            renderList: this.renderList,
            hideLoadMore: this.props.limitLoad ? true : false,
            offset: this.props.limitLoad ? this.props.limitLoad : this.props.offset
          })
        )
      );
    }
  }]);

  return CompaniesSection;
}(_react2.default.Component);

// function mapDispatchToProps(dispatch) {
//   return bindActionCreators(
//     {
//       loadTraffic: hallAction.loadTraffic,
//       loadCompanies: hallAction.loadCompanies,
//       setNonAxios: hallAction.setNonAxios
//     },
//     dispatch
//   );
// }

CompaniesSection.propTypes = {
  isPreEvent: _propTypes2.default.bool,
  limitLoad: _propTypes2.default.number,
  offset: _propTypes2.default.number
};

CompaniesSection.defaultProps = {
  isPreEvent: false,
  limitLoad: null,
  offset: 6
};

exports.default = (0, _reactRedux.connect)(mapStateToProps
// mapDispatchToProps
)(CompaniesSection);

/***/ }),
/* 92 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(113);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 96 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LiveSessionView = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.openLiveSession = openLiveSession;
exports.__IS_GROUP_SESSION_NOW = __IS_GROUP_SESSION_NOW;
exports.__IS_GROUP_SESSION_ENDED = __IS_GROUP_SESSION_ENDED;
exports.__IS_GROUP_SESSION_UPCOMING = __IS_GROUP_SESSION_UPCOMING;
exports.getGroupSessionQueryFilter = getGroupSessionQueryFilter;
exports.createNewLiveSessionPopup = createNewLiveSessionPopup;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _toggleTimezone = __webpack_require__(80);

var _toggleTimezone2 = _interopRequireDefault(_toggleTimezone);

var _generalForm = __webpack_require__(23);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _list = __webpack_require__(11);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _activityApi = __webpack_require__(67);

var _socketClient = __webpack_require__(17);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _users = __webpack_require__(27);

var _scheduledInterview = __webpack_require__(28);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _chat = __webpack_require__(42);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _time = __webpack_require__(9);

var _apiHelper = __webpack_require__(3);

var _availability = __webpack_require__(81);

var _availability2 = _interopRequireDefault(_availability);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _validationStudentAction = __webpack_require__(124);

var _validationStudentAction2 = _interopRequireDefault(_validationStudentAction);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _hallViewHelper = __webpack_require__(79);

var HallViewHelper = _interopRequireWildcard(_hallViewHelper);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //Faizul Here

// #########################################################################
var w = null;
function openLiveSession(company_id) {
  var getWindowId = function getWindowId(cId) {
    return "SJF_LIVE_SESSION";
  };

  var doAction = function doAction() {
    layoutActions.loadingBlockLoader("Please Wait..");
    var q = "query { company (ID:" + company_id + ") { group_url } }";
    (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
      var c = res.data.data.company;
      layoutActions.loadingBlockLoader("Please Wait..");
      if (c.group_url) {
        var doTwice = false;
        if (w != null) {
          w.close();
        } else {
          doTwice = true;
        }

        w = window.open(c.group_url, getWindowId(company_id));
        // buat twice unutk focus to the key, kalau case dah bukak n user refresh
        if (doTwice) {
          w.close();
          w = window.open(c.group_url, getWindowId(company_id));
        }

        layoutActions.storeHideBlockLoader();
      } else {
        layoutActions.errorBlockLoader(_react2.default.createElement(
          "span",
          null,
          "Live session link is not set for this company. Please contact us at ",
          _react2.default.createElement(
            "b",
            null,
            "innovaseedssolutions@gmail.com"
          )
        ));
      }
    });
  };

  var subText = null;
  if ((0, _authActions.isRoleStudent)()) {
    subText = _react2.default.createElement(
      "span",
      null,
      "In the meantime, you can ",
      _react2.default.createElement(
        "b",
        null,
        "RSVP for live session"
      ),
      " on the left side of the page."
    );
  }
  (0, _authActions.doAfterValidateComingSoon)(doAction, subText);
}

var OFFSET_ENDED_MIN = 30 * 60;
function getSessionStatus(start_time) {
  var isNow = false;
  var isTimePassed = false;
  var timeNow = _time.Time.getUnixTimestampNow();
  if (timeNow >= start_time && timeNow <= start_time + OFFSET_ENDED_MIN) {
    isNow = true;
  } else if (timeNow > start_time + OFFSET_ENDED_MIN) {
    isTimePassed = true;
  }

  if (isNow) {
    return "now";
  } else if (isTimePassed) {
    return "ended";
  } else {
    return "upcoming";
  }
}

function __IS_GROUP_SESSION_NOW(start_time) {
  return getSessionStatus(start_time) == "now";
}

function __IS_GROUP_SESSION_ENDED(start_time) {
  return getSessionStatus(start_time) == "ended";
}

function __IS_GROUP_SESSION_UPCOMING(start_time) {
  return getSessionStatus(start_time) == "upcoming";
}

function getGroupSessionQueryFilter(cId) {
  return "company_id:" + cId + ", discard_expired:true, discard_canceled:true , order_by:\"start_time asc\"";
}

function createNewLiveSessionPopup(company_id, finishHandler) {
  var _this = this;

  layoutActions.loadingBlockLoader("Please Wait...");
  var q = "query { group_sessions(" + getGroupSessionQueryFilter(company_id) + " ) \n  {ID start_time} } ";

  (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
    var data = res.data.data.group_sessions;
    layoutActions.storeHideBlockLoader();
    layoutActions.storeUpdateFocusCard("Live Session", NewLiveSessionPopup, {
      data: data,
      company_id: company_id,
      finishAdd: function finishAdd() {
        _this.finishHandler();
      }
    });
  });
}

// #########################################################################
// require("../../../css/live-session.scss");
// remove limit join
var LIMIT_JOIN = -1;

var NewLiveSessionPopup = function (_React$Component) {
  _inherits(NewLiveSessionPopup, _React$Component);

  function NewLiveSessionPopup(props) {
    _classCallCheck(this, NewLiveSessionPopup);

    var _this2 = _possibleConstructorReturn(this, (NewLiveSessionPopup.__proto__ || Object.getPrototypeOf(NewLiveSessionPopup)).call(this, props));

    _this2.authUser = (0, _authActions.getAuthUser)();
    _this2.state = {
      select_timestamp: -1,
      disableSubmit: false,
      error: null
    };
    return _this2;
  }

  _createClass(NewLiveSessionPopup, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.formItems = [
        // {
        //   label: "Live Session Title",
        //   sublabel: "What You Will Talk About?",
        //   name: GroupSession.TITLE,
        //   type: "text",
        //   len: 50,
        //   required: true
        // }
      ];

      this.countDataAv = {};
      for (var i in this.props.data) {
        var d = this.props.data[i];
        if (typeof this.countDataAv[d.start_time] === "undefined") {
          this.countDataAv[d.start_time] = 0;
        }
        this.countDataAv[d.start_time]++;
      }
    }
  }, {
    key: "onSelectTime",
    value: function onSelectTime(id, timestamp) {
      this.setState(function (prevState) {
        return { select_timestamp: timestamp };
      });
    }
  }, {
    key: "submitOnClick",
    value: function submitOnClick(d) {
      if (this.state.select_timestamp == -1) {
        this.setState(function (prevState) {
          return { disableSubmit: false, error: "Please select a time" };
        });
      } else {
        (0, _form.toggleSubmit)(this, { error: null });
        this.createGs(d.title);
      }
    }
  }, {
    key: "createGs",
    value: function createGs(title) {
      var _this3 = this;

      var d = {};
      d[_dbConfig.GroupSession.TITLE] = "";
      d[_dbConfig.GroupSession.COMPANY_ID] = this.props.company_id;
      d[_dbConfig.GroupSession.START_TIME] = Number.parseInt(this.state.select_timestamp);
      d[_dbConfig.GroupSession.LIMIT_JOIN] = LIMIT_JOIN;
      d[_dbConfig.GroupSession.CREATED_BY] = this.authUser.ID;

      var query = "mutation{ add_group_session \n            (" + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + "){ID}\n        }";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this3.setState(function (prevState) {
          return { disableSubmit: false };
        });
        // close popup terus
        layoutActions.storeHideFocusCard();
        _this3.successAddHandler();
      });
    }
  }, {
    key: "successAddHandler",
    value: function successAddHandler() {
      var mes = _react2.default.createElement(
        "div",
        null,
        "Successfully scheduled a live session on",
        " ",
        _react2.default.createElement(
          "u",
          null,
          _time.Time.getString(this.state.select_timestamp)
        )
      );
      layoutActions.successBlockLoader(mes);
      this.props.finishAdd();
    }
  }, {
    key: "getForm",
    value: function getForm() {
      var _this4 = this;

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_form2.default, {
          className: "form-row",
          items: this.formItems,
          onSubmit: function onSubmit(d) {
            _this4.submitOnClick(d);
          },
          submitText: "Schedule Live Session",
          btnColorClass: "primary btn-lg",
          error: this.state.error,
          disableSubmit: this.state.disableSubmit
        })
      );
    }
  }, {
    key: "getUpcomingLiveSession",
    value: function getUpcomingLiveSession() {

      return _react2.default.createElement(
        "div",
        { className: "live-session-rec" },
        _react2.default.createElement(
          "h3",
          null,
          _react2.default.createElement(
            "b",
            null,
            "Your Live Session"
          )
        ),
        _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(LiveSessionView, {
            company_id: this.props.company_id,
            forRec: true })
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      return _react2.default.createElement(
        "div",
        null,
        this.getUpcomingLiveSession(),
        _react2.default.createElement("div", { style: { borderBottom: "solid 1px gray", margin: "30px 0px" } }),
        _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_availability2.default, {
            select_timestamp: this.state.select_timestamp,
            for_general: true,
            select_for: "New Live Session",
            count_data: this.countDataAv,
            onSelect: function onSelect(id, timestamp) {
              _this5.onSelectTime(id, timestamp);
            }
          }),
          _react2.default.createElement("br", null),
          this.getForm()
        )
      );
    }
  }]);

  return NewLiveSessionPopup;
}(_react2.default.Component);

NewLiveSessionPopup.propTypes = {
  data: _propTypes2.default.array.isRequired,
  finishAdd: _propTypes2.default.func.isRequired,
  company_id: _propTypes2.default.number.isRequired
};

var LiveSessionClass = function (_React$Component2) {
  _inherits(LiveSessionClass, _React$Component2);

  function LiveSessionClass(props) {
    _classCallCheck(this, LiveSessionClass);

    var _this6 = _possibleConstructorReturn(this, (LiveSessionClass.__proto__ || Object.getPrototypeOf(LiveSessionClass)).call(this, props));

    _this6.authUser = (0, _authActions.getAuthUser)();
    _this6.img_dimension = "30px";
    _this6.LIMIT_SEE_MORE = 5;
    _this6.loadData = _this6.loadData.bind(_this6);
    _this6.state = {
      data: [],
      isHiddenValidation: true,
      keyValidation: 0,
      currentId: null,
      loading: true
    };
    return _this6;
  }

  _createClass(LiveSessionClass, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.loadData();
    }
  }, {
    key: "loadData",
    value: function loadData() {
      var _this7 = this;

      this.setState(function (prevState) {
        return { loading: true, isHiddenValidation: true };
      });

      var q = "query { group_sessions(" + getGroupSessionQueryFilter(this.props.company_id) + ")\n        { ID\n          start_time \n          is_expired\n          join_url\n          start_url\n          title\n          joiners{\n                user{\n                  ID\n                  first_name\n                  last_name\n                  img_url\n                  img_pos\n                  img_size\n                }\n            } \n        created_at created_by} } ";

      (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
        _this7.setState(function (prevState) {
          return { data: res.data.data.group_sessions, loading: false };
        });
      });
    }
  }, {
    key: "createSeeMoreLink",
    value: function createSeeMoreLink(_ref) {
      var _this8 = this;

      var d = _ref.d,
          i = _ref.i,
          joinersId = _ref.joinersId;

      var styleSeeMore = {
        width: "35px",
        fontSize: "10px",
        lineHeight: "12px",
        marginLeft: "3px",
        marginTop: "-3px"
      };
      var classSeeMore = this.props.forRec ? "text btn-link" : "text-muted";
      var onClickSeeMore = function onClickSeeMore(e) {
        if (!_this8.props.forRec) {
          return;
        }
        // todo get from data-joiners
        console.log("huhuhuhuhu");
        var joiners = e.currentTarget.dataset.joiners;
        joiners = JSON.parse(joiners);
        var index = e.currentTarget.dataset.index;
        var joinersView = _this8.createJoinersViewPopup(index);
        var componentView = function componentView() {
          return _react2.default.createElement(
            "div",
            null,
            joinersView
          );
        };
        layoutActions.storeUpdateFocusCard("All Participants", componentView, {});
      };

      return _react2.default.createElement(
        "div",
        {
          className: classSeeMore,
          onClick: onClickSeeMore,
          style: styleSeeMore,
          "data-id": d.ID,
          "data-index": i,
          "data-joiners": JSON.stringify(joinersId)
        },
        "and ",
        d.joiners.length - this.LIMIT_SEE_MORE,
        " others"
      );
    }
  }, {
    key: "createJoinersViewPopup",
    value: function createJoinersViewPopup(index) {
      var d = this.state.data[index];
      var joiners = d.joiners.map(function (dj, di) {
        dj = dj.user;
        // var imgView = createImageElement(dj.img_url, dj.img_pos
        //     , dj.img_size, this.img_dimension, "");
        // var name = createUserTitle(dj);
        var name = (0, _users.createUserTitle2Line)(dj);
        return _react2.default.createElement(_profileCard2.default, {
          type: "student",
          title: name,
          img_url: dj.img_url,
          img_pos: dj.img_pos,
          img_size: dj.img_size,
          body: null
        });
      });

      return _react2.default.createElement(
        "div",
        {
          style: {
            marginTop: "10px",
            display: "flex",
            justifyContent: "center",
            flexWrap: "wrap"
          }
        },
        joiners
      );
    }
  }, {
    key: "createJoinersView",
    value: function createJoinersView(d, extraCount) {
      var _this9 = this;

      var joiners = d.joiners.map(function (dj, di) {
        if (extraCount > 1 && di >= _this9.LIMIT_SEE_MORE) {
          return;
        }
        dj = dj.user;
        var imgView = (0, _profileCard.createImageElement)(dj.img_url, dj.img_pos, dj.img_size, _this9.img_dimension, "");

        var studentName = null;
        var onClickJoiner = function onClickJoiner() {};
        if (_this9.props.forRec) {
          studentName = dj.first_name + " " + dj.last_name;
          onClickJoiner = function onClickJoiner() {
            return layoutActions.storeUpdateFocusCard(studentName, _userPopup2.default, {
              id: dj.ID
            });
          };
        }

        return _react2.default.createElement(
          "div",
          { className: "join-item", onClick: onClickJoiner },
          _react2.default.createElement(_tooltip2.default, {
            bottom: "37px",
            left: "-71px",
            width: "140px",
            debug: false,
            alignCenter: true,
            content: imgView,
            tooltip: studentName
          })
        );
      });

      return joiners;
    }
  }, {
    key: "getListView",
    value: function getListView(data) {
      var _this10 = this;

      var arrNow = [];
      var arrExpired = [];
      var arrUpcoming = [];

      data.map(function (d, i) {
        var extraCount = d.joiners.length - _this10.LIMIT_SEE_MORE;
        var joiners = _this10.createJoinersView(d, extraCount);

        var isJoined = false;
        var joinersId = d.joiners.map(function (dj, di) {
          dj = dj.user;
          if (dj.ID == _this10.authUser.ID) {
            isJoined = true;
          }
          return dj.ID;
        });

        // See More Punya Button
        if (extraCount > 1 && d.joiners.length > _this10.LIMIT_SEE_MORE) {
          joiners.push(_this10.createSeeMoreLink({
            d: d,
            i: i,
            joinersId: joinersId
          }));
        }

        if (d.joiners.length <= 0) {
          joiners = _react2.default.createElement(
            "small",
            { className: "text-muted" },
            "No Participant Yet"
          );
        }

        var action = null;

        if (!_this10.props.forRec) {
          if (isJoined) {
            action = _react2.default.createElement(
              "div",
              {
                className: "action btn btn-success btn-sm btn-disabled",
                "data-id": d.ID,
                disabled: "true",
                onClick: function onClick(e) {}
              },
              "RSVP'ed"
            );
          } else {
            action = _react2.default.createElement(
              "div",
              {
                className: "action btn btn-success btn-sm",
                "data-id": d.ID,
                onClick: function onClick(e) {
                  _this10.joinGroupSession(e);
                }
              },
              "RSVP Now"
            );
          }
        }

        // if (d.is_expired) {
        //   action = (
        //     <div className="action btn btn-danger btn-sm" disabled="disabled">
        //       Ended
        //     </div>
        //   );
        // } else if (this.props.forRec) {
        //   if (d.join_url != null) {
        //     const isExpiredHandler = () => {
        //       var mes = <div>This group session has ended.</div>;
        //       layoutActions.errorBlockLoader(mes);
        //       var q = `mutation {edit_group_session(ID:${
        //         d.ID
        //         }, is_expired:1){ID}}`;
        //       getAxiosGraphQLQuery(q).then(res => {
        //         this.loadData();
        //       });
        //     };
        //     //  href={d.start_url}
        //     action = (
        //       <a
        //         onClick={() =>
        //           joinVideoCall(d.join_url, null, isExpiredHandler, d.ID)
        //         }
        //         className="action btn btn-primary btn-sm"
        //         target="_blank"
        //       >
        //         Started
        //       </a>
        //     );
        //   } else {
        //     action = (
        //       <div
        //         className="action btn btn-success btn-sm"
        //         data-id={d.ID}
        //         data-joiners={JSON.stringify(joinersId)}
        //         data-start_time={d.start_time}
        //         onClick={e => {
        //           HallViewHelper.startVideoCall(e, {
        //             type: HallViewHelper.TYPE_GROUP_SESSION,
        //             user_id: this.authUser.ID,
        //             bindedSuccessHandler: this.loadData
        //           });
        //         }}
        //       >
        //         Start Video Call
        //       </div>
        //     );
        //   }
        // } else {
        //   action = (
        //     <div
        //       className="action btn btn-success btn-sm"
        //       data-id={d.ID}
        //       onClick={e => {
        //         this.joinGroupSession(e);
        //       }}
        //     >
        //       RSVP
        //     </div>
        //   );
        // }

        var deleteBtn = null;
        if (_this10.props.forRec) {
          deleteBtn = _react2.default.createElement(
            "div",
            {
              "data-joiners": JSON.stringify(joinersId),
              "data-id": d.ID,
              onClick: function onClick(e) {
                _this10.deleteGroupSession(e);
              },
              className: "btn btn-link delete"
            },
            _react2.default.createElement("i", { className: "fa fa-times" })
          );
        }

        // let title =
        //   d.title == "" || d.title == null ? (
        //     <div className="text-muted">Untitled Session</div>
        //   ) : (
        //       d.title
        //     );

        // create time date
        var styleDate = { fontSize: "15px" };
        var styleTime = { fontSize: "20px" };
        // ToogleTimezone
        var createTime = function createTime(unix, isAlt) {
          return [_react2.default.createElement(
            "div",
            { className: "time" },
            _react2.default.createElement("i", { className: "fa fa-calendar left" }),
            _react2.default.createElement(
              "b",
              null,
              isAlt ? _time.Time.getDateDayStrMas(unix) : _time.Time.getDateDayStr(unix)
            ),
            " - ",
            isAlt ? _time.Time.getDateMas(unix) : _time.Time.getDate(unix)
          ), _react2.default.createElement(
            "div",
            { className: "time" },
            _react2.default.createElement("i", { className: "fa fa-clock-o left" }),
            isAlt ? _time.Time.getStringShortMas(unix) : _time.Time.getStringShort(unix)
          )];
        };

        var createBody = function createBody(timeStr) {
          return timeStr;
        };

        var createView = function createView(body, toggler) {
          return _react2.default.createElement(
            "div",
            { style: { display: "flex", alignItems: "center", justifyContent: "space-between" } },
            _react2.default.createElement(
              "div",
              null,
              body
            ),
            _react2.default.createElement(
              "div",
              { style: { paddingRight: "10px" } },
              toggler
            )
          );
        };

        var timeDate = _react2.default.createElement(_toggleTimezone2.default, {
          createDefaultTime: function createDefaultTime(unix) {
            var isAlt = false;
            return createTime(unix, isAlt);
          },
          createAlternateTime: function createAlternateTime(unix) {
            var isAlt = true;
            return createTime(unix, isAlt);
          },
          unixtimestamp: d.start_time,
          createBody: createBody,
          createView: createView
        });

        // let offsetExpiredMin = 30 * 60;
        // let isNow = false;
        // let isTimePassed = false;
        // let timeNow = Time.getUnixTimestampNow()
        // if (timeNow >= d.start_time && timeNow <= d.start_time + offsetExpiredMin) {
        //   isNow = true;
        // }
        // else if (timeNow > d.start_time + offsetExpiredMin) {
        //   isTimePassed = true;
        // }

        var label = "";
        var className = "";
        if (__IS_GROUP_SESSION_NOW(d.start_time)) {
          className = "gs-now";
          label = "Happening Now";
        } else if (__IS_GROUP_SESSION_ENDED(d.start_time)) {
          className = "gs-expired";
          label = "Ended";
        } else {
          className = "gs-upcoming";
          label = "Upcoming";
        }

        var toAdd = _react2.default.createElement(
          "div",
          { className: "gs-company " + className },
          _react2.default.createElement(
            "div",
            { className: "header" },
            _react2.default.createElement(
              "div",
              { className: "header-container" },
              _react2.default.createElement(
                "div",
                { className: "gs-label text-left" },
                _react2.default.createElement(
                  "b",
                  null,
                  label
                )
              ),
              timeDate,
              deleteBtn
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "joiner" },
            joiners
          ),
          action
        );

        if (__IS_GROUP_SESSION_NOW(d.start_time)) {
          arrNow.push(toAdd);
        } else if (__IS_GROUP_SESSION_ENDED(d.start_time)) {
          arrExpired.push(toAdd);
        } else {
          arrUpcoming.push(toAdd);
        }
      });

      return [].concat(arrNow, arrUpcoming, arrExpired);
    }
  }, {
    key: "createView",
    value: function createView(data) {
      var list = this.getListView(data);
      return _react2.default.createElement(
        "div",
        { className: "live-session" },
        list,
        list.length == 0 ? _react2.default.createElement(
          "small",
          { className: "text-muted text-left" },
          this.props.forStudent ? "This company does not have any live session scheduled yet. Check again later." : "It seems you don't have any live session scheduled yet."
        ) : null
      );
    }
  }, {
    key: "deleteGroupSession",
    value: function deleteGroupSession(e) {
      var _this11 = this;

      var id = e.currentTarget.dataset.id;
      var joiners = e.currentTarget.dataset.joiners;
      joiners = JSON.parse(joiners);

      layoutActions.confirmBlockLoader("Cancel This Live Session?", function () {
        layoutActions.loadingBlockLoader("Canceling...");
        var q = "mutation { edit_group_session (ID:" + id + ", is_canceled:1) { ID } } ";
        (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
          // emit to joiners to reload group session dorang
          for (var i in joiners) {
            (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, joiners[i], null);
          }
          _this11.loadData();
          layoutActions.storeHideBlockLoader();
        });
      });
    }
  }, {
    key: "openWhatsNextAlert",
    value: function openWhatsNextAlert(gs, greenMes) {
      var _this12 = this;

      var actData = [{
        icon: "envelope",
        color: "#007BB4",
        text: _react2.default.createElement(
          "span",
          null,
          "You will be ",
          _react2.default.createElement(
            "b",
            null,
            "notified through email"
          ),
          " an hour before the session started"
        )
      }, {
        icon: "video-camera",
        color: "#007BB4",
        text: _react2.default.createElement(
          "span",
          null,
          "A link to join video call will be created under ",
          _react2.default.createElement(
            "b",
            null,
            "'My Activity'"
          ),
          " ",
          "section in Home page"
        )
      }];
      var list = (0, _list.createIconList)("sm", actData, "400px", {
        customTextWidth: "325px",
        customIconDimension: "40px",
        customIconFont: "initial"
      });

      var mes = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h3",
          { className: "text-success" },
          greenMes
        ),
        "The group session will start on ",
        _react2.default.createElement(
          "u",
          null,
          _time.Time.getString(gs.start_time)
        ),
        " ",
        "(Your local time)",
        _react2.default.createElement(
          "h3",
          { className: "text-primary" },
          "Whats Next?"
        ),
        list
      );

      // kkena tutup takut student boleh join 2 kali
      layoutActions.storeHideFocusCard();

      hallAction.storeLoadActivity([hallAction.ActivityType.GROUP_SESSION_JOIN]);
      (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, null, this.props.company_id);
      layoutActions.customBlockLoader(mes, "Got It!", function () {
        layoutActions.storeHideBlockLoader();
        _this12.loadData();
      }, undefined, true);
    }
  }, {
    key: "successHandlerForValidation",
    value: function successHandlerForValidation() {
      var _this13 = this;

      // var e = this.state.eventForValidation;
      // var id = e.currentTarget.dataset.id;
      var id = this.state.currentId;
      var d = {};
      d[_dbConfig.GroupSessionJoin.USER_ID] = this.props.user_id;
      d[_dbConfig.GroupSessionJoin.GROUP_SESSION_ID] = Number.parseInt(id);
      console.log(d);

      layoutActions.loadingBlockLoader("Processing... Please Wait");

      // 1. backed validation check if still has space
      //var query = `query{group_session (ID:${id}){joiners{ID} limit_join start_time }}`;
      var query = "query{group_session (ID:" + id + "){joiners{ID} start_time }}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var gs = res.data.data.group_session;

        var err = activityActions.invalidJoinGroupSession(id);
        if (err !== false) {
          _this13.openWhatsNextAlert(gs, "You Already Rsvp'ed This Session!");
          return;
        }

        // remove limit join group session
        //var err = activityActions.invalidJoinGroupSession(this.props.company_id)

        // remove limit
        // if (gs.joiners.length >= gs.limit_join) {
        //     var mes = `Sorry. Only ${gs.limit_join} students are allowed to join in one session. Please choose another session`;
        //     layoutActions.errorBlockLoader(mes);
        //     return;
        // }


        // 2. add to db
        var query = "mutation { add_group_session_join \n        (" + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + "){ID}}";

        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          _this13.openWhatsNextAlert(gs, "Successfully Rsvp'ed!");

          // reload data
          //this.loadData();
          // console.log(res.data.data.add_group_session_join);
          // var mes = <div>
          //     <h3 className="text-success">Successfully Joined!</h3>
          //     The group session will start on <u>{Time.getString(gs.start_time)}</u>  (Your local time)
          //     <br></br>
          //     <h3 className="text-primary">Whats Next?</h3>
          //     You will be notified (through email) an hour before the session started.
          //     </div>;
          // hallAction.storeLoadActivity([hallAction.ActivityType.GROUP_SESSION_JOIN]);
          // emitHallActivity(hallAction.ActivityType.GROUP_SESSION_JOIN, null, this.props.company_id);
          // layoutActions.customBlockLoader(mes, "Got It!");
          // layoutActions.storeHideFocusCard();
        });
      });
    }
  }, {
    key: "joinGroupSession",
    value: function joinGroupSession(ev) {
      var id = ev.currentTarget.dataset.id;
      this.setState(function (prevState) {
        return {
          isHiddenValidation: false,
          keyValidation: new Date().getTime(),
          currentId: id
        };
      });
    }
  }, {
    key: "startVideoCall",
    value: function startVideoCall(e) {
      var _this14 = this;

      var id = e.currentTarget.dataset.id;
      id = Number.parseInt(id);

      var start_time = e.currentTarget.dataset.start_time;
      start_time = Number.parseInt(start_time);

      var joiners = e.currentTarget.dataset.joiners;
      joiners = JSON.parse(joiners);

      var recDoStart = function recDoStart(join_url, start_url) {
        var updateData = {};
        updateData[_dbConfig.GroupSession.ID] = id;
        updateData[_dbConfig.GroupSession.JOIN_URL] = join_url;
        updateData[_dbConfig.GroupSession.START_URL] = start_url;
        updateData[_dbConfig.GroupSession.UPDATED_BY] = _this14.authUser.ID;

        // update group session with join_url data
        var query = "mutation { edit_group_session \n                (" + (0, _graphqlObj2arg2.default)(updateData, { noOuterBraces: true }) + ")\n                {ID}\n            }";

        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          // emit to joiners to reload group session dorang
          for (var i in joiners) {
            (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, joiners[i], null);
          }

          layoutActions.storeHideBlockLoader();

          _this14.loadData();
        });
      };

      var confirmCreateWithGruveo = function confirmCreateWithGruveo() {
        var url = (0, _chat.createGruveoLink)(id, true);
        (0, _chat.addLogCreateCall)({ isGruveo: true, group_session_id: id, url: url });
        recDoStart(url, url);
        window.open(url);
      };

      var confirmCreateWithZoom = function confirmCreateWithZoom() {
        (0, _chat.addLogCreateCall)({ isZoom: true, group_session_id: id });

        layoutActions.loadingBlockLoader("Creating Video Call Session. Please Do Not Close Window.");
        var successInterceptor = function successInterceptor(data) {
          /*
                  {"uuid":"bou80/LrR6a0cmDKC4V5aA=="
                  ,"id":646923659,"host_id":"-9e--206RFiZFE0hSh-RPQ"
                  ,"topic":"Let's start a video call."
                  ,"password":"","h323_password":""
                  ,"status":0,"option_jbh":false
                  ,"option_start_type":"video"
                  ,"option_host_video":true,"option_participants_video":true
                  ,"option_cn_meeting":false,"option_enforce_login":false
                  ,"option_enforce_login_domains":"","option_in_meeting":false
                  ,"option_audio":"both","option_alternative_hosts":""
                  ,"option_use_pmi":false,"type":1,"start_time":""
                  ,"duration":0,"timezone":"America/Los_Angeles"
                  ,"start_url":"https://zoom.us/s/646923659?zpk=NcbawuQ7mSE9jfEBdcGMfwxumZzC21eWgm2v6bQ9S6k.AwckNGQwMWY3NWQtNDZhMC00MzU2LTg0M2MtNGVlNWI1MmUzOWY5Fi05ZS0tMjA2UkZpWkZFMGhTaC1SUFEWLTllLS0yMDZSRmlaRkUwaFNoLVJQURJ0ZXN0LnJlY0BnbWFpbC5jb21jAHBTRm01T3I3ZVprU0RGczJCeVRFTlZ5N1k0cE1Zcm5scFF5R3pQZ2RLQjY4LkJnUWdVMDVMU1U1cGNFVmpWeTlESzB0NVVGRm5SbWx3YnpNNFRFNVdWSGxZWjJrQUFBd3pRMEpCZFc5cFdWTXpjejBBAAAWcDF2Skd0YUJRV3k0WC15NzVGRmVtQQIBAQA"
                  ,"join_url":"https://zoom.us/j/646923659","created_at":"2018-01-31T02:08:02Z"}
                  */

          if (data == null || data == "" || (typeof data === "undefined" ? "undefined" : _typeof(data)) != "object") {
            layoutActions.errorBlockLoader("Failed to create video call session. Please check your internet connection");
            return;
          }

          console.log("success createVideoCall", data);
          var body = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              "h4",
              { className: "text-primary" },
              "Successfully Created Video Call Session"
            ),
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "a",
              {
                href: data.start_url,
                target: "_blank",
                className: "btn btn-success btn-lg",
                onClick: function onClick() {
                  recDoStart(data.join_url, data.start_url);
                }
              },
              "Start Video Call"
            )
          );
          layoutActions.customBlockLoader(body, null, null, null);
        };

        var data = {
          query: "create_meeting",
          host_id: _this14.authUser.ID,
          group_session_id: id
        };

        (0, _apiHelper.getWpAjaxAxios)("wzs21_zoom_ajax", data, successInterceptor, true);
      };

      // New Gruveo
      // choose between zoom or chrome
      var recConfirmCreate = function recConfirmCreate() {
        if (_appConfig.IsGruveoEnable) {
          var width = "100px";
          var v = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "div",
              {
                onClick: function onClick() {
                  confirmCreateWithGruveo();
                },
                style: { width: width },
                className: "btn btn-blue"
              },
              "Chrome"
            ),
            _react2.default.createElement(
              "div",
              {
                onClick: function onClick() {
                  confirmCreateWithZoom();
                },
                style: { width: width },
                className: "btn btn-blue"
              },
              "Zoom"
            )
          );
          layoutActions.customViewBlockLoader("Create Video Call With", v);
        } else {
          confirmCreateWithZoom();
        }
      };

      // open confirmation if time now is less than start time
      if (_time.Time.getUnixTimestampNow() < start_time) {
        var title = _react2.default.createElement(
          "div",
          null,
          "It is not the time yet",
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "small",
            null,
            "This session was scheduled on",
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "u",
              null,
              _time.Time.getString(start_time)
            ),
            _react2.default.createElement("br", null),
            "Continue to start video call now?"
          )
        );
        layoutActions.confirmBlockLoader(title, function () {
          recConfirmCreate();
        });
      } else {
        recConfirmCreate();
      }
    }

    // createAddNewGs() {
    //   const onClick = () => {
    //     layoutActions.storeUpdateFocusCard(
    //       "Schedule New Live Session",
    //       NewLiveSessionPopup,
    //       {
    //         data: this.state.data,
    //         company_id: this.props.company_id,
    //         finishAdd: () => {
    //           this.loadData();
    //         }
    //       }
    //     );
    //   };

    //   return (
    //     <div className="gs-company add" onClick={onClick}>
    //       <div>
    //         <i className="fa fa-plus fa-3x" />
    //       </div>
    //     </div>
    //   );
    // }

  }, {
    key: "render",
    value: function render() {
      var _this15 = this;

      var view = _react2.default.createElement(_loader.Loader, { size: "2", text: "Loading Live Session..." });
      if (!this.state.loading) {
        view = this.createView(this.state.data);
      }

      var header = null;
      if (this.props.forStudent) {
        header = _react2.default.createElement(
          "h4",
          {
            style: {
              textAlign: "left",
              marginTop: "10px",
              borderBottom: "solid darkgray 1px"
            }
          },
          "RSVP for Live Session"
        );
        view = [view];
        view.push(_react2.default.createElement(_validationStudentAction2.default, {
          source: _validationStudentAction.ValidationSource.GROUP_SESSION,
          key: this.state.keyValidation,
          isHidden: this.state.isHiddenValidation,
          successHandler: function successHandler() {
            _this15.successHandlerForValidation();
          }
        }));
      }

      // if (this.props.forRec) {
      //   header = (
      //     <h3
      //       onClick={() => {
      //         this.loadData();
      //       }}
      //     >
      //       <a className="btn-link">Live Session</a>
      //     </h3>
      //   );
      // }

      return _react2.default.createElement(
        "div",
        null,
        header,
        view
      );
    }
  }]);

  return LiveSessionClass;
}(_react2.default.Component);

// TODO status online


function mapStateToProps(state, ownProps) {
  return {
    online_users: state.user.online_users
  };
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)({
    //loadActivity: hallAction.loadActivity
  }, dispatch);
}

LiveSessionClass.propTypes = {
  company_id: _propTypes2.default.number.isRequired,
  user_id: _propTypes2.default.number,
  forRec: _propTypes2.default.bool,
  forStudent: _propTypes2.default.bool
};

LiveSessionClass.defaultProps = {
  user_id: null,
  forRec: false,
  forStudent: false
};

var LiveSessionView = exports.LiveSessionView = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LiveSessionClass);

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VacancyList = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _reactRouterDom = __webpack_require__(7);

var _apiHelper = __webpack_require__(3);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _card = __webpack_require__(291);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

var _dbConfig = __webpack_require__(5);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _socketClient = __webpack_require__(17);

var _appConfig = __webpack_require__(4);

var _otherActions = __webpack_require__(30);

var _feedback = __webpack_require__(57);

var _liveSession = __webpack_require__(97);

var _gallery = __webpack_require__(125);

var _validationStudentAction = __webpack_require__(124);

var _validationStudentAction2 = _interopRequireDefault(_validationStudentAction);

var _profileCardImg = __webpack_require__(90);

var _profileCard3 = __webpack_require__(13);

var _actionBox = __webpack_require__(288);

var _actionBox2 = _interopRequireDefault(_actionBox);

var _interested = __webpack_require__(66);

var _vacancyPopup = __webpack_require__(121);

var _vacancyPopup2 = _interopRequireDefault(_vacancyPopup);

var _resumeDropPopup = __webpack_require__(286);

var _resumeDropPopup2 = _interopRequireDefault(_resumeDropPopup);

var _generalHelper = __webpack_require__(126);

var _buttons = __webpack_require__(15);

var _util = __webpack_require__(45);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import { CustomList, createIconLink } from "../component/list";

//import { GroupSessionView } from "./partial/hall/group-session";


// #################################################################
// #################################################################
// require("../css/company-page.scss");

var VacancyList = exports.VacancyList = function (_React$Component) {
  _inherits(VacancyList, _React$Component);

  function VacancyList(props) {
    _classCallCheck(this, VacancyList);

    var _this = _possibleConstructorReturn(this, (VacancyList.__proto__ || Object.getPrototypeOf(VacancyList)).call(this, props));

    _this.loadData = _this.loadData.bind(_this);
    _this.renderList = _this.renderList.bind(_this);
    _this.onClickCard = _this.onClickCard.bind(_this);
    _this.authUser = (0, _authActions.getAuthUser)();
    return _this;
  }

  _createClass(VacancyList, [{
    key: "loadData",
    value: function loadData(page, offset) {
      // description
      return (0, _apiHelper.getAxiosGraphQLQuery)("\n        query{vacancies(" + this.getMainQueryParam(page, offset) + "){\n                ID\n                title\n                type\n                location \n                company{ img_url, img_position, img_size }\n                interested{ID is_interested}\n        }}");
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      this.getMainQueryParam = function (page, offset) {
        var company_id_param = '';
        if (_this2.props.company_id) {
          company_id_param = "company_id:" + _this2.props.company_id + ",";
        }
        var paging_param = "";
        if (page && offset) {
          paging_param = "page:" + page + ", offset:" + offset;
        }

        var cf_param = "";
        if (_this2.props.isListAll) {
          if (_this2.props.filterByCf) {
            cf_param = "cf:\"" + (0, _authActions.getCF)() + "\",";
          }
        }

        return "\n        " + cf_param + "\n        " + company_id_param + "\n        user_id:" + _this2.authUser.ID + ",  \n        " + paging_param;
      };

      this.loadCount = function () {
        var query = "query{\n        vacancies_count(" + _this2.getMainQueryParam() + ")\n       }";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      this.getCountFromRes = function (res) {
        return res.data.data.vacancies_count;
      };
    }
  }, {
    key: "onClickCard",
    value: function onClickCard(d) {
      layoutActions.storeUpdateFocusCard(d.title, _vacancyPopup2.default, {
        id: d.ID,
        isRecThisCompany: this.isRecThisCompany()
      });
    }
  }, {
    key: "isRecThisCompany",
    value: function isRecThisCompany() {
      return (0, _authActions.isRoleRec)() && this.authUser.rec_company == this.props.company_id || (0, _authActions.isRoleAdmin)();
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var _this3 = this;

      var com = d.company;
      var img = (0, _profileCard3.createImageElement)(com.img_url, com.img_position, com.img_size, "50px", "", _profileCard3.PCType.COMPANY);

      var isModeCount = this.isRecThisCompany();
      var isModeAction = (0, _authActions.isRoleStudent)();

      var interestedBtn = _react2.default.createElement(_interested.InterestedButton, {
        isModeCount: isModeCount,
        isModeAction: isModeAction,
        ID: d.interested.ID,
        is_interested: d.interested.is_interested,
        entity: "vacancies",
        entity_id: d.ID,
        tooltipObj: {
          arrowPosition: "right",
          left: "-110px",
          bottom: "-2px",
          width: "97px",
          tooltip: "Show Interest",
          debug: false
        }
      });

      var body = _react2.default.createElement(
        "div",
        { className: "vacancy-card" },
        interestedBtn,
        _react2.default.createElement(
          "div",
          { className: "img" },
          img
        ),
        _react2.default.createElement(
          "div",
          {
            className: "title btn-link",
            onClick: function onClick() {
              _this3.onClickCard(d);
            }
          },
          d.title
        ),
        _react2.default.createElement(
          "div",
          { className: "location" },
          d.location
        ),
        _react2.default.createElement(
          "div",
          { className: "type" },
          d.type ? d.type + " Job" : null
        )
      );

      return _react2.default.createElement(_card.EmptyCard, {
        borderRadius: "7px",
        minHeight: "180px",
        width: "250px",
        body: body,
        paramForOnClick: d,
        onClick: null
      });
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      return res.data.data.vacancies;
    }
  }, {
    key: "render",
    value: function render() {

      // kalau list semua
      var countParam = {};
      if (this.props.isListAll) {
        countParam = {
          loadCount: this.loadCount,
          getCountFromRes: this.getCountFromRes
        };
      }

      return _react2.default.createElement(_list2.default, _extends({}, countParam, {
        isHidePagingTop: this.props.isListAll ? false : true,
        type: "list",
        listClass: this.props.listClass,
        pageClass: "text-right",
        getDataFromRes: this.getDataFromRes,
        loadData: this.loadData,
        hideLoadMore: this.props.limitLoad ? true : false,
        offset: this.props.limitLoad ? this.props.limitLoad : this.props.offset,
        renderList: this.renderList
      }));
    }
  }]);

  return VacancyList;
}(_react2.default.Component);

VacancyList.propTypes = {
  filterByCf: _propTypes2.default.bool,
  isListAll: _propTypes2.default.bool,
  company_id: _propTypes2.default.number,
  limitLoad: _propTypes2.default.number,
  listClass: _propTypes2.default.string,
  offset: _propTypes2.default.number
};

VacancyList.defaultProps = {
  filterByCf: true,
  isListAll: false,
  listClass: "flex-wrap-start",
  offset: 6

  // #####################################################################
  // #####################################################################
  // #####################################################################

};
var CompanyPage = function (_Component) {
  _inherits(CompanyPage, _Component);

  function CompanyPage(props) {
    _classCallCheck(this, CompanyPage);

    var _this4 = _possibleConstructorReturn(this, (CompanyPage.__proto__ || Object.getPrototypeOf(CompanyPage)).call(this, props));

    _this4.state = {
      //bannerKey: this.getBodyWidth(),
      qsLastSubmitted: Date.now(),
      data: null,
      loading: true,
      isHiddenValidation: true,
      keyValidation: 0
    };

    _this4.ID = null;
    if (_this4.props.match) {
      _this4.ID = _this4.props.match.params.id;
    } else {
      _this4.ID = _this4.props.id;
    }

    _this4.forum_id = "company_" + _this4.ID;
    _this4.authUser = (0, _authActions.getAuthUser)();
    _this4.isRec = (0, _authActions.getAuthUser)().rec_company == _this4.ID || (0, _authActions.isRoleAdmin)();
    _this4.FEEDBACK_LIMIT_SR = 3;

    _this4.getRecs = _this4.getRecs.bind(_this4);
    _this4.startQueue = _this4.startQueue.bind(_this4);
    _this4.addSessionRequest = _this4.addSessionRequest.bind(_this4);
    _this4.getBtnLike = _this4.getBtnLike.bind(_this4);
    return _this4;
  }

  _createClass(CompanyPage, [{
    key: "isRecThisCompany",
    value: function isRecThisCompany() {
      return (0, _authActions.isRoleRec)() && this.authUser.rec_company == this.ID || (0, _authActions.isRoleAdmin)();
    }
  }, {
    key: "getBodyWidth",
    value: function getBodyWidth() {
      return document.body.clientWidth;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _generalHelper.unsetBodyFullWidth)();
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this5 = this;

      (0, _generalHelper.setBodyFullWidth)();

      var logData = {
        id: Number.parseInt(this.ID),
        location: window.location.pathname
      };
      (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_VISIT_COMPANY, JSON.stringify(logData), (0, _authActions.getAuthUser)().ID);

      var rec_query = this.props.displayOnly ? "" : "recruiters{\n            first_name\n            last_name\n            rec_position\n            img_url img_pos img_size\n        }";

      var query = "query {\n              company(ID:" + this.ID + ", user_id:" + this.authUser.ID + ") {\n                ID\n                name\n                tagline\n                description\n                status\n                group_url\n                img_url\n                img_position\n                img_size\n                banner_url\n                banner_position\n                banner_size\n                rec_privacy\n                doc_links{ID label url type}\n                more_info\n                " + rec_query + "\n                interested{ID is_interested}\n                vacancies{\n                    ID\n                    title\n                    type\n                    description\n                }\n            }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this5.setState(function (prevState) {
          return { data: res.data.data.company, loading: false };
        });
      });
    }
  }, {
    key: "addSessionRequest",
    value: function addSessionRequest() {
      var _this6 = this;

      var stu_id = this.authUser.ID;
      var com_id = this.ID;

      // first filter
      var invalid = activityActions.invalidSessionRequest(com_id);
      if (invalid !== false) {
        layoutActions.errorBlockLoader(invalid);
        return false;
      } else {
        layoutActions.loadingBlockLoader("Adding Request");

        // check for feedback
        var query = "query { has_feedback (user_id: " + stu_id + ") } ";
        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var has_feedback = res.data.data.has_feedback;
          var ttl_pending = activityActions.pendingSessionRequestCount(com_id);

          // if no feedback open popup
          if (ttl_pending >= _this6.FEEDBACK_LIMIT_SR && !has_feedback) {
            //layoutActions.storeUpdate("Feedback", getFeedbackPopupView());
            layoutActions.errorBlockLoader((0, _feedback.getFeedbackPopupView)(false));
          } else {
            // add session request
            activityActions.addSessionRequest(stu_id, com_id).then(function (res) {
              var mes = _react2.default.createElement(
                "div",
                null,
                "Successfully send interview request to",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "b",
                  null,
                  _this6.state.data.name
                ),
                _react2.default.createElement("br", null),
                "The request status will be shown under Interview Request"
              );

              (0, _socketClient.emitHallActivity)(hallAction.ActivityType.SESSION_REQUEST, null, com_id);

              layoutActions.successBlockLoader(mes);
              hallAction.storeLoadActivity([hallAction.ActivityType.SESSION_REQUEST]);
            }, function (err) {
              layoutActions.errorBlockLoader(err);
            });
          }
        });
      }
    }
  }, {
    key: "startQueue",
    value: function startQueue() {
      var _this7 = this;

      var stu_id = (0, _authActions.getAuthUser)().ID;
      var com_id = this.ID;

      var invalid = activityActions.invalidQueue(com_id);
      if (invalid !== false) {
        layoutActions.errorBlockLoader(invalid);
        return false;
      }

      layoutActions.loadingBlockLoader("Start Queuing");

      activityActions.startQueue(stu_id, com_id).then(function (res) {
        var mes = _react2.default.createElement(
          "div",
          null,
          "Successfully joined queue for",
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "b",
            null,
            _this7.state.data.name
          ),
          _react2.default.createElement("br", null),
          "Your queue number is ",
          _react2.default.createElement(
            "b",
            null,
            res.queue_num
          )
        );

        (0, _socketClient.emitQueueStatus)(com_id, stu_id, "startQueue");
        (0, _socketClient.emitHallActivity)(hallAction.ActivityType.QUEUE, null, com_id);

        layoutActions.successBlockLoader(mes);
        hallAction.storeLoadActivity([hallAction.ActivityType.QUEUE]);
      }, function (err) {
        layoutActions.errorBlockLoader(err);
      });
    }
  }, {
    key: "getVacancies",
    value: function getVacancies(company_id) {
      return _react2.default.createElement(VacancyList, { company_id: company_id });
    }
  }, {
    key: "getRecs",
    value: function getRecs(list, rec_privacy) {
      if (list == null || typeof list == "undefined") {
        return null;
      }

      if (list.length === 0) {
        return _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "Nothing To Show Here"
        );
      }
      // console.log(rec_privacy);
      // console.log(this.isRec);
      if (rec_privacy && !this.isRec) {
        return _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "This information is private"
        );
      }

      var view = list.map(function (d, i) {
        var name = _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "Name Not Available"
        );
        if (d.first_name != "" && d.last_name != "") {
          name = _react2.default.createElement(
            "span",
            null,
            d.first_name,
            _react2.default.createElement(
              "small",
              null,
              " ",
              d.last_name
            )
          );
        }

        if (d.rec_position == null) {
          d.rec_position = _react2.default.createElement(
            "div",
            { className: "text-muted" },
            "Position Not Available"
          );
        }

        return _react2.default.createElement(_list.ProfileListItem, {
          title: name,
          img_url: d.img_url,
          img_pos: d.img_pos,
          img_size: d.img_size,
          subtitle: d.rec_position,
          type: "recruiter",
          key: i
        });
      });

      return _react2.default.createElement(
        "div",
        null,
        !rec_privacy ? null : _react2.default.createElement(
          "div",
          { className: "text-muted" },
          "This information is private to others.",
          _react2.default.createElement("br", null)
        ),
        view
      );
    }
  }, {
    key: "joinGroupSessionOld",
    value: function joinGroupSessionOld(data) {
      if (data.group_url == "" || data.group_url == null) {
        layoutActions.errorBlockLoader("Group session has started. Please try again in a few minutes");
      } else {
        window.open(data.group_url, "_blank");
      }
    }
  }, {
    key: "getDocLinks",
    value: function getDocLinks(doc_links) {
      if (doc_links.length <= 0) {
        return null;
      }

      var iframe = [];
      var link = [];

      // separate document and link
      for (var i in doc_links) {
        var item = doc_links[i];
        //var isIframe = item.type == DocLinkEnum.TYPE_DOC || item.url.containText("youtube");
        var isIframe = (0, _gallery.isGalleryIframe)(item.type, item.url);

        if (isIframe) {
          iframe.push(item);
        } else {
          link.push(item);
        }
      }

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_gallery.Gallery, { company_id: this.ID, data: link, size: "lg" }),
        _react2.default.createElement("br", null),
        _react2.default.createElement(_gallery.Gallery, { company_id: this.ID, data: iframe, size: "lg" })
      );
    }
  }, {
    key: "getAskForum",
    value: function getAskForum() {
      return null;
    }
  }, {
    key: "getBanner",
    value: function getBanner() {
      // window.addEventListener("resize", event => {
      //   this.setState(prevState => {
      //     let newWidth = this.getBodyWidth();
      //     if (prevState.bannerKey - newWidth >= 100) {
      //       return { bannerKey: newWidth };
      //     }
      //   });
      // });

      var data = this.state.data;

      var width = this.getBodyWidth();
      var height = width / _profileCardImg.BANNER_WIDTH * _profileCardImg.BANNER_HEIGHT;

      width += "px";
      height += "px";

      var style = (0, _profileCard3.getStyleBannerObj)(data.banner_url, data.banner_size, data.banner_position, width, height);

      //return <div key={this.state.bannerKey} className="banner" style={style} />;
      return _react2.default.createElement("div", { className: "banner", style: style });
    }
  }, {
    key: "openResumeDrop",
    value: function openResumeDrop() {
      var data = this.state.data;
      layoutActions.storeUpdateFocusCard("Resume Drop - " + data.name, _resumeDropPopup2.default, { company_id: data.ID });
    }
  }, {
    key: "getBtnLike",
    value: function getBtnLike(styleBtnAction) {
      var data = this.state.data;

      var getBtnLikeCustomView = function getBtnLikeCustomView(_ref) {
        var loading = _ref.loading,
            isModeCount = _ref.isModeCount,
            isModeAction = _ref.isModeAction,
            is_interested = _ref.is_interested,
            like_count = _ref.like_count,
            onClickModeCount = _ref.onClickModeCount,
            onClickModeAction = _ref.onClickModeAction;

        if (isModeAction) {
          return _react2.default.createElement(_buttons.ButtonAction, {
            style: styleBtnAction,
            btnClass: "btn-lg btn-" + (is_interested ? "blue" : "default"),
            onClick: onClickModeAction,
            icon: loading ? "spinner fa-pulse" : "thumbs-up",
            iconSize: "2x",
            mainText: loading ? null : is_interested ? "Liked" : "Like This Company"
            // subText={`with ${this.state.data.name}`}
            , subText: null
          });
        } else if (isModeCount) {
          var mainText = "Liked By " + like_count + " Student" + (like_count > 1 ? "s" : "");
          return _react2.default.createElement(_buttons.ButtonAction, {
            style: styleBtnAction,
            btnClass: "btn-lg btn-blue",
            onClick: onClickModeCount,
            icon: loading ? "spinner fa-pulse" : "thumbs-up",
            iconSize: "2x",
            mainText: mainText
            // subText={`with ${this.state.data.name}`}
            , subText: null
          });
        }
      };

      var isModeCount = (0, _authActions.isRoleRec)() && this.authUser.rec_company == this.ID || (0, _authActions.isRoleAdmin)();

      var isModeAction = (0, _authActions.isRoleStudent)();

      return _react2.default.createElement(_interested.InterestedButton, {
        customView: getBtnLikeCustomView,
        isModeCount: isModeCount,
        isModeAction: isModeAction,
        ID: data.interested.ID,
        is_interested: data.interested.is_interested,
        entity: "companies",
        entity_id: this.ID
      });
    }
  }, {
    key: "getStudentActionBox",
    value: function getStudentActionBox(data) {
      var _this8 = this;

      if (!(0, _authActions.isRoleStudent)() || this.props.displayOnly) {
        return null;
      }

      var qs_successView = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h3",
          { className: "text-success" },
          "Successfully Submitted Your Question"
        ),
        "See your posted question in",
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          _reactRouterDom.NavLink,
          {
            onClick: function onClick(e) {
              layoutActions.storeHideBlockLoader();
              layoutActions.storeHideFocusCard();
            },
            to: _appConfig.AppPath + ("/forum/" + this.forum_id)
          },
          "company forum"
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "button",
          {
            onClick: function onClick(e) {
              layoutActions.storeHideBlockLoader();
            },
            className: "btn btn-sm btn-blue"
          },
          "Got It!"
        )
      );

      var qs_onSubmit = function qs_onSubmit(data) {
        layoutActions.loadingBlockLoader("Submitting Your Question...");

        // todos insert to forum
        var ins = {
          user_id: (0, _authActions.getAuthUser)().ID,
          content: data,
          is_owner: 0,
          forum_id: _this8.forum_id
        };

        var query = "mutation{ add_forum_comment (" + (0, _graphqlObj2arg2.default)(ins, {
          noOuterBraces: true
        }) + ") { ID } }";
        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          _this8.setState(function (prevState) {
            return { qsLastSubmitted: Date.now() };
          });

          layoutActions.customViewBlockLoader(null, qs_successView);
        });
      };

      var btn_onClickResume = function btn_onClickResume() {
        _this8.setState(function (prevState) {
          return {
            isHiddenValidation: false,
            keyValidation: new Date().getTime()
          };
        });
      };

      var btn_onClickChat = function btn_onClickChat() {
        var doAction = function doAction() {
          _this8.props.history.push(_appConfig.AppPath + "/company-chat/" + _this8.ID);
        };
        (0, _authActions.doAfterValidateComingSoon)(doAction);
      };

      var styleBtnAction = {
        width: "100%",
        margin: "0px",
        marginBottom: "10px",
        fontSize: "15px"
      };

      // let colSize = "3"
      var colSize = "4";
      return _react2.default.createElement(
        "div",
        { className: "row", style: { marginTop: "15px" } },
        _react2.default.createElement(
          "div",
          { className: "col-md-" + colSize },
          this.getBtnLike(styleBtnAction)
        ),
        _react2.default.createElement(
          "div",
          { className: "col-md-" + colSize },
          _react2.default.createElement(_buttons.ButtonAction, {
            style: styleBtnAction,
            btnClass: "btn-lg btn-danger",
            onClick: btn_onClickChat,
            icon: "comments",
            iconSize: "2x",
            mainText: "Chat With Us"
            /// ${this.state.data.name}
            , subText: null
          })
        ),
        _react2.default.createElement(
          "div",
          { className: "col-md-" + colSize },
          _react2.default.createElement(_buttons.ButtonAction, {
            style: styleBtnAction,
            btnClass: "btn-lg btn-success",
            onClick: btn_onClickResume,
            icon: "download",
            iconSize: "2x",
            mainText: "Drop Your Resume",
            subText: null
          })
        )
      )

      /* <ActionBox
            title={
              <div>
                <i className="fa fa-download left" />
                <b>Drop Your Resume</b>
              </div>
            }
            isButton={true}
            btn_onClick={btn_onClickResume}
          /> */
      /* <ActionBox
          {...this.props}
          title={
            <div>
              <i className="fa fa-comments left" />
              <b>Chat With Recruiter</b>
            </div>
          }
          isDoAfterComingSoon={true}
          isNavLink={true}
        /> */
      /* <div className={`col-md-4`}>
        <ActionBox
          key={this.state.qsLastSubmitted}
          title={
            <div>
              <i className="fa fa-bullhorn left" />
              <b>Ask Us A Question</b>
            </div>
          }
          isQuestion={true}
          qs_onSubmit={qs_onSubmit}
        />
      </div> */
      ;
    }
    // getStudentAction(data) {
    //   // tukar action kepada button
    //   const onClickResume = () => {
    //     this.setState(prevState => {
    //       return {
    //         isHiddenValidation: false,
    //         keyValidation: new Date().getTime()
    //       };
    //     });
    //   };
    //   var action =
    //     !isRoleStudent() || this.props.displayOnly ? null : (
    //       <div>
    //         <button className="btn btn-blue btn-block" onClick={onClickResume}>
    //           <i className="fa fa-download left" />
    //           Drop Your Resume
    //         </button>
    //         <NavLink
    //           to={`${RootPath}/app/forum/company_${data.ID}`}
    //           onClick={() => {
    //             layoutActions.storeHideFocusCard();
    //           }}
    //           className="btn btn-primary btn-block"
    //         >
    //           <i className="fa fa-comments left" />
    //           Ask A Question
    //         </NavLink>
    //       </div>
    //     );

    //   return action;
    // }

  }, {
    key: "render",
    value: function render() {
      var _this9 = this;

      var id = null;
      var data = this.state.data;
      var view = null;

      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { size: "3", text: "Loading Company Information..." });
      } else {
        document.setTitle("" + data.name);

        var vacancies = this.getVacancies(data.ID);
        var recs = this.getRecs(data.recruiters, data.rec_privacy);
        var doc_link = this.getDocLinks(data.doc_links);
        var askForum = this.getAskForum();

        // ##################################################################################
        // for group session

        // var gSession =
        //   !isRoleStudent() || this.props.displayOnly ? null : (
        //     <div>
        //       {/* <ButtonAction
        //         style={{ width: "100%", margin: "0px", marginBottom: "10px" }}
        //         btnClass="btn-lg btn-blue"
        //         onClick={() => { openLiveSession(this.ID); }}
        //         icon="podcast"
        //         iconSize="2x"
        //         mainText={"Join Live Session"}
        //         subText={`with ${this.state.data.name}`}
        //       /> */}
        //       <LiveSessionView
        //         forStudent={true}
        //         company_id={this.ID}
        //         user_id={this.authUser.ID}
        //       />
        //     </div>
        //   );

        // ##################################################################################
        // for action

        //var action = this.getStudentAction(data);
        var actionBox = this.getStudentActionBox(data);

        var profilePic = _react2.default.createElement(_profileCard2.default, {
          type: "company",
          img_dimension: "200px",
          className: "with-border",
          img_url: data.img_url,
          img_pos: data.img_position,
          img_size: data.img_size,
          title: _react2.default.createElement(
            "h3",
            null,
            data.name
          ),
          subtitle: data.tagline,
          body: null
        });

        // var forumLink = (
        //   <NavLink
        //     onClick={e => {
        //       layoutActions.storeHideBlockLoader();
        //       layoutActions.storeHideFocusCard();
        //     }}
        //     to={AppPath + `/forum/${this.forum_id}`}
        //   >
        //     <small>Go To Company Forum</small>
        //   </NavLink>
        // );

        var rightBody = _react2.default.createElement(
          "div",
          null,
          !this.isRecThisCompany() || this.props.displayOnly ? null : this.getBtnLike({ fontSize: "15px", width: "100%" })
        );

        var maxHeight = 143;
        var leftBody = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "div",
            null,
            actionBox,
            askForum == null ? null : _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              className: "left",
              title: "Ask Us Anything",
              body: askForum
            }),
            doc_link == null ? null : _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              className: "left",
              title: "Gallery",
              body: doc_link
            }),
            data.description == "" ? null : _react2.default.createElement(_pageSection2.default, {
              maxHeight: maxHeight,
              canToggle: this.props.canToggle,
              className: "left",
              title: "About"
              //body={<p>{data.description}</p>}
              , body: _react2.default.createElement("p", {
                dangerouslySetInnerHTML: (0, _util.getDangerousHtml)(data.description)
              })
            }),
            _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              initShow: true,
              className: "left",
              title: "Job Opportunity",
              body: vacancies
            }),
            data.more_info == "" ? null : _react2.default.createElement(_pageSection2.default, {
              maxHeight: maxHeight,
              canToggle: this.props.canToggle,
              className: "left",
              title: "Additional Information"
              //body={<p>{data.more_info}</p>}
              , body: _react2.default.createElement("p", {
                dangerouslySetInnerHTML: (0, _util.getDangerousHtml)(data.more_info)
              })
            }),
            recs === null ? null : _react2.default.createElement(_pageSection2.default, {
              canToggle: this.props.canToggle,
              className: "left",
              title: "Recruiters",
              body: recs
            })
          )
        );

        view = this.props.displayOnly ? _react2.default.createElement(
          "div",
          null,
          profilePic,
          rightBody,
          leftBody
        ) : _react2.default.createElement(
          "div",
          { className: "company-page" },
          this.getBanner(),
          _react2.default.createElement(_validationStudentAction2.default, {
            source: _validationStudentAction.ValidationSource.DROP_RESUME,
            key: this.state.keyValidation,
            isHidden: this.state.isHiddenValidation,
            successHandler: function successHandler() {
              return _this9.openResumeDrop();
            }
          }),
          _react2.default.createElement(
            "div",
            { className: "main-width main-width-lg container-fluid" },
            _react2.default.createElement(
              "div",
              { className: "row" },
              _react2.default.createElement(
                "div",
                {
                  style: { padding: "20px" },
                  className: "col-md-3 com-pop-left"
                },
                _react2.default.createElement(
                  "div",
                  { className: "com-pop-pic" },
                  profilePic
                ),
                rightBody
              ),
              _react2.default.createElement(
                "div",
                { style: { padding: "20px" }, className: "col-md-9" },
                leftBody
              )
            )
          )
        );
      }

      return view;
    }
  }]);

  return CompanyPage;
}(_react.Component);

exports.default = CompanyPage;


CompanyPage.propTypes = {
  id: _propTypes2.default.number.isRequired,
  displayOnly: _propTypes2.default.bool, // set true in session
  canToggle: _propTypes2.default.bool, // set true in session
  isPreEvent: _propTypes2.default.bool
};

CompanyPage.defaultProps = {
  displayOnly: false,
  isPreEvent: false
};

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyObject = {};

if (false) {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /* eslint-disable space-before-function-paren */

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    /* eslint-enable space-before-function-paren */
    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticUIEvent = __webpack_require__(86);
var ViewportMetrics = __webpack_require__(200);

var getEventModifierState = __webpack_require__(134);

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ExecutionEnvironment = __webpack_require__(29);
var DOMNamespaces = __webpack_require__(136);

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = __webpack_require__(137);

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xfeff) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */



// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var EventPluginRegistry = __webpack_require__(129);
var ReactEventEmitterMixin = __webpack_require__(352);
var ViewportMetrics = __webpack_require__(200);

var getVendorPrefixedEventName = __webpack_require__(353);
var isEventSupported = __webpack_require__(133);

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {
          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }
});

module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _extends;
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getNewState = getNewState;
function getNewState(oldState, changedProperties) {
    return Object.assign({}, oldState, changedProperties);
}

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(456);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = Object({"NODE_ENV":"production"}).DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))

/***/ }),
/* 108 */
/***/ (function(module, exports) {

/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */

exports.encode = function (obj) {
  var str = '';

  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      if (str.length) str += '&';
      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
    }
  }

  return str;
};

/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */

exports.decode = function(qs){
  var qry = {};
  var pairs = qs.split('&');
  for (var i = 0, l = pairs.length; i < l; i++) {
    var pair = pairs[i].split('=');
    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
  }
  return qry;
};


/***/ }),
/* 109 */
/***/ (function(module, exports) {


module.exports = function(a, b){
  var fn = function(){};
  fn.prototype = b.prototype;
  a.prototype = new fn;
  a.prototype.constructor = a;
};

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(477);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = Object({"NODE_ENV":"production"}).DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))

/***/ }),
/* 111 */
/***/ (function(module, exports) {

module.exports = {
  ROOT       : 0,
  GROUP      : 1,
  POSITION   : 2,
  SET        : 3,
  RANGE      : 4,
  REPETITION : 5,
  REFERENCE  : 6,
  CHAR       : 7,
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

var _profileCard = __webpack_require__(13);

var _companies = __webpack_require__(91);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../../../css/sponsor.scss");

var SponsorList = function (_React$Component) {
  _inherits(SponsorList, _React$Component);

  function SponsorList(props) {
    _classCallCheck(this, SponsorList);

    var _this = _possibleConstructorReturn(this, (SponsorList.__proto__ || Object.getPrototypeOf(SponsorList)).call(this, props));

    _this.CF = (0, _authActions.getCF)();
    _this.state = {
      coms: null,
      load_coms: true
    };
    return _this;
  }

  _createClass(SponsorList, [{
    key: "getDimensionFromSize",
    value: function getDimensionFromSize(size) {
      switch (size) {
        case "lg":
          return "150px";
        case "md":
          return "100px";
        case "sm":
          return "50px";
        default:
          return size;
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      // create ignore type condition
      var ignore_types = [_dbConfig.CompanyEnum.TYPE_SPECIAL];
      if (!this.props.part_com) {
        ignore_types.push(_dbConfig.CompanyEnum.TYPE_NORMAL);
      }

      ignore_types = [].concat(_toConsumableArray(ignore_types), _toConsumableArray(this.props.ignore_types));

      var ignore_type = "";
      ignore_types.map(function (d, i) {
        ignore_type += "" + d;
        if (i < ignore_types.length - 1) {
          ignore_type += ",";
        }
      });

      var query = "query{companies(cf:\"" + this.CF + "\", ignore_type:\"(" + ignore_type + ")\", include_sponsor:1)\n        {name cf type img_url img_position img_size}}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.setState(function () {
          return { coms: res.data.data.companies, load_coms: false };
        });
      });
    }
  }, {
    key: "isHallPage",
    value: function isHallPage() {
      return this.props.type == "hall-page";
    }
  }, {
    key: "getSponsorItem",
    value: function getSponsorItem(d) {
      var isSponsor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      var dimension = isSponsor ? this.getDimensionFromSize(this.props.sponsor_size) : this.getDimensionFromSize(this.props.part_com_size);
      var style = (0, _profileCard.getStyleImageObj)("company", d.img_url, d.img_size, d.img_pos, dimension);

      var className = (0, _companies.getCompanyCSSClass)(d.type);
      className += " " + (isSponsor ? this.props.sponsor_size : this.props.part_com_size);

      var strSponsor = _dbConfig.CompanyEnum.getTypeStr(d.type);
      // if (this.isHallPage()) {
      //   strSponsorstrSponsor = strSponsor.replaceAll(" Sponsor", "");
      // }
      if (this.isHallPage()) {
        return (0, _profileCard.createImageElement)(d.img_url, d.img_pos, d.img_size, "130px", "with-border no-vertical-margin", _profileCard.PCType.Company, { borderRadius: "7px" });
      } else {
        return _react2.default.createElement(
          "div",
          { className: "sponsor-card " + className },
          _react2.default.createElement("div", { className: "image", style: style }),
          !isSponsor ? null : _react2.default.createElement(
            "div",
            { className: "title" },
            strSponsor
          )
        );
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var sponsor = _react2.default.createElement(_loader.Loader, { size: "3", text: "Loading sponsors.." });
      var part_com = _react2.default.createElement(_loader.Loader, { size: "3", text: "Loading companies.." });
      if (!this.state.load_coms && this.state.coms != null) {
        sponsor = [];
        part_com = [];
        this.state.coms.map(function (d, i) {
          if (d.type == _dbConfig.CompanyEnum.TYPE_NORMAL) {
            part_com.push(_react2.default.createElement(
              "li",
              null,
              _this3.getSponsorItem(d, false)
            ));
          } else {
            sponsor.push(_react2.default.createElement(
              "li",
              null,
              _this3.getSponsorItem(d)
            ));
          }
        });
      }

      var parentStyle = {
        maxWidth: "800px",
        margin: "auto"
      };

      return _react2.default.createElement(
        "div",
        { style: parentStyle },
        _react2.default.createElement(
          "div",
          null,
          this.props.title && sponsor.length > 0 ? _react2.default.createElement(
            "h1",
            null,
            "Sponsors"
          ) : null,
          _react2.default.createElement(
            "ul",
            { className: "sponsor-container" },
            sponsor
          )
        ),
        !this.props.part_com ? null : _react2.default.createElement(
          "div",
          null,
          this.props.title && part_com.length > 0 ? _react2.default.createElement(
            "h1",
            null,
            "Participating Exhibitors"
          ) : null,
          _react2.default.createElement(
            "ul",
            { className: "sponsor-container" },
            part_com
          )
        )
      );
    }
  }]);

  return SponsorList;
}(_react2.default.Component);

exports.default = SponsorList;


SponsorList.propTypes = {
  type: _propTypes2.default.oneOf(["landing", "coming-soon", "right-bar", "hall-page"]).isRequired,
  part_com: _propTypes2.default.bool,
  title: _propTypes2.default.bool,
  sponsor_size: _propTypes2.default.oneOf("lg", "md", "sm"),
  part_com_size: _propTypes2.default.oneOf("lg", "md", "sm"),
  ignore_types: _propTypes2.default.array
};

SponsorList.defaultProps = {
  ignore_types: [],
  sponsor_size: "lg",
  part_com_size: "md",
  part_com: true,
  title: true
};

/***/ }),
/* 113 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 114 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(260);
var enumBugKeys = __webpack_require__(167);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 116 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(63).f;
var has = __webpack_require__(65);
var TAG = __webpack_require__(33)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 118 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  SMALL: 'small',
  MEDIUM: 'medium',
  STANDARD: 'standard',
  LARGE: 'large',
  XLARGE: 'xlarge'
};
//# sourceMappingURL=MessengerSize.js.map

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  BLUE: 'blue',
  WHITE: 'white'
};
//# sourceMappingURL=MessengerColor.js.map

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _vacancy = __webpack_require__(283);

var _vacancy2 = _interopRequireDefault(_vacancy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var VacancyPopup = function (_Component) {
    _inherits(VacancyPopup, _Component);

    function VacancyPopup() {
        _classCallCheck(this, VacancyPopup);

        return _possibleConstructorReturn(this, (VacancyPopup.__proto__ || Object.getPrototypeOf(VacancyPopup)).apply(this, arguments));
    }

    _createClass(VacancyPopup, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                "div",
                { style: { padding: "10px 20px", position: "relative" } },
                _react2.default.createElement(_vacancy2.default, _extends({}, this.props, {
                    id: this.props.id,
                    isPopup: true
                }))
            );
        }
    }]);

    return VacancyPopup;
}(_react.Component);

exports.default = VacancyPopup;


VacancyPopup.propTypes = {
    id: _propTypes2.default.number
};

/*
import {Loader} from '../../../component/loader';
import {getAxiosGraphQLQuery} from '../../../../helper/api-helper';
import {DocLinkEnum} from '../../../../config/db-config';
import ProfileCard from '../../../component/profile-card.jsx';
import PageSection from '../../../component/page-section';
import {CustomList} from '../../../component/list';
class VacancyPopu111p extends Component {
    constructor(props) {
        super(props)

        this.state = {
            data: null,
            loading: true
        }
    }

    componentWillMount() {
        var id = null;

        if (this.props.match) {
            id = this.props.match.params.id
        } else {
            id = this.props.id;
        }

        var query = `query {
              vacancy(ID:${id}) {
                ID
                company_id
                title
                description
                requirement
                type
                application_url
                updated_at
            }}`;

        getAxiosGraphQLQuery(query).then((res) => {
            this.setState(() => {
                return {data: res.data.data.vacancy, loading: false}
            })
        });
    }

    render() {
        var id = null;
        var vacan = this.state.data;
        var view = null;

        if (this.state.loading) {
            view = <Loader size='3' text='Loading Vacancy Information...'></Loader>
        } else {
            var non = <div className="text-muted">Nothing To Show Here</div>;
            
            var items = [
                <span><i className="fa fa-hashtag left"></i>Vacancy Id - {vacan.ID}</span>,
                (vacan.type === "" || !vacan.type) ? null : <span><i className="fa fa-star left"></i>{vacan.type}</span>,
                <span><i className="fa fa-building left"></i>{this.props.company.name}</span>,
                (!vacan.application_url) ? null : <span><i className="fa fa-link left"></i>
                    <a target="_blank" href={vacan.application_url}>{vacan.application_url}</a></span>
            ];

            var about = <CustomList className="empty" items={items}></CustomList>;

            var desc = (vacan.description !== null) ? <p>{vacan.description}</p> : non;
            var req = (vacan.requirement !== null) ? <p>{vacan.requirement}</p> : non;

            view = <div>
                <PageSection className="left" title={vacan.title} body={about}></PageSection>
                <PageSection className="left" title="Description" body={desc}></PageSection>
                <PageSection className="left" title="Requirement" body={req}></PageSection>
            </div>;

        }

        return (view);
    }
};
*/

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _loader = __webpack_require__(8);

var _store = __webpack_require__(34);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ConfirmPopup = function (_React$Component) {
    _inherits(ConfirmPopup, _React$Component);

    function ConfirmPopup() {
        _classCallCheck(this, ConfirmPopup);

        return _possibleConstructorReturn(this, (ConfirmPopup.__proto__ || Object.getPrototypeOf(ConfirmPopup)).apply(this, arguments));
    }

    _createClass(ConfirmPopup, [{
        key: 'render',
        value: function render() {
            var view = null;
            if (this.props.loading) {
                view = _react2.default.createElement(_loader.Loader, { size: '3', text: 'Please Wait...' });
            } else {
                view = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'button',
                        { className: 'btn btn-primary btn-md',
                            onClick: this.props.onYes },
                        this.props.yesText ? this.props.yesText : "Yes"
                    ),
                    _react2.default.createElement(
                        'button',
                        { className: 'btn btn-default btn-md',
                            onClick: function onClick() {
                                return _store.store.dispatch(layoutActions.hideFocusCard());
                            } },
                        this.props.noText ? this.props.noText : "No"
                    )
                );
            }

            return _react2.default.createElement(
                'div',
                null,
                ' ',
                _react2.default.createElement(
                    'h4',
                    null,
                    this.props.title
                ),
                view
            );
        }
    }]);

    return ConfirmPopup;
}(_react2.default.Component);

exports.default = ConfirmPopup;


ConfirmPopup.propTypes = {
    onYes: _propTypes2.default.func.isRequired,
    title: _propTypes2.default.string,
    yesText: _propTypes2.default.string,
    isConfirming: _propTypes2.default.bool,
    noText: _propTypes2.default.string
};

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.soundNotification = soundNotification;
exports.showNotification = showNotification;

var _layoutActions = __webpack_require__(6);

var _appConfig = __webpack_require__(4);

var hasLocalStorageSupport;

try {
    window.localStorage.setItem("testKey", 'foo');
    window.localStorage.removeItem("testKey");
    hasLocalStorageSupport = true;
} catch (e) {
    console.log(e);
    hasLocalStorageSupport = false;
}

var NOTI_LOCAL_STORAGE = "cf-app-noti";

function soundNotification() {
    var id = "notification-audio";

    var cur = document.getElementById(id);
    if (cur != null) {
        document.body.removeChild(cur);
    }

    var audio = document.createElement("audio");
    audio.id = id;
    audio.innerHTML = '<source type="audio/mpeg" src="' + _appConfig.AudioUrl + '/bell.mp3">';
    document.body.appendChild(audio);

    audio.load();
    audio.play();
}

function getCurrentLocal() {
    var curLs = window.localStorage.getItem(NOTI_LOCAL_STORAGE);
    if (curLs == null) {
        return [];
    }

    var toRet = null;
    try {
        toRet = JSON.parse(curLs);
    } catch (err) {
        toRet = [];
    }

    return toRet;
}

function showNotification(id, content) {
    var cur = getCurrentLocal();

    // kalau dh ada dalam local storage , return je
    if (cur.indexOf(id) >= 0) {
        return;
    }

    soundNotification();
    (0, _layoutActions.customBlockLoader)(content);

    cur.push(id);
    window.localStorage.setItem(NOTI_LOCAL_STORAGE, JSON.stringify(cur));
}

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationSource = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

var _layoutActions = __webpack_require__(6);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _docLinkForm = __webpack_require__(177);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ValidationSource = exports.ValidationSource = {
  GROUP_SESSION: "GROUP_SESSION",
  DROP_RESUME: "DROP_RESUME"
};

var ValidationStudentAction = function (_React$Component) {
  _inherits(ValidationStudentAction, _React$Component);

  function ValidationStudentAction(props) {
    _classCallCheck(this, ValidationStudentAction);

    var _this = _possibleConstructorReturn(this, (ValidationStudentAction.__proto__ || Object.getPrototypeOf(ValidationStudentAction)).call(this, props));

    _this.state = {
      hasResume: false,
      //hasAcademicTrans: false,
      //emailVerified: false,
      profileCompleted: false,
      loading: true,
      user_email: null
    };
    return _this;
  }

  _createClass(ValidationStudentAction, [{
    key: "isAllTrue",
    value: function isAllTrue() {
      if (this.props.source === ValidationSource.GROUP_SESSION) {
        return true;
      } else if (this.props.source === ValidationSource.DROP_RESUME) {
        // console.log("state",this.state);
        // console.log("state",this.state);
        // console.log("state",this.state);
        // console.log("state",this.state);
        return this.state.hasResume &&
        //&& this.state.hasAcademicTrans
        //&& this.state.emailVerified
        this.state.profileCompleted;
      }

      return true;
    }
  }, {
    key: "getList",
    value: function getList() {
      var list = {};
      // list.emailVerified = {
      //     label: "Verifiy Your Email",
      //     icon: "envelope",
      //     desc: <div>Please check your email (<b>{this.state.user_email}</b>) for the activation link.
      //         If you did not received any email, contact us at <b>innovaseedssolution@gmail.com</b>
      //     </div>,
      //     action: null,
      // };

      list.profileCompleted = {
        label: "Complete Your Profile",
        icon: "user",
        desc: "Fill in all the required field in edit profile",
        action: _appConfig.RootPath + "/app/edit-profile/profile",
        actionText: "Click Here To Complete Your Profile"
      };

      list.hasResume = {
        label: "Upload Resume",
        icon: "file-text-o",
        actionText: "Click Here To Upload",
        desc: null,
        //desc: `Make sure you have a document labeled '${DocLinkEnum.LABEL_RESUME}' in your profile`,
        action: _appConfig.RootPath + "/app/edit-profile/doc-link?label=" + _dbConfig.DocLinkEnum.LABEL_RESUME
      };

      // list.hasAcademicTrans = {
      //     label: "Upload Academic Transcript",
      //     icon: "file-text-o",
      //     actionText: "Click Here To Upload",
      //     desc: null,
      //     //desc: `Make sure you have a document labeled '${DocLinkEnum.LABEL_ACADEMIC_TRANS}' in your profile`,
      //     action: `${RootPath}/app/edit-profile/doc-link?label=${DocLinkEnum.LABEL_ACADEMIC_TRANS}`,
      // };

      return list;
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      var user_id = (0, _authActions.getAuthUser)().ID;

      // is_active

      var query = "query{user(ID:" + user_id + "){ user_email is_profile_completed doc_links{ID label url} }}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var userData = res.data.data.user;
        var dl = userData.doc_links;
        _this2.setState(function (prevState) {
          return {
            user_email: userData.user_email,
            loading: false,
            hasResume: (0, _docLinkForm.hasResume)(dl) || (0, _docLinkForm.hasCV)(dl),
            //hasAcademicTrans: hasAcademicTranscript(dl),
            //emailVerified: userData.is_active,
            profileCompleted: userData.is_profile_completed
          };
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var closeBlockLoader = false;
      var view = _react2.default.createElement("div", null);
      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { text: "Loading...", size: "2" });
      } else {
        if (this.isAllTrue()) {
          closeBlockLoader = true;
        } else {
          var title = _react2.default.createElement(
            "h4",
            { style: { color: "grey" } },
            "Please Complete All The Following First"
          );
          var list = [];
          var listData = this.getList();
          for (var key in listData) {
            var item = listData[key];
            var isDone = this.state[key];
            var icon = _react2.default.createElement("i", { className: "text-muted fa fa-" + item.icon + " left" });
            var itemView = _react2.default.createElement(
              "div",
              null,
              isDone ? _react2.default.createElement(
                "div",
                null,
                icon,
                _react2.default.createElement(
                  "span",
                  { style: { color: "green" } },
                  item.label,
                  " ",
                  _react2.default.createElement("i", { className: "fa fa-check-circle" })
                )
              ) : _react2.default.createElement(
                "div",
                null,
                icon,
                _react2.default.createElement(
                  "span",
                  { style: { color: "#393333" } },
                  item.label
                )
              ),
              item.desc == null || isDone ? null : _react2.default.createElement(
                "div",
                null,
                _react2.default.createElement(
                  "small",
                  { className: "text-muted" },
                  item.desc
                )
              ),
              item.action == null || isDone ? null : _react2.default.createElement(
                "small",
                null,
                _react2.default.createElement(
                  _reactRouterDom.NavLink,
                  {
                    onClick: function onClick() {
                      (0, _layoutActions.storeHideBlockLoader)();
                      (0, _layoutActions.storeHideFocusCard)();
                    },
                    to: item.action
                  },
                  item.actionText
                )
              )
            );

            list.push(_react2.default.createElement(
              "div",
              { style: { marginTop: "15px" } },
              itemView
            ));
          }

          view = _react2.default.createElement(
            "div",
            null,
            title,
            _react2.default.createElement(
              "div",
              { style: { marginTop: "5px", textAlign: "left" } },
              list
            ),
            _react2.default.createElement("br", null),
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "small",
              null,
              _react2.default.createElement(
                "a",
                {
                  onClick: function onClick() {
                    if (_this3.props.closeHandler != null) {
                      _this3.props.closeHandler();
                    }
                    (0, _layoutActions.storeHideBlockLoader)();
                  }
                },
                "CLOSE"
              )
            )
          );
        }
      }

      if (closeBlockLoader || this.props.isHidden) {
        (0, _layoutActions.storeHideBlockLoader)();
      } else {
        (0, _layoutActions.customBlockLoader)(view, undefined, undefined, undefined, true);
      }

      if (closeBlockLoader && this.props.successHandler != null && !this.props.isHidden) {
        this.props.successHandler();
      }
      return _react2.default.createElement("div", null);
    }
  }]);

  return ValidationStudentAction;
}(_react2.default.Component);

exports.default = ValidationStudentAction;


ValidationStudentAction.propTypes = {
  source: _propTypes2.default.oneOf([ValidationSource.GROUP_SESSION, ValidationSource.DROP_RESUME]),
  successHandler: _propTypes2.default.func,
  closeHandler: _propTypes2.default.func,
  isHidden: _propTypes2.default.bool
};

ValidationStudentAction.defaultProps = {
  successHandler: null,
  closeHandler: null,
  isHidden: false
};

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gallery = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.isGalleryIframe = isGalleryIframe;
exports.getYoutubeIframe = getYoutubeIframe;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _util = __webpack_require__(45);

var _otherActions = __webpack_require__(30);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/gallery.scss");
function isGalleryIframe(type, url) {
  return type == _dbConfig.DocLinkEnum.TYPE_DOC || url.containText("youtube") || url.containText("youtu.be");
}

function getYoutubeIframe(rawUrl) {
  var embed = null;
  if (rawUrl.containText("youtube")) {
    //src="https://www.youtube.com/embed/tzayZzSebrY"
    embed = (0, _util.getParamUrl)(rawUrl, "v");
  } else if (rawUrl.containText("youtu.be")) {
    //https://youtu.be/RNMTDv-w9MU
    var temp = rawUrl.split("/");
    embed = temp[temp.length - 1];
  }
  var newUrl = "https://www.youtube.com/embed/" + embed;
  return _react2.default.createElement("iframe", { src: newUrl, allowfullscreen: "1", frameBorder: "0" });
}

var Gallery = exports.Gallery = function (_React$Component) {
  _inherits(Gallery, _React$Component);

  function Gallery(props) {
    _classCallCheck(this, Gallery);

    var _this = _possibleConstructorReturn(this, (Gallery.__proto__ || Object.getPrototypeOf(Gallery)).call(this, props));

    _this.REF_LIST = "galleryList";
    _this.REF_ITEM = "galleryItem";
    _this.currentScrollLeft = 0;
    _this.CLICK_OFFSET = 200;
    _this.listWidth = 0;
    _this.offsets = [];
    _this.state = {
      maxOffset: 0,
      currentItem: 0,
      hideLeft: true,
      hideRight: false
    };
    return _this;
  }

  _createClass(Gallery, [{
    key: "componentWillMount",
    value: function componentWillMount() {}
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var p = this.refs[this.REF_LIST];

      for (var i in this.refs) {
        var r = this.refs[i];
        if (i.indexOf(this.REF_ITEM) >= 0) {
          this.offsets.push(r.offsetLeft - p.offsetLeft);
        }
      }

      this.listWidth = p.clientWidth;
      this.setState(function (prevState) {
        return { maxOffset: p.scrollLeftMax };
      });
    }
  }, {
    key: "getArrow",
    value: function getArrow(type) {
      var _this2 = this;

      if (this.state.maxOffset <= 0 || this.offsets.length <= 1) {
        return null;
      }

      var onClickArrow = function onClickArrow(type) {
        var scroll = _this2.currentScrollLeft;
        var p = _this2.refs[_this2.REF_LIST];
        var nextItem = _this2.state.currentItem;

        var hideLeft = false;
        var hideRight = false;

        if (type == "right") {
          scroll += _this2.CLICK_OFFSET;
          nextItem++;
        } else if (type == "left") {
          scroll -= _this2.CLICK_OFFSET;
          nextItem--;
        }

        if (nextItem >= _this2.offsets.length) {
          nextItem = _this2.offsets.length - 1;
        }
        if (nextItem < 0) {
          nextItem = 0;
        }

        scroll = _this2.offsets[nextItem];

        console.log(_this2.listWidth, _this2.offsets, nextItem);

        // max to right
        if (scroll >= p.scrollLeftMax || scroll == _this2.currentScrollLeft) {
          scroll = p.scrollLeftMax;
          hideRight = true;
        }

        // max to left
        if (scroll <= 0) {
          scroll = 0;
          hideLeft = true;
        }

        // p.scrollLeft = scroll;
        (0, _util.scrollToX)(p, scroll, 200);

        if (scroll != _this2.currentScrollLeft) {
          _this2.setState(function (prevState) {
            return { currentItem: nextItem };
          });
        }

        _this2.setState(function (prevState) {
          return { hideRight: hideRight, hideLeft: hideLeft };
        });

        _this2.currentScrollLeft = scroll;
      };

      var marginLeft = type == "right" ? "5px" : "";
      var marginRight = type == "right" ? "" : "5px";

      var isHidden = this.state.hideLeft && type == "left" || this.state.hideRight && type == "right";

      return isHidden ? _react2.default.createElement("div", { style: { width: "28px", height: "50px" } }) : _react2.default.createElement(_buttons.ButtonIcon, {
        style: { marginLeft: marginLeft, marginRight: marginRight },
        onClick: function onClick() {
          return onClickArrow(type);
        },
        icon: "arrow-circle-" + type,
        size: "lg"
      });
    }

    //   getYoutubeIframe(embed) {
    //     var newUrl = "https://www.youtube.com/embed/" + embed;
    //     return <iframe src={newUrl} allowfullscreen="1" frameBorder="0" />;
    //   }

  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var data = this.props.data;

      var onClickUrl = function onClickUrl(e) {
        var param = {
          label: e.currentTarget.dataset.label,
          url: e.currentTarget.dataset.url,
          student_id: _this3.props.student_id,
          company_id: _this3.props.company_id
        };

        (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_GALLERY, param);
      };

      var GI_ICON = "gi-icon";
      var GI_IFRAME = "gi-iframe";
      var giType = null;

      var list = data.map(function (d, i) {
        //var icon = (d.type === DocLinkEnum.TYPE_DOC) ? "file-text" : "link";
        var preview = null;
        var icon = null;
        var iconColor = null;
        var giClass = "";

        if (d.type == _dbConfig.DocLinkEnum.TYPE_DOC) {
          preview = _react2.default.createElement("iframe", { src: d.url, frameBorder: "0" });
          //} else if (d.url.containText("youtube")) {
          //src="https://www.youtube.com/embed/tzayZzSebrY"
          // var embed = getParamUrl(d.url, "v");
          // preview = getYoutubeIframe(embed);
        } else if (d.url.containText("youtube") || d.url.containText("youtu.be")) {
          //https://youtu.be/RNMTDv-w9MU
          // let temp = d.url.split("/");
          // let embed = temp[temp.length - 1];
          preview = getYoutubeIframe(d.url);
        } else if (d.url.containText("facebook")) {
          icon = "facebook-f";
          iconColor = "#3B5998";
        } else if (d.url.containText("linkedin")) {
          icon = "linkedin";
          iconColor = "#0077B5";
        } else if (d.url.endsWith(".pdf")) {
          icon = "file-text";
          iconColor = "#dd7c29";
        } else if (d.url.containText("video") || d.label.containText("video")) {
          icon = "play";
          iconColor = "#e41f1f";
        } else {
          icon = "globe";
          iconColor = "#609399";
        }

        // for icon
        if (preview == null && icon !== null) {
          giClass = GI_ICON;
          preview = _react2.default.createElement(
            "div",
            {
              className: "gallery-icon",
              style: { background: iconColor, color: "white" }
            },
            _react2.default.createElement("i", { className: "fa fa-" + icon + " fa-2x" })
          );
        } else {
          giClass = GI_IFRAME;
        }

        return _react2.default.createElement(
          "div",
          {
            className: "gallery-item " + giClass,
            ref: _this3.REF_ITEM + "-" + d.ID
          },
          _react2.default.createElement(
            "div",
            { className: "preview" },
            preview
          ),
          _react2.default.createElement(
            "a",
            {
              target: "_blank",
              href: "" + d.url,
              "data-url": d.url,
              "data-label": d.label,
              onClick: function onClick(e) {
                onClickUrl(e);
              }
            },
            _react2.default.createElement(
              "div",
              { className: "title" },
              d.label
            )
          )
        );

        // giType = giClass;
        // if (giType == GI_ICON) {
        //     return <div className={`gallery-item ${giClass}`} ref={`${this.REF_ITEM}-${d.ID}`}>
        //         <div className="preview">{preview}</div>
        //         <a target='_blank' href={`${d.url}`}
        //             data-url={d.url} data-label={d.label}
        //             onClick={(e) => { onClickUrl(e) }}>
        //             <div className="title">{d.label}</div>
        //         </a>
        //     </div>;
        // } else if (giType == GI_IFRAME) {
        //     return <div className="mySlides fade">
        //         <div className="numbertext">1 / 3</div>
        //         <div style={{ width: "100%" }}>
        //             Content
        //     </div>
        //         <div className="text">Caption Text</div>
        //     </div>
        // }
      });

      // return <div className="gallery gallery-lg">
      //     {this.getArrow("left")}
      //     <div className="gallery-list" ref={this.REF_LIST}>
      //         {list}
      //     </div>
      //     {this.getArrow("right")}
      // </div>;

      return _react2.default.createElement(
        "div",
        { className: "gallery gallery-lg" },
        _react2.default.createElement(
          "div",
          { className: "gallery-list", ref: this.REF_LIST },
          list
        )
      );

      // if (giType == GI_ICON) {
      //     return <div className="gallery gallery-lg">
      //         {this.getArrow("left")}
      //         <div className="gallery-list" ref={this.REF_LIST}>
      //             {list}
      //         </div>
      //         {this.getArrow("right")}
      //     </div>;
      // } else if (giType == GI_IFRAME) {
      //     return <div id="gallery-custom">
      //         {list}
      //         <div className="slideshow-container">
      //             <a className="prev" onClick={(e) => { onClickUrl(e) }}>XX</a>
      //             <a className="next" onClick={(e) => { onClickUrl(e) }}>YY</a>
      //         </div>
      //         <br></br>
      //         <div className="text-center">
      //             <span className="dot" onClick={(e) => { onClickUrl(e) }}></span>
      //             <span className="dot" onClick={(e) => { onClickUrl(e) }}></span>
      //             <span className="dot" onClick={(e) => { onClickUrl(e) }}></span>
      //         </div>
      //     </div>
      // }
    }
  }]);

  return Gallery;
}(_react2.default.Component);

Gallery.propsType = {
  data: _propTypes2.default.array.isRequired,
  company_id: _propTypes2.default.number,
  student_id: _propTypes2.default.number,
  size: _propTypes2.default.string
};

Gallery.defaultProps = {
  size: "lg",
  company_id: null,
  student_id: null
};

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var getUnixTimestampNow = function getUnixTimestampNow() {
    var date = new Date();
    return Math.round(date.getTime() / 1000);
};

var setBodyFullWidth = function setBodyFullWidth() {
    var body = document.getElementsByTagName("body")[0];
    body.className += " body-full-width ";
};

var unsetBodyFullWidth = function unsetBodyFullWidth() {
    var body = document.getElementsByTagName("body")[0];
    body.className = body.className.replaceAll("body-full-width", "");
};

module.exports = {
    getUnixTimestampNow: getUnixTimestampNow,
    setBodyFullWidth: setBodyFullWidth,
    unsetBodyFullWidth: unsetBodyFullWidth
};

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// require("../css/sub-nav.scss");


var SubNav = function (_React$Component) {
    _inherits(SubNav, _React$Component);

    function SubNav(props) {
        _classCallCheck(this, SubNav);

        // console.log(props);
        // console.log();

        var _this = _possibleConstructorReturn(this, (SubNav.__proto__ || Object.getPrototypeOf(SubNav)).call(this, props));

        _this.state = {
            current: _this.props.defaultItem,
            key: 1
        };

        return _this;
    }

    _createClass(SubNav, [{
        key: 'getCurComponent',
        value: function getCurComponent() {
            var com = this.props.items[this.props.defaultItem].component;
            var props = this.props.items[this.props.defaultItem].props;
            return _react2.default.createElement(com, props);
        }
    }, {
        key: 'getCurItem',
        value: function getCurItem() {
            var item = this.props.items[this.props.defaultItem];
            return item;
        }
    }, {
        key: 'changeItem',
        value: function changeItem(e) {
            var k = e.currentTarget.id;
            this.setState(function (prevState) {
                return { current: k, key: prevState.key + 1 };
            });
        }
    }, {
        key: 'getNavList',
        value: function getNavList() {
            var li = [];
            for (var k in this.props.items) {
                var active = k === this.props.defaultItem ? "active" : "";
                var item = this.props.items[k];

                if (item.routeOnly) {
                    continue;
                }

                if (item.onClick) {
                    li.push(_react2.default.createElement(
                        'a',
                        null,
                        _react2.default.createElement(
                            'li',
                            { id: k, className: active,
                                onClick: item.onClick },
                            _react2.default.createElement('i', { className: 'fa fa-' + item.icon }),
                            item.label
                        )
                    ));
                } else {
                    li.push(_react2.default.createElement(
                        _reactRouterDom.NavLink,
                        { to: _appConfig.RootPath + '/app/' + this.props.route + '/' + k },
                        _react2.default.createElement(
                            'li',
                            { id: k, className: active,
                                onClick: this.changeItem.bind(this) },
                            _react2.default.createElement('i', { className: 'fa fa-' + item.icon }),
                            item.label
                        )
                    ));
                }
            }

            return _react2.default.createElement(
                'ul',
                null,
                li
            );
        }
    }, {
        key: 'render',
        value: function render() {
            console.log("render");
            var sn = "sn-";
            var view = _react2.default.createElement(
                'div',
                { className: 'sub-nav' },
                this.getCurItem().routeOnly === true ? null : _react2.default.createElement(
                    'div',
                    { className: sn + 'header' },
                    this.getNavList()
                ),
                _react2.default.createElement(
                    'div',
                    { key: this.state.key, className: sn + 'body' },
                    this.getCurComponent()
                )
            );
            return view;
        }
    }]);

    return SubNav;
}(_react2.default.Component);

exports.default = SubNav;


SubNav.propTypes = {
    items: _propTypes2.default.object.isRequired,
    props: _propTypes2.default.obj,
    route: _propTypes2.default.string.isRequired,
    defaultItem: _propTypes2.default.string
};

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(316);
} else {
  module.exports = require('./cjs/react-is.development.js');
}


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (false) {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {
  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames:  false ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (false) {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }
};

module.exports = EventPluginRegistry;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var ReactErrorUtils = __webpack_require__(131);

var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (false) {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (false) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (false) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (false) {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (false) {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = function () {
        func(a);
      };
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ExecutionEnvironment = __webpack_require__(29);

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMLazyTree = __webpack_require__(72);
var Danger = __webpack_require__(337);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactInstrumentation = __webpack_require__(38);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(137);
var setInnerHTML = __webpack_require__(102);
var setTextContent = __webpack_require__(201);

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (false) {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (false) {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {
  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (false) {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: {
                toIndex: update.toIndex,
                content: update.content.toString()
              }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }
};

module.exports = DOMChildrenOperations;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* globals MSApp */



/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var ReactPropTypesSecret = __webpack_require__(355);
var propTypesFactory = __webpack_require__(190);

var React = __webpack_require__(68);
var PropTypes = propTypesFactory(React.isValidElement);

var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

var injected = false;

var ReactComponentEnvironment = {
  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }
};

module.exports = ReactComponentEnvironment;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var ReactCurrentOwner = __webpack_require__(43);
var ReactInstanceMap = __webpack_require__(87);
var ReactInstrumentation = __webpack_require__(38);
var ReactUpdates = __webpack_require__(40);

var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (false) {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (false) {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    // Future-proof 15.5
    if (callback !== undefined && callback !== null) {
      ReactUpdateQueue.validateCallback(callback, 'replaceState');
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (false) {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }
};

module.exports = ReactUpdateQueue;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var emptyFunction = __webpack_require__(39);
var warning = __webpack_require__(16);

var validateDOMNesting = emptyFunction;

if (false) {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Router__ = __webpack_require__(147);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Router__["a" /* default */]);

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






/**
 * The public API for putting history on context.
 */

var Router = function (_React$Component) {
  _inherits(Router, _React$Component);

  function Router() {
    var _temp, _this, _ret;

    _classCallCheck(this, Router);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      match: _this.computeMatch(_this.props.history.location.pathname)
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Router.prototype.getChildContext = function getChildContext() {
    return {
      router: _extends({}, this.context.router, {
        history: this.props.history,
        route: {
          location: this.props.history.location,
          match: this.state.match
        }
      })
    };
  };

  Router.prototype.computeMatch = function computeMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  Router.prototype.componentWillMount = function componentWillMount() {
    var _this2 = this;

    var _props = this.props,
        children = _props.children,
        history = _props.history;


    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(children == null || __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.count(children) === 1, "A <Router> may have only one child element");

    // Do this here so we can setState when a <Redirect> changes the
    // location in componentWillMount. This happens e.g. when doing
    // server rendering using a <StaticRouter>.
    this.unlisten = history.listen(function () {
      _this2.setState({
        match: _this2.computeMatch(history.location.pathname)
      });
    });
  };

  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    __WEBPACK_IMPORTED_MODULE_0_warning___default()(this.props.history === nextProps.history, "You cannot change <Router history>");
  };

  Router.prototype.componentWillUnmount = function componentWillUnmount() {
    this.unlisten();
  };

  Router.prototype.render = function render() {
    var children = this.props.children;

    return children ? __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.only(children) : null;
  };

  return Router;
}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

Router.propTypes = {
  history: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,
  children: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.node
};
Router.contextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
};
Router.childContextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired
};


/* harmony default export */ __webpack_exports__["a"] = (Router);

/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_path_to_regexp__);


var patternCache = {};
var cacheLimit = 10000;
var cacheCount = 0;

var compilePath = function compilePath(pattern, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

  if (cache[pattern]) return cache[pattern];

  var keys = [];
  var re = __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default()(pattern, keys, options);
  var compiledPattern = { re: re, keys: keys };

  if (cacheCount < cacheLimit) {
    cache[pattern] = compiledPattern;
    cacheCount++;
  }

  return compiledPattern;
};

/**
 * Public API for matching a URL pathname to a path pattern.
 */
var matchPath = function matchPath(pathname) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var parent = arguments[2];

  if (typeof options === "string") options = { path: options };

  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === undefined ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === undefined ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === undefined ? false : _options$sensitive;


  if (path == null) return parent;

  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),
      re = _compilePath.re,
      keys = _compilePath.keys;

  var match = re.exec(pathname);

  if (!match) return null;

  var url = match[0],
      values = match.slice(1);

  var isExact = pathname === url;

  if (exact && !isExact) return null;

  return {
    path: path, // the path pattern used to match
    url: path === "/" && url === "" ? "/" : url, // the matched portion of the URL
    isExact: isExact, // whether or not we matched exactly
    params: keys.reduce(function (memo, key, index) {
      memo[key.name] = values[index];
      return memo;
    }, {})
  };
};

/* harmony default export */ __webpack_exports__["a"] = (matchPath);

/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = warning;
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

}

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _objectWithoutPropertiesLoose;
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var debug = __webpack_require__(458)('socket.io-parser');
var Emitter = __webpack_require__(461);
var binary = __webpack_require__(462);
var isArray = __webpack_require__(233);
var isBuf = __webpack_require__(234);

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = 4;

/**
 * Packet types.
 *
 * @api public
 */

exports.types = [
  'CONNECT',
  'DISCONNECT',
  'EVENT',
  'ACK',
  'ERROR',
  'BINARY_EVENT',
  'BINARY_ACK'
];

/**
 * Packet type `connect`.
 *
 * @api public
 */

exports.CONNECT = 0;

/**
 * Packet type `disconnect`.
 *
 * @api public
 */

exports.DISCONNECT = 1;

/**
 * Packet type `event`.
 *
 * @api public
 */

exports.EVENT = 2;

/**
 * Packet type `ack`.
 *
 * @api public
 */

exports.ACK = 3;

/**
 * Packet type `error`.
 *
 * @api public
 */

exports.ERROR = 4;

/**
 * Packet type 'binary event'
 *
 * @api public
 */

exports.BINARY_EVENT = 5;

/**
 * Packet type `binary ack`. For acks with binary arguments.
 *
 * @api public
 */

exports.BINARY_ACK = 6;

/**
 * Encoder constructor.
 *
 * @api public
 */

exports.Encoder = Encoder;

/**
 * Decoder constructor.
 *
 * @api public
 */

exports.Decoder = Decoder;

/**
 * A socket.io Encoder instance
 *
 * @api public
 */

function Encoder() {}

var ERROR_PACKET = exports.ERROR + '"encode error"';

/**
 * Encode a packet as a single string if non-binary, or as a
 * buffer sequence, depending on packet type.
 *
 * @param {Object} obj - packet object
 * @param {Function} callback - function to handle encodings (likely engine.write)
 * @return Calls callback with Array of encodings
 * @api public
 */

Encoder.prototype.encode = function(obj, callback){
  debug('encoding packet %j', obj);

  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    encodeAsBinary(obj, callback);
  } else {
    var encoding = encodeAsString(obj);
    callback([encoding]);
  }
};

/**
 * Encode packet as string.
 *
 * @param {Object} packet
 * @return {String} encoded
 * @api private
 */

function encodeAsString(obj) {

  // first is type
  var str = '' + obj.type;

  // attachments if we have them
  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    str += obj.attachments + '-';
  }

  // if we have a namespace other than `/`
  // we append it followed by a comma `,`
  if (obj.nsp && '/' !== obj.nsp) {
    str += obj.nsp + ',';
  }

  // immediately followed by the id
  if (null != obj.id) {
    str += obj.id;
  }

  // json data
  if (null != obj.data) {
    var payload = tryStringify(obj.data);
    if (payload !== false) {
      str += payload;
    } else {
      return ERROR_PACKET;
    }
  }

  debug('encoded %j as %s', obj, str);
  return str;
}

function tryStringify(str) {
  try {
    return JSON.stringify(str);
  } catch(e){
    return false;
  }
}

/**
 * Encode packet as 'buffer sequence' by removing blobs, and
 * deconstructing packet into object with placeholders and
 * a list of buffers.
 *
 * @param {Object} packet
 * @return {Buffer} encoded
 * @api private
 */

function encodeAsBinary(obj, callback) {

  function writeEncoding(bloblessData) {
    var deconstruction = binary.deconstructPacket(bloblessData);
    var pack = encodeAsString(deconstruction.packet);
    var buffers = deconstruction.buffers;

    buffers.unshift(pack); // add packet info to beginning of data list
    callback(buffers); // write all the buffers
  }

  binary.removeBlobs(obj, writeEncoding);
}

/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 * @api public
 */

function Decoder() {
  this.reconstructor = null;
}

/**
 * Mix in `Emitter` with Decoder.
 */

Emitter(Decoder.prototype);

/**
 * Decodes an encoded packet string into packet JSON.
 *
 * @param {String} obj - encoded packet
 * @return {Object} packet
 * @api public
 */

Decoder.prototype.add = function(obj) {
  var packet;
  if (typeof obj === 'string') {
    packet = decodeString(obj);
    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json
      this.reconstructor = new BinaryReconstructor(packet);

      // no attachments, labeled binary but no binary data to follow
      if (this.reconstructor.reconPack.attachments === 0) {
        this.emit('decoded', packet);
      }
    } else { // non-binary full packet
      this.emit('decoded', packet);
    }
  } else if (isBuf(obj) || obj.base64) { // raw binary data
    if (!this.reconstructor) {
      throw new Error('got binary data when not reconstructing a packet');
    } else {
      packet = this.reconstructor.takeBinaryData(obj);
      if (packet) { // received final buffer
        this.reconstructor = null;
        this.emit('decoded', packet);
      }
    }
  } else {
    throw new Error('Unknown type: ' + obj);
  }
};

/**
 * Decode a packet String (JSON data)
 *
 * @param {String} str
 * @return {Object} packet
 * @api private
 */

function decodeString(str) {
  var i = 0;
  // look up type
  var p = {
    type: Number(str.charAt(0))
  };

  if (null == exports.types[p.type]) {
    return error('unknown packet type ' + p.type);
  }

  // look up attachments if type binary
  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
    var buf = '';
    while (str.charAt(++i) !== '-') {
      buf += str.charAt(i);
      if (i == str.length) break;
    }
    if (buf != Number(buf) || str.charAt(i) !== '-') {
      throw new Error('Illegal attachments');
    }
    p.attachments = Number(buf);
  }

  // look up namespace (if any)
  if ('/' === str.charAt(i + 1)) {
    p.nsp = '';
    while (++i) {
      var c = str.charAt(i);
      if (',' === c) break;
      p.nsp += c;
      if (i === str.length) break;
    }
  } else {
    p.nsp = '/';
  }

  // look up id
  var next = str.charAt(i + 1);
  if ('' !== next && Number(next) == next) {
    p.id = '';
    while (++i) {
      var c = str.charAt(i);
      if (null == c || Number(c) != c) {
        --i;
        break;
      }
      p.id += str.charAt(i);
      if (i === str.length) break;
    }
    p.id = Number(p.id);
  }

  // look up json data
  if (str.charAt(++i)) {
    var payload = tryParse(str.substr(i));
    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));
    if (isPayloadValid) {
      p.data = payload;
    } else {
      return error('invalid payload');
    }
  }

  debug('decoded %s as %j', str, p);
  return p;
}

function tryParse(str) {
  try {
    return JSON.parse(str);
  } catch(e){
    return false;
  }
}

/**
 * Deallocates a parser's resources
 *
 * @api public
 */

Decoder.prototype.destroy = function() {
  if (this.reconstructor) {
    this.reconstructor.finishedReconstruction();
  }
};

/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 * @api private
 */

function BinaryReconstructor(packet) {
  this.reconPack = packet;
  this.buffers = [];
}

/**
 * Method to be called when binary data received from connection
 * after a BINARY_EVENT packet.
 *
 * @param {Buffer | ArrayBuffer} binData - the raw binary data received
 * @return {null | Object} returns null if more binary data is expected or
 *   a reconstructed packet object if all buffers have been received.
 * @api private
 */

BinaryReconstructor.prototype.takeBinaryData = function(binData) {
  this.buffers.push(binData);
  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list
    var packet = binary.reconstructPacket(this.reconPack, this.buffers);
    this.finishedReconstruction();
    return packet;
  }
  return null;
};

/**
 * Cleans up binary packet reconstruction variables.
 *
 * @api private
 */

BinaryReconstructor.prototype.finishedReconstruction = function() {
  this.reconPack = null;
  this.buffers = [];
};

function error(msg) {
  return {
    type: exports.ERROR,
    data: 'parser error: ' + msg
  };
}


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(463)
var ieee754 = __webpack_require__(464)
var isArray = __webpack_require__(465)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(88)))

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

// browser shim for xmlhttprequest module

var hasCORS = __webpack_require__(468);

module.exports = function (opts) {
  var xdomain = opts.xdomain;

  // scheme must be same when usign XDomainRequest
  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
  var xscheme = opts.xscheme;

  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
  // https://github.com/Automattic/engine.io-client/pull/217
  var enablesXDR = opts.enablesXDR;

  // XMLHttpRequest can be disabled on IE
  try {
    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e) { }

  // Use XDomainRequest for IE8 if enablesXDR is true
  // because loading bar keeps flashing when using jsonp-polling
  // https://github.com/yujiosaka/socke.io-ie8-loading-example
  try {
    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
      return new XDomainRequest();
    }
  } catch (e) { }

  if (!xdomain) {
    try {
      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
    } catch (e) { }
  }
};


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var parser = __webpack_require__(74);
var Emitter = __webpack_require__(155);

/**
 * Module exports.
 */

module.exports = Transport;

/**
 * Transport abstract constructor.
 *
 * @param {Object} options.
 * @api private
 */

function Transport (opts) {
  this.path = opts.path;
  this.hostname = opts.hostname;
  this.port = opts.port;
  this.secure = opts.secure;
  this.query = opts.query;
  this.timestampParam = opts.timestampParam;
  this.timestampRequests = opts.timestampRequests;
  this.readyState = '';
  this.agent = opts.agent || false;
  this.socket = opts.socket;
  this.enablesXDR = opts.enablesXDR;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;
  this.forceNode = opts.forceNode;

  // results of ReactNative environment detection
  this.isReactNative = opts.isReactNative;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;
  this.localAddress = opts.localAddress;
}

/**
 * Mix in `Emitter`.
 */

Emitter(Transport.prototype);

/**
 * Emits an error.
 *
 * @param {String} str
 * @return {Transport} for chaining
 * @api public
 */

Transport.prototype.onError = function (msg, desc) {
  var err = new Error(msg);
  err.type = 'TransportError';
  err.description = desc;
  this.emit('error', err);
  return this;
};

/**
 * Opens the transport.
 *
 * @api public
 */

Transport.prototype.open = function () {
  if ('closed' === this.readyState || '' === this.readyState) {
    this.readyState = 'opening';
    this.doOpen();
  }

  return this;
};

/**
 * Closes the transport.
 *
 * @api private
 */

Transport.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.doClose();
    this.onClose();
  }

  return this;
};

/**
 * Sends multiple packets.
 *
 * @param {Array} packets
 * @api private
 */

Transport.prototype.send = function (packets) {
  if ('open' === this.readyState) {
    this.write(packets);
  } else {
    throw new Error('Transport not open');
  }
};

/**
 * Called upon open
 *
 * @api private
 */

Transport.prototype.onOpen = function () {
  this.readyState = 'open';
  this.writable = true;
  this.emit('open');
};

/**
 * Called with data.
 *
 * @param {String} data
 * @api private
 */

Transport.prototype.onData = function (data) {
  var packet = parser.decodePacket(data, this.socket.binaryType);
  this.onPacket(packet);
};

/**
 * Called with a decoded packet.
 */

Transport.prototype.onPacket = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon close.
 *
 * @api private
 */

Transport.prototype.onClose = function () {
  this.readyState = 'closed';
  this.emit('close');
};


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Expose `Emitter`.
 */

if (true) {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(35);
var normalizeHeaderName = __webpack_require__(487);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(246);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(246);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _authActions = __webpack_require__(2);

var authActions = _interopRequireWildcard(_authActions);

var _dbConfig = __webpack_require__(5);

var _redux = __webpack_require__(26);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _buttons = __webpack_require__(15);

var _authConfig = __webpack_require__(75);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//<NavLink to={`${RootPath}/auth/activation-link`}>Did Not Received Email?</NavLink>

// import { AuthAPIErr } from '../../server/api/auth-api';


//state is from redux reducer
// with multiple objects
function mapStateToProps(state, ownProps) {
    return {
        redux: state.auth
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({
        login: authActions.login
    }, dispatch);
}

var LoginPage = function (_React$Component) {
    _inherits(LoginPage, _React$Component);

    function LoginPage(props) {
        _classCallCheck(this, LoginPage);

        var _this = _possibleConstructorReturn(this, (LoginPage.__proto__ || Object.getPrototypeOf(LoginPage)).call(this, props));

        _this.formOnSubmit = _this.formOnSubmit.bind(_this);
        return _this;
    }

    _createClass(LoginPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {

            this.formItem = [{
                label: "Email",
                name: _dbConfig.User.EMAIL,
                type: "email",
                placeholder: "john.doe@gmail.com",
                required: true
            }, {
                label: "Password",
                name: _dbConfig.User.PASSWORD,
                type: "password",
                placeholder: "*****",
                required: true
            }];

            this.CF = (0, _authActions.getCF)();
            this.defaultValues = {};

            // for sign up page only
            if (this.props.defaultLogin) {
                this.defaultValues[_dbConfig.User.EMAIL] = this.props.defaultLogin;
            }

            this.defaultValues[_dbConfig.User.CF] = (0, _authActions.getCF)();
        }
    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            //console.log("login", data);
            //this.props.login(d[User.EMAIL], d[User.PASSWORD], d[User.CF]);
            this.props.login(d[_dbConfig.User.EMAIL], d[_dbConfig.User.PASSWORD], this.CF);
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Login");
            var defaultPath = _appConfig.RootPath + '/app/';

            console.log("from login render");
            console.log("this.props.location", this.props.location);
            var from = {};
            if (typeof this.props.location !== "undefined" && typeof this.props.location.state !== "undefined") {
                from = this.props.location.state.from;
            } else {
                from = { pathname: defaultPath };
            }
            console.log("from", from);

            //handle from logout
            if (from.pathname == _appConfig.RootPath + '/app/logout') {
                from.pathname = defaultPath;
            }

            var redirectToReferrer = this.props.redux.isAuthorized;
            var fetching = this.props.redux.fetching;
            var error = this.props.redux.error;

            switch (error) {
                case _authConfig.AuthAPIErr.INVALID_EMAIL:
                    error = _react2.default.createElement(
                        'span',
                        null,
                        'User does not exist.',
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                            'small',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.NavLink,
                                { to: _appConfig.RootPath + '/auth/sign-up' },
                                'Sign Up Now'
                            )
                        )
                    );
                    break;
                case _authConfig.AuthAPIErr.NOT_ACTIVE:
                    error = _react2.default.createElement(
                        'span',
                        null,
                        'This account is ',
                        _react2.default.createElement(
                            'b',
                            null,
                            'not active'
                        ),
                        ' yet.',
                        _react2.default.createElement('br', null),
                        'Please check your email for the activation link.',
                        _react2.default.createElement('br', null),
                        'If you did not received any email, contact us at ',
                        _react2.default.createElement(
                            'b',
                            null,
                            'innovaseedssolution@gmail.com'
                        )
                    );
                    // <small><NavLink to={`${RootPath}/auth/activation-link`}>Did Not Received Email?</NavLink></small>
                    break;
                case _authConfig.AuthAPIErr.WRONG_PASS:
                    error = _react2.default.createElement(
                        'span',
                        null,
                        'Password Incorrect',
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                            'small',
                            null,
                            _react2.default.createElement(
                                _reactRouterDom.NavLink,
                                { to: _appConfig.RootPath + '/auth/password-forgot' },
                                'Forgot Your Password?'
                            )
                        )
                    );
                    break;
                case _authConfig.AuthAPIErr.INVALID_CF:
                    error = _react2.default.createElement(
                        'span',
                        null,
                        'This account is not registered for the selected career fair'
                    );
                    break;
            }

            if (error == null && !(0, _authActions.isCookieEnabled)()) {
                error = _react2.default.createElement(
                    'span',
                    null,
                    'Cookies is needed to keep you signed in. You need to enable your browser cookies to use your account.',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        _react2.default.createElement(
                            _reactRouterDom.NavLink,
                            { to: _appConfig.RootPath + '/auth/allow-cookie' },
                            'Click Here To Learn How'
                        )
                    )
                );
                redirectToReferrer = false;
            }

            console.log("redirectToReferrer", redirectToReferrer);
            // if authorized redirect to from
            if (redirectToReferrer) {
                console.log("redirect to", from.pathname);
                console.log("redirect to", from.pathname);
                console.log("redirect to", from.pathname);
                console.log("redirect to", from.pathname);
                console.log("redirect to", from.pathname);
                console.log("redirect to", from.pathname);
                console.log("redirect to", from.pathname);
                console.log("redirect to", from.pathname);

                return _react2.default.createElement(_reactRouterDom.Redirect, { to: from });
            } else {
                return _react2.default.createElement(
                    'div',
                    null,
                    this.props.title ? this.props.title : _react2.default.createElement(
                        'h3',
                        null,
                        'Login'
                    ),
                    _react2.default.createElement(_form2.default, { className: 'form-row',
                        items: this.formItem,
                        disableSubmit: fetching,
                        defaultValues: this.defaultValues,
                        submitText: 'Log In',
                        onSubmit: this.formOnSubmit,
                        btnColorClass: "default",
                        error: error })
                );
            }
        }
    }]);

    return LoginPage;
}(_react2.default.Component);

//<div>You must log in to view the page at {from.pathname}</div>s

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LoginPage);

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputSuggestion = function (_React$Component) {
  _inherits(InputSuggestion, _React$Component);

  function InputSuggestion(props) {
    _classCallCheck(this, InputSuggestion);

    // constant
    var _this = _possibleConstructorReturn(this, (InputSuggestion.__proto__ || Object.getPrototypeOf(InputSuggestion)).call(this, props));

    _this.START_FETCH_LEN = 2;

    // fn binding
    _this.getSelectOptions = _this.getSelectOptions.bind(_this);
    _this.onBlur = _this.onBlur.bind(_this);
    _this.onFocus = _this.onFocus.bind(_this);
    _this.onChange = _this.onChange.bind(_this);
    _this.onClickSuggestion = _this.onClickSuggestion.bind(_this);
    _this.onKeyDown = _this.onKeyDown.bind(_this);

    // state
    _this.state = {
      highlightIndex: null,
      showSuggestion: false,
      suggestion: [],
      dataset: {},
      loading: false
    };
    return _this;
  }

  _createClass(InputSuggestion, [{
    key: "isText",
    value: function isText() {
      return this.props.input_type == "text";
    }
  }, {
    key: "isTextarea",
    value: function isTextarea() {
      return this.props.input_type == "textarea";
    }
  }, {
    key: "isSelect",
    value: function isSelect() {
      return this.props.input_type == "select";
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      if (this.isSelect()) {
        this.fetchDataset();
      }
    }
  }, {
    key: "closeSuggestionList",
    value: function closeSuggestionList() {
      var _this2 = this;

      setTimeout(function () {
        _this2.setState(function (prevState) {
          return { showSuggestion: false, highlightIndex: null };
        });
      }, 150);
    }
  }, {
    key: "emptySuggestionList",
    value: function emptySuggestionList() {
      var _this3 = this;

      setTimeout(function () {
        _this3.setState(function (prevState) {
          return { suggestion: [], highlightIndex: null };
        });
      }, 150);
    }
  }, {
    key: "iterateHighlightedIndex",
    value: function iterateHighlightedIndex(offset) {
      this.setState(function (prevState) {
        var v = prevState.highlightIndex;
        if (v == null) {
          v = 0;
        } else {
          v += offset;
        }

        if (v < 0) {
          v = 0;
        } else if (v >= prevState.suggestion.length) {
          v = prevState.suggestion.length - 1;
        }

        return { highlightIndex: v };
      });
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(e) {
      // console.log("onKeyDown", e.key);
      switch (e.key) {
        case "ArrowDown":
          this.iterateHighlightedIndex(1);
          break;
        case "ArrowUp":
          this.iterateHighlightedIndex(-1);
          break;
        case "Enter":
          var v = null;
          if (this.state.highlightIndex != null && this.state.highlightIndex >= 0 && this.state.highlightIndex <= this.state.suggestion.length - 1) {
            var obj = this.state.suggestion[this.state.highlightIndex];
            v = obj.val;
          } else if (this.state.suggestion.length == 1) {
            var _obj = this.state.suggestion[0];
            v = _obj.val;
          }
          // console.log("enter", v);
          if (v != null && typeof v === "string") {
            v = v.capitalizeAll();
            this.onClickSuggestion(null, v);
          }
          break;
      }
    }
    // getValFromEl(e) {
    //   if (this.isText()) {
    //     return e.target.value;
    //   } else if (this.isSelect()) {
    //     return e.target.value;
    //   }
    // }

  }, {
    key: "onBlur",
    value: function onBlur(e) {
      console.log("onBlur", e);
      this.closeSuggestionList();

      if (this.props.input_onBlur) {
        this.props.input_onBlur(e, this.props.name);
      }
    }
  }, {
    key: "onFocus",
    value: function onFocus(e) {
      // console.log("onFocus", e);
      this.setState(function (prevState) {
        return { showSuggestion: true };
      });

      if (this.props.input_onFocus) {
        this.props.input_onFocus(e, this.props.name);
      }
    }
  }, {
    key: "onChange",
    value: function onChange(e) {
      if (this.isSelect()) {} else {
        var v = this.ref.value;
        if (v.length > this.START_FETCH_LEN) {
          this.fetchSuggestion(v);
        } else {
          this.setState(function (prevState) {
            return { suggestion: [] };
          });
        }
      }

      if (this.props.input_onChange) {
        this.props.input_onChange(e, this.props.name);
      }
    }
  }, {
    key: "onClickSuggestion",
    value: function onClickSuggestion(e) {
      var customVal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      var v = "";
      if (customVal != null
      // kalau ada satu je
      ) {
          v = customVal;
        } else {
        v = e.currentTarget.dataset.v;
      }

      this.ref.value = "";
      this.emptySuggestionList();

      if (this.props.onChoose) {
        this.props.onChoose(v, this.props.name);
      }
    }
  }, {
    key: "fetchDataset",
    value: function fetchDataset() {
      var _this4 = this;

      this.setState({ loading: true });
      if (!this.props.table_name) {
        return;
      }

      for (var i in this.props.table_name) {
        var q = "query{ \n        refs(\n          table_name :\"" + this.props.table_name + "\", \n          order_by : \"" + this.props.order_by + "\"\n        ) {\n          ID val table_name\n        }\n      }";

        (0, _apiHelper.graphql)(q).then(function (res) {
          _this4.setState({ dataset: res.data.data.refs });
        });
      }
    }
  }, {
    key: "fetchSuggestion",
    value: function fetchSuggestion(v) {
      var _this5 = this;

      if (!this.props.table_name) {
        return;
      }

      var q = "query{ \n          refs(\n            table_name :\"" + this.props.table_name + "\", \n            filter_column : \"" + this.props.filter_column + "\"\n            filter_val : \"" + this.props.filter_val + "\"\n            filter_find_id : " + this.props.filter_find_id + "\n            val:\"" + v + "\", page:1, offset:10\n          ) {\n            val\n          }\n        }";

      (0, _apiHelper.graphql)(q).then(function (res) {
        _this5.setState(function (prevState) {
          var suggestion = res.data.data.refs;
          if (suggestion.length == 0) {
            suggestion.push({ val: v });
          } else {
            var inserted = [];

            // filter same val
            var filteredSuggestion = [];
            for (var i in suggestion) {
              var d = suggestion[i];
              var val = d.val;
              if (inserted.indexOf(val) >= 0) {
                continue;
              } else {
                inserted.push(val);
                filteredSuggestion.push(d);
              }
            }
            suggestion = filteredSuggestion;
          }

          return { suggestion: suggestion, showSuggestion: true };
        });
      });
    }
  }, {
    key: "getIconView",
    value: function getIconView() {
      var v = null;
      var icon = null;
      var color = null;
      var txt = null;

      if (this.props.icon_loading) {
        icon = "spinner fa-pulse";
        color = "gray";
      } else if (this.props.icon_done) {
        icon = "check";
        color = "green";
      } else if (this.props.icon_is_required) {
        icon = "exclamation-triangle";
        color = "red";
        txt = "This field is required";
      }

      if (icon != null) {
        v = [_react2.default.createElement("i", { style: { color: color }, className: "fa fa-" + icon }), _react2.default.createElement(
          "div",
          { className: "icon-text", style: { color: color } },
          txt
        )];
      }
      return v;
    }
  }, {
    key: "getSuggestionView",
    value: function getSuggestionView() {
      var _this6 = this;

      if (this.state.suggestion.length <= 0 || !this.state.showSuggestion) {
        return null;
      } else {
        var suggestion = this.state.suggestion.map(function (d, i) {
          var val = d.val;
          var className = _this6.state.highlightIndex == i ? "highlight" : "";
          return _react2.default.createElement("li", {
            className: className,
            "data-v": val,
            onClick: _this6.onClickSuggestion,
            dangerouslySetInnerHTML: { __html: d.val }
          });
        });

        var v = _react2.default.createElement(
          "ul",
          null,
          suggestion
        );
        return v;
      }
    }
  }, {
    key: "getSelectOptions",
    value: function getSelectOptions() {
      var _this7 = this;

      if (this.state.dataset.length <= 0) {
        return null;
      } else {
        var dataset = [""].concat(_toConsumableArray(this.state.dataset));
        return dataset.map(function (d, i) {
          var value = "";
          if (_this7.props.use_id_as_value) {
            value = d.ID;
          } else {
            value = d.val;
          }
          var label = d.val;
          return _react2.default.createElement(
            "option",
            { key: i, value: value },
            label
          );
        });
      }
    }
  }, {
    key: "getFieldInput",
    value: function getFieldInput() {
      var _this8 = this;

      var className = this.props.is_in_normal_form ? "form-control input-sm" : "";

      if (this.isText()) {
        return _react2.default.createElement("input", {
          className: className,
          onBlur: this.onBlur,
          onFocus: this.onFocus,
          onChange: this.onChange,
          type: this.props.input_type,
          value: this.props.input_val,
          placeholder: this.props.input_placeholder,
          ref: function ref(r) {
            _this8.ref = r;
          }
        });
      } else if (this.isSelect()) {
        return _react2.default.createElement(
          "select",
          {
            className: className,
            onChange: this.onChange,
            onBlur: this.onBlur,
            onFocus: this.onFocus,
            ref: function ref(r) {
              _this8.ref = r;
            },
            value: this.props.input_val,
            defaultValue: this.props.input_val
          },
          this.getSelectOptions()
        );
      } else if (this.isTextarea()) {
        return _react2.default.createElement("textarea", {
          className: className,
          onChange: this.onChange,
          onBlur: this.onBlur,
          onFocus: this.onFocus,
          ref: function ref(r) {
            _this8.ref = r;
          },
          value: this.props.input_val,
          defaultValue: this.props.input_val,
          rows: this.props.rows ? this.props.rows : 4
        });
      }
    }
  }, {
    key: "render",
    value: function render() {

      var className = "";
      if (this.props.is_in_normal_form) {
        className = "input-suggestion-normal";
      } else {
        className = "input-suggestion";
      }
      // console.log("inputsuggestion render",this.props.name, this.props.input_val)
      return _react2.default.createElement(
        "div",
        { onKeyDown: this.onKeyDown, className: className },
        _react2.default.createElement(
          "div",
          { className: "input-field" },
          _react2.default.createElement(
            "div",
            { className: "input-and-icon" },
            this.getFieldInput(),
            _react2.default.createElement(
              "div",
              { className: "icon-input" },
              this.getIconView()
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "suggestion-list" },
            this.getSuggestionView()
          )
        )
      );
    }
  }]);

  return InputSuggestion;
}(_react2.default.Component);

exports.default = InputSuggestion;


InputSuggestion.propTypes = {
  is_in_normal_form: _propTypes2.default.bool,
  order_by: _propTypes2.default.string,
  use_id_as_value: _propTypes2.default.bool,
  input_type: _propTypes2.default.string,
  icon_loading: _propTypes2.default.bool,
  icon_done: _propTypes2.default.bool,
  icon_is_required: _propTypes2.default.bool,
  input_onChange: _propTypes2.default.func,
  input_onBlur: _propTypes2.default.func,
  input_val: _propTypes2.default.string,
  input_placeholder: _propTypes2.default.string,
  table_name: _propTypes2.default.string,
  filter_column: _propTypes2.default.string,
  filter_val: _propTypes2.default.string,
  filter_find_id: _propTypes2.default.bool,
  onChoose: _propTypes2.default.func,
  name: _propTypes2.default.string
};

InputSuggestion.defaultProps = {
  is_in_normal_form: false,
  name: "",
  filter_column: "",
  filter_val: "",
  filter_find_id: false,
  order_by: "",
  input_type: "text"
};

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Uploader = exports.FileType = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.uploadFile = uploadFile;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _axios = __webpack_require__(89);

var _axios2 = _interopRequireDefault(_axios);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// to divide in server folder directory
var FileType = exports.FileType = {
	IMG: "image",
	DOC: "document",
	VIDEO: "video"
};

function uploadFile(file, type, name) {
	var extraParam = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
	var onUploadProgress = arguments[4];

	var data = new FormData();
	data.append(type, file, file.name);

	for (var k in extraParam) {
		data.append(k, extraParam[k]);
	}

	var config = {
		onUploadProgress: onUploadProgress,
		headers: {
			"content-type": "multipart/form-data"
		}
	};

	return _axios2.default.post(_appConfig.AppConfig.Api + "/upload/" + type + "/" + name, data, config);
}

var Uploader = exports.Uploader = function (_React$Component) {
	_inherits(Uploader, _React$Component);

	function Uploader(props) {
		_classCallCheck(this, Uploader);

		var _this = _possibleConstructorReturn(this, (Uploader.__proto__ || Object.getPrototypeOf(Uploader)).call(this, props));

		_this.onChange = _this.onChange.bind(_this);
		_this.onSubmit = _this.onSubmit.bind(_this);
		_this.validateUpload = _this.validateUpload.bind(_this);
		_this.VALID_IMG = ["jpeg", "jpg", "png"];
		_this.VALID_DOC = ["pdf"];
		_this.VALID_VIDEO = ["m4v", "mov", "quicktime", // mov will resolve to quicktime
		"mp4"];
		_this.form = {};

		_this.MAX_SIZE = 2; // in MB
		_this.MB_TO_B = 1000000;

		_this.MAX_SIZE_VIDEO = 500;
		return _this;
	}

	_createClass(Uploader, [{
		key: "validateUpload",
		value: function validateUpload(file) {
			console.log(this.props.type);
			var allowable_format;
			var maxSize = this.MAX_SIZE;
			switch (this.props.type) {
				case FileType.IMG:
					allowable_format = this.VALID_IMG;
					break;
				case FileType.DOC:
					allowable_format = this.VALID_DOC;
					break;
				case FileType.VIDEO:
					allowable_format = this.VALID_VIDEO;
					maxSize = this.MAX_SIZE_VIDEO;
					break;
			}

			var error = true;
			var nameSplit = file.name.split(".");
			var type = file.type !== "" ? file.type.split("/")[1] : nameSplit[nameSplit.length - 1];
			if (file.size > maxSize * this.MB_TO_B) {
				if (error === true) {
					error = "";
				}
				error += "File is too big\n";
				error += "Maximum file size allowed is " + maxSize + " MB\n";
			}

			if (allowable_format.indexOf(type) < 0) {
				if (error === true) {
					error = "";
				}
				error += "File of type " + type + " is not supported. \n";
				error += "Supported File : " + JSON.stringify(allowable_format) + "\n";
			}

			return error;
		}
	}, {
		key: "onChange",
		value: function onChange(event) {
			this.props.onChange(event);

			console.log(event);

			var files = event.target.files;

			console.log(files);
			if (files.length <= 0) {
				alert("Something went wrong. Please refresh page and try again.");
				return;
			}

			var file = files[0];

			console.log(file);

			var res = this.validateUpload(file);
			//valid file
			if (res === true) {
				console.log("valid");
				this.props.onSuccess(file);
				//this.previewImage(file, this.reposition);
				//this.initImageProperties();
			}
			//file not valid
			else {
					this.props.onError(res);
				}
		}
	}, {
		key: "onSubmit",
		value: function onSubmit(ev) {
			ev.preventDefault();
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			return _react2.default.createElement(
				"form",
				null,
				_react2.default.createElement(
					"label",
					null,
					" ",
					this.props.label,
					" "
				),
				" ",
				_react2.default.createElement("input", { name: this.props.name,
					type: "file",
					onChange: this.onChange,
					required: this.props.required,
					ref: function ref(v) {
						return _this2.form[_this2.props.name] = v;
					}
				}),
				" "
			);
		}
	}]);

	return Uploader;
}(_react2.default.Component);

Uploader.propTypes = {
	name: _propTypes2.default.string.isRequired,
	label: _propTypes2.default.string,
	type: _propTypes2.default.oneOf([FileType.IMG, FileType.DOC]),
	required: _propTypes2.default.bool,
	onChange: _propTypes2.default.func,
	onSuccess: _propTypes2.default.func,
	onError: _propTypes2.default.func
};

/***/ }),
/* 160 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 161 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(54);
var document = __webpack_require__(31).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(54);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(46);
var dPs = __webpack_require__(520);
var enumBugKeys = __webpack_require__(167);
var IE_PROTO = __webpack_require__(165)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(162)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(263).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(166)('keys');
var uid = __webpack_require__(116);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(37);
var global = __webpack_require__(31);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(92) ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 167 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(113);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(33);


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(31);
var core = __webpack_require__(37);
var LIBRARY = __webpack_require__(92);
var wksExt = __webpack_require__(169);
var defineProperty = __webpack_require__(63).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 171 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _regenerator = __webpack_require__(60);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(61);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _canUseDom = __webpack_require__(274);

var _canUseDom2 = _interopRequireDefault(_canUseDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var InitFacebook = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(InitFacebook, _Component);

  function InitFacebook() {
    (0, _classCallCheck3.default)(this, InitFacebook);
    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
  }

  InitFacebook.prototype.componentDidMount = function componentDidMount() {
    if (_canUseDom2.default) {
      this.initFacebook();
    }
  };

  InitFacebook.prototype.initFacebook = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var onReady, facebook;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              onReady = this.props.onReady;
              _context.next = 3;
              return this.context.facebook.init();

            case 3:
              facebook = _context.sent;

              onReady(facebook);

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function initFacebook() {
      return _ref.apply(this, arguments);
    }

    return initFacebook;
  }();

  InitFacebook.prototype.render = function render() {
    return this.props.children;
  };

  return InitFacebook;
}(_react.Component), _class.propTypes = {
  children: _propTypes2.default.node,
  onReady: _propTypes2.default.func.isRequired
}, _class.defaultProps = {
  children: undefined
}, _class.contextTypes = {
  facebook: _propTypes2.default.object.isRequired
}, _temp);
exports.default = InitFacebook;
//# sourceMappingURL=InitFacebook.js.map

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  LIGHT: 'light',
  DARK: 'dark'
};
//# sourceMappingURL=ColorScheme.js.map

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _regenerator = __webpack_require__(60);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(61);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _InitFacebook = __webpack_require__(172);

var _InitFacebook2 = _interopRequireDefault(_InitFacebook);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Process = (_temp2 = _class = function (_Component) {
  (0, _inherits3.default)(Process, _Component);

  function Process() {
    var _this2 = this;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Process);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
      isWorking: false
    }, _this.handleClick = function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(evn) {
        var facebook, _this$props, dontWait, onResponse, onError, response, _onError;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                evn.preventDefault();
                evn.stopPropagation();

                _this.setState({
                  isWorking: true
                });

                _context.prev = 3;
                facebook = _this.state.facebook;

                if (facebook) {
                  _context.next = 7;
                  break;
                }

                throw new Error('Facebook is not initialized');

              case 7:
                _this$props = _this.props, dontWait = _this$props.dontWait, onResponse = _this$props.onResponse, onError = _this$props.onError;

                if (!dontWait) {
                  _context.next = 12;
                  break;
                }

                _this.process(facebook).then(function (response) {
                  if (onResponse) {
                    onResponse(response);
                  }
                }, function (error) {
                  if (onError) {
                    onError(error);
                  }
                });
                _context.next = 18;
                break;

              case 12:
                _context.next = 14;
                return _this.process(facebook);

              case 14:
                response = _context.sent;

                if (!onResponse) {
                  _context.next = 18;
                  break;
                }

                _context.next = 18;
                return onResponse(response);

              case 18:
                _context.next = 26;
                break;

              case 20:
                _context.prev = 20;
                _context.t0 = _context['catch'](3);
                _onError = _this.props.onError;

                if (!_onError) {
                  _context.next = 26;
                  break;
                }

                _context.next = 26;
                return _onError(_context.t0);

              case 26:

                _this.setState({
                  isWorking: false
                });

              case 27:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2, [[3, 20]]);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }(), _this.handleFacebookReady = function (facebook) {
      _this.setState({ facebook: facebook });

      var onReady = _this.props.onReady;

      if (onReady) {
        onReady(facebook);
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  Process.prototype.getElement = function getElement() {
    var _props = this.props,
        children = _props.children,
        render = _props.render,
        CustomComponent = _props.component;
    var _state = this.state,
        facebook = _state.facebook,
        isWorking = _state.isWorking;

    var isLoading = !facebook;
    var isReady = !isLoading && !isWorking;

    if (render) {
      return render({
        isWorking: isWorking,
        isLoading: isLoading,
        isReady: isReady,
        onClick: this.handleClick
      });
    }

    if (CustomComponent) {
      return _react2.default.createElement(CustomComponent, {
        onClick: this.handleClick,
        isLoading: isLoading,
        isWorking: isWorking,
        isReady: isReady
      });
    }

    return (0, _react.cloneElement)(children, {
      onClick: this.handleClick
    });
  };

  Process.prototype.render = function render() {
    return _react2.default.createElement(
      _InitFacebook2.default,
      { onReady: this.handleFacebookReady },
      this.getElement()
    );
  };

  return Process;
}(_react.Component), _class.propTypes = {
  children: _propTypes2.default.node,
  render: _propTypes2.default.func,
  component: _propTypes2.default.node,
  onReady: _propTypes2.default.func,
  onError: _propTypes2.default.func,
  onResponse: _propTypes2.default.func,
  dontWait: _propTypes2.default.bool
}, _class.defaultProps = {
  children: undefined,
  render: undefined,
  component: undefined,
  onReady: undefined,
  onError: undefined,
  onResponse: undefined,
  dontWait: undefined
}, _temp2);
exports.default = Process;
//# sourceMappingURL=Process.js.map

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// const Month = [
//     "", "January", "February", "March", "April", "May", "June",
//     "July", "August", "September", "October", "November", "December"
// ];

var Month = [{
    key: "",
    label: ""
}, {
    key: "01",
    label: "January"
}, {
    key: "02",
    label: "February"
}, {
    key: "03",
    label: "March"
}, {
    key: "04",
    label: "April"
}, {
    key: "05",
    label: "May"
}, {
    key: "06",
    label: "June"
}, {
    key: "07",
    label: "July"
}, {
    key: "08",
    label: "August"
}, {
    key: "09",
    label: "September"
}, {
    key: "10",
    label: "October"
}, {
    key: "11",
    label: "November"
}, {
    key: "12",
    label: "December"
}];

function getMonthLabel(key) {
    for (var i in Month) {
        if (Month[i].key == key) {
            return Month[i].label;
        }
    }

    return "";
}

// var sql = "";
// for(var i in Month){
//  sql += `

//  UPDATE wp_cf_usermeta 
//  SET meta_value = '${Month[i].key}'
//  WHERE 1=1
//  AND meta_value = '${Month[i].label}'
//  AND meta_key like '%month';

//  `;
// }

// console.log(sql)

var Year = ["", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030"];

var DegreeLevel = ["", "Doctoral", "Executive", "Master", "Bachelor", "Foundation", "SPM"];

var Sponsor = ["", "Jabatan Perkhidmatan Awam (JPA)", "Majlis Amanah Rakyat (MARA)", "Petronas", "Maybank", "Tenaga Nasional Berhad (TNB)", "Bank Negara", "Khazanah National Berhad", "Private", "Other"];

var PositionType = ["Full-Time", "Part-Time", "Intership", "Co-op"];

var MasState = ["", "Johor", "Kedah", "Kelantan", "Melaka", "Negeri Sembilan", "Pahang", "Penang", "Perak", "Perlis", "Sabah", "Sarawak", "Selangor", "Terengganu", "Kuala Lumpur", "Labuan", "Putrajaya"];

var Country = ["", "Afghanistan", "Albania", "Algeria", "American Samoa", "AndorrA", "Angola", "Anguilla", "Antarctica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Territory", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Congo, The Democratic Republic of the", "Cook Islands", "Costa Rica", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern Territories", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and Mcdonald Islands", "Holy See (Vatican City State)", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran, Islamic Republic Of", "Iraq", "Ireland", "Isle of Man", "Italy", "Jamaica", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, Republic of", "Kuwait", "Kyrgyzstan", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libyan Arab Jamahiriya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao", "Macedonia, The Former Yugoslav Republic of", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia, Federated States of", "Moldova, Republic of", "Monaco", "Mongolia", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territory, Occupied", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Puerto Rico", "Qatar", "Reunion", "Romania", "Russian Federation", "RWANDA", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia and Montenegro", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and the South Sandwich Islands", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard and Jan Mayen", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan, Province of China", "Tajikistan", "Tanzania, United Republic of", "Thailand", "Timor-Leste", "Togo", "Tokelau", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Turks and Caicos Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "USA", "United States Minor Outlying Islands", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Viet Nam", "Virgin Islands, British", "Virgin Islands, U.S.", "Wallis and Futuna", "Western Sahara", "Yemen", "Zambia", "Zimbabwe"];

var StudyField = ["", "Accounting and Computer Science", "Accounting and Related Services", "Advanced/Graduate Dentistry and Oral Sciences", "Aerospace, Aeronautical and Astronautical Engineering", "African Languages, Literatures, and Linguistics", "Agricultural Business and Management", "Agricultural Engineering", "Agricultural Mechanization", "Agricultural Production Operations", "Agricultural Public Services", "Agricultural and Domestic Animal Services", "Agricultural and Food Products Processing", "Agriculture, Agriculture Operations, and Related Sciences", "Air Transportation", "Allied Health Diagnostic, Intervention, and Treatment Professions", "Allied Health and Medical Assisting Services", "Alternative and Complementary Medical Support Services", "Alternative and Complementary Medicine and Medical Systems", "American Indian/Native American Languages, Literatures, and Linguistics", "American Sign Language", "Animal Sciences", "Anthropology", "Apparel and Textiles", "Applied Horticulture and Horticultural Business Services", "Applied Mathematics", "Archeology", "Architectural Engineering", "Architectural Engineering Technologies/Technicians", "Architectural History and Criticism", "Architectural Sciences and Technology", "Architecture", "Architecture and Related Services", "Area Studies", "Area, Ethnic, Cultural, Gender, and Group Studies", "Arts, Entertainment,and Media Management", "Astronomy and Astrophysics", "Atmospheric Sciences and Meteorology", "Audiovisual Communications Technologies/Technicians", "Aviation", "Behavioral Sciences", "Bible/Biblical Studies", "Bilingual, Multilingual, and Multicultural Education", "Biochemical Engineering", "Biochemistry, Biophysics and Molecular Biology", "Bioethics/Medical Ethics", "Biological and Biomedical Sciences", "Biological and Physical Sciences", "Biological/Biosystems Engineering", "Biology", "Biomathematics, Bioinformatics, and Computational Biology", "Biomedical/Medical Engineering", "Biopsychology", "Biotechnology", "Boilermaking/Boilermaker", "Botany/Plant Biology", "Building/Construction Finishing, Management, and Inspection", "Business Administration, Management and Operations", "Business Operations Support and Assistant Services", "Business, Management, Marketing, and Related Support Services", "Business/Commerce", "Business/Corporate Communications", "Business/Managerial Economics", "Carpenters", "Cell/Cellular Biology and Anatomical Sciences", "Celtic Languages, Literatures, and Linguistics", "Ceramic Sciences and Engineering", "Chemical Engineering", "Chemistry", "Chiropractic", "City/Urban, Community and Regional Planning", "Civil Engineering", "Civil Engineering Technologies/Technicians", "Classical and Ancient Studies", "Classics and Classical Languages, Literatures, and Linguistics", "Clinical/Medical Laboratory Science/Research and Allied Professions", "Cognitive Science", "Communication Disorders Sciences and Services", "Communication and Media Studies", "Communication, Journalism, and Related Programs", "Communications Technologies/technicians and Support Services", "Communications Technology/Technician", "Community Organization and Advocacy", "Computational Science", "Computer Engineering", "Computer Engineering Technologies/Technicians", "Computer Programming", "Computer Science", "Computer Software and Media Applications", "Computer Systems Analysis", "Computer Systems Networking and Telecommunications", "Computer and Information Sciences", "Computer and Information Sciences and Support Services", "Computer/Information Technology Administration and Management", "Construction Engineering", "Construction Engineering Technologies", "Construction Management", "Construction Trades", "Cooking and Related Culinary Arts", "Cosmetology and Related Personal Grooming Services", "Crafts/Craft Design, Folk Art and Artisanry", "Criminal Justice and Corrections", "Criminology", "Cultural Studies/Critical Theory and Analysis", "Curriculum and Instruction", "Dance", "Data Entry/Microcomputer Applications", "Data Processing", "Demography and Population Studies", "Dental Support Services and Allied Professions", "Dentistry", "Design and Applied Arts", "Dietetics and Clinical Nutrition Services", "Dispute Resolution", "Drafting/Design Engineering Technologies/Technicians", "Drama/Theatre Arts and Stagecraft", "East Asian Languages, Literatures, and Linguistics", "Ecology, Evolution, Systematics, and Population Biology", "Economics", "Education", "Educational Administration and Supervision", "Educational Assessment, Evaluation, and Research", "Educational/Instructional Media Design", "Electrical Engineering Technologies/Technicians", "Electrical and Power Transmission Installers", "Electrical, Electronics and Communications Engineering", "Electrical/Electronics Maintenance and Repair Technology", "Electromechanical Engineering", "Electromechanical Instrumentation and Maintenance Technologies/Technicians", "Energy and Biologically Based Therapies", "Engineering", "Engineering Chemistry", "Engineering Mechanics", "Engineering Physics", "Engineering Science", "Engineering Technologies and Engineering-Related Fields", "Engineering-Related Fields", "Engineering-Related Technologies", "English Language and Literature", "English Language and Literature/letters", "Entrepreneurial and Small Business Operations", "Environmental Control Technologies/Technicians", "Environmental Design", "Environmental/Environmental Health Engineering", "Ethnic Studies", "Family and Consumer Economics and Related Studies", "Family and Consumer Sciences/Human Sciences", "Family and Consumer Sciences/Human Sciences Business Services", "Family and Consumer Sciences/human Sciences", "Film/Video and Photographic Arts", "Finance and Financial Management Services", "Fine and Studio Arts", "Fire Protection", "Fishing and Fisheries Sciences and Management", "Food Science and Technology", "Foods, Nutrition, and Related Services", "Foreign Languages, Literatures, and Linguistics", "Forest Engineering", "Forestry", "Funeral Service and Mortuary Science", "General Sales, Merchandising and Related Marketing Operations", "Genetics", "Geography and Cartography", "Geological and Earth Sciences/Geosciences", "Geological/Geophysical Engineering", "Germanic Languages, Literatures, and Linguistics", "Gerontology", "Graphic Communications", "Ground Transportation", "Health Aides/Attendants/Orderlies", "Health Professions and Related Programs", "Health and Medical Administrative Services", "Health and Physical Education/Fitness", "Health/Medical Preparatory Programs", "Heating, Air Conditioning, Ventilation and Refrigeration Maintenance Technology/Technician (HAC, HACR, HVAC, HVACR)", "Heavy/Industrial Equipment Maintenance Technologies", "Historic Preservation and Conservation", "History", "Holocaust and Related Studies", "Homeland Security", "Homeland Security, Law Enforcement, Firefighting", "Hospitality Administration/Management", "Housing and Human Environments", "Human Biology", "Human Computer Interaction", "Human Development, Family Studies, and Related Services", "Human Resources Management and Services", "Human Services", "Industrial Engineering", "Industrial Production Technologies/Technicians", "Information Science/Studies", "Insurance", "Intelligence, Command Control and Information Operations", "Intercultural/Multicultural and Diversity Studies", "Interior Architecture", "International Agriculture", "International Business", "International Relations and National Security Studies", "International and Comparative Education", "International/Global Studies", "Iranian/Persian Languages, Literatures, and Linguistics", "Journalism", "Landscape Architecture", "Law", "Leatherworking and Upholstery", "Legal Professions and Studies", "Legal Research and Advanced Professional Studies", "Legal Support Services", "Liberal Arts and Sciences Studies and Humanities", "Library Science", "Library Science and Administration", "Library and Archives Assisting", "Linguistic, Comparative, and Related Language Studies and Services", "Literature", "Management Information Systems and Services", "Management Sciences and Quantitative Methods", "Manufacturing Engineering", "Marine Sciences", "Marine Transportation", "Maritime Studies", "Marketing", "Mason/Masonry", "Materials Engineering", "Materials Sciences", "Mathematics", "Mathematics and Computer Science", "Mathematics and Statistics", "Mechanic and Repair Technologies/technicians", "Mechanical Engineering", "Mechanical Engineering Related Technologies/Technicians", "Mechatronics, Robotics, and Automation Engineering", "Medical Clinical Sciences/Graduate Medical Studies", "Medical Illustration and Informatics", "Medicine", "Medieval and Renaissance Studies", "Mental and Social Health Services and Allied Professions", "Metallurgical Engineering", "Microbiological Sciences and Immunology", "Middle/Near Eastern and Semitic Languages, Literatures, and Linguistics", "Military Applied Sciences", "Military Systems and Maintenance Technology", "Military Technologies and Applied Sciences", "Mining and Mineral Engineering", "Mining and Petroleum Technologies/Technicians", "Missions/Missionary Studies and Missiology", "Modern Greek Language and Literature", "Molecular Medicine", "Movement and Mind-Body Therapies and Education", "Multi/interdisciplinary Studies", "Museology/Museum Studies", "Music", "Nanotechnology", "Natural Resources Conservation and Research", "Natural Resources Management and Policy", "Natural Resources and Conservation", "Natural Sciences", "Naval Architecture and Marine Engineering", "Neurobiology and Neurosciences", "Nuclear Engineering", "Nuclear Engineering Technologies/Technicians", "Nutrition Sciences", "Ocean Engineering", "Operations Research", "Ophthalmic and Optometric Support Services and Allied Professions", "Optometry", "Osteopathic Medicine/Osteopathy", "Other", "Outdoor Education", "Paper Science and Engineering", "Parks, Recreation and Leisure Facilities Management", "Parks, Recreation and Leisure Studies", "Parks, Recreation, Leisure, and Fitness Studies", "Pastoral Counseling and Specialized Ministries", "Peace Studies and Conflict Resolution", "Personal and Culinary Services", "Petroleum Engineering", "Pharmacology and Toxicology", "Pharmacy, Pharmaceutical Sciences, and Administration", "Philosophy", "Philosophy and Religious Studies", "Physical Sciences", "Physics", "Physiology, Pathology and Related Sciences", "Plant Sciences", "Plumbing and Related Water Supply Services", "Podiatric Medicine/Podiatry", "Political Science and Government", "Polymer/Plastics Engineering", "Practical Nursing, Vocational Nursing and Nursing Assistants", "Precision Metal Working", "Precision Production", "Precision Systems Maintenance and Repair Technologies", "Psychology", "Public Administration", "Public Health", "Public Policy Analysis", "Public Relations, Advertising, and Applied Communication", "Publishing", "Quality Control and Safety Technologies/Technicians", "Radio, Television, and Digital Communication", "Real Estate", "Real Estate Development", "Registered Nursing, Nursing Administration, Nursing Research and Clinical Nursing", "Rehabilitation and Therapeutic Professions", "Religion/Religious Studies", "Religious Education", "Religious/Sacred Music", "Research and Experimental Psychology", "Rhetoric and Composition/Writing Studies", "Romance Languages, Literatures, and Linguistics", "Rural Sociology", "Science, Technology and Society", "Slavic Languages, Literatures, and Linguistics", "Social Sciences", "Social Work", "Social and Philosophical Foundations of Education", "Sociology", "Sociology and Anthropology", "Soil Sciences", "Somatic Bodywork and Related Therapeutic Services", "South Asian Languages, Literatures, and Linguistics", "Southeast Asian and Australasian/Pacific Languages, Literatures, and Linguistics", "Special Education and Teaching", "Specialized Sales, Merchandising and Marketing Operations", "Statistics", "Student Counseling and Personnel Services", "Surveying Engineering", "Sustainability Studies", "Systems Engineering", "Systems Science and Theory", "Taxation", "Teacher Education and Professional Development, Specific Levels and Methods", "Teacher Education and Professional Development, Specific Subject Areas", "Teaching Assistants/Aides", "Teaching English or French as a Second or Foreign Language", "Telecommunications Management", "Textile Sciences and Engineering", "Theological and Ministerial Studies", "Theology and Religious Vocations", "Transportation and Materials Moving", "Turkic, Uralic-Altaic, Caucasian, and Central Asian Languages, Literatures, and Linguistics", "Urban Studies/Affairs", "Vehicle Maintenance and Repair Technologies", "Veterinary Biomedical and Clinical Sciences", "Veterinary Medicine", "Visual and Performing Arts", "Wildlife and Wildlands Science and Management", "Woodworking", "Zoology/Animal Biology", "Other"];

// const Country = [
//     "",
//     "New Zealand",
//     "USA",
//     "Japan",
//     "Austria",
//     "Belgium",
//     "Bulgaria",
//     "Canada",
//     "China",
//     "Croatia",
//     "Cyprus",
//     "Czech Republic",
//     "Denmark",
//     "Estonia",
//     "Finland",
//     "France",
//     "Germany",
//     "Greece",
//     "Hong Kong",
//     "Hungary",
//     "Ireland",
//     "Italy",
//     "Latvia",
//     "Lithuania",
//     "Luxembourg",
//     "Malta",
//     "Netherlands",
//     "Poland",
//     "Portugal",
//     "Romania",
//     "Russia",
//     "Slovakia",
//     "Slovenia",
//     "Spain",
//     "Sweden",
//     "Taiwan",
//     "Turkey",
//     "United Kingdom"
// ];

module.exports = {
    DegreeLevel: DegreeLevel,
    getMonthLabel: getMonthLabel,
    Month: Month,
    StudyField: StudyField,
    Year: Year,
    Sponsor: Sponsor,
    PositionType: PositionType,
    MasState: MasState,
    Country: Country
};

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActivitySingle = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _list = __webpack_require__(11);

var _time = __webpack_require__(9);

var _notification = __webpack_require__(123);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _activityApi = __webpack_require__(67);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _socketClient = __webpack_require__(17);

var _userActions = __webpack_require__(51);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _scheduledInterview = __webpack_require__(28);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _chat = __webpack_require__(42);

var _apiHelper = __webpack_require__(3);

var _hallViewHelper = __webpack_require__(79);

var HallViewHelper = _interopRequireWildcard(_hallViewHelper);

var _toggleTimezone = __webpack_require__(80);

var _toggleTimezone2 = _interopRequireDefault(_toggleTimezone);

var _liveSession = __webpack_require__(97);

var _otherActions = __webpack_require__(30);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //Faizul Here

// require("../../../css/border-card.scss");

var ActvityList = function (_React$Component) {
  _inherits(ActvityList, _React$Component);

  function ActvityList(props) {
    _classCallCheck(this, ActvityList);

    var _this = _possibleConstructorReturn(this, (ActvityList.__proto__ || Object.getPrototypeOf(ActvityList)).call(this, props));

    _this.openSIForm = _this.openSIForm.bind(_this);
    _this.cancelQueue = _this.cancelQueue.bind(_this);
    _this.cancelJoinGroupSession = _this.cancelJoinGroupSession.bind(_this);
    _this.updateSessionRequest = _this.updateSessionRequest.bind(_this);
    _this.acceptRejectPrescreen = _this.acceptRejectPrescreen.bind(_this);
    _this.confirmAcceptRejectPrescreen = _this.confirmAcceptRejectPrescreen.bind(_this);

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.state = {
      time: Date.now()
    };
    _this.interval = null;

    // update every 30 secs
    _this.UPDATE_INTERVAL = 30 * 1000;
    return _this;
  }

  _createClass(ActvityList, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.interval = setInterval(function () {
        _this2.setState(function () {
          return { time: Date.now() };
        });
      }, this.UPDATE_INTERVAL);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearInterval(this.interval);
    }
  }, {
    key: "cancelJoinGroupSession",
    value: function cancelJoinGroupSession(e) {
      var _this3 = this;

      var company_name = e.currentTarget.dataset.company_name;
      var company_id = e.currentTarget.dataset.company_id;

      var id = e.currentTarget.id;
      var confirmCancel = function confirmCancel() {
        layoutActions.loadingBlockLoader("Canceling..");
        activityActions.cancelJoinGroupSession(id).then(function (res) {
          hallAction.storeLoadActivity([hallAction.ActivityType.GROUP_SESSION_JOIN]);
          layoutActions.storeHideBlockLoader();

          (0, _socketClient.emitQueueStatus)(company_id, _this3.authUser.ID, "cancelJoinGroupSession");
          (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, null, company_id);
        }, function (err) {
          layoutActions.errorBlockLoader(err);
        });
      };

      layoutActions.confirmBlockLoader("Canceling RSVP for live session with " + company_name + "?", confirmCancel);
    }
  }, {
    key: "getRemoveButton",
    value: function getRemoveButton(hasRemove, entity, entity_id) {
      var _this4 = this;

      if (!hasRemove) {
        return null;
      }

      var onClickRemove = function onClickRemove(e) {
        var entity = e.currentTarget.dataset.entity;
        var entity_id = e.currentTarget.dataset.entity_id;

        var ins = {};
        ins[_dbConfig.EntityRemoved.ENTITY] = entity;
        ins[_dbConfig.EntityRemoved.ENTITY_ID] = Number.parseInt(entity_id);
        ins[_dbConfig.EntityRemoved.USER_ID] = _this4.authUser.ID;
        var q = "mutation { add_entity_removed (" + (0, _graphqlObj2arg2.default)(ins, {
          noOuterBraces: true
        }) + ")\n                { ID } }";

        var parentButton = e.currentTarget.parentNode;
        var parentPcBody = parentButton.parentNode;
        var parentCard = parentPcBody.parentNode;
        parentCard.className = parentCard.className += "profile-card-hidden";
        //console.log(parentCard);
        setTimeout(function () {
          parentCard.hidden = true;
        }, 700);
        (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (data) {});
      };

      return _react2.default.createElement(
        "div",
        {
          onClick: function onClick(e) {
            onClickRemove(e);
          },
          "data-entity": entity,
          "data-entity_id": entity_id,
          className: "btn btn-link btn-delete-card"
        },
        _react2.default.createElement("i", { className: "fa fa-times" })
      );
    }
  }, {
    key: "cancelQueue",
    value: function cancelQueue(e) {
      var _this5 = this;

      var company_name = e.currentTarget.dataset.company_name;
      var company_id = e.currentTarget.dataset.company_id;

      var id = e.currentTarget.id;
      var confirmCancelQueue = function confirmCancelQueue() {
        layoutActions.loadingBlockLoader("Canceling Queue..");
        activityActions.cancelQueue(id).then(function (res) {
          hallAction.storeLoadActivity([hallAction.ActivityType.QUEUE]);
          layoutActions.storeHideBlockLoader();

          (0, _socketClient.emitQueueStatus)(company_id, _this5.authUser.ID, "cancelQueue");
          (0, _socketClient.emitHallActivity)(hallAction.ActivityType.QUEUE, null, company_id);
        }, function (err) {
          layoutActions.errorBlockLoader(err);
        });
      };

      layoutActions.confirmBlockLoader("Canceling Queue for " + company_name, confirmCancelQueue);
    }

    // open form,
    // once completed update to approve

  }, {
    key: "openSIForm",
    value: function openSIForm(sr_id, student_id) {
      var _this6 = this;

      (0, _scheduledInterview.openSIAddForm)(student_id, this.authUser.rec_company, _dbConfig.PrescreenEnum.ST_INTV_REQUEST, function (d) {
        _this6.updateSessionRequest(sr_id, _dbConfig.SessionRequestEnum.STATUS_APPROVED);
      });
    }
  }, {
    key: "updateSessionRequest",
    value: function updateSessionRequest(id, status) {
      layoutActions.loadingBlockLoader("Updating Session Request Status..");
      activityActions.updateSessionRequest(id, status).then(function (res) {
        var toRefresh = [hallAction.ActivityType.SESSION_REQUEST];
        if (status == _dbConfig.SessionRequestEnum.STATUS_APPROVED) {
          toRefresh.push(hallAction.ActivityType.PRESCREEN);
        }

        hallAction.storeLoadActivity(toRefresh);
        layoutActions.storeHideBlockLoader();

        //emitQueueStatus(company_id, this.authUser.ID, "cancelQueue");

        var sid = (0, _authActions.isRoleStudent)() ? null : res.student_id;
        var cid = (0, _authActions.isRoleRec)() ? null : res.company_id;
        (0, _socketClient.emitHallActivity)(hallAction.ActivityType.SESSION_REQUEST, sid, cid);
      }, function (err) {
        layoutActions.errorBlockLoader(err);
      });
    }

    // for reject and cancel
    // trigger from card view button

  }, {
    key: "confirmUpdateSessionRequest",
    value: function confirmUpdateSessionRequest(e, status) {
      var _this7 = this;

      var other_name = e.currentTarget.dataset.other_name;
      var other_id = e.currentTarget.dataset.other_id;
      var id = e.currentTarget.id;

      var confirmUpdate = function confirmUpdate() {
        _this7.updateSessionRequest(id, status);
      };

      // create confirm message
      var mes = "";
      if (status === _dbConfig.SessionRequestEnum.STATUS_CANCELED) {
        mes += "Canceling";
      }
      if (status === _dbConfig.SessionRequestEnum.STATUS_REJECTED) {
        mes += "Rejecting";
      }
      if (status === _dbConfig.SessionRequestEnum.STATUS_PENDING) {
        mes += "Canceling Rejection ";
      }

      mes += " Interview Request for " + other_name;

      layoutActions.confirmBlockLoader(mes, confirmUpdate);
    }
  }, {
    key: "startVideoCallPreScreen",
    value: function startVideoCallPreScreen(e) {
      HallViewHelper.startVideoCall(e, {
        type: HallViewHelper.TYPE_PRIVATE_SESSION,
        user_id: this.authUser.ID,
        bindedSuccessHandler: function bindedSuccessHandler() {
          hallAction.storeLoadActivity([hallAction.ActivityType.PRESCREEN]);
        }
      });
    }
  }, {
    key: "createSession",
    value: function createSession(e) {
      var invalid = activityActions.invalidSession();

      if (invalid !== false) {
        layoutActions.errorBlockLoader(invalid);
        return false;
      }

      var host_id = (0, _authActions.getAuthUser)().ID;
      var participant_id = e.currentTarget.dataset.pid;
      var entity = e.currentTarget.dataset.entity;
      var entity_id = e.currentTarget.dataset.entity_id;

      layoutActions.loadingBlockLoader("Creating Session..");
      activityActions.createSession(host_id, participant_id, entity, entity_id).then(function (res) {
        var m = _react2.default.createElement(
          "div",
          null,
          "Session Successfully Created",
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            _reactRouterDom.NavLink,
            {
              onClick: function onClick() {
                return layoutActions.storeHideBlockLoader();
              },
              to: _appConfig.RootPath + "/app/session/" + res.data.ID
            },
            "Go To Session"
          )
        );

        if (entity === hallAction.ActivityType.QUEUE) {
          (0, _socketClient.emitQueueStatus)((0, _authActions.getAuthUser)().rec_company, participant_id, "cancelQueue");
        }

        (0, _socketClient.emitHallActivity)([hallAction.ActivityType.SESSION, entity], participant_id, null);

        layoutActions.successBlockLoader(m);
        hallAction.storeLoadActivity([hallAction.ActivityType.SESSION, entity]);
      }, function (err) {
        var m = "";
        switch (err.response.data) {
          case _activityApi.ActivityAPIErr.HAS_SESSION:
            m = "This student is currently engaged";
            break;
        }

        layoutActions.errorBlockLoader(m);
      });
    }

    // ##########################
    // for prescreen

  }, {
    key: "acceptRejectPrescreen",
    value: function acceptRejectPrescreen(id, user_id, status) {
      layoutActions.loadingBlockLoader("Updating Scheduled Call Status..");

      if (typeof id === "string") {
        id = Number.parseInt(id);
      }
      if (typeof user_id === "string") {
        user_id = Number.parseInt(user_id);
      }

      var upd = {};
      upd[_dbConfig.Prescreen.ID] = id;
      upd[_dbConfig.Prescreen.UPDATED_BY] = user_id;
      upd[_dbConfig.Prescreen.STATUS] = status;

      var query = "mutation{edit_prescreen(" + (0, _graphqlObj2arg2.default)(upd, {
        noOuterBraces: true
      }) + ") {ID student_id company_id}}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (data) {
        var res = data.data.data.edit_prescreen;
        var toRefresh = [hallAction.ActivityType.PRESCREEN];
        hallAction.storeLoadActivity(toRefresh);
        layoutActions.storeHideBlockLoader();

        //emitQueueStatus(company_id, this.authUser.ID, "cancelQueue");

        var sid = (0, _authActions.isRoleStudent)() ? null : res.student_id;
        var cid = (0, _authActions.isRoleRec)() ? null : res.company_id;
        (0, _socketClient.emitHallActivity)(hallAction.ActivityType.PRESCREEN, sid, cid);
      }, function (err) {
        layoutActions.errorBlockLoader(err);
      });
    }

    // for reject and cancel
    // trigger from card view button

  }, {
    key: "confirmAcceptRejectPrescreen",
    value: function confirmAcceptRejectPrescreen(e, status) {
      var _this8 = this;

      var other_name = e.currentTarget.dataset.other_name;
      var id = e.currentTarget.id;
      var user_id = this.authUser.ID;

      var confirmUpdate = function confirmUpdate() {
        _this8.acceptRejectPrescreen(id, user_id, status);
      };

      // create confirm message
      var mes = "";
      if (status === _dbConfig.PrescreenEnum.STATUS_APPROVED) {
        mes += "Approving";
      }
      if (status === _dbConfig.PrescreenEnum.STATUS_REJECTED) {
        mes += "Rejecting";
      }

      mes += " Scheduled Call with " + other_name + " ?";
      layoutActions.confirmBlockLoader(mes, confirmUpdate);
    }

    // getTimeStrNew(unixtime, showTimeOnly, customText) {
    //   const className = "time-container";

    //   if (
    //     unixtime === undefined &&
    //     showTimeOnly === undefined &&
    //     customText !== undefined
    //   ) {
    //     return <div className={className}>{customText}</div>;
    //   }
    //   // debug
    //   // unixtime = (1552804854865/1000) + 500;
    //   // let bodyToRet = null;

    //   // let timeStr = Time.getString(unixtime);

    //   // if (showTimeOnly) {
    //   //   return timeStr;
    //   // }

    //   // let passedText = "Waiting For Recruiter";
    //   // let happeningIn = Time.getHapenningIn(unixtime, {
    //   //   passedText: isRoleStudent() ? passedText : null,
    //   //   startCountMinute: 24 * 60 // 24 hours
    //   // });

    //   // if (happeningIn != null) {
    //   //   if (happeningIn != passedText) {
    //   //     happeningIn = <span>Starting In {happeningIn}</span>;
    //   //   }
    //   //   happeningIn = (
    //   //     <div
    //   //       style={{ marginBottom: "-6px", fontWeight: "bold" }}
    //   //       className="text-primary"
    //   //     >
    //   //       {happeningIn}
    //   //       <br />
    //   //     </div>
    //   //   );

    //   //   bodyToRet = (
    //   //     <span>
    //   //       {happeningIn}
    //   //       <br />
    //   //       {timeStr}
    //   //     </span>
    //   //   );
    //   // } else {
    //   //   bodyToRet = timeStr;
    //   // }

    //   const createBody = timeStr => {
    //     // 1. create happening in

    //     if (showTimeOnly) {
    //       return timeStr;
    //     }

    //     let passedText = "Waiting For Recruiter";
    //     let happeningIn = Time.getHapenningIn(unixtime, {
    //       passedText: isRoleStudent() ? passedText : null,
    //       startCountMinute: 24 * 60 // 24 hours
    //     });

    //     if (happeningIn != null) {
    //       if (happeningIn != passedText) {
    //         happeningIn = <span>Starting In {happeningIn}</span>;
    //       }
    //       happeningIn = (
    //         <div
    //           style={{ marginBottom: "-6px", fontWeight: "bold" }}
    //           className="text-primary"
    //         >
    //           {happeningIn}
    //           <br />
    //         </div>
    //       );
    //       return (
    //         <span>
    //           {happeningIn}
    //           <br />
    //           {timeStr}
    //         </span>
    //       );
    //     } else {
    //       return timeStr;
    //     }
    //   };

    //   const createView = (body, toggler) => {
    //     return (
    //       <div className={className}>
    //         {body}
    //         <div style={{ marginTop: "5px" }} />
    //         {toggler}
    //       </div>
    //     );
    //   };

    //   return (
    //     <ToogleTimezone
    //       createDefaultTime={unix => {
    //         return Time.getString(unix);
    //       }}
    //       createAlternateTime={unix => {
    //         return Time.getStringMas(unix);
    //       }}
    //       unixtimestamp={unixtime}
    //       createBody={createBody}
    //       createView={createView}
    //     />
    //   );
    // }

  }, {
    key: "getTimeStrNew",
    value: function getTimeStrNew(unixtime, showTimeOnly, customText) {
      // debug
      //unixtime = (1552804854865/1000) + 500;
      var className = "time-container";
      if (unixtime === undefined && showTimeOnly === undefined && customText !== undefined) {
        return _react2.default.createElement(
          "div",
          { className: className },
          customText
        );
      }

      var timeStr = _time.Time.getString(unixtime);
      if (showTimeOnly) {
        return _react2.default.createElement(
          "div",
          null,
          timeStr
        );
      }

      var passedText = "Waiting For Recruiter";
      var happeningIn = _time.Time.getHapenningIn(unixtime, {
        passedText: (0, _authActions.isRoleStudent)() ? passedText : null,
        startCountMinute: 24 * 60 // 24 hours
      });

      if (happeningIn != null) {
        if (happeningIn != passedText) {
          happeningIn = _react2.default.createElement(
            "span",
            null,
            "Starting In ",
            happeningIn
          );
        }
        happeningIn = _react2.default.createElement(
          "div",
          {
            style: { marginBottom: "-6px", fontWeight: "bold" },
            className: "text-primary"
          },
          happeningIn
        );
        return _react2.default.createElement(
          "span",
          null,
          happeningIn,
          _react2.default.createElement("br", null),
          timeStr
        );
      } else {
        return timeStr;
      }
    }
  }, {
    key: "addRemoveButton",
    value: function addRemoveButton(body, hasRemove, removeEntity, removeEntityId) {
      body = _react2.default.createElement(
        "div",
        null,
        this.getRemoveButton(hasRemove, removeEntity, removeEntityId),
        body
      );

      return body;
    }

    // return body n subtitle
    // renderGroupSessionJoin(d, obj, title) {
    //   // 2. subtitle and body
    //   var subtitle = null;
    //   //var crtSession = null;
    //   var hasRemove = null;
    //   var removeEntity = null;
    //   var removeEntityId = null;
    //   var body = null;

    //   if (isRoleStudent()) {
    //     // if (d.title != null && d.title != "") {
    //     //   title = <small>{d.title}</small>;
    //     // } else {
    //     //   //title = <small>Group Session with {title}</small>;
    //     // }
    //     // title = <b>{title}</b>;

    //     var hasStart = false;
    //     //if (!d.is_expired && d.join_url != "" && d.join_url != null) {
    //     if (Time.getUnixTimestampNow() >= d.start_time) {
    //       hasStart = true;
    //       //subtitle = "Video Call Has Started";
    //       subtitle = this.getTimeStrNew(d.start_time, true);
    //     } else {
    //       if (d.is_canceled || d.is_expired) {
    //         subtitle = this.getTimeStrNew(d.start_time, true);
    //       } else {
    //         subtitle = this.getTimeStrNew(d.start_time, false);
    //       }
    //     }

    //     const isExpiredHandler = () => {
    //       var mes = (
    //         <div>
    //           Unable to join.
    //           <br />
    //           This group session has ended.
    //         </div>
    //       );
    //       layoutActions.errorBlockLoader(mes);
    //       var q = `mutation {edit_group_session(ID:${d.ID}, is_expired:1){ID}}`;
    //       getAxiosGraphQLQuery(q).then(res => {
    //         hallAction.storeLoadActivity([
    //           hallAction.ActivityType.GROUP_SESSION_JOIN
    //         ]);
    //       });
    //     };

    //     var btnJoin = (
    //       <a
    //         onClick={() => {
    //           //joinVideoCall(d.join_url, null, isExpiredHandler, d.ID)
    //           openLiveSession(d.company.ID);
    //         }}
    //         className="btn btn-sm btn-blue"
    //       >
    //         Join Video Call
    //       </a>
    //     );

    //     const openNotificationStart_GS = () => {
    //       // block loader to inform the video call has started
    //       // if time updated is less than bufferMin
    //       var bufferMin = 2;
    //       var diff =
    //         Time.getUnixTimestampNow() - Time.convertDBTimeToUnix(d.updated_at);
    //       if (diff <= bufferMin * 60) {
    //         var popupBody = (
    //           <div>
    //             <br />
    //             Group session with
    //             <br />
    //             <b>{obj.name}</b>
    //             <br />
    //             has started
    //             <br /> <br />
    //             {btnJoin}
    //           </div>
    //         );
    //         var notiId = `group-session-${d.ID}`;
    //         showNotification(notiId, popupBody);
    //       }
    //     };
    //     let isGsHasRemove = false;
    //     if (d.is_canceled) {
    //       body = (
    //         <button disabled="disabled" className="btn btn-sm btn-danger">
    //           Canceled
    //         </button>
    //       );
    //       isGsHasRemove = true;
    //     } else if (d.is_expired) {
    //       body = (
    //         <button disabled="disabled" className="btn btn-sm btn-danger">
    //           Ended
    //         </button>
    //       );
    //       isGsHasRemove = true;
    //     } else {
    //       if (hasStart) {
    //         openNotificationStart_GS();
    //         body = <div>{btnJoin}</div>;
    //       } else {
    //         body = (
    //           <div
    //             id={d.join_id}
    //             data-company_id={obj.ID}
    //             data-company_name={obj.name}
    //             onClick={this.cancelJoinGroupSession.bind(this)}
    //             className="btn btn-sm btn-primary"
    //           >
    //             Cancel RSVP
    //           </div>
    //         );
    //       }
    //     }

    //     if (isGsHasRemove) {
    //       hasRemove = true;
    //       removeEntity = GroupSessionJoin.TABLE;
    //       removeEntityId = d.join_id;
    //     }
    //   }

    //   body = this.addRemoveButton(body, hasRemove, removeEntity, removeEntityId);

    //   let topLabel = (
    //     <div className="label label-success">
    //       <i className="fa fa-users left" />
    //       Live Session
    //     </div>
    //   );

    //   return {
    //     body: body,
    //     subtitle: subtitle,
    //     title: title,
    //     topLabel: topLabel,
    //     topLabelClass: "success"
    //   };
    // }

    // return body n subtitle

  }, {
    key: "renderPreScreen",
    value: function renderPreScreen(d, obj, title) {
      var _this9 = this;

      // 2. subtitle and body
      var subtitle = null;
      var body = null;
      //var crtSession = null;
      var hasRemove = null;
      var removeEntity = null;
      var removeEntityId = null;

      var btnJoinVCall = null;
      var btnStartVCall = null;
      var btnEndedVCall = null;
      var btnAcceptReject = null;

      if (d.status == _dbConfig.PrescreenEnum.STATUS_REJECTED || d.status == _dbConfig.PrescreenEnum.STATUS_ENDED) {
        subtitle = this.getTimeStrNew(d.appointment_time, true);
      } else {
        subtitle = this.getTimeStrNew(d.appointment_time, false);
      }

      //body = <div style={{ height: "30px" }}></div>;
      var ps_type = d.special_type == null || d.special_type == "" ? _dbConfig.PrescreenEnum.ST_PRE_SCREEN : d.special_type;

      if ((0, _scheduledInterview.isNormalSI)(ps_type)) {
        ps_type = "Scheduled Session";
      }

      // label for status
      // New SI Flow
      var label_color_status = "";
      var textStatus = "";
      switch (d.status) {
        case _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM:
          // New Flow
          if ((0, _authActions.isRoleStudent)()) {
            btnAcceptReject = _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement(
                "div",
                {
                  id: d.ID,
                  "data-other_id": obj.ID,
                  "data-other_name": obj.name,
                  onClick: function onClick(e) {
                    _this9.confirmAcceptRejectPrescreen(e, _dbConfig.PrescreenEnum.STATUS_APPROVED);
                  },
                  className: "btn btn-sm btn-success"
                },
                "Accept Interview"
              ),
              _react2.default.createElement(
                "div",
                {
                  id: d.ID,
                  "data-other_id": obj.ID,
                  "data-other_name": obj.name,
                  onClick: function onClick(e) {
                    _this9.confirmAcceptRejectPrescreen(e, _dbConfig.PrescreenEnum.STATUS_REJECTED);
                  },
                  className: "btn btn-sm btn-danger"
                },
                "Reject Interview"
              )
            );
          }
          if ((0, _authActions.isRoleRec)()) {
            label_color_status = "primary";
            textStatus = "Waiting Confirmation";
            //crtSession = null;
          }
          break;
        case _dbConfig.PrescreenEnum.STATUS_REJECTED:
          label_color_status = "danger";
          textStatus = "Interview Rejected";
          //crtSession = null;
          hasRemove = true;
          removeEntity = _dbConfig.Prescreen.TABLE;
          removeEntityId = d.ID;
          break;
        case _dbConfig.PrescreenEnum.STATUS_APPROVED:
          if ((0, _authActions.isRoleRec)()) {
            if (d.is_onsite_call == 1 && (0, _authActions.getCFObj)()[_dbConfig.CFSMeta.HALL_CFG_ONSITE_CALL_USE_GROUP] == 1) {
              btnStartVCall = _react2.default.createElement(
                "div",
                {
                  "data-appointment_time": d.appointment_time,
                  "data-participant_id": obj.ID,
                  "data-id": d.ID,
                  "data-company_id": d.company_id,
                  onClick: function onClick(e) {
                    var eD = e.currentTarget.dataset;
                    (0, _liveSession.openLiveSession)(eD.company_id);
                    (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_CONNECT_WITH_ONSITE, eD);
                  },
                  className: "btn btn-sm btn-success"
                },
                "Connect With On-site"
              );
            } else {
              btnStartVCall = _react2.default.createElement(
                "div",
                {
                  "data-appointment_time": d.appointment_time,
                  "data-participant_id": obj.ID,
                  "data-id": d.ID,
                  onClick: this.startVideoCallPreScreen.bind(this),
                  className: "btn btn-sm btn-success"
                },
                "Start Video Call"
              );
            }
            break;
          }

          label_color_status = "success";
          textStatus = "Accepted";
          break;
        case _dbConfig.PrescreenEnum.STATUS_ENDED:
          btnEndedVCall = _react2.default.createElement(
            "div",
            { className: "action btn btn-danger btn-sm", disabled: "disabled" },
            "Ended"
          );
          ///crtSession = null;
          hasRemove = true;
          removeEntity = _dbConfig.Prescreen.TABLE;
          removeEntityId = d.ID;

          break;
        case _dbConfig.PrescreenEnum.STATUS_STARTED:
          var isExpiredHandler = function isExpiredHandler() {
            var mes = _react2.default.createElement(
              "div",
              null,
              "Unable to join.",
              _react2.default.createElement("br", null),
              "This 1-1 session has ended."
            );
            layoutActions.errorBlockLoader(mes);
            var updData = {};
            updData[_dbConfig.Prescreen.ID] = d.ID;
            updData[_dbConfig.Prescreen.IS_EXPIRED] = 1;
            updData[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_ENDED;
            updData[_dbConfig.Prescreen.UPDATED_BY] = _this9.authUser.ID;
            var q = "mutation {edit_prescreen (" + (0, _graphqlObj2arg2.default)(updData, {
              noOuterBraces: true
            }) + "){ID}}";
            (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
              hallAction.storeLoadActivity([hallAction.ActivityType.PRESCREEN]);
            });
          };
          var hasStart = false;
          if (!d.is_expired && d.join_url != "" && d.join_url != null) {
            hasStart = true;
            subtitle = this.getTimeStrNew(undefined, undefined, "Video Call Has Started");
            console.log("HERRREEEE");
          } else {
            console.log("HERRREEEE 22222222");
            if (d.is_expired) {
              subtitle = this.getTimeStrNew(d.appointment_time, true);
            } else {
              subtitle = this.getTimeStrNew(d.appointment_time, false);
            }
          }
          if (hasStart && (0, _authActions.isRoleStudent)()) {
            // bukak join url
            btnJoinVCall = _react2.default.createElement(
              "a",
              {
                onClick: function onClick() {
                  return (0, _chat.joinVideoCall)(d.join_url, null, isExpiredHandler, null, d.ID);
                },
                className: "btn btn-sm btn-blue"
              },
              "Join Video Call"
            );

            var openNotificationStart_PS = function openNotificationStart_PS() {
              // block loader to inform the video call has started
              // if time updated is less than bufferMin
              var bufferMin = 2;
              var diff = _time.Time.getUnixTimestampNow() - _time.Time.convertDBTimeToUnix(d.updated_at);
              if (diff <= bufferMin * 60) {
                var popupBody = _react2.default.createElement(
                  "div",
                  null,
                  _react2.default.createElement("br", null),
                  "1-1 session with",
                  _react2.default.createElement("br", null),
                  _react2.default.createElement(
                    "b",
                    null,
                    obj.name
                  ),
                  _react2.default.createElement("br", null),
                  "has started",
                  _react2.default.createElement("br", null),
                  _react2.default.createElement("br", null),
                  btnJoinVCall
                );
                var notiId = "pre-screen-" + d.ID;
                (0, _notification.showNotification)(notiId, popupBody);
              }
            };
            openNotificationStart_PS();
          }
          if (hasStart && (0, _authActions.isRoleRec)()) {
            // bukak start url
            btnJoinVCall = _react2.default.createElement(
              "a",
              {
                onClick: function onClick() {
                  return (0, _chat.joinVideoCall)(d.join_url, null, isExpiredHandler, null, d.ID, d.start_url);
                },
                className: "action btn btn-primary btn-sm"
              },
              "Click To Rejoin"
            );
          }

          break;
      }
      var labelStatus = _react2.default.createElement(
        "div",
        { style: { marginBottom: "7px" } },
        _react2.default.createElement(
          "label",
          { className: "label label-" + label_color_status },
          textStatus
        )
      );

      // openLiveSession use function utk bukak
      // let topLabel = (
      //   <div className="label label-danger">
      //     <i className="fa fa-user left" />
      //     Private Call
      //   </div>
      // );

      body = _react2.default.createElement(
        "div",
        null,
        btnStartVCall == null ? labelStatus : null,
        (0, _authActions.isRoleRec)() ? btnStartVCall : null,
        d.status == _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM ? btnAcceptReject : null,
        d.status == _dbConfig.PrescreenEnum.STATUS_STARTED ? btnJoinVCall : null,
        d.status == _dbConfig.PrescreenEnum.STATUS_ENDED ? btnEndedVCall : null
      );

      body = this.addRemoveButton(body, hasRemove, removeEntity, removeEntityId);

      // ammend title
      subtitle = [(0, _authActions.isRoleRec)() ? (0, _userPopup.createUserDocLinkList)(obj.doc_links, obj.ID, true, true) : null, subtitle];

      subtitle = _react2.default.createElement(
        "div",
        null,
        subtitle
      );

      return {
        title: title,
        body: body,
        subtitle: subtitle
        // topLabel: topLabel,
        // topLabelClass: "danger"
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this10 = this;

      var body = null;
      if (this.props.fetching) {
        body = _react2.default.createElement(_loader.Loader, { isCenter: true, size: "2" });
      } else {
        body = this.props.list.map(function (d, i) {
          // todos for type here

          var obj = (0, _authActions.isRoleRec)() ? d.student : d.company;

          if (typeof obj === "undefined") {
            return false;
          }

          if ((0, _authActions.isRoleRec)()) {
            obj.name = obj.first_name + " " + obj.last_name;
          }

          // 1. title
          var title = null;
          if ((0, _authActions.isRoleRec)()) {
            var params = { id: obj.ID };
            title = _react2.default.createElement(_buttons.ButtonLink, {
              label: obj.first_name + " " + obj.last_name,
              onClick: function onClick() {
                return layoutActions.storeUpdateFocusCard(obj.first_name + " " + obj.last_name, _userPopup2.default, params);
              }
            });
          } else if ((0, _authActions.isRoleStudent)()) {
            title = obj.name;
          }

          var custom_width = "180px";
          var subtitle = null;
          var objTemp = null;
          // var topLabel = null;
          // var topLabelClass = "";
          var badge = null;
          var badge_tooltip = null;

          // if (isRoleRec()) {
          //   //show online status for rec
          //   badge = this.props.online_users[obj.ID] == 1 ? "" : null;
          //   badge_tooltip = `User Currently Online`;
          // }

          var _type = d._type;

          switch (_type) {
            // #############################################################
            // Scheduled Session Card View

            case hallAction.ActivityType.PRESCREEN:
              objTemp = _this10.renderPreScreen(d, obj, title);
              body = objTemp.body;
              title = objTemp.title;
              subtitle = objTemp.subtitle;
              // topLabel = objTemp.topLabel;
              // topLabelClass = objTemp.topLabelClass;
              break;

            // #############################################################
            // group session Card View
            // case hallAction.ActivityType.GROUP_SESSION_JOIN:
            //   objTemp = this.renderGroupSessionJoin(d, obj, title);
            //   body = objTemp.body;
            //   title = objTemp.title;
            //   subtitle = objTemp.subtitle;
            //   topLabel = objTemp.topLabel;
            //   topLabelClass = objTemp.topLabelClass;
            //   break;
          }

          // var labelType = (
          //   <div className={`left-label left-label-${topLabelClass}`}>
          //     <div className="label-arrow" />
          //     {topLabel}
          //   </div>
          // );
          // body = [body, labelType];

          var img_position = (0, _authActions.isRoleRec)() ? obj.img_pos : obj.img_position;
          var isOnlineCard = false;
          if ((0, _authActions.isRoleRec)()) {
            isOnlineCard = (0, _userActions.isUserOnline)(_this10.props.online_users, obj.ID);
          }
          if ((0, _authActions.isRoleStudent)()) {
            isOnlineCard = (0, _userActions.isCompanyOnline)(_this10.props.online_companies, obj.ID);
          }

          return _react2.default.createElement(_list.ProfileListItem, {
            isOnline: isOnlineCard,
            className: ""
            //header={labelType}
            , title: title,
            list_type: "card",
            img_url: obj.img_url,
            custom_width: custom_width,
            img_pos: img_position,
            img_size: obj.img_size,
            img_dimension: "50px",
            body: body,
            badge: badge,
            badge_tooltip: badge_tooltip,
            subtitle: subtitle,
            type: "recruiter",
            key: i
          });
        });

        if (this.props.list.length === 0) {
          body = _react2.default.createElement(
            "div",
            { className: "text-muted" },
            _react2.default.createElement(
              "i",
              null,
              "Nothing to show here"
            )
          );
        }
      }

      return _react2.default.createElement(
        "div",
        { className: "flex-wrap" },
        body
      );
    }
  }]);

  return ActvityList;
}(_react2.default.Component);

ActvityList.propTypes = {
  noBorderCard: _propTypes2.default.bool,
  type: _propTypes2.default.oneOf([hallAction.ActivityType.SESSION, hallAction.ActivityType.QUEUE, hallAction.ActivityType.PRESCREEN]).isRequired,
  title: _propTypes2.default.string.isRequired,
  subtitle: _propTypes2.default.string,
  bc_type: _propTypes2.default.string.isRequired,
  list: _propTypes2.default.array.isRequired,
  fetching: _propTypes2.default.bool.isRequired,
  online_users: _propTypes2.default.object.isRequired,
  online_companies: _propTypes2.default.object.isRequired
};

ActvityList.defaultProps = {
  noBorderCard: false,
  subtitle: null
};

// ##################################################################################################################
// ##################################################################################################################
// ##################################################################################################################

var ActivitySingle = exports.ActivitySingle = function (_React$Component2) {
  _inherits(ActivitySingle, _React$Component2);

  function ActivitySingle(props) {
    _classCallCheck(this, ActivitySingle);

    var _this11 = _possibleConstructorReturn(this, (ActivitySingle.__proto__ || Object.getPrototypeOf(ActivitySingle)).call(this, props));

    _this11.state = {
      loading: true,
      data: {}
    };
    return _this11;
  }

  _createClass(ActivitySingle, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.loadData();
    }
  }, {
    key: "loadData",
    value: function loadData() {
      var _this12 = this;

      var entity = null;
      switch (this.props.type) {
        case hallAction.ActivityType.PRESCREEN:
          entity = "prescreen";
          break;
      }
      if (entity == null) {
        this.setState(function (prevState) {
          return { loading: false };
        });
      } else {
        var q = " query {" + entity + " (ID:" + this.props.id + "){ " + hallAction.getActivityQueryAttr(this.props.type) + " } }";
        (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
          _this12.setState(function (prevState) {
            return { data: res.data.data[entity], loading: false };
          });
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var v = null;
      if (this.state.loading) {
        v = _react2.default.createElement(_loader.Loader, { size: "2" });
      } else {
        var list = [this.state.data];
        v = _react2.default.createElement(ActvityList, {
          bc_type: "vertical",
          online_users: {},
          fetching: false,
          type: this.props.type,
          title: null,
          subtitle: null,
          list: list
        });
      }
      return v;
    }
  }]);

  return ActivitySingle;
}(_react2.default.Component);

ActivitySingle.propTypes = {
  type: _propTypes2.default.string.isRequired,
  id: _propTypes2.default.number.isRequired
};

// ##################################################################################################################
// ##################################################################################################################
// ##################################################################################################################

var sec = "act-sec";

var ActivitySection = function (_React$Component3) {
  _inherits(ActivitySection, _React$Component3);

  function ActivitySection(props) {
    _classCallCheck(this, ActivitySection);

    var _this13 = _possibleConstructorReturn(this, (ActivitySection.__proto__ || Object.getPrototypeOf(ActivitySection)).call(this, props));

    _this13.refresh = _this13.refresh.bind(_this13);
    return _this13;
  }

  _createClass(ActivitySection, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.props.loadActivity();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {}
  }, {
    key: "refresh",
    value: function refresh(type) {
      this.props.loadActivity(type);
    }
  }, {
    key: "createTitleWithTooltip",
    value: function createTitleWithTooltip(title) {
      var tooltip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      return _react2.default.createElement(
        "span",
        null,
        title,
        tooltip != null ? _react2.default.createElement(_tooltip2.default, {
          debug: false,
          bottom: "22px",
          content: _react2.default.createElement(
            "small",
            null,
            " ",
            _react2.default.createElement("i", { className: "fa fa-question-circle" })
          ),
          tooltip: tooltip
        }) : null
      );
    }
  }, {
    key: "render",
    value: function render() {
      // var d = this.props.activity;

      // var subtitle_p = null;

      // var tt_p = isRoleStudent()
      //   ? "Upcoming one-to-one sessions will be shown here. Check your email for confirmation."
      //   : "You can schedule private sessions with students through Student Listing page";
      // var title_p = this.createTitleWithTooltip(
      //   <a onClick={() => this.refresh(hallAction.ActivityType.PRESCREEN)}>
      //     Private Session{/* Scheduled Private Session */}
      //   </a>,
      //   tt_p
      // );

      // var tt_gs =
      //   "Upcoming group session that you signed up for will be shown here.";
      // var title_gs = this.createTitleWithTooltip(
      //   <a
      //     onClick={() => this.refresh(hallAction.ActivityType.GROUP_SESSION_JOIN)}
      //   >
      //     Group Session
      //   </a>,
      //   tt_gs
      // );
      // var subtitle_gs = null;

      // var size_p = isRoleRec() ? "12" : "12";

      //Group Session
      // var gs =
      //   <ActvityList
      //     bc_type="vertical"
      //     online_users={this.props.online_users}
      //     fetching={d.fetching.group_session_joins}
      //     type={hallAction.ActivityType.GROUP_SESSION_JOIN}
      //     title={title_gs}
      //     subtitle={subtitle_gs}
      //     list={d.group_session_joins}></ActvityList>

      // //Scheduled Session
      // var p = (
      //   <ActvityList
      //     bc_type="vertical"
      //     online_users={this.props.online_users}
      //     fetching={d.fetching.prescreens}
      //     type={hallAction.ActivityType.PRESCREEN}
      //     title={title_p}
      //     subtitle={subtitle_p}
      //     list={d.prescreens}
      //   />
      // );

      // ############################3
      // Gabung ps and gs

      // 1. title
      // var title = this.createTitleWithTooltip(
      //   <a
      //     onClick={() => {
      //       let toRefresh = [hallAction.ActivityType.PRESCREEN];
      //       if (isRoleStudent()) {
      //         toRefresh.push(hallAction.ActivityType.GROUP_SESSION_JOIN);
      //       }
      //       this.refresh(toRefresh);
      //     }}
      //   >
      //     My Activity
      //   </a>,
      //   "You can access your private call and live call here"
      // );

      // // 2. subtitle
      // var subtitle = null;

      var d = this.props.activity;

      // 3. list
      var list = [];
      for (var i in d.prescreens) {
        if (i >= this.props.limitLoad) {
          break;
        }
        var newObj = d.prescreens[i];
        newObj._type = hallAction.ActivityType.PRESCREEN;
        list.push(newObj);
      }
      //// 3.b  add live call (for student only)
      // if (isRoleStudent()) {
      //   for (var i in d.group_session_joins) {
      //     let newObj = d.group_session_joins[i];
      //     newObj._type = hallAction.ActivityType.GROUP_SESSION_JOIN;
      //     list.push(newObj);
      //   }
      // }

      // 4. fetching
      var fetching = d.fetching.prescreens;
      // if (isRoleStudent()) {
      //   fetching = d.fetching.prescreens || d.fetching.group_session_joins;
      // } else {
      //   fetching = d.fetching.prescreens;
      // }

      // 5. view
      var ps_gs = _react2.default.createElement(ActvityList, {
        limitLoad: this.props.limitLoad,
        noBorderCard: true,
        bc_type: "vertical",
        online_users: this.props.online_users,
        online_companies: this.props.online_companies,
        fetching: fetching,
        type: null,
        title: "",
        subtitle: "",
        list: list
      });

      // todos
      return _react2.default.createElement(
        "div",
        null,
        ps_gs
      );
    }
  }]);

  return ActivitySection;
}(_react2.default.Component);

ActivitySection.defaultProps = {
  limitLoad: _propTypes2.default.number
};

ActivitySection.propTypes = {};

// TODO status online
function mapStateToProps(state, ownProps) {
  return _extends({}, ownProps, {
    activity: state.hall.activity,
    online_users: state.user.online_users,
    online_companies: state.user.online_companies
  });
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)({
    loadActivity: hallAction.loadActivity
  }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ActivitySection);

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.hasCV = hasCV;
exports.hasResume = hasResume;
exports.hasAcademicTranscript = hasAcademicTranscript;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uploader = __webpack_require__(159);

var _appConfig = __webpack_require__(4);

var _loader = __webpack_require__(8);

var _list = __webpack_require__(11);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _confirmPopup = __webpack_require__(122);

var _confirmPopup2 = _interopRequireDefault(_confirmPopup);

var _store = __webpack_require__(34);

var _util = __webpack_require__(45);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function hasDocLabel(dl, label, isExact) {
    isExact = typeof isExact === "undefined" ? false : isExact;
    if ((typeof dl === 'undefined' ? 'undefined' : _typeof(dl)) === "object") {
        for (var i in dl) {
            var d = dl[i];
            var docLabel = d.label;
            docLabel = typeof docLabel !== "string" ? "" : docLabel.toUpperCase();
            if (isExact) {
                if (docLabel == label.toUpperCase()) {
                    return true;
                }
            } else {
                if (docLabel.indexOf(label.toUpperCase()) >= 0) {
                    return true;
                }
            }
        }
    }

    return false;
}

function hasCV(dl) {
    return hasDocLabel(dl, "CV", true) || hasDocLabel(dl, "Curriculum Vitae");
}

function hasResume(dl) {
    return hasDocLabel(dl, _dbConfig.DocLinkEnum.LABEL_RESUME);
}

function hasAcademicTranscript(dl) {
    return hasDocLabel(dl, _dbConfig.DocLinkEnum.LABEL_ACADEMIC_TRANS);
}

var DocLinkForm = function (_React$Component) {
    _inherits(DocLinkForm, _React$Component);

    function DocLinkForm(props) {
        _classCallCheck(this, DocLinkForm);

        var _this = _possibleConstructorReturn(this, (DocLinkForm.__proto__ || Object.getPrototypeOf(DocLinkForm)).call(this, props));

        _this.state = {
            error: null,
            disableSubmit: false,
            success: null,
            currentFile: null,
            labelText: false
        };
        _this.isForCompany = _this.isForCompany.bind(_this);
        _this.isForUser = _this.isForUser.bind(_this);
        _this.formOnSubmit = _this.formOnSubmit.bind(_this);
        _this.setLabelText = _this.setLabelText.bind(_this);
        _this.uploaderOnChange = _this.uploaderOnChange.bind(_this);
        _this.uploaderOnError = _this.uploaderOnError.bind(_this);
        _this.uploaderOnSuccess = _this.uploaderOnSuccess.bind(_this);
        return _this;
    }

    _createClass(DocLinkForm, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.formDefault = {};
            this.formDefault[_dbConfig.DocLink.TYPE] = this.props.type;

            var _getLabel = (0, _util._GET)("label");
            if (_getLabel != null && this.props.type == _dbConfig.DocLinkEnum.TYPE_DOC) {
                this.formDefault[_dbConfig.DocLink.LABEL] = _getLabel;
            }

            if (this.props.entity === "user") {
                this.formDefault[_dbConfig.DocLink.USER_ID] = this.props.id;
                this.formDefault[_dbConfig.DocLink.COMPANY_ID] = 0;
            }

            if (this.props.entity === "company") {
                this.formDefault[_dbConfig.DocLink.COMPANY_ID] = this.props.id;
                this.formDefault[_dbConfig.DocLink.USER_ID] = 0;
            }

            if (this.props.edit) {
                this.formDefault[_dbConfig.DocLink.URL] = this.props.edit[_dbConfig.DocLink.URL];
                this.formDefault[_dbConfig.DocLink.LABEL] = this.props.edit[_dbConfig.DocLink.LABEL];
                this.formDefault[_dbConfig.DocLink.DESCRIPTION] = this.props.edit[_dbConfig.DocLink.DESCRIPTION];
            }

            //this.formItem = this.getFormItem(this.props.type);
        }
    }, {
        key: 'isForUser',
        value: function isForUser() {
            return this.props.entity === "user";
        }
    }, {
        key: 'isForCompany',
        value: function isForCompany() {
            return !this.isForUser();
        }
    }, {
        key: 'setLabelText',
        value: function setLabelText(labelText) {
            this.setState(function () {
                return { labelText: labelText };
            });
        }
    }, {
        key: 'getFormItem',
        value: function getFormItem() {
            var _this2 = this;

            var CUSTOM = "Custom Label";
            var type = this.props.type;
            var labelData = [""];
            labelData.push.apply(labelData, _toConsumableArray(this.isForUser() ? _dbConfig.DocLinkEnum.USER_LABELS : _dbConfig.DocLinkEnum.COMPANY_LABELS));
            labelData.push(CUSTOM);

            var formItem = [{
                label: "Type",
                name: _dbConfig.DocLink.TYPE,
                type: "text",
                required: true,
                disabled: true,
                hidden: true
            }, {
                label: "User Id",
                name: _dbConfig.DocLink.USER_ID,
                type: "number",
                hidden: true,
                disabled: true
            }, {
                label: "Company Id",
                name: _dbConfig.DocLink.COMPANY_ID,
                type: "number",
                hidden: true,
                disabled: true
            }, {
                label: "Url",
                name: _dbConfig.DocLink.URL,
                placeholder: this.props.entity === "user" ? "https://www.linkedin.com/in/john-doe" : "https://www.company.com",
                type: "text",
                disabled: this.props.edit && type === _dbConfig.DocLinkEnum.TYPE_DOC ? true : false,
                hidden: type === _dbConfig.DocLinkEnum.TYPE_LINK || this.props.edit ? false : true,
                required: type === _dbConfig.DocLinkEnum.TYPE_LINK || this.props.edit ? true : false
                /*, {
                    label: "Description",
                    name: DocLink.DESCRIPTION,
                    type: "textarea",
                    rows: 2
                }*/
            }];

            // can toogle between select and text
            var labelObj = {
                label: "Label",
                name: _dbConfig.DocLink.LABEL,
                type: "select",
                sublabel: _react2.default.createElement(
                    'span',
                    null,
                    'Select `',
                    CUSTOM,
                    '` to write a custom label'
                ),
                onChange: function onChange(e) {
                    if (e.currentTarget.value == CUSTOM) {
                        _this2.setLabelText(true);
                    }
                },
                data: labelData,
                required: true
            };

            if (typeof this.state !== "undefined" && this.state.labelText) {
                labelObj.type = "text";
                labelObj.sublabel = _react2.default.createElement(
                    'span',
                    null,
                    _react2.default.createElement(
                        'a',
                        { onClick: function onClick() {
                                return _this2.setLabelText(false);
                            } },
                        'Select from dropdown'
                    )
                );
                labelObj.placeholder = "Write down custom label here";
                labelObj.onChange = false;
            }

            formItem.push(labelObj);
            return formItem;
        }
    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            var _this3 = this;

            if (this.props.type === _dbConfig.DocLinkEnum.TYPE_DOC && !this.props.edit) {
                if (this.state.currentFile === null) {
                    this.setState(function () {
                        return { error: "Please Select A File First" };
                    });
                } else {
                    var fileName = this.props.entity + '-' + this.props.id;
                    (0, _form.toggleSubmit)(this, { error: null });
                    (0, _uploader.uploadFile)(this.state.currentFile, _uploader.FileType.DOC, fileName).then(function (res) {
                        if (res.data.url !== null) {
                            d.url = _appConfig.UploadUrl + '/' + res.data.url;
                            _this3.saveToDb(d);
                        }
                    });
                }
            } else {
                (0, _form.toggleSubmit)(this, { error: null });
                this.saveToDb(d);
            }
        }
    }, {
        key: 'saveToDb',
        value: function saveToDb(d) {
            var _this4 = this;

            if (this.props.edit) {
                var update = (0, _form.checkDiff)(this, this.props.edit, d, [_dbConfig.DocLink.USER_ID, _dbConfig.DocLink.COMPANY_ID]);
                if (update === false) {
                    return;
                }
                update[_dbConfig.DocLink.ID] = this.props.edit[_dbConfig.DocLink.ID];
                d = update;
            } else {
                d[_dbConfig.DocLink.USER_ID] = Number.parseInt(d[_dbConfig.DocLink.USER_ID]);
                d[_dbConfig.DocLink.COMPANY_ID] = Number.parseInt(d[_dbConfig.DocLink.COMPANY_ID]);

                if (d[_dbConfig.DocLink.USER_ID] == 0) {
                    delete d[_dbConfig.DocLink.USER_ID];
                }

                if (d[_dbConfig.DocLink.COMPANY_ID] == 0) {
                    delete d[_dbConfig.DocLink.COMPANY_ID];
                }

                if (d[_dbConfig.DocLink.DESCRIPTION] == "") {
                    delete d[_dbConfig.DocLink.DESCRIPTION];
                }
            }

            var query = 'mutation{' + (this.props.edit ? "edit" : "add") + '_doc_link \n            (' + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + '){ID}}';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {

                var mes = _this4.props.edit ? 'Successfully Edit ' + _this4.props.type.capitalize() + '!' : 'Successfully Added New ' + _this4.props.type.capitalize() + '!';
                (0, _form.toggleSubmit)(_this4, { error: null, success: mes });
                if (_this4.props.onSuccessNew) {
                    _this4.props.onSuccessNew();
                }
            }, function (err) {
                (0, _form.toggleSubmit)(_this4, { error: err.response.data });
            });
        }

        /* props for Uploader --Start */

    }, {
        key: 'uploaderOnChange',
        value: function uploaderOnChange(file) {
            console.log("uploaderOnChange");
        }
    }, {
        key: 'uploaderOnError',
        value: function uploaderOnError(err) {
            console.log("uploaderOnError", err);
            this.setState(function () {
                return { error: err, currentFile: null };
            });
        }
    }, {
        key: 'uploaderOnSuccess',
        value: function uploaderOnSuccess(file) {
            console.log("uploaderOnSuccess", file);
            this.setState(function () {
                return { error: null, currentFile: file };
            });
        }
    }, {
        key: 'render',
        value: function render() {

            var uploader = this.props.type === _dbConfig.DocLinkEnum.TYPE_DOC && !this.props.edit ? _react2.default.createElement(_uploader.Uploader, { label: 'Upload Document', name: 'new-document', type: _uploader.FileType.DOC, onSuccess: this.uploaderOnSuccess,
                onChange: this.uploaderOnChange, onError: this.uploaderOnError }) : null;

            var form = _react2.default.createElement(_form2.default, { className: 'form-row',
                items: this.getFormItem(),
                onSubmit: this.formOnSubmit,
                submitText: 'Save',
                defaultValues: this.formDefault,
                disableSubmit: this.state.disableSubmit,
                error: this.state.error,
                errorPosition: 'top',
                emptyOnSuccess: true,
                success: this.state.success });

            return _react2.default.createElement(
                'div',
                null,
                uploader,
                form
            );
        }
    }]);

    return DocLinkForm;
}(_react2.default.Component);

DocLinkForm.propTypes = {
    id: _propTypes2.default.number.isRequired,
    edit: _propTypes2.default.obj,
    entity: _propTypes2.default.oneOf(["user", "company"]).isRequired,
    type: _propTypes2.default.oneOf([_dbConfig.DocLinkEnum.TYPE_DOC, _dbConfig.DocLinkEnum.TYPE_LINK]).isRequired,
    onSuccessNew: _propTypes2.default.func
};

// refactor so that it works for user and company
// TODO

var DocLinkPage = function (_React$Component2) {
    _inherits(DocLinkPage, _React$Component2);

    function DocLinkPage(props) {
        _classCallCheck(this, DocLinkPage);

        var _this5 = _possibleConstructorReturn(this, (DocLinkPage.__proto__ || Object.getPrototypeOf(DocLinkPage)).call(this, props));

        _this5.state = {
            data: [],
            map: {}, // for edit
            fetching: true
        };

        _this5.refresh = _this5.refresh.bind(_this5);
        return _this5;
    }

    _createClass(DocLinkPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.refresh();
        }
    }, {
        key: 'closeFocusCardAndRefresh',
        value: function closeFocusCardAndRefresh() {
            layoutActions.storeHideFocusCard();
            this.refresh();
        }
    }, {
        key: 'refresh',
        value: function refresh() {
            var _this6 = this;

            var query = 'query{' + this.props.entity + '(ID:' + this.props.id + '){\n        doc_links{\n            ID\n            user_id\n            company_id\n            type\n            label\n            url\n            description\n        }}}';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                //console.log(res.data.data.user.doc_links);
                var datas = res.data.data[_this6.props.entity].doc_links;
                var map = {};
                for (var i in datas) {
                    map[datas[i].ID] = i;
                }
                console.log(map);
                _this6.setState(function () {
                    return { map: map, data: datas, fetching: false };
                });
            }, function (err) {
                alert(err);
            });
        }
    }, {
        key: 'deletePopup',
        value: function deletePopup(e) {
            var _this7 = this;

            console.log(e);

            var id = e.currentTarget.id;
            console.log(e.currentTarget);
            var onYes = function onYes() {
                var del_query = 'mutation{delete_doc_link(ID:' + id + ')}';
                _store.store.dispatch(layoutActions.updateProps({ loading: true }));
                (0, _apiHelper.getAxiosGraphQLQuery)(del_query).then(function (res) {
                    _this7.closeFocusCardAndRefresh();
                }, function (err) {
                    alert(err.response.data);
                });
            };
            var value = e.currentTarget.attributes.getNamedItem("label").value;
            layoutActions.storeUpdateFocusCard("Confirm Delete Item", _confirmPopup2.default, { title: 'Continue delete document \'' + value + '\'?', onYes: onYes }, "small");
        }
    }, {
        key: 'getItemById',
        value: function getItemById(id) {
            return this.state.data[this.state.map[id]];
        }
    }, {
        key: 'editPopup',
        value: function editPopup(e) {
            var _this8 = this;

            var id = e.currentTarget.id;
            var item = this.getItemById(id);
            var label = e.currentTarget.attributes.getNamedItem("label").value;

            var onYes = function onYes() {
                var del_query = 'mutation{delete_doc_link(ID:' + id + ')}';
                _store.store.dispatch(layoutActions.updateProps({ loading: true }));
                (0, _apiHelper.getAxiosGraphQLQuery)(del_query).then(function (res) {
                    window.location.reload();
                }, function (err) {
                    alert(err.response.data);
                });
            };

            layoutActions.storeUpdateFocusCard('Editing ' + label, DocLinkForm, {
                id: this.props.id, type: item[_dbConfig.DocLink.TYPE], edit: item, entity: this.props.entity,
                onSuccessNew: function onSuccessNew() {
                    _this8.closeFocusCardAndRefresh();
                }
            }, "small");
        }
    }, {
        key: 'render',
        value: function render() {
            var _this9 = this;

            var items = this.state.data.length <= 0 ? _react2.default.createElement(
                'div',
                { className: 'text-muted' },
                'Nothing To Show Here'
            ) : this.state.data.map(function (d, i) {
                //var title = <a target='_blank' href={`${d.url}`}>{d.label}</a>;
                //var onEdit = {label: d.label, id: d.ID, onClick: this.editPopup.bind(this)};
                var icon = d.type === _dbConfig.DocLinkEnum.TYPE_DOC ? "file-text" : "link";
                return _react2.default.createElement(
                    'span',
                    null,
                    _react2.default.createElement('i', { className: 'fa left fa-' + icon }),
                    _react2.default.createElement(
                        'a',
                        { target: '_blank', href: '' + d.url },
                        d.label + ' '
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'badge', id: d.ID, label: d.label,
                            onClick: _this9.editPopup.bind(_this9) },
                        _react2.default.createElement('i', { className: 'fa fa-edit' })
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'badge', id: d.ID, label: d.label,
                            onClick: _this9.deletePopup.bind(_this9) },
                        _react2.default.createElement('i', { className: 'fa fa-times' })
                    )
                );
            });

            if (this.state.data.length > 0) {
                items = _react2.default.createElement(_list.CustomList, { className: 'label', items: items });
            }

            var titleList = (this.props.entity == "user" ? "My " : "") + "Document & Link";

            return _react2.default.createElement(
                'div',
                { className: 'row container-fluid' },
                _react2.default.createElement(
                    'div',
                    { className: 'col-sm-6' },
                    _react2.default.createElement(
                        'h3',
                        { className: 'left' },
                        'Add New Document'
                    ),
                    _react2.default.createElement(DocLinkForm, { id: this.props.id, onSuccessNew: this.refresh, type: _dbConfig.DocLinkEnum.TYPE_DOC, entity: this.props.entity })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-sm-6' },
                    _react2.default.createElement(
                        'h3',
                        { className: 'left' },
                        'Add New Link'
                    ),
                    _react2.default.createElement(DocLinkForm, { id: this.props.id, onSuccessNew: this.refresh, type: _dbConfig.DocLinkEnum.TYPE_LINK, entity: this.props.entity })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-sm-12' },
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'h3',
                        { className: 'left' },
                        titleList
                    ),
                    this.state.fetching ? _react2.default.createElement(_loader.Loader, { size: '2', text: 'Loading Document & Link..' }) : items,
                    _react2.default.createElement('br', null)
                )
            );
        }
    }]);

    return DocLinkPage;
}(_react2.default.Component);

exports.default = DocLinkPage;


DocLinkPage.propTypes = {
    id: _propTypes2.default.number.isRequired,
    entity: _propTypes2.default.oneOf(["user", "company"]).isRequired
};

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GroupSessionView = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _generalForm = __webpack_require__(23);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _list = __webpack_require__(11);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _activityApi = __webpack_require__(67);

var _socketClient = __webpack_require__(17);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _users = __webpack_require__(27);

var _scheduledInterview = __webpack_require__(28);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _chat = __webpack_require__(42);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _time = __webpack_require__(9);

var _apiHelper = __webpack_require__(3);

var _availability = __webpack_require__(81);

var _availability2 = _interopRequireDefault(_availability);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _validationStudentAction = __webpack_require__(124);

var _validationStudentAction2 = _interopRequireDefault(_validationStudentAction);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _hallViewHelper = __webpack_require__(79);

var HallViewHelper = _interopRequireWildcard(_hallViewHelper);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //Faizul Here

// require("../../../css/group-session.scss");
// remove limit join
var LIMIT_JOIN = -1;

var NewGroupSessionPopup = function (_React$Component) {
  _inherits(NewGroupSessionPopup, _React$Component);

  function NewGroupSessionPopup(props) {
    _classCallCheck(this, NewGroupSessionPopup);

    var _this = _possibleConstructorReturn(this, (NewGroupSessionPopup.__proto__ || Object.getPrototypeOf(NewGroupSessionPopup)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.state = {
      select_timestamp: -1,
      disableSubmit: false,
      error: null
    };
    return _this;
  }

  _createClass(NewGroupSessionPopup, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.formItems = [{
        label: "Group Session Title",
        sublabel: "What You Will Talk About?",
        name: _dbConfig.GroupSession.TITLE,
        type: "text",
        len: 50,
        required: true
      }];

      this.countDataAv = {};
      for (var i in this.props.data) {
        var d = this.props.data[i];
        if (typeof this.countDataAv[d.start_time] === "undefined") {
          this.countDataAv[d.start_time] = 0;
        }
        this.countDataAv[d.start_time]++;
      }
    }
  }, {
    key: "onSelectTime",
    value: function onSelectTime(id, timestamp) {
      this.setState(function (prevState) {
        return { select_timestamp: timestamp };
      });
    }
  }, {
    key: "submitOnClick",
    value: function submitOnClick(d) {
      if (this.state.select_timestamp == -1) {
        this.setState(function (prevState) {
          return { disableSubmit: false, error: "Please select a time" };
        });
      } else {
        (0, _form.toggleSubmit)(this, { error: null });
        this.createGs(d.title);
      }
    }
  }, {
    key: "createGs",
    value: function createGs(title) {
      var _this2 = this;

      var d = {};
      d[_dbConfig.GroupSession.TITLE] = title;
      d[_dbConfig.GroupSession.COMPANY_ID] = this.props.company_id;
      d[_dbConfig.GroupSession.START_TIME] = Number.parseInt(this.state.select_timestamp);
      d[_dbConfig.GroupSession.LIMIT_JOIN] = LIMIT_JOIN;
      d[_dbConfig.GroupSession.CREATED_BY] = this.authUser.ID;

      var query = "mutation{ add_group_session \n            (" + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + "){ID}\n        }";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.setState(function (prevState) {
          return { disableSubmit: false };
        });
        // close popup terus
        layoutActions.storeHideFocusCard();
        _this2.successAddHandler();
      });
    }
  }, {
    key: "successAddHandler",
    value: function successAddHandler() {
      var mes = _react2.default.createElement(
        "div",
        null,
        "Successfully scheduled a group session on",
        " ",
        _react2.default.createElement(
          "u",
          null,
          _time.Time.getString(this.state.select_timestamp)
        )
      );
      layoutActions.successBlockLoader(mes);
      this.props.finishAdd();
    }
  }, {
    key: "getForm",
    value: function getForm() {
      var _this3 = this;

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_form2.default, {
          className: "form-row",
          items: this.formItems,
          onSubmit: function onSubmit(d) {
            _this3.submitOnClick(d);
          },
          submitText: "Schedule Group Session",
          btnColorClass: "primary btn-lg",
          error: this.state.error,
          disableSubmit: this.state.disableSubmit
        })
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_availability2.default, {
          select_timestamp: this.state.select_timestamp,
          for_general: true,
          select_for: "Group Session",
          count_data: this.countDataAv,
          onSelect: function onSelect(id, timestamp) {
            _this4.onSelectTime(id, timestamp);
          }
        }),
        _react2.default.createElement("br", null),
        this.getForm()
      );
    }
  }]);

  return NewGroupSessionPopup;
}(_react2.default.Component);

NewGroupSessionPopup.propTypes = {
  data: _propTypes2.default.array.isRequired,
  finishAdd: _propTypes2.default.func.isRequired,
  company_id: _propTypes2.default.number.isRequired
};

var GroupSessionClass = function (_React$Component2) {
  _inherits(GroupSessionClass, _React$Component2);

  function GroupSessionClass(props) {
    _classCallCheck(this, GroupSessionClass);

    var _this5 = _possibleConstructorReturn(this, (GroupSessionClass.__proto__ || Object.getPrototypeOf(GroupSessionClass)).call(this, props));

    _this5.authUser = (0, _authActions.getAuthUser)();
    _this5.img_dimension = "30px";
    _this5.LIMIT_SEE_MORE = 4;
    _this5.loadData = _this5.loadData.bind(_this5);
    _this5.state = {
      data: [],
      isHiddenValidation: true,
      keyValidation: 0,
      currentId: null,
      loading: true
    };
    return _this5;
  }

  _createClass(GroupSessionClass, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.loadData();
    }
  }, {
    key: "loadData",
    value: function loadData() {
      var _this6 = this;

      this.setState(function (prevState) {
        return { loading: true };
      });

      var q = "query { group_sessions(company_id:" + this.props.company_id + ", discard_expired:true, discard_canceled:true)\n        { ID\n          start_time \n          is_expired\n          join_url\n          start_url\n          title\n          joiners{\n                user{\n                  ID\n                  first_name\n                  last_name\n                  img_url\n                  img_pos\n                  img_size\n                }\n            } \n        created_at created_by} } ";

      (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
        _this6.setState(function (prevState) {
          return { data: res.data.data.group_sessions, loading: false };
        });
      });
    }
  }, {
    key: "createSeeMoreLink",
    value: function createSeeMoreLink(_ref) {
      var _this7 = this;

      var d = _ref.d,
          i = _ref.i,
          joinersId = _ref.joinersId;

      var styleSeeMore = {
        width: "30px",
        fontSize: "10px",
        lineHeight: "12px",
        marginLeft: "3px",
        marginTop: "-3px"
      };
      var classSeeMore = this.props.forRec ? "text btn-link" : "text-muted";
      var onClickSeeMore = function onClickSeeMore(e) {
        if (!_this7.props.forRec) {
          return;
        }
        // todo get from data-joiners
        console.log("huhuhuhuhu");
        var joiners = e.currentTarget.dataset.joiners;
        joiners = JSON.parse(joiners);
        var index = e.currentTarget.dataset.index;
        var joinersView = _this7.createJoinersViewPopup(index);
        var componentView = function componentView() {
          return _react2.default.createElement(
            "div",
            null,
            joinersView
          );
        };
        layoutActions.storeUpdateFocusCard("All Participants", componentView, {});
      };

      return _react2.default.createElement(
        "div",
        {
          className: classSeeMore,
          onClick: onClickSeeMore,
          style: styleSeeMore,
          "data-id": d.ID,
          "data-index": i,
          "data-joiners": JSON.stringify(joinersId)
        },
        "and ",
        d.joiners.length - this.LIMIT_SEE_MORE,
        " others"
      );
    }
  }, {
    key: "createJoinersViewPopup",
    value: function createJoinersViewPopup(index) {
      var d = this.state.data[index];
      var joiners = d.joiners.map(function (dj, di) {
        dj = dj.user;
        // var imgView = createImageElement(dj.img_url, dj.img_pos
        //     , dj.img_size, this.img_dimension, "");
        // var name = createUserTitle(dj);
        var name = (0, _users.createUserTitle2Line)(dj);
        return _react2.default.createElement(_profileCard2.default, {
          type: "student",
          title: name,
          img_url: dj.img_url,
          img_pos: dj.img_pos,
          img_size: dj.img_size,
          body: null
        });
      });

      return _react2.default.createElement(
        "div",
        {
          style: {
            marginTop: "10px",
            display: "flex",
            justifyContent: "center",
            flexWrap: "wrap"
          }
        },
        joiners
      );
    }
  }, {
    key: "createJoinersView",
    value: function createJoinersView(d, extraCount) {
      var _this8 = this;

      var joiners = d.joiners.map(function (dj, di) {
        if (extraCount > 1 && di >= _this8.LIMIT_SEE_MORE) {
          return;
        }
        dj = dj.user;
        var imgView = (0, _profileCard.createImageElement)(dj.img_url, dj.img_pos, dj.img_size, _this8.img_dimension, "");

        var studentName = null;
        var onClickJoiner = function onClickJoiner() {};
        if (_this8.props.forRec) {
          studentName = dj.first_name + " " + dj.last_name;
          onClickJoiner = function onClickJoiner() {
            return layoutActions.storeUpdateFocusCard(studentName, _userPopup2.default, {
              id: dj.ID
            });
          };
        }

        return _react2.default.createElement(
          "div",
          { className: "join-item", onClick: onClickJoiner },
          _react2.default.createElement(_tooltip2.default, {
            bottom: "37px",
            left: "-71px",
            width: "140px",
            debug: false,
            alignCenter: true,
            content: imgView,
            tooltip: studentName
          })
        );
      });

      return joiners;
    }
  }, {
    key: "createView",
    value: function createView(data) {
      var _this9 = this;

      var list = data.map(function (d, i) {
        var extraCount = d.joiners.length - _this9.LIMIT_SEE_MORE;
        var joiners = _this9.createJoinersView(d, extraCount);

        var joinersId = d.joiners.map(function (dj, di) {
          dj = dj.user;
          return dj.ID;
        });

        // See More Punya Button
        if (extraCount > 1 && d.joiners.length > _this9.LIMIT_SEE_MORE) {
          joiners.push(_this9.createSeeMoreLink({
            d: d,
            i: i,
            joinersId: joinersId
          }));
        }

        if (d.joiners.length <= 0) {
          joiners = _react2.default.createElement(
            "small",
            { className: "text-muted" },
            "No Participant Yet"
          );
        }

        var action = null;
        if (d.is_expired) {
          action = _react2.default.createElement(
            "div",
            { className: "action btn btn-danger btn-sm", disabled: "disabled" },
            "Ended"
          );
        } else if (_this9.props.forRec) {
          if (d.join_url != null) {
            var isExpiredHandler = function isExpiredHandler() {
              var mes = _react2.default.createElement(
                "div",
                null,
                "This group session has ended."
              );
              layoutActions.errorBlockLoader(mes);
              var q = "mutation {edit_group_session(ID:" + d.ID + ", is_expired:1){ID}}";
              (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                _this9.loadData();
              });
            };
            //  href={d.start_url}
            action = _react2.default.createElement(
              "a",
              {
                onClick: function onClick() {
                  return (0, _chat.joinVideoCall)(d.join_url, null, isExpiredHandler, d.ID);
                },
                className: "action btn btn-primary btn-sm",
                target: "_blank"
              },
              "Started"
            );
          } else {
            action = _react2.default.createElement(
              "div",
              {
                className: "action btn btn-success btn-sm",
                "data-id": d.ID,
                "data-joiners": JSON.stringify(joinersId),
                "data-start_time": d.start_time,
                onClick: function onClick(e) {
                  HallViewHelper.startVideoCall(e, {
                    type: HallViewHelper.TYPE_GROUP_SESSION,
                    user_id: _this9.authUser.ID,
                    bindedSuccessHandler: _this9.loadData
                  });
                }
              },
              "Start Video Call"
            );
          }
        } else {
          action = _react2.default.createElement(
            "div",
            {
              className: "action btn btn-success btn-sm",
              "data-id": d.ID,
              onClick: function onClick(e) {
                _this9.joinGroupSession(e);
              }
            },
            "Join Group Session"
          );
        }

        var deleteBtn = null;
        if (_this9.props.forRec) {
          deleteBtn = _react2.default.createElement(
            "div",
            {
              "data-joiners": JSON.stringify(joinersId),
              "data-id": d.ID,
              onClick: function onClick(e) {
                _this9.deleteGroupSession(e);
              },
              className: "btn btn-link delete"
            },
            _react2.default.createElement("i", { className: "fa fa-times" })
          );
        }

        return _react2.default.createElement(
          "div",
          { className: "gs-company" },
          _react2.default.createElement(
            "div",
            { className: "header" },
            _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement(
                "div",
                { className: "title", title: d.title },
                _react2.default.createElement(
                  "b",
                  null,
                  d.title
                )
              ),
              _react2.default.createElement(
                "div",
                { className: "time" },
                _react2.default.createElement("i", { className: "fa fa-calendar left" }),
                _react2.default.createElement(
                  "b",
                  null,
                  _time.Time.getDateDayStr(d.start_time)
                ),
                " - ",
                _time.Time.getDate(d.start_time)
              ),
              _react2.default.createElement(
                "div",
                { className: "time" },
                _react2.default.createElement("i", { className: "fa fa-clock-o left" }),
                _time.Time.getStringShort(d.start_time)
              ),
              deleteBtn
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "joiner" },
            joiners
          ),
          action
        );
      });

      return _react2.default.createElement(
        "div",
        { className: "group-session" },
        this.props.forRec ? this.createAddNewGs() : null,
        list,
        this.props.forStudent && list.length == 0 ? _react2.default.createElement(
          "small",
          { className: "text-muted" },
          "This company does not have any group sessions yet.",
          _react2.default.createElement("br", null),
          "Check again later."
        ) : null
      );
    }
  }, {
    key: "deleteGroupSession",
    value: function deleteGroupSession(e) {
      var _this10 = this;

      var id = e.currentTarget.dataset.id;
      var joiners = e.currentTarget.dataset.joiners;
      joiners = JSON.parse(joiners);

      layoutActions.confirmBlockLoader("Cancel This Group Session?", function () {
        layoutActions.loadingBlockLoader("Canceling...");
        var q = "mutation { edit_group_session (ID:" + id + ", is_canceled:1) { ID } } ";
        (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
          // emit to joiners to reload group session dorang
          for (var i in joiners) {
            (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, joiners[i], null);
          }
          _this10.loadData();
          layoutActions.storeHideBlockLoader();
        });
      });
    }
  }, {
    key: "openWhatsNextAlert",
    value: function openWhatsNextAlert(gs, greenMes) {
      var actData = [{
        icon: "envelope",
        color: "#007BB4",
        text: _react2.default.createElement(
          "span",
          null,
          "You will be ",
          _react2.default.createElement(
            "b",
            null,
            "notified through email"
          ),
          " an hour before the session started"
        )
      }, {
        icon: "video-camera",
        color: "#007BB4",
        text: _react2.default.createElement(
          "span",
          null,
          "A link to join video call will be created under",
          " ",
          _react2.default.createElement(
            "b",
            null,
            "'Group Session'"
          ),
          " section in Home page"
        )
      }];
      var list = (0, _list.createIconList)("sm", actData, "400px", {
        customTextWidth: "325px",
        customIconDimension: "40px",
        customIconFont: "initial"
      });

      var mes = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h3",
          { className: "text-success" },
          greenMes
        ),
        "The group session will start on ",
        _react2.default.createElement(
          "u",
          null,
          _time.Time.getString(gs.start_time)
        ),
        " ",
        "(Your local time)",
        _react2.default.createElement(
          "h3",
          { className: "text-primary" },
          "Whats Next?"
        ),
        list
      );

      // kkena tutup takut student boleh join 2 kali
      layoutActions.storeHideFocusCard();

      hallAction.storeLoadActivity([hallAction.ActivityType.GROUP_SESSION_JOIN]);
      (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, null, this.props.company_id);
      layoutActions.customBlockLoader(mes, "Got It!", function () {
        layoutActions.storeHideBlockLoader();
      }, undefined, true);
    }
  }, {
    key: "successHandlerForValidation",
    value: function successHandlerForValidation() {
      var _this11 = this;

      // var e = this.state.eventForValidation;
      // var id = e.currentTarget.dataset.id;
      var id = this.state.currentId;
      var d = {};
      d[_dbConfig.GroupSessionJoin.USER_ID] = this.props.user_id;
      d[_dbConfig.GroupSessionJoin.GROUP_SESSION_ID] = Number.parseInt(id);
      console.log(d);

      layoutActions.loadingBlockLoader("Joining... Please Wait");

      // 1. backed validation check if still has space
      //var query = `query{group_session (ID:${id}){joiners{ID} limit_join start_time }}`;
      var query = "query{group_session (ID:" + id + "){joiners{ID} start_time }}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var gs = res.data.data.group_session;

        var err = activityActions.invalidJoinGroupSession(id);
        if (err !== false) {
          _this11.openWhatsNextAlert(gs, "You Already Joined This Session!");
          return;
        }

        // remove limit join group session
        //var err = activityActions.invalidJoinGroupSession(this.props.company_id)

        // remove limit
        // if (gs.joiners.length >= gs.limit_join) {
        //     var mes = `Sorry. Only ${gs.limit_join} students are allowed to join in one session. Please choose another session`;
        //     layoutActions.errorBlockLoader(mes);
        //     return;
        // }

        // 2. add to db
        var query = "mutation { add_group_session_join \n        (" + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + "){ID}}";

        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          _this11.openWhatsNextAlert(gs, "Successfully Joined!");
          // console.log(res.data.data.add_group_session_join);
          // var mes = <div>
          //     <h3 className="text-success">Successfully Joined!</h3>
          //     The group session will start on <u>{Time.getString(gs.start_time)}</u>  (Your local time)
          //     <br></br>
          //     <h3 className="text-primary">Whats Next?</h3>
          //     You will be notified (through email) an hour before the session started.
          //     </div>;
          // hallAction.storeLoadActivity([hallAction.ActivityType.GROUP_SESSION_JOIN]);
          // emitHallActivity(hallAction.ActivityType.GROUP_SESSION_JOIN, null, this.props.company_id);
          // layoutActions.customBlockLoader(mes, "Got It!");
          // layoutActions.storeHideFocusCard();
        });
      });
    }
  }, {
    key: "joinGroupSession",
    value: function joinGroupSession(ev) {
      var id = ev.currentTarget.dataset.id;
      this.setState(function (prevState) {
        return {
          isHiddenValidation: false,
          keyValidation: new Date().getTime(),
          currentId: id
        };
      });
    }
  }, {
    key: "startVideoCall",
    value: function startVideoCall(e) {
      var _this12 = this;

      var id = e.currentTarget.dataset.id;
      id = Number.parseInt(id);

      var start_time = e.currentTarget.dataset.start_time;
      start_time = Number.parseInt(start_time);

      var joiners = e.currentTarget.dataset.joiners;
      joiners = JSON.parse(joiners);

      var recDoStart = function recDoStart(join_url, start_url) {
        var updateData = {};
        updateData[_dbConfig.GroupSession.ID] = id;
        updateData[_dbConfig.GroupSession.JOIN_URL] = join_url;
        updateData[_dbConfig.GroupSession.START_URL] = start_url;
        updateData[_dbConfig.GroupSession.UPDATED_BY] = _this12.authUser.ID;

        // update group session with join_url data
        var query = "mutation { edit_group_session \n                (" + (0, _graphqlObj2arg2.default)(updateData, { noOuterBraces: true }) + ")\n                {ID}\n            }";

        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          // emit to joiners to reload group session dorang
          for (var i in joiners) {
            (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, joiners[i], null);
          }

          layoutActions.storeHideBlockLoader();

          _this12.loadData();
        });
      };

      var confirmCreateWithGruveo = function confirmCreateWithGruveo() {
        var url = (0, _chat.createGruveoLink)(id, true);
        (0, _chat.addLogCreateCall)({ isGruveo: true, group_session_id: id, url: url });
        recDoStart(url, url);
        window.open(url);
      };

      var confirmCreateWithZoom = function confirmCreateWithZoom() {
        (0, _chat.addLogCreateCall)({ isZoom: true, group_session_id: id });

        layoutActions.loadingBlockLoader("Creating Video Call Session. Please Do Not Close Window.");
        var successInterceptor = function successInterceptor(data) {
          /*
                  {"uuid":"bou80/LrR6a0cmDKC4V5aA=="
                  ,"id":646923659,"host_id":"-9e--206RFiZFE0hSh-RPQ"
                  ,"topic":"Let's start a video call."
                  ,"password":"","h323_password":""
                  ,"status":0,"option_jbh":false
                  ,"option_start_type":"video"
                  ,"option_host_video":true,"option_participants_video":true
                  ,"option_cn_meeting":false,"option_enforce_login":false
                  ,"option_enforce_login_domains":"","option_in_meeting":false
                  ,"option_audio":"both","option_alternative_hosts":""
                  ,"option_use_pmi":false,"type":1,"start_time":""
                  ,"duration":0,"timezone":"America/Los_Angeles"
                  ,"start_url":"https://zoom.us/s/646923659?zpk=NcbawuQ7mSE9jfEBdcGMfwxumZzC21eWgm2v6bQ9S6k.AwckNGQwMWY3NWQtNDZhMC00MzU2LTg0M2MtNGVlNWI1MmUzOWY5Fi05ZS0tMjA2UkZpWkZFMGhTaC1SUFEWLTllLS0yMDZSRmlaRkUwaFNoLVJQURJ0ZXN0LnJlY0BnbWFpbC5jb21jAHBTRm01T3I3ZVprU0RGczJCeVRFTlZ5N1k0cE1Zcm5scFF5R3pQZ2RLQjY4LkJnUWdVMDVMU1U1cGNFVmpWeTlESzB0NVVGRm5SbWx3YnpNNFRFNVdWSGxZWjJrQUFBd3pRMEpCZFc5cFdWTXpjejBBAAAWcDF2Skd0YUJRV3k0WC15NzVGRmVtQQIBAQA"
                  ,"join_url":"https://zoom.us/j/646923659","created_at":"2018-01-31T02:08:02Z"}
                  */

          if (data == null || data == "" || (typeof data === "undefined" ? "undefined" : _typeof(data)) != "object") {
            layoutActions.errorBlockLoader("Failed to create video call session. Please check your internet connection");
            return;
          }

          console.log("success createVideoCall", data);
          var body = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              "h4",
              { className: "text-primary" },
              "Successfully Created Video Call Session"
            ),
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "a",
              {
                href: data.start_url,
                target: "_blank",
                className: "btn btn-success btn-lg",
                onClick: function onClick() {
                  recDoStart(data.join_url, data.start_url);
                }
              },
              "Start Video Call"
            )
          );
          layoutActions.customBlockLoader(body, null, null, null);
        };

        var data = {
          query: "create_meeting",
          host_id: _this12.authUser.ID,
          group_session_id: id
        };

        (0, _apiHelper.getWpAjaxAxios)("wzs21_zoom_ajax", data, successInterceptor, true);
      };

      // New Gruveo
      // choose between zoom or chrome
      var recConfirmCreate = function recConfirmCreate() {
        if (_appConfig.IsGruveoEnable) {
          var width = "100px";
          var v = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "div",
              {
                onClick: function onClick() {
                  confirmCreateWithGruveo();
                },
                style: { width: width },
                className: "btn btn-blue"
              },
              "Chrome"
            ),
            _react2.default.createElement(
              "div",
              {
                onClick: function onClick() {
                  confirmCreateWithZoom();
                },
                style: { width: width },
                className: "btn btn-blue"
              },
              "Zoom"
            )
          );
          layoutActions.customViewBlockLoader("Create Video Call With", v);
        } else {
          confirmCreateWithZoom();
        }
      };

      // open confirmation if time now is less than start time
      if (_time.Time.getUnixTimestampNow() < start_time) {
        var title = _react2.default.createElement(
          "div",
          null,
          "It is not the time yet",
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "small",
            null,
            "This session was scheduled on",
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "u",
              null,
              _time.Time.getString(start_time)
            ),
            _react2.default.createElement("br", null),
            "Continue to start video call now?"
          )
        );
        layoutActions.confirmBlockLoader(title, function () {
          recConfirmCreate();
        });
      } else {
        recConfirmCreate();
      }
    }
  }, {
    key: "createAddNewGs",
    value: function createAddNewGs() {
      var _this13 = this;

      var onClick = function onClick() {
        layoutActions.storeUpdateFocusCard("Schedule New Group Session", NewGroupSessionPopup, {
          data: _this13.state.data,
          company_id: _this13.props.company_id,
          finishAdd: function finishAdd() {
            _this13.loadData();
          }
        });
      };

      return _react2.default.createElement(
        "div",
        { className: "gs-company add", onClick: onClick },
        _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement("i", { className: "fa fa-plus fa-3x" })
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _this14 = this;

      var view = _react2.default.createElement(_loader.Loader, { size: "2", text: "Loading Group Session..." });
      if (!this.state.loading) {
        view = this.createView(this.state.data);
      }

      var header = null;
      if (this.props.forStudent) {
        header = _react2.default.createElement(
          "h3",
          { style: { marginTop: "10px" } },
          _react2.default.createElement(
            "small",
            null,
            "Join A Group Session"
          )
        );
        view = [view];
        view.push(_react2.default.createElement(_validationStudentAction2.default, {
          source: _validationStudentAction.ValidationSource.GROUP_SESSION,
          key: this.state.keyValidation,
          isHidden: this.state.isHiddenValidation,
          successHandler: function successHandler() {
            _this14.successHandlerForValidation();
          }
        }));
      }

      if (this.props.forRec) {
        header = _react2.default.createElement(
          "h3",
          {
            onClick: function onClick() {
              _this14.loadData();
            }
          },
          _react2.default.createElement(
            "a",
            { className: "btn-link" },
            "Group Session"
          )
        );
      }

      return _react2.default.createElement(
        "div",
        null,
        header,
        view
      );
    }
  }]);

  return GroupSessionClass;
}(_react2.default.Component);

// TODO status online


function mapStateToProps(state, ownProps) {
  return {
    online_users: state.user.online_users
  };
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)({
    //loadActivity: hallAction.loadActivity
  }, dispatch);
}

GroupSessionClass.propTypes = {
  company_id: _propTypes2.default.number.isRequired,
  user_id: _propTypes2.default.number,
  forRec: _propTypes2.default.bool,
  forStudent: _propTypes2.default.bool
};

GroupSessionClass.defaultProps = {
  user_id: null,
  forRec: false,
  forStudent: false
};

var GroupSessionView = exports.GroupSessionView = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(GroupSessionClass);

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _time = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../css/timer.scss');

var Timer = function (_React$Component) {
    _inherits(Timer, _React$Component);

    function Timer(props) {
        _classCallCheck(this, Timer);

        var _this = _possibleConstructorReturn(this, (Timer.__proto__ || Object.getPrototypeOf(Timer)).call(this, props));

        _this.getItem = _this.getItem.bind(_this);
        _this.getSeparator = _this.getSeparator.bind(_this);
        _this.startCountdown = _this.startCountdown.bind(_this);
        _this.state = {
            days: 0,
            hours: 0,
            minutes: 0,
            seconds: 0,
            done: false
        };
        return _this;
    }

    _createClass(Timer, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            if (this.props.end == null) {
                return;
            }
            this.endUnix = _time.Time.convertDBTimeToUnix(this.props.end);
            this.timer = setInterval(this.startCountdown, 1000);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.props.end == null) {
                return;
            }
            clearInterval(this.timer);
        }
    }, {
        key: 'startCountdown',
        value: function startCountdown() {
            var now = _time.Time.getUnixTimestampNow();
            var distance = (this.endUnix - now) * 1000;

            if (distance < 0) {
                clearInterval(this.timer);

                this.setState(function () {
                    return {
                        days: 0,
                        hours: 0,
                        minutes: 0,
                        seconds: 0,
                        done: true
                    };
                });
            } else {
                //Less than 5 hours, will use .closer styling
                if (distance < 17999352) {
                    //dom.addClass("closer");
                }

                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
                var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));
                var seconds = Math.floor(distance % (1000 * 60) / 1000);

                this.setState(function () {
                    return {
                        days: days,
                        hours: hours,
                        minutes: minutes,
                        seconds: seconds
                    };
                });
            }
        }
    }, {
        key: 'getItem',
        value: function getItem(value, label) {

            if (value < 10) {
                value = "0" + value;
            }

            return _react2.default.createElement(
                'div',
                { className: 'timer_item' },
                _react2.default.createElement(
                    'div',
                    { className: 'timer_value' },
                    value
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'timer_label' },
                    label
                )
            );
        }
    }, {
        key: 'getSeparator',
        value: function getSeparator(separator) {
            return _react2.default.createElement(
                'div',
                { className: 'seperator' },
                separator
            );
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.props.end == null) {
                return null;
            }
            var view = null;
            if (this.state.done) {
                view = this.props.doneMes;
            } else {
                view = _react2.default.createElement(
                    'div',
                    { id: 'timer', className: 'text-center ' + this.props.type },
                    _react2.default.createElement(
                        'div',
                        { className: 'timer_title' },
                        this.props.title
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'timer_time' },
                        this.getItem(this.state.days, "DAYS"),
                        this.getSeparator(":"),
                        this.getItem(this.state.hours, "HOURS"),
                        this.getSeparator(":"),
                        this.getItem(this.state.minutes, "MINUTES"),
                        this.getSeparator(":"),
                        this.getItem(this.state.seconds, "SECONDS")
                    )
                );
            }
            return _react2.default.createElement(
                'div',
                { className: 'timer' },
                view
            );
        }
    }]);

    return Timer;
}(_react2.default.Component);

exports.default = Timer;


Timer.propTypes = {
    end: _propTypes2.default.any.isRequired,
    showDate: _propTypes2.default.bool,
    title: _propTypes2.default.string,
    type: _propTypes2.default.string,
    doneMes: _propTypes2.default.any
};

Timer.defaultProps = {
    doneMes: null,
    showDate: true,
    type: ""
};

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.getCFTimeDetail = getCFTimeDetail;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _sponsorList = __webpack_require__(112);

var _sponsorList2 = _interopRequireDefault(_sponsorList);

var _authActions = __webpack_require__(2);

var _hallActions = __webpack_require__(21);

var _layoutActions = __webpack_require__(6);

var _time = __webpack_require__(9);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _timer = __webpack_require__(179);

var _timer2 = _interopRequireDefault(_timer);

var _apiHelper = __webpack_require__(3);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _dbConfig = __webpack_require__(5);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

var _companiesAdmin = __webpack_require__(82);

var _companies = __webpack_require__(91);

var _companies2 = _interopRequireDefault(_companies);

var _hall = __webpack_require__(289);

var _hall2 = _interopRequireDefault(_hall);

var _hallOld = __webpack_require__(293);

var _hallOld2 = _interopRequireDefault(_hallOld);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function getCFTimeDetail(date, time, time_mas) {
    return _react2.default.createElement(
        'span',
        null,
        typeof date === "undefined" || date == null ? null : _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement('i', { className: 'fa fa-calendar left' }),
            date
        ),
        _react2.default.createElement('br', null),
        _react2.default.createElement(
            'span',
            { style: { opacity: "0.8", fontSize: "90%" } },
            typeof time === "undefined" || time == null ? null : _react2.default.createElement(
                'span',
                null,
                _react2.default.createElement('i', { className: 'fa fa-clock-o left' }),
                time
            ),
            _react2.default.createElement('br', null),
            typeof time_mas === "undefined" || time_mas == null ? null : _react2.default.createElement(
                'span',
                null,
                _react2.default.createElement('i', { className: 'fa fa-clock-o left' }),
                time_mas
            )
        )
    );
}

var RegisterPS = function (_React$Component) {
    _inherits(RegisterPS, _React$Component);

    function RegisterPS(props) {
        _classCallCheck(this, RegisterPS);

        var _this = _possibleConstructorReturn(this, (RegisterPS.__proto__ || Object.getPrototypeOf(RegisterPS)).call(this, props));

        _this.CF = (0, _authActions.getCF)();
        _this.user_id = (0, _authActions.getAuthUser)().ID;

        _this.state = {
            coms: null,
            user_data: null,
            loading: true,
            disableSubmit: false,
            error: null,
            success: null,
            hasResume: false,
            defaultValues: {}
        };

        _this.formOnSubmit = _this.formOnSubmit.bind(_this);
        return _this;
    }

    _createClass(RegisterPS, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            var coms = false;
            var user_data = false;

            var finishLoad = function finishLoad() {
                if (coms !== false && user_data !== false) {
                    _this2.setState(function () {

                        // create form default value
                        var defaultValues = {};
                        defaultValues[_dbConfig.Prescreen.COMPANY_ID] = user_data.registered_prescreens.map(function (d, i) {
                            return d.company_id;
                        });

                        //check if has resume
                        var hasResume = false;
                        user_data.doc_links.map(function (d, i) {
                            var label = d.label.replaceAll(" ", "");
                            if (label.toUpperCase() == "RESUME") {
                                hasResume = true;
                            }
                        });

                        return {
                            coms: coms,
                            user_data: user_data,
                            defaultValues: defaultValues,
                            hasResume: hasResume,
                            loading: false
                        };
                    });
                }
            };
            //load coms
            (0, _apiHelper.getAxiosGraphQLQuery)('query{companies(accept_prescreen:1){ID name}}').then(function (res) {
                coms = res.data.data.companies;
                finishLoad();
            });

            //load student 
            (0, _apiHelper.getAxiosGraphQLQuery)('query{user(ID:' + this.user_id + ')\n            { doc_links{label} registered_prescreens{ID company_id status} }}').then(function (res) {
                user_data = res.data.data.user;
                finishLoad();
            });
        }
    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            var _this3 = this;

            // check if has resume
            if (!this.state.hasResume) {
                var link = _react2.default.createElement(
                    _reactRouterDom.NavLink,
                    { onClick: function onClick() {
                            (0, _layoutActions.storeHideBlockLoader)();
                        },
                        to: _appConfig.RootPath + '/app/edit-profile/doc-link' },
                    'Document & Link'
                );

                var mes = _react2.default.createElement(
                    'div',
                    null,
                    'Please upload a document with label ',
                    _react2.default.createElement(
                        'b',
                        null,
                        '"Resume"'
                    ),
                    ' at ',
                    link,
                    " ",
                    ' before registering for pre-screens'
                );

                (0, _layoutActions.errorBlockLoader)(mes);
                return;
            }

            //start loading
            (0, _form.toggleSubmit)(this, { error: null, success: null });

            var existed = this.state.defaultValues[_dbConfig.Prescreen.COMPANY_ID];
            var newCom = "";
            var toInsert = 0;
            var inserted = [];
            var finishInsert = function finishInsert(company_id) {
                inserted.push(company_id);
                if (inserted.length >= toInsert) {
                    // finish loading and add inserted company to state
                    _this3.setState(function (prevState) {
                        // concat inserted company to state default values
                        prevState.defaultValues[_dbConfig.Prescreen.COMPANY_ID] = prevState.defaultValues[_dbConfig.Prescreen.COMPANY_ID].concat(inserted);
                        return {
                            disableSubmit: false,
                            success: 'Successfully submitted resume for ' + inserted.length + ' company(s)',
                            defaultValues: prevState.defaultValues,
                            error: null
                        };
                    });
                }
            };

            // try insert
            if (typeof d.company_id !== "undefined") {
                d.company_id.map(function (cid, i) {
                    cid = Number.parseInt(cid);
                    // if not aleary exist then insert
                    if (existed.indexOf(cid) < 0) {
                        toInsert++;
                        var ins = {};
                        ins[_dbConfig.Prescreen.STUDENT_ID] = _this3.user_id;
                        ins[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_PENDING;
                        ins[_dbConfig.Prescreen.COMPANY_ID] = cid;
                        ins[_dbConfig.Prescreen.SPECIAL_TYPE] = _dbConfig.PrescreenEnum.ST_PRE_SCREEN;
                        ins[_dbConfig.Prescreen.UPDATED_BY] = _this3.user_id;

                        var insert = 'mutation{add_prescreen(' + (0, _graphqlObj2arg2.default)(ins, { noOuterBraces: true }) + '){company_id}}';
                        console.log(insert);
                        (0, _apiHelper.getAxiosGraphQLQuery)(insert).then(function (res) {
                            finishInsert(res.data.data.add_prescreen.company_id);
                        });
                    }
                });
            }

            // empty new choice
            if (toInsert == 0) {
                (0, _form.toggleSubmit)(this, { error: "Please select new company(s) to register" });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var view = null;

            if (this.state.loading) {
                view = _react2.default.createElement(_loader.Loader, { size: '2', text: 'Loading Prescreen Companies..' });
            } else {
                // view = JSON.stringify(this.state.coms);
                // view += JSON.stringify(this.state.reg_ps);

                // create form item
                var dataComs = this.state.coms.map(function (d, i) {
                    return { key: d.ID, label: (0, _companiesAdmin.createCompanyTitle)(d) };
                });

                if (dataComs.length <= 0) {
                    return null;
                } else {
                    var formItems = [{ header: "Select Company To Submit Resume" }, {
                        name: _dbConfig.Prescreen.COMPANY_ID,
                        type: "checkbox",
                        data: dataComs,
                        disabledOnChecked: _react2.default.createElement(
                            'span',
                            { className: 'label label-success label-pill' },
                            'Registered'
                        )
                    }];
                    console.log(this.state);
                    view = _react2.default.createElement(_form2.default, { className: 'form-row',
                        items: formItems,
                        onSubmit: this.formOnSubmit,
                        btnColorClass: 'blue btn-block',
                        submitText: 'Submit Resume',
                        defaultValues: this.state.defaultValues,
                        disableSubmit: this.state.disableSubmit,
                        error: this.state.error,
                        success: this.state.success });
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'card-container' },
                _react2.default.createElement(
                    'h3',
                    null,
                    'Submit Your Resume'
                ),
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                    'div',
                    { style: { maxWidth: "400px", margin: "auto" } },
                    'Get reviewed earlier before the career fair!',
                    _react2.default.createElement('br', null),
                    'Submit, and wait for confirmation for special time slot with recruiters if you are selected.'
                ),
                _react2.default.createElement('br', null),
                view
            );
        }
    }]);

    return RegisterPS;
}(_react2.default.Component);

var ComingSoonPage = function (_React$Component2) {
    _inherits(ComingSoonPage, _React$Component2);

    function ComingSoonPage(props) {
        _classCallCheck(this, ComingSoonPage);

        var _this4 = _possibleConstructorReturn(this, (ComingSoonPage.__proto__ || Object.getPrototypeOf(ComingSoonPage)).call(this, props));

        _this4.CFObj = (0, _authActions.getCFObj)();
        return _this4;
    }

    _createClass(ComingSoonPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            if ((0, _authActions.isRoleStudent)()) {
                (0, _hallActions.storeLoadActivity)(_hallActions.ActivityType.GROUP_SESSION_JOIN);
            }
            this.dateStr = _time.Time.getPeriodString(this.CFObj.start, this.CFObj.end, this.CFObj.dates);
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Coming Soon");
            var doneMes = _react2.default.createElement(
                'div',
                null,
                'Virtual Career Fair Starting Now',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                    'small',
                    null,
                    'Please Refresh Your Page'
                ),
                _react2.default.createElement('br', null)
            );
            //{isRoleStudent() ? <RegisterPS></RegisterPS> : null}
            var companySection = null;
            if ((0, _authActions.isRoleStudent)()) {
                companySection = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement('div', { className: 'line' }),
                    _react2.default.createElement(
                        'div',
                        null,
                        _react2.default.createElement(
                            'div',
                            { style: { maxWidth: "400px", margin: "auto" } },
                            _react2.default.createElement(
                                'h3',
                                null,
                                'Submit Your Resume'
                            ),
                            _react2.default.createElement(
                                'div',
                                null,
                                'Get reviewed early!',
                                _react2.default.createElement('br', null),
                                'Submit and receive confirmation for special time slot with recruiters if you are selected.'
                            )
                        ),
                        _react2.default.createElement(
                            'div',
                            { style: { maxWidth: "400px", margin: "auto" } },
                            _react2.default.createElement(
                                'h3',
                                null,
                                'Join Group Session'
                            ),
                            _react2.default.createElement(
                                'div',
                                null,
                                'Don\u2019t forget to keep checking for',
                                _react2.default.createElement('br', null),
                                'new group session time slots to join!'
                            )
                        ),
                        _react2.default.createElement('br', null)
                    ),
                    _react2.default.createElement(_companies2.default, { isPreEvent: true }),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement('div', { className: 'line' }),
                    _react2.default.createElement(_sponsorList2.default, { type: 'coming-soon' })
                );
            }

            var recHall = null;
            if ((0, _authActions.isRoleRec)()) {
                if (_appConfig.IsNewHall) {
                    recHall = _react2.default.createElement(_hall2.default, { isPreEvent: true });
                } else {
                    recHall = _react2.default.createElement(_hallOld2.default, { isPreEvent: true });
                }
                //recHall = <HallPage isPreEvent={true}></HallPage> 
            }

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h1',
                    null,
                    _react2.default.createElement(
                        'small',
                        null,
                        'Coming Soon'
                    ),
                    _react2.default.createElement('br', null),
                    this.CFObj.title,
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        getCFTimeDetail(this.dateStr, this.CFObj.time_str, this.CFObj.time_str_mas)
                    )
                ),
                _react2.default.createElement(_timer2.default, { end: this.CFObj.start, doneMes: doneMes }),
                companySection,
                recHall
            );
        }
    }]);

    return ComingSoonPage;
}(_react2.default.Component);

exports.default = ComingSoonPage;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _dbConfig = __webpack_require__(5);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _profileCard = __webpack_require__(13);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _authActions = __webpack_require__(2);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _users = __webpack_require__(27);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _loader = __webpack_require__(8);

var _scheduledInterview = __webpack_require__(28);

var _feedback = __webpack_require__(57);

var _generalForm = __webpack_require__(23);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../css/forum.scss');

var OFFSET_COMMENT = 10;
var OFFSET_REPLY = 2;

var USER_SELECT = 'user{\n    ID\n    first_name\n    role\n    last_name\n    img_url\n    img_pos\n    img_size }';

//##########################################################################################
// ## Helper Function Start

var addNewForumItem = function addNewForumItem(type, entity_id, content, is_owner, success) {
    var ins = {
        user_id: (0, _authActions.getAuthUser)().ID,
        content: content,
        is_owner: is_owner ? 1 : 0
    };

    if (type == "comment") {
        ins["forum_id"] = entity_id;
    } else if (type == "reply") {
        ins["comment_id"] = typeof entity_id != "number" ? Number.parseInt(entity_id) : entity_id;
    }

    var query = 'mutation{ add_forum_' + type + ' (' + (0, _graphqlObj2arg2.default)(ins, { noOuterBraces: true }) + ') {\n        ID content is_owner created_at } }';

    (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var r = res.data.data['add_forum_' + type];
        var authUser = (0, _authActions.getAuthUser)();
        r.user = {
            ID: authUser.ID,
            img_pos: authUser.img_pos,
            img_size: authUser.img_size,
            img_url: authUser.img_url,
            first_name: authUser.first_name,
            last_name: authUser.last_name
        };
        success(r);
    });
};

var renderForumItem = function renderForumItem(d) {
    var is_reply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var toogleAddReply = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    var onCommentDeleted = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var isForumOwner = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

    var user_title = d.user.role === _dbConfig.UserEnum.ROLE_STUDENT && (0, _authActions.isRoleRec)() ? (0, _users.createUserTitle)(d.user) : d.user.first_name + " " + d.user.last_name;

    return _react2.default.createElement(ForumItem, {
        isForumOwner: isForumOwner,
        onCommentDeleted: onCommentDeleted,
        toogleAddReply: toogleAddReply,
        raw_data: d,
        id: d.ID,
        user_title: user_title,
        img_url: d.user.img_url,
        img_pos: d.user.img_pos,
        user_id: d.user.ID,
        is_reply: is_reply,
        img_size: d.user.img_size,
        timestamp: _time.Time.getAgo(d.created_at),
        content: d.content,
        key: (is_reply ? "reply" : "comment") + '::' + d.ID });
};

//##########################################################################################

var ForumTextarea = function (_React$Component) {
    _inherits(ForumTextarea, _React$Component);

    function ForumTextarea(props) {
        _classCallCheck(this, ForumTextarea);

        var _this = _possibleConstructorReturn(this, (ForumTextarea.__proto__ || Object.getPrototypeOf(ForumTextarea)).call(this, props));

        _this.wordLimit = 450;
        _this.state = {
            count: 0
        };
        return _this;
    }

    _createClass(ForumTextarea, [{
        key: 'setWordCount',
        value: function setWordCount(count) {
            this.setState(function () {
                return { count: count };
            });
        }
    }, {
        key: 'getWordLeft',
        value: function getWordLeft() {
            return this.wordLimit - this.state.count;
        }
    }, {
        key: 'isWordExceed',
        value: function isWordExceed() {
            return this.getWordLeft() < 0;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var limit = _react2.default.createElement(
                'div',
                { className: 'frm-txt-count ' + (this.isWordExceed() ? "text-red" : "") },
                this.getWordLeft()
            );

            return _react2.default.createElement(
                'div',
                { className: 'forum-textarea-' + this.props.type },
                _react2.default.createElement('textarea', { ref: function ref(v) {
                        return _this2.props.parentClass.textarea = v;
                    },
                    className: 'form-control input-sm',
                    onKeyUp: function onKeyUp(ev) {
                        _this2.setWordCount(_this2.props.parentClass.textarea.value.length);
                    },
                    rows: this.props.type == "comment" ? "4" : "3",
                    placeholder: this.props.type == "comment" ? "Add New Question or Comment." : "Add New Reply.",
                    name: this.props.name }),
                _react2.default.createElement(
                    'button',
                    { ref: function ref(v) {
                            return _this2.props.parentClass.submit_btn = v;
                        },
                        className: 'btn btn-sm btn-blue',
                        onClick: function onClick() {
                            var v = _this2.props.parentClass.textarea.value;
                            if (v === "" || v === null || _this2.isWordExceed()) {
                                _this2.props.parentClass.textarea.focus();
                                return;
                            }
                            _this2.setWordCount(0);
                            _this2.props.onSubmit();
                        } },
                    'Submit'
                ),
                limit
            );
        }
    }]);

    return ForumTextarea;
}(_react2.default.Component);

ForumTextarea.propTypes = {
    parentClass: _propTypes2.default.any.isRequired,
    type: _propTypes2.default.oneOf(["comment", "reply"]).isRequired,
    name: _propTypes2.default.string.isRequired,
    onSubmit: _propTypes2.default.func.isRequired
};

var renderTextAreaForumItem = function renderTextAreaForumItem(type, name, parentClass, onSubmit) {
    return _react2.default.createElement(ForumTextarea, { type: type, name: name, parentClass: parentClass, onSubmit: onSubmit });
};

//##########################################################################################
// This class to create forum item element
// whether it is comment or reply
var ForumItem = function (_React$Component2) {
    _inherits(ForumItem, _React$Component2);

    function ForumItem(props) {
        _classCallCheck(this, ForumItem);

        var _this3 = _possibleConstructorReturn(this, (ForumItem.__proto__ || Object.getPrototypeOf(ForumItem)).call(this, props));

        _this3.isMine = _this3.props.user_id == (0, _authActions.getAuthUser)().ID;
        _this3.openEditPopup = _this3.openEditPopup.bind(_this3);
        _this3.openDeletePopup = _this3.openDeletePopup.bind(_this3);

        _this3.entity = _this3.props.is_reply ? "forum_reply" : "forum_comment";
        _this3.entity_singular = _this3.props.is_reply ? "Reply" : "Comment";

        _this3.state = {
            showReply: false,
            content: _this3.props.content,
            deleted: false
        };

        _this3.authUser = (0, _authActions.getAuthUser)();

        _this3.role = _this3.props.raw_data.user.role;

        return _this3;
    }

    _createClass(ForumItem, [{
        key: 'openEditPopup',
        value: function openEditPopup() {
            var _this4 = this;

            var formItems = [{ "header": "Editing Comment" }, {
                name: "content",
                type: "textarea",
                required: true
            }];

            var formDefault = { content: this.state.content };

            var willSubmit = function willSubmit(d) {
                d.ID = _this4.props.id;
                return d;
            };

            var onSuccess = function onSuccess(d) {
                _this4.setState(function (prevState) {
                    return { content: d.content };
                });
            };

            (0, _generalForm.openEditPopup)(this.props.id, this.entity, this.entity_singular, formItems, formDefault, willSubmit, onSuccess);
        }
    }, {
        key: 'openDeletePopup',
        value: function openDeletePopup() {
            var _this5 = this;

            var onSuccess = function onSuccess(d) {
                // if the item is comment,
                // then run the parents' handler for delete
                if (!_this5.props.is_reply && _this5.props.onCommentDeleted) {
                    _this5.props.onCommentDeleted();
                }
                // for reply, just set deleted to true
                else {
                        _this5.setState(function (prevState) {
                            return { deleted: true };
                        });
                    }
            };

            (0, _generalForm.openDeletePopup)(this.props.id, this.entity, onSuccess);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            if (this.state.deleted) {
                return null;
            }

            var img_dimension = this.props.is_reply ? "30px" : "45px";
            var imgView = (0, _profileCard.createImageElement)(this.props.img_url, this.props.img_pos, this.props.img_size, img_dimension, "frm-image");

            var className = 'forum ' + (this.props.is_reply ? "frm-reply" : "");

            //createAction
            var action = [_react2.default.createElement(
                'span',
                { className: 'frm-action' },
                this.props.timestamp
            )];
            if (this.isMine) {
                action.push(_react2.default.createElement(
                    'a',
                    { onClick: this.openEditPopup, className: 'frm-action' },
                    'Edit'
                ));
                // remove delete
                //action.push(<a onClick={this.openDeletePopup} className="frm-action">Delete</a>);
            }
            if (!this.props.is_reply) {
                action.push(_react2.default.createElement(
                    'a',
                    { className: 'frm-action',
                        onClick: function onClick() {
                            _this6.setState(function (prevState) {
                                return { showReply: !prevState.showReply };
                            });
                            _this6.props.toogleAddReply();
                        } },
                    this.state.showReply ? "Hide Reply" : "Reply"
                ));
            }

            // schedule for interview action
            if (this.props.isForumOwner && this.role === _dbConfig.UserEnum.ROLE_STUDENT && false) {
                action.push(_react2.default.createElement(
                    'a',
                    { className: 'frm-action',
                        onClick: function onClick() {
                            (0, _scheduledInterview.openSIAddForm)(_this6.props.user_id, _this6.authUser.rec_company, _dbConfig.PrescreenEnum.ST_FORUM);
                        } },
                    'Schedule For Session'
                ));
            }

            // add forum owner highlights
            // in db
            var owner = this.props.raw_data.is_owner ? _react2.default.createElement(_tooltip2.default, {
                bottom: '19px',
                left: '-65px',
                width: '140px',
                alignCenter: true,
                content: _react2.default.createElement('i', { style: { color: "#23527c" }, className: 'fa left fa-shield' }),
                tooltip: 'Company\'s Recruiter' }) : null;

            return _react2.default.createElement(
                'div',
                { key: this.props.key,
                    className: className },
                imgView,
                _react2.default.createElement(
                    'div',
                    { className: 'frm-body' },
                    _react2.default.createElement(
                        'div',
                        { className: 'frm-title' },
                        owner,
                        this.props.user_title
                    ),
                    _react2.default.createElement(
                        'p',
                        { className: 'frm-content' },
                        this.state.content
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'frm-timestamp' },
                        action
                    )
                )
            );
        }
    }]);

    return ForumItem;
}(_react2.default.Component);

ForumItem.propTypes = {
    isForumOwner: _propTypes2.default.bool.isRequired,
    onCommentDeleted: _propTypes2.default.func,
    toogleAddReply: _propTypes2.default.func,
    raw_data: _propTypes2.default.object.isRequired,
    user_title: _propTypes2.default.any.isRequired,
    id: _propTypes2.default.any.isRequired,
    user_id: _propTypes2.default.any.isRequired,
    subtitle: _propTypes2.default.any.isRequired,
    content: _propTypes2.default.string.isRequired,
    img_url: _propTypes2.default.any.isRequired,
    img_pos: _propTypes2.default.any.isRequired,
    img_size: _propTypes2.default.any.isRequired,
    is_reply: _propTypes2.default.bool.isRequired,
    key: _propTypes2.default.string.isRequired
};

//####################################################################
// ForumCommentItem
// this class will generate
// a new list of replies under it

var ForumCommentItem = function (_React$Component3) {
    _inherits(ForumCommentItem, _React$Component3);

    function ForumCommentItem(props) {
        _classCallCheck(this, ForumCommentItem);

        var _this7 = _possibleConstructorReturn(this, (ForumCommentItem.__proto__ || Object.getPrototypeOf(ForumCommentItem)).call(this, props));

        _this7.loadData = _this7.loadData.bind(_this7);
        _this7.getDataFromRes = _this7.getDataFromRes.bind(_this7);
        _this7.renderList = _this7.renderList.bind(_this7);
        _this7.toogleTextarea = _this7.toogleTextarea.bind(_this7);
        _this7.onCommentDeleted = _this7.onCommentDeleted.bind(_this7);
        _this7.offset = OFFSET_REPLY;

        // in state preItem,
        // texarea is at index no 1
        _this7.TEXTAREA_INDEX = 1;

        _this7.commentItem = renderForumItem(_this7.props.data, false, _this7.toogleTextarea, _this7.onCommentDeleted, _this7.props.isForumOwner);
        _this7.textareaItem = renderTextAreaForumItem("reply", 'reply::' + _this7.props.id, _this7, function () {
            _this7.submit_btn.disabled = true;
            addNewForumItem("reply", _this7.props.id, _this7.textarea.value, _this7.props.isForumOwner, function (res) {
                _this7.submit_btn.disabled = false;
                _this7.textarea.value = "";
                // prepend new reply
                var newReply = renderForumItem(res, true, null, null, _this7.props.isForumOwner);
                _this7.setState(function (prevState) {
                    var preItem = prevState.preItem;
                    preItem.push(newReply);
                    return { preItem: preItem };
                });
            });
        });

        _this7.state = {
            preItem: [_this7.commentItem],
            showTextarea: false,
            commentDeleted: false
        };
        _this7.isInit = true;
        return _this7;
    }

    _createClass(ForumCommentItem, [{
        key: 'onCommentDeleted',
        value: function onCommentDeleted() {
            this.setState(function () {
                return { commentDeleted: true };
            });
        }
    }, {
        key: 'toogleTextarea',
        value: function toogleTextarea() {
            var _this8 = this;

            this.setState(function (prevState) {

                var showTextarea = !prevState.showTextarea;
                if (showTextarea) {
                    prevState.preItem[_this8.TEXTAREA_INDEX] = _this8.textareaItem;
                } else {
                    prevState.preItem[_this8.TEXTAREA_INDEX] = null;
                }

                return { showTextarea: showTextarea, preItem: prevState.preItem };
            });
        }

        // ##############################################################
        // function for list

    }, {
        key: 'loadData',
        value: function loadData(page, offset) {
            var query = 'query{forum_replies(comment_id: "' + this.props.id + '",page:' + page + ',offset:' + offset + ') {\n            ID comment_id is_owner content\n            created_at ' + USER_SELECT + ' }}';
            return (0, _apiHelper.getAxiosGraphQLQuery)(query);
        }
    }, {
        key: 'getDataFromRes',
        value: function getDataFromRes(res) {
            return res.data.data.forum_replies;
        }

        // render replies

    }, {
        key: 'renderList',
        value: function renderList(d, i) {
            var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            var item = [];
            item.push(renderForumItem(d, true, null, null, this.props.isForumOwner));
            return item;
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.state.commentDeleted) {
                return null;
            }

            return _react2.default.createElement(_list2.default, {
                totalCount: this.props.data.replies_count,
                divClass: 'forum-comment',
                type: 'append-bottom',
                appendText: 'Load More Reply',
                showEmpty: false,
                getDataFromRes: this.getDataFromRes,
                loadData: this.loadData,
                extraData: this.state.preItem,
                offset: this.offset,
                renderList: this.renderList });
        }
    }]);

    return ForumCommentItem;
}(_react2.default.Component);

ForumCommentItem.propTypes = {
    isForumOwner: _propTypes2.default.bool.isRequired,
    id: _propTypes2.default.number.isRequired,
    i: _propTypes2.default.number.isRequired,
    data: _propTypes2.default.object.isRequired
};

//####################################################################
// ForumPage
// this class will generate
// list of ForumCommentItem

var ForumPage = function (_React$Component4) {
    _inherits(ForumPage, _React$Component4);

    function ForumPage(props) {
        _classCallCheck(this, ForumPage);

        var _this9 = _possibleConstructorReturn(this, (ForumPage.__proto__ || Object.getPrototypeOf(ForumPage)).call(this, props));

        try {
            _this9.forum_id = _this9.props.match.params.forum_id ? _this9.props.match.params.forum_id : _this9.props.forum_id;
        } catch (err) {
            _this9.forum_id = null;
        }

        // must be from my_forum
        if (typeof _this9.forum_id === "undefined" || _this9.forum_id == null) {
            _this9.forum_id = "company_" + (0, _authActions.getAuthUser)().rec_company;
        }

        // set in check forum Validity
        // owner comment/reply will be highlighted
        // can set interview
        _this9.isForumOwner = false;

        _this9.loadData = _this9.loadData.bind(_this9);
        _this9.reload = _this9.reload.bind(_this9);
        _this9.getDataFromRes = _this9.getDataFromRes.bind(_this9);
        _this9.addFeedToView = _this9.addFeedToView.bind(_this9);
        _this9.renderList = _this9.renderList.bind(_this9);
        _this9.getInitalPreItem = _this9.getInitalPreItem.bind(_this9);
        _this9.checkForumValidity = _this9.checkForumValidity.bind(_this9);
        _this9.offset = OFFSET_COMMENT;

        _this9.state = {
            loading: true,
            preItem: _this9.getInitalPreItem(),
            key: 1
        };

        _this9.type = null;
        _this9.params = {};
        return _this9;
    }

    _createClass(ForumPage, [{
        key: 'reload',
        value: function reload() {
            this.setState(function (prevState) {
                return { key: prevState.key + 1 };
            });
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            (0, _feedback.openFeedbackBlockRec)();
            this.customEmpty = _react2.default.createElement(
                'div',
                { className: 'text-center' },
                _react2.default.createElement(
                    'h4',
                    { className: 'text-muted' },
                    'No Question Posted Yet'
                )
            );

            this.invalid = _react2.default.createElement(
                'div',
                { className: 'text-center' },
                _react2.default.createElement(
                    'h4',
                    { className: 'text-muted' },
                    'Invalid Forum ID'
                )
            );

            if (this.checkForumValidity()) {
                this.checkForumValidityAjax();
            } else {
                this.finishValidate(false);
            }
        }
    }, {
        key: 'finishValidate',
        value: function finishValidate(valid) {
            if (valid === false) {
                this.type = null;
            }

            this.setState(function () {
                return { loading: false };
            });
        }
    }, {
        key: 'checkForumValidityAjax',
        value: function checkForumValidityAjax() {
            var _this10 = this;

            switch (this.type) {
                case "company":
                    var query = 'query{company(ID: ' + this.params.company_id + '){name} }';

                    (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                        var data = res.data.data.company;
                        if (data == null) {
                            _this10.type = null;
                        } else {
                            _this10.params.company_name = data.name;
                        }
                        _this10.finishValidate();
                    });
                    break;
            }
        }
    }, {
        key: 'checkForumValidity',
        value: function checkForumValidity() {
            // check forum validity
            // and get type and params
            // type null is invalid
            if (this.forum_id.indexOf("company" >= 0)) {
                try {
                    var idArr = this.forum_id.split("_");
                    var company_id = Number.parseInt(idArr[1]);
                    if (Number.isNaN(company_id)) {
                        return false;
                    }

                    if (idArr[0] !== "company") {
                        return false;
                    }

                    this.type = "company";
                    this.params = {
                        company_id: company_id
                    };

                    // check isOwner
                    if ((0, _authActions.getAuthUser)().rec_company === company_id) {
                        this.isForumOwner = true;
                    }
                } catch (err) {
                    console.log(err);
                    return false;
                }
            }

            return true;
        }
    }, {
        key: 'getInitalPreItem',
        value: function getInitalPreItem() {
            var _this11 = this;

            var preItem = [];
            //new comment
            preItem.push(renderTextAreaForumItem("comment", "comment", this, function () {
                _this11.submit_btn.disabled = true;
                addNewForumItem("comment", _this11.forum_id, _this11.textarea.value, _this11.isForumOwner, function (res) {
                    _this11.submit_btn.disabled = false;
                    _this11.textarea.value = "";

                    //prepend new comment
                    var newComment = _react2.default.createElement(ForumCommentItem, {
                        id: res.ID,
                        isForumOwner: _this11.isForumOwner,
                        data: res,
                        i: 'comment::' + res.ID });

                    _this11.setState(function (prevState) {
                        var preItem = prevState.preItem;
                        preItem.push(newComment);
                        return { preItem: preItem };
                    });
                });
            }));

            return preItem;
        }
        // ##############################################################
        // function for list

    }, {
        key: 'loadData',
        value: function loadData(page, offset) {
            var query = 'query{forum_comments(forum_id: "' + this.forum_id + '",page:' + page + ',offset:' + offset + ') {\n                        ID forum_id content is_owner created_at\n            ' + USER_SELECT + ' replies_count }}';
            return (0, _apiHelper.getAxiosGraphQLQuery)(query);
        }
    }, {
        key: 'getDataFromRes',
        value: function getDataFromRes(res) {
            return res.data.data.forum_comments;
        }

        // from socket trigger

    }, {
        key: 'addFeedToView',
        value: function addFeedToView(d) {
            this.scrollTo = "top";
            var newData = this.renderList(d, 0, true);
            // add to view
            this.setState(function (prevState) {
                prevState.extraData.push(newData);
                return { extraData: prevState.extraData };
            });
        }
    }, {
        key: 'renderList',
        value: function renderList(d, i) {
            var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            var item = [];
            item.push(_react2.default.createElement(ForumCommentItem, {
                isForumOwner: this.isForumOwner,
                id: d.ID, i: i, data: d }));
            return item;
        }
        //<button onClick={() => this.addFeedToView({ ID: "a" })}>Add</button>

    }, {
        key: 'renderView',
        value: function renderView(forum) {
            var v = this.invalid;
            var reload = _react2.default.createElement(
                'a',
                { onClick: this.reload },
                _react2.default.createElement('i', { className: 'fa fa-refresh left' }),
                'Load Latest Feed'
            );

            switch (this.type) {
                case 'company':
                    if (this.props.isHomePage) {
                        v = _react2.default.createElement(
                            'div',
                            null,
                            _react2.default.createElement(
                                'h3',
                                null,
                                'Forum for ',
                                this.params.company_name,
                                _react2.default.createElement('br', null),
                                _react2.default.createElement(
                                    'small',
                                    null,
                                    reload
                                )
                            ),
                            forum
                        );
                    } else {
                        v = _react2.default.createElement(
                            'div',
                            { className: 'container-fluid no-padding' },
                            _react2.default.createElement(
                                'div',
                                { className: 'row' },
                                _react2.default.createElement(
                                    'h3',
                                    null,
                                    'Forum for ',
                                    this.params.company_name,
                                    _react2.default.createElement('br', null),
                                    _react2.default.createElement(
                                        'small',
                                        null,
                                        (0, _authActions.isRoleStudent)() ? "Ask Questions And Be Noticed by Recruiters" : null,
                                        _react2.default.createElement('br', null),
                                        reload
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'col-md-12 no-padding' },
                                forum
                            )
                        );
                    }

                    break;
            }

            return v;
        }
    }, {
        key: 'render',
        value: function render() {

            if (this.state.loading) {
                return _react2.default.createElement(_loader.Loader, { size: '3', text: 'Loading Forum' });
            }

            var forum = _react2.default.createElement(
                'div',
                { key: this.state.key },
                _react2.default.createElement(_list2.default, { type: 'append-bottom',
                    customEmpty: this.customEmpty,
                    appendText: 'Load More Comment',
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData,
                    extraData: this.state.preItem,
                    offset: this.offset,
                    renderList: this.renderList })
            );
            return this.renderView(forum);
        }
    }]);

    return ForumPage;
}(_react2.default.Component);

exports.default = ForumPage;


ForumPage.propTypes = {
    forum_id: _propTypes2.default.string,
    isHomePage: _propTypes2.default.bool
};

ForumPage.defaultProps = {
    isHomePage: false
};

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AuditoriumManagement = exports.AuditoriumFeed = exports.WebinarHall = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _dbConfig = __webpack_require__(5);

var _appConfig = __webpack_require__(4);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _reactRouterDom = __webpack_require__(7);

var _interested = __webpack_require__(66);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _authActions = __webpack_require__(2);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _form = __webpack_require__(19);

var _socketClient = __webpack_require__(17);

var _socketConfig = __webpack_require__(32);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _loader = __webpack_require__(8);

var _toggleTimezone = __webpack_require__(80);

var _toggleTimezone2 = _interopRequireDefault(_toggleTimezone);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WebinarHall = exports.WebinarHall = function (_React$Component) {
  _inherits(WebinarHall, _React$Component);

  function WebinarHall(props) {
    _classCallCheck(this, WebinarHall);

    var _this = _possibleConstructorReturn(this, (WebinarHall.__proto__ || Object.getPrototypeOf(WebinarHall)).call(this, props));

    _this.loadData = _this.loadData.bind(_this);
    _this.getDataFromRes = _this.getDataFromRes.bind(_this);
    _this.addFeedToView = _this.addFeedToView.bind(_this);
    //this.listComponentDidUpdate = this.listComponentDidUpdate.bind(this);
    _this.renderList = _this.renderList.bind(_this);
    _this.offset = 10;

    _this.state = {
      extraData: [],
      key: 0
    };

    _this.isInit = true;
    return _this;
  }

  _createClass(WebinarHall, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      (0, _socketClient.socketOn)(_socketConfig.BOTH.LIVE_FEED, function (data) {
        _this2.addFeedToView(data);
      });
    }

    // ##############################################################
    // function for list

  }, {
    key: "loadData",
    value: function loadData(page, offset) {
      var query = "query{\n        auditoriums(user_id:" + (0, _authActions.getAuthUser)().ID + ", page:" + page + ",offset:" + offset + ",cf:\"" + (0, _authActions.getCF)() + "\",\n        order_by:\"link desc, recorded_link asc, start_time asc\", \n        now_only:false) {\n          ID\n          company{ID name img_url img_position img_size}\n          type\n          title\n          link\n          interested{ID is_interested}\n          recorded_link\n          moderator\n          start_time\n          end_time\n        }\n      }";
      console.log(query);
      return (0, _apiHelper.getAxiosGraphQLQuery)(query);
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      this.hasUpNext = false;
      this.hasNow = false;

      if (this.isInit) {
        this.scrollTo = "top";
        this.isInit = false;
      } else {
        this.scrollTo = "bottom";
      }
      return res.data.data.auditoriums;
    }

    // from socket trigger

  }, {
    key: "addFeedToView",
    value: function addFeedToView(d) {
      this.scrollTo = "top";
      var newData = this.renderList(d, 0, true);
      // add to view
      this.setState(function (prevState) {
        prevState.extraData.push(newData);
        return { extraData: prevState.extraData };
      });
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      var img = _react2.default.createElement(
        "div",
        { className: "hw-image" },
        _react2.default.createElement(_profileCard2.default, {
          type: "company",
          img_url: d.company.img_url,
          img_pos: d.company.img_pos,
          img_size: d.company.img_size,
          img_dimension: "65px",
          className: "with-border",
          body: null
        })
      );

      var detailStyle = {
        position: "relative",
        fontSize: "14px",
        textAlign: "left"
      };

      var companyName = (0, _authActions.isRoleRec)() ? d.company.name : _react2.default.createElement(
        _reactRouterDom.NavLink,
        { to: _appConfig.AppPath + "/company/" + d.company.ID },
        d.company.name
      );
      // <a onClick={() =>
      //     layoutActions.storeUpdateFocusCard(d.title, CompanyPopup, {
      //       id: d.company.ID,
      //       toggleable: false
      //     })
      //   }
      // >{d.company.name}</a>

      var details = _react2.default.createElement(
        "div",
        { className: "hw-details", style: detailStyle },
        _react2.default.createElement(
          "b",
          null,
          d.title
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "small",
          null,
          "with ",
          companyName
        )
      );

      var action_disabled = true;
      var action_link = "";
      var action_text = "";
      var action_color = "";
      if (d.recorded_link != null && d.recorded_link != "") {
        // Has Recorded Video
        action_disabled = false;
        action_link = d.recorded_link;
        action_text = _react2.default.createElement(
          "span",
          null,
          _react2.default.createElement("i", { className: "fa fa-play-circle" }),
          _react2.default.createElement("br", null),
          "Watch"
        );
        action_color = "danger";
      } else if (d.link != null && d.link != "") {
        // Has Join Link
        action_disabled = false;
        action_link = d.link;
        action_text = _react2.default.createElement(
          "span",
          null,
          _react2.default.createElement("i", { className: "fa fa-sign-in" }),
          _react2.default.createElement("br", null),
          "Join Now"
        );
        action_color = "success";
      }

      var rightBox = null;
      if (!action_disabled) {
        rightBox = _react2.default.createElement(
          "a",
          {
            className: "hw-action btn-" + action_color,
            href: action_link,
            target: "_blank"
          },
          action_text
        );
      } else {
        // Display Time
        var styleDate = { fontSize: "15px" };
        var styleTime = { fontSize: "20px" };
        // ToogleTimezone
        var createBody = function createBody(timeStr) {
          return timeStr;
        };

        var createView = function createView(body, toggler) {
          return _react2.default.createElement(
            "div",
            { className: "hw-time" },
            body,
            " ",
            toggler
          );
        };

        rightBox = _react2.default.createElement(_toggleTimezone2.default, {
          createDefaultTime: function createDefaultTime(unix) {
            return _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement(
                "div",
                { style: styleDate },
                _time.Time.getDate(unix)
              ),
              _react2.default.createElement(
                "div",
                { style: styleTime },
                _time.Time.getStringShort(unix)
              )
            );
          },
          createAlternateTime: function createAlternateTime(unix) {
            return _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement(
                "div",
                { style: styleDate },
                _time.Time.getDateMas(unix)
              ),
              _react2.default.createElement(
                "div",
                { style: styleTime },
                _time.Time.getStringShortMas(unix)
              )
            );
          },
          unixtimestamp: d.start_time,
          createBody: createBody,
          createView: createView
        });

        // rightBox = <div className="hw-time">
        //   <div>
        //     <div style={{ fontSize: "15px" }}>{Time.getDate(d.start_time)}</div>
        //     <div style={{ fontSize: "20px" }}>{Time.getStringShort(d.start_time)}</div>
        //   </div>
        // </div>
      }

      var likeButton = _react2.default.createElement(_interested.InterestedButton, {
        customStyle: {
          top: "3px",
          left: "7px",
          width: "max-content"
        },
        isModeCount: false,
        isModeAction: true,
        finishHandler: function finishHandler(is_interested) {
          if (is_interested == 1) {
            layoutActions.successBlockLoader(_react2.default.createElement(
              "div",
              null,
              "Successfully RSVP'ed for webinar",
              _react2.default.createElement("br", null),
              _react2.default.createElement(
                "b",
                null,
                d.title
              ),
              _react2.default.createElement("br", null),
              "with ",
              companyName
            ));
          }

          // else {
          //   layoutActions.successBlockLoader(`YRSVP'ed for ${d.title} webinar`)
          // }
        },
        ID: d.interested.ID,
        is_interested: d.interested.is_interested,
        entity: "auditorium",
        entity_id: d.ID
      });

      //likeButton = null;
      var v = _react2.default.createElement(
        "div",
        { className: "hall-webinar", style: { position: "relative" } },
        likeButton,
        img,
        details,
        rightBox
      );
      return v;
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var title = _react2.default.createElement(
        "a",
        {
          onClick: function onClick() {
            _this3.setState(function (prevState) {
              return { key: prevState.key + 1 };
            });
          }
        },
        "Webinar"
      );

      var subtitle = "Click on the love button to RSVP";
      var body = _react2.default.createElement(_list2.default, {
        key: this.state.key,
        type: "append-bottom",
        appendText: "Load More Webinar"
        // listClass="bc-body"
        , listClass: "flex-wrap",
        listRef: function listRef(v) {
          return _this3.dashBody = v;
        },
        getDataFromRes: this.getDataFromRes,
        loadData: this.loadData,
        extraData: this.state.extraData,
        hideLoadMore: this.props.limitLoad ? true : false,
        offset: this.props.limitLoad ? this.props.limitLoad : this.offset,
        renderList: this.renderList
      });

      if (this.props.noBorderCard) {
        return body;
      } else {
        return _react2.default.createElement(
          "div",
          { className: "border-card bc-vertical bc-rounded" },
          _react2.default.createElement(
            "h4",
            { className: "bc-title" },
            _react2.default.createElement(
              "span",
              { className: "bc-title-back" },
              title
            ),
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "small",
              null,
              subtitle
            )
          ),
          body
        );
      }
    }
  }]);

  return WebinarHall;
}(_react2.default.Component);

WebinarHall.propTypes = {
  noBorderCard: _propTypes2.default.bool,
  limitLoad: _propTypes2.default.number
};

WebinarHall.defaultProps = {
  noBorderCard: false

  // END of WebinarHall
  // ############################################################

};
var AuditoriumFeed = exports.AuditoriumFeed = function (_React$Component2) {
  _inherits(AuditoriumFeed, _React$Component2);

  function AuditoriumFeed(props) {
    _classCallCheck(this, AuditoriumFeed);

    var _this4 = _possibleConstructorReturn(this, (AuditoriumFeed.__proto__ || Object.getPrototypeOf(AuditoriumFeed)).call(this, props));

    _this4.loadData = _this4.loadData.bind(_this4);
    _this4.getDataFromRes = _this4.getDataFromRes.bind(_this4);
    _this4.addFeedToView = _this4.addFeedToView.bind(_this4);
    //this.listComponentDidUpdate = this.listComponentDidUpdate.bind(this);
    _this4.renderList = _this4.renderList.bind(_this4);
    _this4.offset = 10;

    _this4.state = {
      extraData: []
    };

    _this4.hasUpNext = false;
    _this4.hasNow = false;

    _this4.isInit = true;
    return _this4;
  }

  _createClass(AuditoriumFeed, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this5 = this;

      (0, _socketClient.socketOn)(_socketConfig.BOTH.LIVE_FEED, function (data) {
        _this5.addFeedToView(data);
      });
    }

    // ##############################################################
    // function for list

  }, {
    key: "loadData",
    value: function loadData(page, offset) {
      var query = "query{\n            auditoriums(page:" + page + ",offset:" + offset + ",cf:\"" + (0, _authActions.getCF)() + "\",order_by:\"start_time asc\",\n            now_only:false) {\n              ID\n              company{ID name img_url img_position img_size}\n              type\n              title\n              link\n              recorded_link\n              moderator\n              start_time\n              end_time\n            }\n          }";
      console.log(query);
      return (0, _apiHelper.getAxiosGraphQLQuery)(query);
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      this.hasUpNext = false;
      this.hasNow = false;

      if (this.isInit) {
        this.scrollTo = "top";
        this.isInit = false;
      } else {
        this.scrollTo = "bottom";
      }
      return res.data.data.auditoriums;
    }

    // from socket trigger

  }, {
    key: "addFeedToView",
    value: function addFeedToView(d) {
      this.scrollTo = "top";
      var newData = this.renderList(d, 0, true);
      // add to view
      this.setState(function (prevState) {
        prevState.extraData.push(newData);
        return { extraData: prevState.extraData };
      });
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      var timeNow = _time.Time.getUnixTimestampNow();

      // DEBUG for Now
      // if (i == 0 && false) {
      //     d.start_time = timeNow;
      //     d.end_time = timeNow;
      // }

      var item = [];

      // if (!this.hasNow && d.start_time >= timeNow && d.end_time <= timeNow) {
      //     item.push(<h3>Now</h3>);
      //     this.hasNow = true;
      // } else if (!this.hasUpNext) {
      //     item.push(<h3>Up Next</h3>);
      //     this.hasUpNext = true;
      // }

      var isNew = isExtraData;
      var details = _react2.default.createElement(
        "div",
        null,
        "with ",
        _react2.default.createElement(
          "a",
          {
            onClick: function onClick() {
              return layoutActions.storeUpdateFocusCard(d.title, _companyPopup2.default, {
                id: d.company.ID,
                displayOnly: true,
                toggleable: false
              });
            }
          },
          d.company.name
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "small",
          null,
          _react2.default.createElement("i", { className: "fa fa-calendar left" }),
          _time.Time.getDate(d.start_time),
          _react2.default.createElement("br", null),
          _react2.default.createElement("i", { className: "fa fa-clock-o left" }),
          _time.Time.getStringShort(d.start_time) + " - " + _time.Time.getStringShort(d.end_time),
          _react2.default.createElement("br", null),
          d.moderator != null && d.moderator != "" ? _react2.default.createElement(
            "span",
            null,
            "Moderator - ",
            d.moderator
          ) : null
        )
      );

      var action_disabled = true;
      var action_link = "";
      var action_text = "";
      var action_color = "";
      if (d.recorded_link != null && d.recorded_link != "") {
        action_disabled = false;
        action_link = d.recorded_link;
        action_text = "Watch Recorded Video";
        action_color = "success";
      } else if (d.link != null && d.link != "") {
        action_disabled = false;
        action_link = d.link;
        action_text = "Join Now";
        action_color = "blue";
      }

      item.push(_react2.default.createElement(_list.ProfileListWide, {
        title: d.title,
        img_url: d.company.img_url,
        img_pos: d.company.img_position,
        img_size: d.company.img_size,
        img_dimension: "80px",
        body: details,
        action_color: action_color,
        action_text: action_text,
        action_handler: function action_handler() {
          window.open(action_link);
        },
        action_disabled: action_disabled,
        type: "company",
        key: i
      }));

      return item;
    }
    //<button onClick={() => this.addFeedToView({ ID: "a" })}>Add</button>

  }, {
    key: "render",
    value: function render() {
      var _this6 = this;

      // EUR FIX Auditorium -> Webinar
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h2",
          null,
          "Webinar",
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "small",
            null,
            "Stay tuned for more webinar session with various companies"
          )
        ),
        _react2.default.createElement(_list2.default, {
          type: "append-bottom",
          appendText: "Load More Event",
          listClass: "db_body",
          listRef: function listRef(v) {
            return _this6.dashBody = v;
          },
          getDataFromRes: this.getDataFromRes,
          loadData: this.loadData,
          extraData: this.state.extraData,
          offset: this.offset,
          renderList: this.renderList
        })
      );
    }
  }]);

  return AuditoriumFeed;
}(_react2.default.Component);
// END of AuditoriumFeed

// ###########################################################################################
// AUDITORIUM MANAGEMENT PAGE ###########################################################

var AuditoriumManagement = exports.AuditoriumManagement = function (_React$Component3) {
  _inherits(AuditoriumManagement, _React$Component3);

  function AuditoriumManagement(props) {
    _classCallCheck(this, AuditoriumManagement);

    var _this7 = _possibleConstructorReturn(this, (AuditoriumManagement.__proto__ || Object.getPrototypeOf(AuditoriumManagement)).call(this, props));

    _this7.authUser = (0, _authActions.getAuthUser)();
    _this7.CF = _this7.authUser.cf;
    console.log(_this7.CF);
    _this7.company_id = _this7.props.company_id;
    return _this7;
  }

  _createClass(AuditoriumManagement, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.successAddHandler = function (d) {
        //emitLiveFeed(d.title, d.content, d.type, d.cf, Time.getUnixTimestampNow());
      };

      //##########################################
      // List data properties
      this.renderRow = function (d) {
        return [_react2.default.createElement(
          "td",
          null,
          d.ID
        ), _react2.default.createElement(
          "td",
          null,
          d.cf
        ), _react2.default.createElement(
          "td",
          null,
          _react2.default.createElement(
            "b",
            null,
            d.title
          ),
          _react2.default.createElement(
            "small",
            null,
            _react2.default.createElement(
              "ul",
              { className: "normal" },
              _react2.default.createElement(
                "li",
                null,
                "with ",
                d.company.name
              )
            )
          )
        ), _react2.default.createElement(
          "td",
          null,
          _react2.default.createElement(
            "small",
            null,
            _react2.default.createElement(
              "ul",
              { className: "normal" },
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Start"
                ),
                " : ",
                _time.Time.getString(d.start_time)
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "End"
                ),
                " : ",
                _time.Time.getString(d.end_time)
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Join Link"
                ),
                " : ",
                d.link
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Recorded Video Link"
                ),
                " : ",
                d.recorded_link
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Moderator"
                ),
                " : ",
                d.moderator
              )
            )
          )
        )];
      };

      this.tableHeader = _react2.default.createElement(
        "thead",
        null,
        _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "th",
            null,
            "ID"
          ),
          _react2.default.createElement(
            "th",
            null,
            "CF"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Event"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Details"
          )
        )
      );

      this.loadData = function (page, offset) {
        var query = "query{\n                auditoriums(page:" + page + ",offset:" + offset + ",now_only:false) {\n                  ID cf\n                  company{ID name img_url img_position img_size}\n                  type\n                  title\n                  link\n                  recorded_link\n                  moderator\n                  start_time\n                  end_time\n                }\n              }";
        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      // get actual data from loadData
      // can alter any data here too
      this.getDataFromRes = function (res) {
        return res.data.data.auditoriums;
      };

      //##########################################
      // form operation properties

      // if ever needed
      // hook before submit
      this.formWillSubmit = function (d, edit) {
        //udpated by
        if (edit) {
          d[_dbConfig.Auditorium.UPDATED_BY] = (0, _authActions.getAuthUser)().ID;
        }

        // convert to number
        if (typeof d[_dbConfig.Auditorium.COMPANY_ID] !== "undefined") {
          d[_dbConfig.Auditorium.COMPANY_ID] = Number.parseInt(d[_dbConfig.Auditorium.COMPANY_ID]);
        }

        // date time handling
        if (d[_dbConfig.Auditorium.START_TIME + "_DATE"]) ;
        d[_dbConfig.Auditorium.START_TIME] = _time.Time.getUnixFromDateTimeInput(d[_dbConfig.Auditorium.START_TIME + "_DATE"], d[_dbConfig.Auditorium.START_TIME + "_TIME"]);

        delete d[_dbConfig.Auditorium.START_TIME + "_DATE"];
        delete d[_dbConfig.Auditorium.START_TIME + "_TIME"];

        d[_dbConfig.Auditorium.END_TIME] = _time.Time.getUnixFromDateTimeInput(d[_dbConfig.Auditorium.END_TIME + "_DATE"], d[_dbConfig.Auditorium.END_TIME + "_TIME"]);

        delete d[_dbConfig.Auditorium.END_TIME + "_DATE"];
        delete d[_dbConfig.Auditorium.END_TIME + "_TIME"];

        return d;
      };

      // date time need to be forced diff
      this.forceDiff = [_dbConfig.Auditorium.START_TIME + "_DATE", _dbConfig.Auditorium.START_TIME + "_TIME", _dbConfig.Auditorium.END_TIME + "_DATE", _dbConfig.Auditorium.END_TIME + "_TIME"];

      this.acceptEmpty = [_dbConfig.Auditorium.LINK, _dbConfig.Auditorium.RECORDED_LINK];

      this.getEditFormDefault = function (ID) {
        var query = "query{auditorium(ID:" + ID + ")\n            {cf ID company_id type title link recorded_link moderator start_time end_time}}";
        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var data = res.data.data.auditorium;
          console.log(data);
          // setup time
          var start = _time.Time.getInputFromUnix(data.start_time);
          data[_dbConfig.Auditorium.START_TIME + "_DATE"] = start.date;
          data[_dbConfig.Auditorium.START_TIME + "_TIME"] = start.time;

          var end = _time.Time.getInputFromUnix(data.end_time);
          data[_dbConfig.Auditorium.END_TIME + "_DATE"] = end.date;
          data[_dbConfig.Auditorium.END_TIME + "_TIME"] = end.time;

          return data;
        });
      };

      // create form add new default
      this.newFormDefault = {};
      this.newFormDefault[_dbConfig.Auditorium.CF] = this.CF;
      this.newFormDefault[_dbConfig.Auditorium.CREATED_BY] = this.authUser.ID;

      this.getFormItemAsync = function (edit) {
        return (0, _apiHelper.getAxiosGraphQLQuery)("query{companies(include_sponsor:1){ID name cf}}").then(function (res) {
          var companies = res.data.data.companies;
          var ret = [{ header: "Auditorium Event Form" }];

          ret.push.apply(ret, [{
            label: "Select Career Fair",
            name: _dbConfig.Auditorium.CF,
            type: "radio",
            data: (0, _form.getDataCareerFair)("login"),
            required: true
          }, {
            label: "Type",
            name: _dbConfig.Auditorium.TYPE,
            type: "select",
            required: true,
            data: [_dbConfig.AuditoriumEnum.TYPE_WEBINAR]
          }, {
            label: "Company",
            name: _dbConfig.Auditorium.COMPANY_ID,
            type: "select",
            required: true,
            data: companies.map(function (d, i) {
              return { key: d.ID, label: d.name };
            })
          }, {
            label: "Title",
            name: _dbConfig.Auditorium.TITLE,
            type: "text",
            placeholder: "",
            required: true
          }, { header: "Event Details" }, {
            label: "Start Date",
            sublabel: "Please enter your local time",
            name: _dbConfig.Auditorium.START_TIME + "_DATE",
            type: "date",
            placeholder: "",
            required: true
          }, {
            label: "Start Time",
            sublabel: "Please enter your local time",
            name: _dbConfig.Auditorium.START_TIME + "_TIME",
            type: "time",
            placeholder: "",
            required: true
          }, {
            label: "End Date",
            sublabel: "Please enter your local time",
            name: _dbConfig.Auditorium.END_TIME + "_DATE",
            type: "date",
            placeholder: "",
            required: true
          }, {
            label: "End Time",
            sublabel: "Please enter your local time",
            name: _dbConfig.Auditorium.END_TIME + "_TIME",
            type: "time",
            placeholder: "",
            required: true
          }, {
            label: "Join Link",
            name: _dbConfig.Auditorium.LINK,
            type: "text",
            placeholder: ""
          }, {
            label: "Recorded Video Link",
            sublabel: "If both 'Recorded Video Link' and Join Link exist, only 'Recorded Video Link' will be shown",
            name: _dbConfig.Auditorium.RECORDED_LINK,
            type: "text",
            placeholder: ""
          }, {
            label: "Moderator",
            name: _dbConfig.Auditorium.MODERATOR,
            type: "text",
            placeholder: ""
          }, {
            label: "Created By",
            name: _dbConfig.Auditorium.CREATED_BY,
            type: "number",
            disabled: true,
            hidden: true,
            required: !edit
          }]);
          return ret;
        });
      };
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(_generalForm2.default, {
        dataTitle: "Auditorium Event Management",
        entity: "auditorium",
        entity_singular: "Auditorium Event",
        addButtonText: "Add New Auditorium Event",
        dataOffset: 10,
        acceptEmpty: this.acceptEmpty,
        forceDiff: this.forceDiff,
        tableHeader: this.tableHeader,
        newFormDefault: this.newFormDefault,
        getEditFormDefault: this.getEditFormDefault,
        getFormItemAsync: this.getFormItemAsync,
        renderRow: this.renderRow,
        getDataFromRes: this.getDataFromRes,
        loadData: this.loadData,
        successAddHandler: this.successAddHandler,
        formWillSubmit: this.formWillSubmit
      });
    }
  }]);

  return AuditoriumManagement;
}(_react2.default.Component);

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _inputMulti = __webpack_require__(587);

var _inputMulti2 = _interopRequireDefault(_inputMulti);

var _inputSingle = __webpack_require__(588);

var _inputSingle2 = _interopRequireDefault(_inputSingle);

var _registrationConfig = __webpack_require__(295);

var Reg = _interopRequireWildcard(_registrationConfig);

var _util = __webpack_require__(45);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ManageUserProfile = function (_React$Component) {
  _inherits(ManageUserProfile, _React$Component);

  function ManageUserProfile(props) {
    _classCallCheck(this, ManageUserProfile);

    var _this = _possibleConstructorReturn(this, (ManageUserProfile.__proto__ || Object.getPrototypeOf(ManageUserProfile)).call(this, props));

    _this.continueOnClick = _this.continueOnClick.bind(_this);
    _this.inputDoneHandler = _this.inputDoneHandler.bind(_this);
    _this.MARGIN = [_react2.default.createElement("div", { style: { marginTop: _this.isEdit() ? "15vh" : "40vh" } })];

    _this.SCROLL_OFFSET = -300;
    _this.state = {
      isEmptyAndRequired: {},
      currentData: {}
    };
    return _this;
  }

  _createClass(ManageUserProfile, [{
    key: "isEdit",
    value: function isEdit() {
      return this.props.isEdit;
    }
  }, {
    key: "getItemEmptyAndRequired",
    value: function getItemEmptyAndRequired() {
      var ret = [];

      for (var k in this.state.isEmptyAndRequired) {
        if (this.state.isEmptyAndRequired[k] === true) {
          ret.push(k);
        }
      }

      return ret;
    }
  }, {
    key: "getItemById",
    value: function getItemById(id) {
      var inputItems = this.getInputItems();
      for (var i in inputItems) {
        if (inputItems[i].id == id) {
          return inputItems[i];
        }
      }

      return null;
    }
  }, {
    key: "isItemRequired",
    value: function isItemRequired(id) {
      try {
        var item = this.getItemById(id);
        if (item.is_required === true) {
          return true;
        }
      } catch (err) {}
      return false;
    }
  }, {
    key: "getFieldStudyListStr",
    value: function getFieldStudyListStr() {
      var DELIM = "::";
      //
      var field_study_raw = this.state.currentData[Reg.Multi.field_study];
      var field_study = null;
      try {
        if (Array.isArray(field_study_raw) && field_study_raw.length >= 0) {
          field_study = "";
          field_study_raw.map(function (d, i) {
            if (d.isSelected) {
              field_study += "" + d.val + DELIM;
            }
          });

          // trim last delim
          field_study = field_study.substr(0, field_study.length - DELIM.length);
        }
      } catch (err) {
        field_study = null;
      }

      return field_study;
    }
  }, {
    key: "getInputChildren",
    value: function getInputChildren(id) {
      var r = {};
      r[Reg.Single.first_name] = [{
        // single
        type: "single",
        id: Reg.Single.last_name,
        key_input: Reg.Single.last_name,
        input_placeholder: "Last Name",
        is_required: true,
        hidden: false
      }];
      r[Reg.Single.graduation_month] = [{
        // single
        type: "single",
        input_type: "select",
        id: Reg.Single.graduation_year,
        key_input: Reg.Single.graduation_year,
        ref_table_name: "year",
        is_required: true,
        hidden: false
      }];
      r[Reg.Single.working_availability_month] = [{
        // single
        type: "single",
        input_type: "select",
        id: Reg.Single.working_availability_year,
        key_input: Reg.Single.working_availability_year,
        ref_table_name: "year",
        is_required: true,
        hidden: false
      }];

      return r[id];
    }
  }, {
    key: "getInputItems",
    value: function getInputItems() {
      var field_study = this.getFieldStudyListStr();
      var country = this.state.currentData[Reg.Single.country_study];

      var r = [];
      if (this.isEdit()) {
        r.push({
          // single
          type: "single",
          label: "What is your name?",
          id: Reg.Single.first_name,
          key_input: Reg.Single.first_name,
          input_placeholder: "First Name",
          is_required: true,
          hidden: false
        });
      }
      r.push.apply(r, [{
        // single
        type: "single",
        input_type: "select",
        label: "When is your graduation date?",
        id: Reg.Single.graduation_month,
        key_input: Reg.Single.graduation_month,
        // select_use_id_as_value: true,
        ref_order_by: "ID asc",
        ref_table_name: "month",
        is_required: true,
        hidden: false
      }, {
        // defined multi choice
        type: "multi",
        id: Reg.Multi.looking_for_position,
        table_name: Reg.Multi.looking_for_position,
        label: "What are you looking for?",
        ref_table_name: "looking_for_position",
        hideInputSuggestion: true,
        ref_order_by: "val ASC",
        is_required: true,
        hidden: false
      }, {
        // single
        type: "single",
        id: Reg.Single.country_study,
        key_input: Reg.Single.country_study,
        label: "Where are you studying",
        input_placeholder: "Malaysia",
        ref_table_name: "country",
        is_required: true,
        hidden: false
      }, {
        // single
        type: "single",
        id: Reg.Single.university,
        key_input: Reg.Single.university,
        label: "What is your university?",
        input_placeholder: "Universiti Malaya",
        ref_table_name: "university",
        ref_filter_column: "country_id",
        ref_filter_val: country,
        ref_filter_find_id: true, // kena ubah kat ref-query
        is_required: true,
        hidden: false
      }, {
        // single select
        type: "single",
        input_type: "select",
        id: Reg.Single.qualification,
        key_input: Reg.Single.qualification,
        label: "What is your highest level of certificate?",
        input_placeholder: "Type something here",
        ref_table_name: "qualification",
        is_required: true,
        hidden: false
      },
      // {
      //   // free multi choice (location)
      //   type: "multi",
      //   id: Reg.Multi.field_study,
      //   table_name: Reg.Multi.field_study,
      //   label: "What is your field of study?",
      //   input_placeholder: "Computer Science",
      //   list_title: null,
      //   ref_table_name: "major",
      //   ref_category: "computer-and-information-sciences", // ref suggestion by category
      //   is_required: true,
      //   hidden: false
      // },
      {
        // select multi choice
        type: "multi",
        input_type: "select",
        id: Reg.Multi.field_study,
        table_name: Reg.Multi.field_study,
        discard_ref_from_default: true,
        label: "What is your field of study?",
        sublabel: "You can choose more than one field of study",
        list_title: null,
        ref_table_name: "field_study",
        is_required: true,
        hidden: false
      }, {
        // single
        type: "single",
        id: Reg.Single.grade,
        key_input: Reg.Single.grade,
        label: "What is your grade?",
        sublabel: "CGPA, First Class, etc",
        input_placeholder: "Type something here",
        is_required: true,
        hidden: false
      }, {
        // single
        type: "single",
        id: Reg.Single.phone_number,
        key_input: Reg.Single.phone_number,
        label: "What is your phone number?",
        input_placeholder: "XXX-XXXXXXX",
        is_required: true,
        hidden: false
      }, {
        // single
        type: "single",
        input_type: "select",
        label: "When will you be available to work?",
        id: Reg.Single.working_availability_month,
        key_input: Reg.Single.working_availability_month,
        // select_use_id_as_value: true,
        ref_order_by: "ID asc",
        ref_table_name: "month",
        is_required: true,
        hidden: false
      }, {
        // free multi choice
        type: "multi",
        id: Reg.Multi.interested_role,
        table_name: Reg.Multi.interested_role,
        label: "What types of jobs will you be searching for?",
        input_placeholder: "Web Developer",
        list_title: field_study ? "Popular job for your field of study" : "",
        ref_table_name: "job_role",
        suggestion_search_by_ref: "field_study", // ref suggestion by table refmap_suggestion
        suggestion_search_by_val: field_study, //  ref suggestion by table refmap_suggestion
        is_required: true,
        hidden: false
      },
      // {
      //   // select multi choice
      //   type: "multi",
      //   input_type: "select",
      //   id: Reg.Multi.interested_role,
      //   table_name: Reg.Multi.interested_role,
      //   discard_ref_from_default: true,
      //   label: "What types of jobs will you be searching for?",
      //   sublabel : "You can choose more than one job",
      //   list_title: null,
      //   ref_table_name: "field_study",
      //   is_required: true,
      //   hidden: false
      // },
      {
        // single
        type: "single",
        id: Reg.Single.where_in_malaysia,
        key_input: Reg.Single.where_in_malaysia,
        label: "Where are you from in Malaysia?",
        input_placeholder: "Cyberjaya, Selangor",
        ref_table_name: "location",
        is_required: true,
        hidden: false
      }, {
        // free multi choice (location)
        type: "multi",
        id: Reg.Multi.interested_job_location,
        table_name: Reg.Multi.interested_job_location,
        location_suggestion: Reg.Multi.interested_job_location,
        label: "Where would you like to work in Malaysia?",
        input_placeholder: "Cyberjaya, Selangor",
        list_title: field_study ? "Popular job for your field of study" : "Popular in your area",
        ref_table_name: "location",
        is_required: true,
        hidden: false
      }, {
        // free multi choice
        type: "multi",
        id: Reg.Multi.skill,
        table_name: Reg.Multi.skill,
        label: "What skills would you bring to your next job?",
        input_placeholder: "Leadership, Javascript, etc",
        // suggestion_search_by_ref: "major",
        // suggestion_search_by_val: major,
        //list_title: major ? `Popular job for major ${major}` : "",
        ref_order_by: "ID asc",
        ref_table_name: "skill",
        ref_offset: 11,
        is_required: true,
        hidden: false
      }, {
        // free multi choice
        type: "multi",
        id: Reg.Multi.extracurricular,
        table_name: Reg.Multi.extracurricular,
        label: "Organization / Extracurricular Activities",
        input_placeholder: "",
        ref_order_by: "ID asc",
        ref_table_name: "extracurricular",
        ref_offset: 11,
        is_required: true,
        hidden: false
      }]);

      // r = [ {
      //   // single
      //   type: "single",
      //   id: Reg.Single.university,
      //   key_input: Reg.Single.university,
      //   label: "What is your university?",
      //   input_placeholder: "Universiti Malaya",
      //   ref_table_name: "university",
      //   ref_filter_column : "country_id",
      //   ref_filter_val : country,
      //   is_required: true,
      //   hidden: false
      // },]

      return r;
    }
  }, {
    key: "isLastItem",
    value: function isLastItem(curIndex) {
      return this.getNextItemId(curIndex) == null;
    }
  }, {
    key: "getNextItemId",
    value: function getNextItemId(curIndex) {
      var inputItems = this.getInputItems();
      try {
        curIndex = Number.parseInt(curIndex);
        for (var i = curIndex + 1; i < inputItems.length; i++) {
          var d = inputItems[i];
          if (!d.hidden) {
            return d.id;
          }
        }
      } catch (err) {
        // console.log("getNextItemId error", err);
        return null;
      }
      return null;
    }
  }, {
    key: "continueOnClick",
    value: function continueOnClick(e) {
      var index = e.currentTarget.dataset.index;
      var idToGo = this.getNextItemId(index);
      (0, _util.focusOnInput)(idToGo);
      (0, _util.smoothScrollTo)(idToGo, this.SCROLL_OFFSET);
    }
  }, {
    key: "inputDoneHandler",
    value: function inputDoneHandler(id, meta) {
      // console.log("inputDoneHandler", id, meta);

      var data = null;
      var isEmptyAndRequired = false;
      if (meta.type == "single") {
        /** {type, val, isEmptyAndRequired} */
        if (meta.isEmptyAndRequired) {
          isEmptyAndRequired = true;
        }
        data = meta.val;
      } else if (meta.type == "multi") {
        /** {type, list, isEmptyAndRequired} */
        if (meta.isEmptyAndRequired) {
          isEmptyAndRequired = true;
        }
        data = meta.list;
      }

      this.setState(function (prevState) {
        prevState.isEmptyAndRequired[id] = isEmptyAndRequired;
        prevState.currentData[id] = data;
        return {
          isEmptyAndRequired: prevState.isEmptyAndRequired,
          currentData: prevState.currentData
        };
      });
    }
  }, {
    key: "getInputLabelEl",
    value: function getInputLabelEl(id) {
      var elLabel = document.getElementById(id).getElementsByClassName("input-label");

      if (elLabel.length > 0) {
        return elLabel[0];
      }
      return null;
    }
  }, {
    key: "labelBlinkRequired",
    value: function labelBlinkRequired(id) {
      var elLabel = this.getInputLabelEl(id);
      setTimeout(function () {
        (0, _util.addClassEl)(elLabel, "blink-required");
      }, 200);

      setTimeout(function () {
        (0, _util.removeClassEl)(elLabel, "blink-required");
      }, 1200);
    }
  }, {
    key: "getDoneButton",
    value: function getDoneButton() {
      var _this2 = this;

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement("br", null),
        _react2.default.createElement("br", null),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "button",
          {
            style: { fontSize: "20px" },
            className: "btn btn-success btn-lg",
            onClick: function onClick(e) {
              var arr = _this2.getItemEmptyAndRequired();
              if (arr.length > 0) {
                var firstEmpty = arr[0];
                (0, _util.focusOnInput)(firstEmpty);
                (0, _util.smoothScrollTo)(firstEmpty, _this2.SCROLL_OFFSET);
                _this2.labelBlinkRequired(firstEmpty);
              } else {
                if (_this2.props.completeHandler) {
                  _this2.props.completeHandler();
                }
              }
            }
          },
          "Submit"
        )
      );
    }
  }, {
    key: "getInputElement",
    value: function getInputElement(d, i) {
      var isChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      var isLastItem = this.isLastItem(i);
      var hideContinueButton = isLastItem;
      var discardMargin = isChildren || isLastItem;
      if (d.type == "single") {
        return [_react2.default.createElement(_inputSingle2.default, _extends({}, d, {
          index: i,
          entity: "user",
          entity_id: this.props.user_id,
          doneHandler: this.inputDoneHandler,
          continueOnClick: this.continueOnClick,
          isChildren: isChildren,
          hideContinueButton: isChildren || this.isEdit() ? true : hideContinueButton
        })), discardMargin ? null : this.MARGIN];
      } else if (d.type == "multi") {
        return [_react2.default.createElement(_inputMulti2.default, _extends({}, d, {
          index: i,
          entity: "user",
          entity_id: this.props.user_id,
          doneHandler: this.inputDoneHandler,
          isChildren: isChildren,
          continueOnClick: this.continueOnClick,
          hideContinueButton: isChildren || this.isEdit() ? true : hideContinueButton
        })), discardMargin ? null : this.MARGIN];
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var view = this.getInputItems().map(function (d, i) {
        if (d.hidden) {
          return null;
        }
        var children = _this3.getInputChildren(d.id);
        if (children && children.length >= 0) {
          d.children = [];
          for (var k in children) {
            d.children.push(_this3.getInputElement(children[k], -1, true));
          }
        }
        return _this3.getInputElement(d, i);
      });

      // done button
      view.push(this.getDoneButton());

      return _react2.default.createElement(
        "div",
        { style: { textAlign: "left", marginBottom: "200px" } },
        view
      );
    }
  }]);

  return ManageUserProfile;
}(_react2.default.Component);

exports.default = ManageUserProfile;


ManageUserProfile.propTypes = {
  user_id: _propTypes2.default.number.isRequired,
  completeHandler: _propTypes2.default.func,
  isEdit: _propTypes2.default.bool
};

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DashboardFeed = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _dbConfig = __webpack_require__(5);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _authActions = __webpack_require__(2);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _form = __webpack_require__(19);

var _socketClient = __webpack_require__(17);

var _socketConfig = __webpack_require__(32);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/dashboard.scss");

var DashboardFeed = exports.DashboardFeed = function (_React$Component) {
    _inherits(DashboardFeed, _React$Component);

    function DashboardFeed(props) {
        _classCallCheck(this, DashboardFeed);

        var _this = _possibleConstructorReturn(this, (DashboardFeed.__proto__ || Object.getPrototypeOf(DashboardFeed)).call(this, props));

        _this.loadData = _this.loadData.bind(_this);
        _this.getDataFromRes = _this.getDataFromRes.bind(_this);
        _this.addFeedToView = _this.addFeedToView.bind(_this);
        _this.listComponentDidUpdate = _this.listComponentDidUpdate.bind(_this);
        _this.renderList = _this.renderList.bind(_this);
        _this.offset = 2;

        _this.state = {
            extraData: []
        };
        _this.isInit = true;
        return _this;
    }

    _createClass(DashboardFeed, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            (0, _socketClient.socketOn)(_socketConfig.BOTH.LIVE_FEED, function (data) {
                _this2.addFeedToView(data);
            });
        }
    }, {
        key: 'listComponentDidUpdate',
        value: function listComponentDidUpdate() {
            //console.log("listComponentDidUpdate")
            //console.log(this.scrollTo);

            if (this.scrollTo == "bottom") {
                //scroll to bottom
                this.dashBody.scrollTop = 99999999;
                //console.log("go bottom");
            }

            if (this.scrollTo == "top") {
                //scroll to top
                this.dashBody.scrollTop = 0;
                //console.log("go top");
            }

            //console.log(this.dashBody.scrollTop);
            this.scrollTo == "";
        }

        // ##############################################################
        // function for list

    }, {
        key: 'loadData',
        value: function loadData(page, offset) {
            var query = 'query{\n            dashboards(cf:"' + this.props.cf + '",type:"' + this.props.type + '",page:' + page + ',offset:' + offset + '){\n                ID title content created_at}}';

            return (0, _apiHelper.getAxiosGraphQLQuery)(query);
        }
    }, {
        key: 'getDataFromRes',
        value: function getDataFromRes(res) {
            if (this.isInit) {
                this.scrollTo = "top";
                this.isInit = false;
            } else {
                this.scrollTo = "bottom";
            }
            return res.data.data.dashboards;
        }

        // from socket trigger

    }, {
        key: 'addFeedToView',
        value: function addFeedToView(d) {
            this.scrollTo = "top";
            var newData = this.renderList(d, 0, true);
            // add to view
            this.setState(function (prevState) {
                prevState.extraData.push(newData);
                return { extraData: prevState.extraData };
            });
        }
    }, {
        key: 'renderList',
        value: function renderList(d, i) {
            var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            var isNew = isExtraData;
            var item = _react2.default.createElement(
                'div',
                { className: 'db_item ' + (isExtraData ? "item_new" : "") + ' ' },
                _react2.default.createElement(
                    'div',
                    { className: 'db_item_title' },
                    d.title
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'db_item_time' },
                    _time.Time.getAgo(d.created_at)
                ),
                _react2.default.createElement('p', { className: 'db_item_content', dangerouslySetInnerHTML: { __html: d.content } })
            );

            return item;
        }
    }, {
        key: 'render',

        //<button onClick={() => this.addFeedToView({ ID: "a" })}>Add</button>

        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                'div',
                { className: 'dashboard' },
                _react2.default.createElement(_list2.default, { type: 'append-bottom',
                    appendText: 'Load Older Feed',
                    listClass: 'db_body',
                    componentDidUpdate: this.listComponentDidUpdate,
                    listRef: function listRef(v) {
                        return _this3.dashBody = v;
                    },
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData,
                    extraData: this.state.extraData,
                    offset: this.offset,
                    renderList: this.renderList })
            );
        }
    }]);

    return DashboardFeed;
}(_react2.default.Component);

DashboardFeed.propTypes = {
    cf: _propTypes2.default.string.isRequired,
    type: _propTypes2.default.string.isRequired
};

// ###########################################################################################
// ADMIN DASHBOARD MANAGEMENT PAGE ###########################################################

var DashboardPage = function (_React$Component2) {
    _inherits(DashboardPage, _React$Component2);

    function DashboardPage(props) {
        _classCallCheck(this, DashboardPage);

        var _this4 = _possibleConstructorReturn(this, (DashboardPage.__proto__ || Object.getPrototypeOf(DashboardPage)).call(this, props));

        _this4.authUser = (0, _authActions.getAuthUser)();
        _this4.CF = _this4.authUser.cf;
        console.log(_this4.CF);
        _this4.company_id = _this4.props.company_id;
        return _this4;
    }

    _createClass(DashboardPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this5 = this;

            this.successAddHandler = function (d) {
                (0, _socketClient.emitLiveFeed)(d.title, d.content, d.type, d.cf, _time.Time.getUnixTimestampNow());
            };

            //##########################################
            // List data properties
            this.renderRow = function (d) {
                return [_react2.default.createElement(
                    'td',
                    null,
                    d.ID
                ), _react2.default.createElement(
                    'td',
                    null,
                    d.cf
                ), _react2.default.createElement(
                    'td',
                    null,
                    d.type
                ), _react2.default.createElement(
                    'td',
                    null,
                    _react2.default.createElement(
                        'b',
                        null,
                        d.title
                    ),
                    _react2.default.createElement('p', { dangerouslySetInnerHTML: { __html: d.content } })
                ), _react2.default.createElement(
                    'td',
                    null,
                    _time.Time.getString(d.created_at)
                )];
            };

            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'ID'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Career Fair'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Sent To'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Announcement'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Sent At'
                    )
                )
            );

            this.loadData = function (page, offset) {
                var param = {
                    cf: _this5.CF,
                    page: page,
                    offset: offset
                };

                var query = 'query{dashboards(' + (0, _graphqlObj2arg2.default)(param, { noOuterBraces: true }) + ')\n            {ID title content cf type created_at}}';
                return (0, _apiHelper.getAxiosGraphQLQuery)(query);
            };

            // get actual data from loadData
            // can alter any data here too
            this.getDataFromRes = function (res) {
                return res.data.data.dashboards;
            };

            //##########################################
            // form operation properties

            // if ever needed
            // hook before submit
            this.formWillSubmit = function (d, edit) {
                return d;
            };

            this.getEditFormDefault = function (ID) {
                var query = 'query{dashboard(ID:' + ID + '){ID title content type created_at}}';
                return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    var data = res.data.data.dashboard;
                    return data;
                });
            };

            // create form add new default
            this.newFormDefault = {};
            this.newFormDefault[_dbConfig.Dashboard.CF] = this.CF;
            this.newFormDefault[_dbConfig.Dashboard.CREATED_BY] = this.authUser.ID;

            this.getFormItem = function (edit) {
                var ret = [{ header: "Announcement Form" }];

                if ((0, _authActions.isRoleAdmin)()) {
                    ret.push({
                        label: "Select Career Fair",
                        name: _dbConfig.Dashboard.CF,
                        type: "radio",
                        data: (0, _form.getDataCareerFair)("login"),
                        required: true
                    });
                } else {
                    ret.push({
                        label: "CF",
                        name: _dbConfig.Dashboard.CF,
                        type: "text",
                        disabled: true,
                        hidden: true,
                        required: !edit
                    });
                }

                ret.push.apply(ret, [{
                    label: "Send To",
                    name: _dbConfig.Dashboard.TYPE,
                    type: "select",
                    required: true,
                    data: [_dbConfig.DashboardEnum.TYPE_STUDENT, _dbConfig.DashboardEnum.TYPE_RECRUITER]
                }, {
                    label: "Title",
                    name: _dbConfig.Dashboard.TITLE,
                    type: "text",
                    placeholder: "",
                    required: true
                }, {
                    label: "Content",
                    sublabel: _react2.default.createElement(
                        'div',
                        null,
                        'To add link use syntax as the following',
                        _react2.default.createElement('br', null),
                        "<a target='_blank' href='https://www.url.com'>Click Here</a>"
                    ),
                    name: _dbConfig.Dashboard.CONTENT,
                    type: "textarea",
                    placeholder: "",
                    required: true
                }, {
                    label: "Created By",
                    name: _dbConfig.Dashboard.CREATED_BY,
                    type: "number",
                    disabled: true,
                    hidden: true,
                    required: !edit
                }]);

                return ret;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_generalForm2.default, {
                dataTitle: 'Live Feed Management',
                entity: 'dashboard',
                entity_singular: 'Announcement',
                addButtonText: 'Add New Announcement',
                dataOffset: 10,
                tableHeader: this.tableHeader,
                newFormDefault: this.newFormDefault,
                getEditFormDefault: this.getEditFormDefault,
                getFormItem: this.getFormItem,
                renderRow: this.renderRow,
                getDataFromRes: this.getDataFromRes,
                loadData: this.loadData,
                successAddHandler: this.successAddHandler,
                formWillSubmit: this.formWillSubmit
            });
        }
    }]);

    return DashboardPage;
}(_react2.default.Component);

exports.default = DashboardPage;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _appConfig = __webpack_require__(4);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _reactRouterDom = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListBoard = function (_React$Component) {
    _inherits(ListBoard, _React$Component);

    function ListBoard(props) {
        _classCallCheck(this, ListBoard);

        var _this = _possibleConstructorReturn(this, (ListBoard.__proto__ || Object.getPrototypeOf(ListBoard)).call(this, props));

        _this.renderList = _this.renderList.bind(_this);

        _this.state = {};
        return _this;
    }

    _createClass(ListBoard, [{
        key: "renderList",
        value: function renderList(d, i) {
            return _react2.default.createElement(
                "div",
                { className: "lb-list-item" },
                this.props.renderList(d, i)
            );
        }
    }, {
        key: "render",
        value: function render() {
            var list = null;
            if (this.props.customList) {
                list = _react2.default.createElement(
                    "ul",
                    { className: "lb-list" },
                    this.props.customList
                );
            } else {
                list = _react2.default.createElement(_list2.default, _extends({}, this.props, {
                    // key={this.state.key}
                    // extraData={this.state.extraData}
                    // type="append-bottom"
                    isHidePagingTop: true,
                    pageClass: "lb-paging",
                    type: "list",
                    listClass: "lb-list"
                    // listRef={v => (this.dashBody = v)}
                    , loadData: this.props.loadData,
                    getDataFromRes: this.props.getDataFromRes,
                    renderList: this.renderList,
                    appendText: this.props.appendText
                    // hideLoadMore={this.props.hideLoadMore}
                    , offset: this.props.offset
                }));
            }
            return _react2.default.createElement(
                "div",
                { className: "list-board" },
                !this.props.action_text ? null : _react2.default.createElement(
                    "div",
                    null,
                    _react2.default.createElement(
                        _reactRouterDom.NavLink,
                        { className: "lb-action", to: _appConfig.AppPath + "/" + this.props.action_to },
                        _react2.default.createElement("i", { className: "fa fa-" + this.props.action_icon + " left" }),
                        this.props.action_text
                    )
                ),
                _react2.default.createElement(
                    "div",
                    { className: "lb-title" },
                    _react2.default.createElement("i", { className: "fa fa-" + this.props.icon + " left" }),
                    this.props.title
                ),
                list
            );
        }
    }]);

    return ListBoard;
}(_react2.default.Component);

exports.default = ListBoard;

ListBoard.propTypes = {};

ListBoard.defaultProps = {};

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(83),
    _assign = __webpack_require__(18);

var ReactNoopUpdateQueue = __webpack_require__(187);

var canDefineProperty = __webpack_require__(188);
var emptyObject = __webpack_require__(99);
var invariant = __webpack_require__(10);
var lowPriorityWarning = __webpack_require__(307);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (false) {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var warning = __webpack_require__(16);

function warnNoop(publicInstance, callerName) {
  if (false) {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var canDefineProperty = false;
if (false) {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = __webpack_require__(315);
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ExecutionEnvironment = __webpack_require__(29);

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = __webpack_require__(58);

var invariant = __webpack_require__(10);

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactDOMComponentTree = __webpack_require__(20);

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(inst) {
  return inst._wrapperState.valueTracker;
}

function attachTracker(inst, tracker) {
  inst._wrapperState.valueTracker = tracker;
}

function detachTracker(inst) {
  inst._wrapperState.valueTracker = null;
}

function getValueFromNode(node) {
  var value;
  if (node) {
    value = isCheckable(node) ? '' + node.checked : node.value;
  }
  return value;
}

var inputValueTracking = {
  // exposed for testing
  _getTrackerFromNode: function (node) {
    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
  },


  track: function (inst) {
    if (getTracker(inst)) {
      return;
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var valueField = isCheckable(node) ? 'checked' : 'value';
    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

    var currentValue = '' + node[valueField];

    // if someone has already defined a value or Safari, then bail
    // and don't track value will cause over reporting of changes,
    // but it's better then a hard failure
    // (needed for certain tests that spyOn input values and Safari)
    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
      return;
    }

    Object.defineProperty(node, valueField, {
      enumerable: descriptor.enumerable,
      configurable: true,
      get: function () {
        return descriptor.get.call(this);
      },
      set: function (value) {
        currentValue = '' + value;
        descriptor.set.call(this, value);
      }
    });

    attachTracker(inst, {
      getValue: function () {
        return currentValue;
      },
      setValue: function (value) {
        currentValue = '' + value;
      },
      stopTracking: function () {
        detachTracker(inst);
        delete node[valueField];
      }
    });
  },

  updateValueIfChanged: function (inst) {
    if (!inst) {
      return false;
    }
    var tracker = getTracker(inst);

    if (!tracker) {
      inputValueTracking.track(inst);
      return true;
    }

    var lastValue = tracker.getValue();
    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

    if (nextValue !== lastValue) {
      tracker.setValue(nextValue);
      return true;
    }

    return false;
  },
  stopTracking: function (inst) {
    var tracker = getTracker(inst);
    if (tracker) {
      tracker.stopTracking();
    }
  }
};

module.exports = inputValueTracking;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ViewportMetrics = {
  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }
};

module.exports = ViewportMetrics;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ExecutionEnvironment = __webpack_require__(29);
var escapeTextContentForBrowser = __webpack_require__(103);
var setInnerHTML = __webpack_require__(102);

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMProperty = __webpack_require__(70);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactInstrumentation = __webpack_require__(38);

var quoteAttributeValueForBrowser = __webpack_require__(351);
var warning = __webpack_require__(16);

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {
  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (false) {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (false) {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (false) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (false) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }
};

module.exports = DOMPropertyOperations;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var LinkedValueUtils = __webpack_require__(138);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactUpdates = __webpack_require__(40);

var warning = __webpack_require__(16);

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (false) {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14),
    _assign = __webpack_require__(18);

var ReactCompositeComponent = __webpack_require__(360);
var ReactEmptyComponent = __webpack_require__(208);
var ReactHostComponent = __webpack_require__(209);

var getNextDebugID = __webpack_require__(361);
var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (false) {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
       true ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (false) {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (false) {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var React = __webpack_require__(68);

var invariant = __webpack_require__(10);

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var ReactCurrentOwner = __webpack_require__(43);
var REACT_ELEMENT_TYPE = __webpack_require__(362);

var getIteratorFn = __webpack_require__(363);
var invariant = __webpack_require__(10);
var KeyEscapeUtils = __webpack_require__(142);
var warning = __webpack_require__(16);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (false) {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (false) {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(83);

var ReactCurrentOwner = __webpack_require__(43);

var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty
  // Strip regex characters so we can use it for regex
  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
  // Remove hasOwnProperty from the template to make it generic
  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs,

  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
    if (typeof console.reactStack !== 'function') {
      return;
    }

    var stack = [];
    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    try {
      if (isCreatingElement) {
        stack.push({
          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
          fileName: currentSource ? currentSource.fileName : null,
          lineNumber: currentSource ? currentSource.lineNumber : null
        });
      }

      while (id) {
        var element = ReactComponentTreeHook.getElement(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
        var source = element && element._source;
        stack.push({
          name: ownerName,
          fileName: source ? source.fileName : null,
          lineNumber: source ? source.lineNumber : null
        });
        id = parentID;
      }
    } catch (err) {
      // Internal state is messed up.
      // Stop building the stack (it's just a nice to have).
    }

    console.reactStack(stack);
  },
  popNonStandardWarningStack: function () {
    if (typeof console.reactStackEnd !== 'function') {
      return;
    }
    console.reactStackEnd();
  }
};

module.exports = ReactComponentTreeHook;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(39);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (false) {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactDOMSelection = __webpack_require__(375);

var containsNode = __webpack_require__(377);
var focusNode = __webpack_require__(202);
var getActiveElement = __webpack_require__(214);

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {
  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var DOMLazyTree = __webpack_require__(72);
var DOMProperty = __webpack_require__(70);
var React = __webpack_require__(68);
var ReactBrowserEventEmitter = __webpack_require__(104);
var ReactCurrentOwner = __webpack_require__(43);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactDOMContainerInfo = __webpack_require__(392);
var ReactDOMFeatureFlags = __webpack_require__(393);
var ReactFeatureFlags = __webpack_require__(197);
var ReactInstanceMap = __webpack_require__(87);
var ReactInstrumentation = __webpack_require__(38);
var ReactMarkupChecksum = __webpack_require__(394);
var ReactReconciler = __webpack_require__(71);
var ReactUpdateQueue = __webpack_require__(143);
var ReactUpdates = __webpack_require__(40);

var emptyObject = __webpack_require__(99);
var instantiateReactComponent = __webpack_require__(206);
var invariant = __webpack_require__(10);
var setInnerHTML = __webpack_require__(102);
var shouldUpdateReactComponent = __webpack_require__(141);
var warning = __webpack_require__(16);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (false) {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (false) {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (false) {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, {
      child: nextElement
    });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (false) {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (false) {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (false) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (false) {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactNodeTypes = __webpack_require__(207);

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;

/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(73);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var isModifiedEvent = function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
};

/**
 * The public API for rendering a history-aware <a>.
 */

var Link = function (_React$Component) {
  _inherits(Link, _React$Component);

  function Link() {
    var _temp, _this, _ret;

    _classCallCheck(this, Link);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
      if (_this.props.onClick) _this.props.onClick(event);

      if (!event.defaultPrevented && // onClick prevented default
      event.button === 0 && // ignore everything but left clicks
      !_this.props.target && // let browser handle "target=_blank" etc.
      !isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
          event.preventDefault();

          var history = _this.context.router.history;
          var _this$props = _this.props,
              replace = _this$props.replace,
              to = _this$props.to;


          if (replace) {
            history.replace(to);
          } else {
            history.push(to);
          }
        }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Link.prototype.render = function render() {
    var _props = this.props,
        replace = _props.replace,
        to = _props.to,
        innerRef = _props.innerRef,
        props = _objectWithoutProperties(_props, ["replace", "to", "innerRef"]); // eslint-disable-line no-unused-vars

    __WEBPACK_IMPORTED_MODULE_2_invariant___default()(this.context.router, "You should not use <Link> outside a <Router>");

    __WEBPACK_IMPORTED_MODULE_2_invariant___default()(to !== undefined, 'You must specify the "to" property');

    var history = this.context.router.history;

    var location = typeof to === "string" ? Object(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(to, null, null, history.location) : to;

    var href = history.createHref(location);
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("a", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));
  };

  return Link;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Link.propTypes = {
  onClick: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
  target: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
  replace: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  to: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object]).isRequired,
  innerRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func])
};
Link.defaultProps = {
  replace: false
};
Link.contextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
    history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
      push: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,
      replace: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,
      createHref: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired
    }).isRequired
  }).isRequired
};


/* harmony default export */ __webpack_exports__["a"] = (Link);

/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Route__ = __webpack_require__(219);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Route__["a" /* default */]);

/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__matchPath__ = __webpack_require__(148);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var isEmptyChildren = function isEmptyChildren(children) {
  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.count(children) === 0;
};

/**
 * The public API for matching a single path and rendering.
 */

var Route = function (_React$Component) {
  _inherits(Route, _React$Component);

  function Route() {
    var _temp, _this, _ret;

    _classCallCheck(this, Route);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      match: _this.computeMatch(_this.props, _this.context.router)
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Route.prototype.getChildContext = function getChildContext() {
    return {
      router: _extends({}, this.context.router, {
        route: {
          location: this.props.location || this.context.router.route.location,
          match: this.state.match
        }
      })
    };
  };

  Route.prototype.computeMatch = function computeMatch(_ref, router) {
    var computedMatch = _ref.computedMatch,
        location = _ref.location,
        path = _ref.path,
        strict = _ref.strict,
        exact = _ref.exact,
        sensitive = _ref.sensitive;

    if (computedMatch) return computedMatch; // <Switch> already computed the match for us

    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(router, "You should not use <Route> or withRouter() outside a <Router>");

    var route = router.route;

    var pathname = (location || route.location).pathname;

    return Object(__WEBPACK_IMPORTED_MODULE_4__matchPath__["a" /* default */])(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }, route.match);
  };

  Route.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored");

    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored");

    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored");
  };

  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');

    this.setState({
      match: this.computeMatch(nextProps, nextContext.router)
    });
  };

  Route.prototype.render = function render() {
    var match = this.state.match;
    var _props = this.props,
        children = _props.children,
        component = _props.component,
        render = _props.render;
    var _context$router = this.context.router,
        history = _context$router.history,
        route = _context$router.route,
        staticContext = _context$router.staticContext;

    var location = this.props.location || route.location;
    var props = { match: match, location: location, history: history, staticContext: staticContext };

    if (component) return match ? __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(component, props) : null;

    if (render) return match ? render(props) : null;

    if (typeof children === "function") return children(props);

    if (children && !isEmptyChildren(children)) return __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.only(children);

    return null;
  };

  return Route;
}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

Route.propTypes = {
  computedMatch: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object, // private, from <Switch>
  path: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string,
  exact: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,
  strict: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,
  sensitive: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,
  component: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func,
  render: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func,
  children: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.node]),
  location: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
};
Route.contextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.shape({
    history: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,
    route: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,
    staticContext: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
  })
};
Route.childContextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired
};


/* harmony default export */ __webpack_exports__["a"] = (Route);

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

var isarray = __webpack_require__(409)

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = res[2] || defaultDelimiter
    var pattern = capture || group

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options))
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}


/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_path_to_regexp__);


var patternCache = {};
var cacheLimit = 10000;
var cacheCount = 0;

var compileGenerator = function compileGenerator(pattern) {
  var cacheKey = pattern;
  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

  if (cache[pattern]) return cache[pattern];

  var compiledGenerator = __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default.a.compile(pattern);

  if (cacheCount < cacheLimit) {
    cache[pattern] = compiledGenerator;
    cacheCount++;
  }

  return compiledGenerator;
};

/**
 * Public API for generating a URL pathname from a pattern and parameters.
 */
var generatePath = function generatePath() {
  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (pattern === "/") {
    return pattern;
  }
  var generator = compileGenerator(pattern);
  return generator(params, { pretty: true });
};

/* harmony default export */ __webpack_exports__["a"] = (generatePath);

/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _inheritsLoose;
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return subscriptionShape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return storeShape; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_prop_types__);

var subscriptionShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({
  trySubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  tryUnsubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  notifyNestedSubs: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  isSubscribed: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired
});
var storeShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({
  subscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  dispatch: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  getState: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired
});

/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = connectAdvanced;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_assertThisInitialized__ = __webpack_require__(424);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_esm_extends__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_hoist_non_react_statics__ = __webpack_require__(425);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_hoist_non_react_statics__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_is__ = __webpack_require__(128);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_is___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_react_is__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_Subscription__ = __webpack_require__(426);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utils_PropTypes__ = __webpack_require__(223);










var hotReloadingVersion = 0;
var dummyState = {};

function noop() {}

function makeSelectorStateful(sourceSelector, store) {
  // wrap the selector in an object that tracks its results between runs.
  var selector = {
    run: function runComponentSelector(props) {
      try {
        var nextProps = sourceSelector(store.getState(), props);

        if (nextProps !== selector.props || selector.error) {
          selector.shouldComponentUpdate = true;
          selector.props = nextProps;
          selector.error = null;
        }
      } catch (error) {
        selector.shouldComponentUpdate = true;
        selector.error = error;
      }
    }
  };
  return selector;
}

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
     export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  var _contextTypes, _childContextTypes;

  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      connectOptions = Object(__WEBPACK_IMPORTED_MODULE_3__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef"]);

  var subscriptionKey = storeKey + 'Subscription';
  var version = hotReloadingVersion++;
  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = __WEBPACK_IMPORTED_MODULE_9__utils_PropTypes__["a" /* storeShape */], _contextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_9__utils_PropTypes__["b" /* subscriptionShape */], _contextTypes);
  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_9__utils_PropTypes__["b" /* subscriptionShape */], _childContextTypes);
  return function wrapWithConnect(WrappedComponent) {
    __WEBPACK_IMPORTED_MODULE_5_invariant___default()(Object(__WEBPACK_IMPORTED_MODULE_7_react_is__["isValidElementType"])(WrappedComponent), "You must pass a component to the function returned by " + (methodName + ". Instead received " + JSON.stringify(WrappedComponent)));
    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = Object(__WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_esm_extends__["a" /* default */])({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      withRef: withRef,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent // TODO Actually fix our use of componentWillReceiveProps

      /* eslint-disable react/no-deprecated */

    });

    var Connect =
    /*#__PURE__*/
    function (_Component) {
      Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Connect, _Component);

      function Connect(props, context) {
        var _this;

        _this = _Component.call(this, props, context) || this;
        _this.version = version;
        _this.state = {};
        _this.renderCount = 0;
        _this.store = props[storeKey] || context[storeKey];
        _this.propsMode = Boolean(props[storeKey]);
        _this.setWrappedInstance = _this.setWrappedInstance.bind(Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_assertThisInitialized__["a" /* default */])(_this)));
        __WEBPACK_IMPORTED_MODULE_5_invariant___default()(_this.store, "Could not find \"" + storeKey + "\" in either the context or props of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + ("or explicitly pass \"" + storeKey + "\" as a prop to \"" + displayName + "\"."));

        _this.initSelector();

        _this.initSubscription();

        return _this;
      }

      var _proto = Connect.prototype;

      _proto.getChildContext = function getChildContext() {
        var _ref3;

        // If this component received store from props, its subscription should be transparent
        // to any descendants receiving store+subscription from context; it passes along
        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
        // Connect to control ordering of notifications to flow top-down.
        var subscription = this.propsMode ? null : this.subscription;
        return _ref3 = {}, _ref3[subscriptionKey] = subscription || this.context[subscriptionKey], _ref3;
      };

      _proto.componentDidMount = function componentDidMount() {
        if (!shouldHandleStateChanges) return; // componentWillMount fires during server side rendering, but componentDidMount and
        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
        // To handle the case where a child component may have triggered a state change by
        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
        // re-render.

        this.subscription.trySubscribe();
        this.selector.run(this.props);
        if (this.selector.shouldComponentUpdate) this.forceUpdate();
      };

      _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        this.selector.run(nextProps);
      };

      _proto.shouldComponentUpdate = function shouldComponentUpdate() {
        return this.selector.shouldComponentUpdate;
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        if (this.subscription) this.subscription.tryUnsubscribe();
        this.subscription = null;
        this.notifyNestedSubs = noop;
        this.store = null;
        this.selector.run = noop;
        this.selector.shouldComponentUpdate = false;
      };

      _proto.getWrappedInstance = function getWrappedInstance() {
        __WEBPACK_IMPORTED_MODULE_5_invariant___default()(withRef, "To access the wrapped instance, you need to specify " + ("{ withRef: true } in the options argument of the " + methodName + "() call."));
        return this.wrappedInstance;
      };

      _proto.setWrappedInstance = function setWrappedInstance(ref) {
        this.wrappedInstance = ref;
      };

      _proto.initSelector = function initSelector() {
        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
        this.selector = makeSelectorStateful(sourceSelector, this.store);
        this.selector.run(this.props);
      };

      _proto.initSubscription = function initSubscription() {
        if (!shouldHandleStateChanges) return; // parentSub's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
        this.subscription = new __WEBPACK_IMPORTED_MODULE_8__utils_Subscription__["a" /* default */](this.store, parentSub, this.onStateChange.bind(this)); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `this.subscription` will then be null. An
        // extra null check every change can be avoided by copying the method onto `this` and then
        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
        // listeners logic is changed to not call listeners that have been unsubscribed in the
        // middle of the notification loop.

        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
      };

      _proto.onStateChange = function onStateChange() {
        this.selector.run(this.props);

        if (!this.selector.shouldComponentUpdate) {
          this.notifyNestedSubs();
        } else {
          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
          this.setState(dummyState);
        }
      };

      _proto.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
        // needs to notify nested subs. Once called, it unimplements itself until further state
        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
        // a boolean check every time avoids an extra method call most of the time, resulting
        // in some perf boost.
        this.componentDidUpdate = undefined;
        this.notifyNestedSubs();
      };

      _proto.isSubscribed = function isSubscribed() {
        return Boolean(this.subscription) && this.subscription.isSubscribed();
      };

      _proto.addExtraProps = function addExtraProps(props) {
        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props; // make a shallow copy so that fields added don't leak to the original selector.
        // this is especially important for 'ref' since that's a reference back to the component
        // instance. a singleton memoized selector would then be holding a reference to the
        // instance, preventing the instance from being garbage collected, and that would be bad

        var withExtras = Object(__WEBPACK_IMPORTED_MODULE_2__babel_runtime_helpers_esm_extends__["a" /* default */])({}, props);

        if (withRef) withExtras.ref = this.setWrappedInstance;
        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
        return withExtras;
      };

      _proto.render = function render() {
        var selector = this.selector;
        selector.shouldComponentUpdate = false;

        if (selector.error) {
          throw selector.error;
        } else {
          return Object(__WEBPACK_IMPORTED_MODULE_6_react__["createElement"])(WrappedComponent, this.addExtraProps(selector.props));
        }
      };

      return Connect;
    }(__WEBPACK_IMPORTED_MODULE_6_react__["Component"]);
    /* eslint-enable react/no-deprecated */


    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;
    Connect.childContextTypes = childContextTypes;
    Connect.contextTypes = contextTypes;
    Connect.propTypes = contextTypes;

    if (false) {
      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
        var _this2 = this;

        // We are hot reloading!
        if (this.version !== version) {
          this.version = version;
          this.initSelector(); // If any connected descendants don't hot reload (and resubscribe in the process), their
          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
          // listeners, this does mean that the old versions of connected descendants will still be
          // notified of state changes; however, their onStateChange function is a no-op so this
          // isn't a huge deal.

          var oldListeners = [];

          if (this.subscription) {
            oldListeners = this.subscription.listeners.get();
            this.subscription.tryUnsubscribe();
          }

          this.initSubscription();

          if (shouldHandleStateChanges) {
            this.subscription.trySubscribe();
            oldListeners.forEach(function (listener) {
              return _this2.subscription.listeners.subscribe(listener);
            });
          }
        }
      };
    }

    return __WEBPACK_IMPORTED_MODULE_4_hoist_non_react_statics___default()(Connect, WrappedComponent);
  };
}

/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActionTypes; });
/* harmony export (immutable) */ __webpack_exports__["b"] = createStore;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(438);



/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var ActionTypes = {
  INIT: '@@redux/INIT'

  /**
   * Creates a Redux store that holds the state tree.
   * The only way to change the data in the store is to call `dispatch()` on it.
   *
   * There should only be a single store in your app. To specify how different
   * parts of the state tree respond to actions, you may combine several reducers
   * into a single reducer function by using `combineReducers`.
   *
   * @param {Function} reducer A function that returns the next state tree, given
   * the current state tree and the action to handle.
   *
   * @param {any} [preloadedState] The initial state. You may optionally specify it
   * to hydrate the state from the server in universal apps, or to restore a
   * previously serialized user session.
   * If you use `combineReducers` to produce the root reducer function, this must be
   * an object with the same shape as `combineReducers` keys.
   *
   * @param {Function} [enhancer] The store enhancer. You may optionally specify it
   * to enhance the store with third-party capabilities such as middleware,
   * time travel, persistence, etc. The only store enhancer that ships with Redux
   * is `applyMiddleware()`.
   *
   * @returns {Store} A Redux store that lets you read the state, dispatch actions
   * and subscribe to changes.
   */
};function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */
  function getState() {
    return currentState;
  }

  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */
  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */
  function dispatch(action) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__["a" /* default */])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }

  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */
  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */
  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[__WEBPACK_IMPORTED_MODULE_1_symbol_observable__["a" /* default */]] = function () {
      return this;
    }, _ref;
  }

  // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.
  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[__WEBPACK_IMPORTED_MODULE_1_symbol_observable__["a" /* default */]] = observable, _ref2;
}

/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(430);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__ = __webpack_require__(435);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__ = __webpack_require__(437);




/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!Object(__WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__["a" /* default */])(value) || Object(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__["a" /* default */])(value) != objectTag) {
    return false;
  }
  var proto = Object(__WEBPACK_IMPORTED_MODULE_1__getPrototype_js__["a" /* default */])(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/* harmony default export */ __webpack_exports__["a"] = (isPlainObject);


/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(431);


/** Built-in value references. */
var Symbol = __WEBPACK_IMPORTED_MODULE_0__root_js__["a" /* default */].Symbol;

/* harmony default export */ __webpack_exports__["a"] = (Symbol);


/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export default */
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
}

/***/ }),
/* 229 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = compose;
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */

function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}

/***/ }),
/* 230 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = wrapMapToPropsConstant;
/* unused harmony export getDependsOnOwnProps */
/* harmony export (immutable) */ __webpack_exports__["b"] = wrapMapToPropsFunc;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(231);

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
// 
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
// 
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//    
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//    
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//    

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (false) verifyPlainObject(props, displayName, methodName);
      return props;
    };

    return proxy;
  };
}

/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isPlainObject__ = __webpack_require__(444);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__warning__ = __webpack_require__(149);


function verifyPlainObject(value, displayName, methodName) {
  if (!Object(__WEBPACK_IMPORTED_MODULE_0__isPlainObject__["a" /* default */])(value)) {
    Object(__WEBPACK_IMPORTED_MODULE_1__warning__["a" /* default */])(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}

/***/ }),
/* 232 */
/***/ (function(module, exports) {

/**
 * Parses an URI
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */

var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

var parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];

module.exports = function parseuri(str) {
    var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }

    var m = re.exec(str || ''),
        uri = {},
        i = 14;

    while (i--) {
        uri[parts[i]] = m[i] || '';
    }

    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }

    return uri;
};


/***/ }),
/* 233 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {
module.exports = isBuf;

var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';
var withNativeArrayBuffer = typeof ArrayBuffer === 'function';

var isView = function (obj) {
  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);
};

/**
 * Returns true if obj is a buffer or an arraybuffer.
 *
 * @api private
 */

function isBuf(obj) {
  return (withNativeBuffer && Buffer.isBuffer(obj)) ||
          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(152).Buffer))

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var eio = __webpack_require__(466);
var Socket = __webpack_require__(241);
var Emitter = __webpack_require__(242);
var parser = __webpack_require__(151);
var on = __webpack_require__(243);
var bind = __webpack_require__(244);
var debug = __webpack_require__(107)('socket.io-client:manager');
var indexOf = __webpack_require__(240);
var Backoff = __webpack_require__(483);

/**
 * IE6+ hasOwnProperty
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Module exports
 */

module.exports = Manager;

/**
 * `Manager` constructor.
 *
 * @param {String} engine instance or engine uri/opts
 * @param {Object} options
 * @api public
 */

function Manager (uri, opts) {
  if (!(this instanceof Manager)) return new Manager(uri, opts);
  if (uri && ('object' === typeof uri)) {
    opts = uri;
    uri = undefined;
  }
  opts = opts || {};

  opts.path = opts.path || '/socket.io';
  this.nsps = {};
  this.subs = [];
  this.opts = opts;
  this.reconnection(opts.reconnection !== false);
  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
  this.reconnectionDelay(opts.reconnectionDelay || 1000);
  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
  this.randomizationFactor(opts.randomizationFactor || 0.5);
  this.backoff = new Backoff({
    min: this.reconnectionDelay(),
    max: this.reconnectionDelayMax(),
    jitter: this.randomizationFactor()
  });
  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
  this.readyState = 'closed';
  this.uri = uri;
  this.connecting = [];
  this.lastPing = null;
  this.encoding = false;
  this.packetBuffer = [];
  var _parser = opts.parser || parser;
  this.encoder = new _parser.Encoder();
  this.decoder = new _parser.Decoder();
  this.autoConnect = opts.autoConnect !== false;
  if (this.autoConnect) this.open();
}

/**
 * Propagate given event to sockets and emit on `this`
 *
 * @api private
 */

Manager.prototype.emitAll = function () {
  this.emit.apply(this, arguments);
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
    }
  }
};

/**
 * Update `socket.id` of all sockets
 *
 * @api private
 */

Manager.prototype.updateSocketIds = function () {
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].id = this.generateId(nsp);
    }
  }
};

/**
 * generate `socket.id` for the given `nsp`
 *
 * @param {String} nsp
 * @return {String}
 * @api private
 */

Manager.prototype.generateId = function (nsp) {
  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;
};

/**
 * Mix in `Emitter`.
 */

Emitter(Manager.prototype);

/**
 * Sets the `reconnection` config.
 *
 * @param {Boolean} true/false if it should automatically reconnect
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnection = function (v) {
  if (!arguments.length) return this._reconnection;
  this._reconnection = !!v;
  return this;
};

/**
 * Sets the reconnection attempts config.
 *
 * @param {Number} max reconnection attempts before giving up
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionAttempts = function (v) {
  if (!arguments.length) return this._reconnectionAttempts;
  this._reconnectionAttempts = v;
  return this;
};

/**
 * Sets the delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelay = function (v) {
  if (!arguments.length) return this._reconnectionDelay;
  this._reconnectionDelay = v;
  this.backoff && this.backoff.setMin(v);
  return this;
};

Manager.prototype.randomizationFactor = function (v) {
  if (!arguments.length) return this._randomizationFactor;
  this._randomizationFactor = v;
  this.backoff && this.backoff.setJitter(v);
  return this;
};

/**
 * Sets the maximum delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelayMax = function (v) {
  if (!arguments.length) return this._reconnectionDelayMax;
  this._reconnectionDelayMax = v;
  this.backoff && this.backoff.setMax(v);
  return this;
};

/**
 * Sets the connection timeout. `false` to disable
 *
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.timeout = function (v) {
  if (!arguments.length) return this._timeout;
  this._timeout = v;
  return this;
};

/**
 * Starts trying to reconnect if reconnection is enabled and we have not
 * started reconnecting yet
 *
 * @api private
 */

Manager.prototype.maybeReconnectOnOpen = function () {
  // Only try to reconnect if it's the first time we're connecting
  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
    // keeps reconnection from firing twice for the same reconnection loop
    this.reconnect();
  }
};

/**
 * Sets the current transport `socket`.
 *
 * @param {Function} optional, callback
 * @return {Manager} self
 * @api public
 */

Manager.prototype.open =
Manager.prototype.connect = function (fn, opts) {
  debug('readyState %s', this.readyState);
  if (~this.readyState.indexOf('open')) return this;

  debug('opening %s', this.uri);
  this.engine = eio(this.uri, this.opts);
  var socket = this.engine;
  var self = this;
  this.readyState = 'opening';
  this.skipReconnect = false;

  // emit `open`
  var openSub = on(socket, 'open', function () {
    self.onopen();
    fn && fn();
  });

  // emit `connect_error`
  var errorSub = on(socket, 'error', function (data) {
    debug('connect_error');
    self.cleanup();
    self.readyState = 'closed';
    self.emitAll('connect_error', data);
    if (fn) {
      var err = new Error('Connection error');
      err.data = data;
      fn(err);
    } else {
      // Only do this if there is no fn to handle the error
      self.maybeReconnectOnOpen();
    }
  });

  // emit `connect_timeout`
  if (false !== this._timeout) {
    var timeout = this._timeout;
    debug('connect attempt will timeout after %d', timeout);

    // set timer
    var timer = setTimeout(function () {
      debug('connect attempt timed out after %d', timeout);
      openSub.destroy();
      socket.close();
      socket.emit('error', 'timeout');
      self.emitAll('connect_timeout', timeout);
    }, timeout);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }

  this.subs.push(openSub);
  this.subs.push(errorSub);

  return this;
};

/**
 * Called upon transport open.
 *
 * @api private
 */

Manager.prototype.onopen = function () {
  debug('open');

  // clear old subs
  this.cleanup();

  // mark as open
  this.readyState = 'open';
  this.emit('open');

  // add new subs
  var socket = this.engine;
  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
};

/**
 * Called upon a ping.
 *
 * @api private
 */

Manager.prototype.onping = function () {
  this.lastPing = new Date();
  this.emitAll('ping');
};

/**
 * Called upon a packet.
 *
 * @api private
 */

Manager.prototype.onpong = function () {
  this.emitAll('pong', new Date() - this.lastPing);
};

/**
 * Called with data.
 *
 * @api private
 */

Manager.prototype.ondata = function (data) {
  this.decoder.add(data);
};

/**
 * Called when parser fully decodes a packet.
 *
 * @api private
 */

Manager.prototype.ondecoded = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon socket error.
 *
 * @api private
 */

Manager.prototype.onerror = function (err) {
  debug('error', err);
  this.emitAll('error', err);
};

/**
 * Creates a new socket for the given `nsp`.
 *
 * @return {Socket}
 * @api public
 */

Manager.prototype.socket = function (nsp, opts) {
  var socket = this.nsps[nsp];
  if (!socket) {
    socket = new Socket(this, nsp, opts);
    this.nsps[nsp] = socket;
    var self = this;
    socket.on('connecting', onConnecting);
    socket.on('connect', function () {
      socket.id = self.generateId(nsp);
    });

    if (this.autoConnect) {
      // manually call here since connecting event is fired before listening
      onConnecting();
    }
  }

  function onConnecting () {
    if (!~indexOf(self.connecting, socket)) {
      self.connecting.push(socket);
    }
  }

  return socket;
};

/**
 * Called upon a socket close.
 *
 * @param {Socket} socket
 */

Manager.prototype.destroy = function (socket) {
  var index = indexOf(this.connecting, socket);
  if (~index) this.connecting.splice(index, 1);
  if (this.connecting.length) return;

  this.close();
};

/**
 * Writes a packet.
 *
 * @param {Object} packet
 * @api private
 */

Manager.prototype.packet = function (packet) {
  debug('writing packet %j', packet);
  var self = this;
  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

  if (!self.encoding) {
    // encode, then write to engine with result
    self.encoding = true;
    this.encoder.encode(packet, function (encodedPackets) {
      for (var i = 0; i < encodedPackets.length; i++) {
        self.engine.write(encodedPackets[i], packet.options);
      }
      self.encoding = false;
      self.processPacketQueue();
    });
  } else { // add packet to the queue
    self.packetBuffer.push(packet);
  }
};

/**
 * If packet buffer is non-empty, begins encoding the
 * next packet in line.
 *
 * @api private
 */

Manager.prototype.processPacketQueue = function () {
  if (this.packetBuffer.length > 0 && !this.encoding) {
    var pack = this.packetBuffer.shift();
    this.packet(pack);
  }
};

/**
 * Clean up transport subscriptions and packet buffer.
 *
 * @api private
 */

Manager.prototype.cleanup = function () {
  debug('cleanup');

  var subsLength = this.subs.length;
  for (var i = 0; i < subsLength; i++) {
    var sub = this.subs.shift();
    sub.destroy();
  }

  this.packetBuffer = [];
  this.encoding = false;
  this.lastPing = null;

  this.decoder.destroy();
};

/**
 * Close the current socket.
 *
 * @api private
 */

Manager.prototype.close =
Manager.prototype.disconnect = function () {
  debug('disconnect');
  this.skipReconnect = true;
  this.reconnecting = false;
  if ('opening' === this.readyState) {
    // `onclose` will not fire because
    // an open event never happened
    this.cleanup();
  }
  this.backoff.reset();
  this.readyState = 'closed';
  if (this.engine) this.engine.close();
};

/**
 * Called upon engine close.
 *
 * @api private
 */

Manager.prototype.onclose = function (reason) {
  debug('onclose');

  this.cleanup();
  this.backoff.reset();
  this.readyState = 'closed';
  this.emit('close', reason);

  if (this._reconnection && !this.skipReconnect) {
    this.reconnect();
  }
};

/**
 * Attempt a reconnection.
 *
 * @api private
 */

Manager.prototype.reconnect = function () {
  if (this.reconnecting || this.skipReconnect) return this;

  var self = this;

  if (this.backoff.attempts >= this._reconnectionAttempts) {
    debug('reconnect failed');
    this.backoff.reset();
    this.emitAll('reconnect_failed');
    this.reconnecting = false;
  } else {
    var delay = this.backoff.duration();
    debug('will wait %dms before reconnect attempt', delay);

    this.reconnecting = true;
    var timer = setTimeout(function () {
      if (self.skipReconnect) return;

      debug('attempting reconnect');
      self.emitAll('reconnect_attempt', self.backoff.attempts);
      self.emitAll('reconnecting', self.backoff.attempts);

      // check again for the case socket closed in above events
      if (self.skipReconnect) return;

      self.open(function (err) {
        if (err) {
          debug('reconnect attempt error');
          self.reconnecting = false;
          self.reconnect();
          self.emitAll('reconnect_error', err.data);
        } else {
          debug('reconnect success');
          self.onreconnect();
        }
      });
    }, delay);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }
};

/**
 * Called upon successful reconnect.
 *
 * @api private
 */

Manager.prototype.onreconnect = function () {
  var attempt = this.backoff.attempts;
  this.reconnecting = false;
  this.backoff.reset();
  this.updateSocketIds();
  this.emitAll('reconnect', attempt);
};


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies
 */

var XMLHttpRequest = __webpack_require__(153);
var XHR = __webpack_require__(469);
var JSONP = __webpack_require__(479);
var websocket = __webpack_require__(480);

/**
 * Export transports.
 */

exports.polling = polling;
exports.websocket = websocket;

/**
 * Polling transport polymorphic constructor.
 * Decides on xhr vs jsonp based on feature detection.
 *
 * @api private
 */

function polling (opts) {
  var xhr;
  var xd = false;
  var xs = false;
  var jsonp = false !== opts.jsonp;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    xd = opts.hostname !== location.hostname || port !== opts.port;
    xs = opts.secure !== isSSL;
  }

  opts.xdomain = xd;
  opts.xscheme = xs;
  xhr = new XMLHttpRequest(opts);

  if ('open' in xhr && !opts.forceJSONP) {
    return new XHR(opts);
  } else {
    if (!jsonp) throw new Error('JSONP disabled');
    return new JSONP(opts);
  }
}


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var Transport = __webpack_require__(154);
var parseqs = __webpack_require__(108);
var parser = __webpack_require__(74);
var inherit = __webpack_require__(109);
var yeast = __webpack_require__(239);
var debug = __webpack_require__(110)('engine.io-client:polling');

/**
 * Module exports.
 */

module.exports = Polling;

/**
 * Is XHR2 supported?
 */

var hasXHR2 = (function () {
  var XMLHttpRequest = __webpack_require__(153);
  var xhr = new XMLHttpRequest({ xdomain: false });
  return null != xhr.responseType;
})();

/**
 * Polling interface.
 *
 * @param {Object} opts
 * @api private
 */

function Polling (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (!hasXHR2 || forceBase64) {
    this.supportsBinary = false;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(Polling, Transport);

/**
 * Transport name.
 */

Polling.prototype.name = 'polling';

/**
 * Opens the socket (triggers polling). We write a PING message to determine
 * when the transport is open.
 *
 * @api private
 */

Polling.prototype.doOpen = function () {
  this.poll();
};

/**
 * Pauses polling.
 *
 * @param {Function} callback upon buffers are flushed and transport is paused
 * @api private
 */

Polling.prototype.pause = function (onPause) {
  var self = this;

  this.readyState = 'pausing';

  function pause () {
    debug('paused');
    self.readyState = 'paused';
    onPause();
  }

  if (this.polling || !this.writable) {
    var total = 0;

    if (this.polling) {
      debug('we are currently polling - waiting to pause');
      total++;
      this.once('pollComplete', function () {
        debug('pre-pause polling complete');
        --total || pause();
      });
    }

    if (!this.writable) {
      debug('we are currently writing - waiting to pause');
      total++;
      this.once('drain', function () {
        debug('pre-pause writing complete');
        --total || pause();
      });
    }
  } else {
    pause();
  }
};

/**
 * Starts polling cycle.
 *
 * @api public
 */

Polling.prototype.poll = function () {
  debug('polling');
  this.polling = true;
  this.doPoll();
  this.emit('poll');
};

/**
 * Overloads onData to detect payloads.
 *
 * @api private
 */

Polling.prototype.onData = function (data) {
  var self = this;
  debug('polling got data %s', data);
  var callback = function (packet, index, total) {
    // if its the first message we consider the transport open
    if ('opening' === self.readyState) {
      self.onOpen();
    }

    // if its a close packet, we close the ongoing requests
    if ('close' === packet.type) {
      self.onClose();
      return false;
    }

    // otherwise bypass onData and handle the message
    self.onPacket(packet);
  };

  // decode payload
  parser.decodePayload(data, this.socket.binaryType, callback);

  // if an event did not trigger closing
  if ('closed' !== this.readyState) {
    // if we got data we're not polling
    this.polling = false;
    this.emit('pollComplete');

    if ('open' === this.readyState) {
      this.poll();
    } else {
      debug('ignoring poll - transport state "%s"', this.readyState);
    }
  }
};

/**
 * For polling, send a close packet.
 *
 * @api private
 */

Polling.prototype.doClose = function () {
  var self = this;

  function close () {
    debug('writing close packet');
    self.write([{ type: 'close' }]);
  }

  if ('open' === this.readyState) {
    debug('transport open - closing');
    close();
  } else {
    // in case we're trying to close while
    // handshaking is in progress (GH-164)
    debug('transport not open - deferring close');
    this.once('open', close);
  }
};

/**
 * Writes a packets payload.
 *
 * @param {Array} data packets
 * @param {Function} drain callback
 * @api private
 */

Polling.prototype.write = function (packets) {
  var self = this;
  this.writable = false;
  var callbackfn = function () {
    self.writable = true;
    self.emit('drain');
  };

  parser.encodePayload(packets, this.supportsBinary, function (data) {
    self.doWrite(data, callbackfn);
  });
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

Polling.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'https' : 'http';
  var port = '';

  // cache busting is forced
  if (false !== this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  if (!this.supportsBinary && !query.sid) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // avoid port if default for schema
  if (this.port && (('https' === schema && Number(this.port) !== 443) ||
     ('http' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/* global Blob File */

/*
 * Module requirements.
 */

var isArray = __webpack_require__(471);

var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' ||
                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
var withNativeFile = typeof File === 'function' ||
                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

/**
 * Module exports.
 */

module.exports = hasBinary;

/**
 * Checks for binary data.
 *
 * Supports Buffer, ArrayBuffer, Blob and File.
 *
 * @param {Object} anything
 * @api public
 */

function hasBinary (obj) {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  if (isArray(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      if (hasBinary(obj[i])) {
        return true;
      }
    }
    return false;
  }

  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||
    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||
    (withNativeBlob && obj instanceof Blob) ||
    (withNativeFile && obj instanceof File)
  ) {
    return true;
  }

  // see: https://github.com/Automattic/has-binary/pull/4
  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
    return hasBinary(obj.toJSON(), true);
  }

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
      return true;
    }
  }

  return false;
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(152).Buffer))

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')
  , length = 64
  , map = {}
  , seed = 0
  , i = 0
  , prev;

/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
function encode(num) {
  var encoded = '';

  do {
    encoded = alphabet[num % length] + encoded;
    num = Math.floor(num / length);
  } while (num > 0);

  return encoded;
}

/**
 * Return the integer value specified by the given string.
 *
 * @param {String} str The string to convert.
 * @returns {Number} The integer value represented by the string.
 * @api public
 */
function decode(str) {
  var decoded = 0;

  for (i = 0; i < str.length; i++) {
    decoded = decoded * length + map[str.charAt(i)];
  }

  return decoded;
}

/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
function yeast() {
  var now = encode(+new Date());

  if (now !== prev) return seed = 0, prev = now;
  return now +'.'+ encode(seed++);
}

//
// Map each character to its index.
//
for (; i < length; i++) map[alphabet[i]] = i;

//
// Expose the `yeast`, `encode` and `decode` functions.
//
yeast.encode = encode;
yeast.decode = decode;
module.exports = yeast;


/***/ }),
/* 240 */
/***/ (function(module, exports) {


var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var parser = __webpack_require__(151);
var Emitter = __webpack_require__(242);
var toArray = __webpack_require__(482);
var on = __webpack_require__(243);
var bind = __webpack_require__(244);
var debug = __webpack_require__(107)('socket.io-client:socket');
var parseqs = __webpack_require__(108);
var hasBin = __webpack_require__(238);

/**
 * Module exports.
 */

module.exports = exports = Socket;

/**
 * Internal events (blacklisted).
 * These events can't be emitted by the user.
 *
 * @api private
 */

var events = {
  connect: 1,
  connect_error: 1,
  connect_timeout: 1,
  connecting: 1,
  disconnect: 1,
  error: 1,
  reconnect: 1,
  reconnect_attempt: 1,
  reconnect_failed: 1,
  reconnect_error: 1,
  reconnecting: 1,
  ping: 1,
  pong: 1
};

/**
 * Shortcut to `Emitter#emit`.
 */

var emit = Emitter.prototype.emit;

/**
 * `Socket` constructor.
 *
 * @api public
 */

function Socket (io, nsp, opts) {
  this.io = io;
  this.nsp = nsp;
  this.json = this; // compat
  this.ids = 0;
  this.acks = {};
  this.receiveBuffer = [];
  this.sendBuffer = [];
  this.connected = false;
  this.disconnected = true;
  this.flags = {};
  if (opts && opts.query) {
    this.query = opts.query;
  }
  if (this.io.autoConnect) this.open();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Subscribe to open, close and packet events
 *
 * @api private
 */

Socket.prototype.subEvents = function () {
  if (this.subs) return;

  var io = this.io;
  this.subs = [
    on(io, 'open', bind(this, 'onopen')),
    on(io, 'packet', bind(this, 'onpacket')),
    on(io, 'close', bind(this, 'onclose'))
  ];
};

/**
 * "Opens" the socket.
 *
 * @api public
 */

Socket.prototype.open =
Socket.prototype.connect = function () {
  if (this.connected) return this;

  this.subEvents();
  this.io.open(); // ensure open
  if ('open' === this.io.readyState) this.onopen();
  this.emit('connecting');
  return this;
};

/**
 * Sends a `message` event.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.send = function () {
  var args = toArray(arguments);
  args.unshift('message');
  this.emit.apply(this, args);
  return this;
};

/**
 * Override `emit`.
 * If the event is in `events`, it's emitted normally.
 *
 * @param {String} event name
 * @return {Socket} self
 * @api public
 */

Socket.prototype.emit = function (ev) {
  if (events.hasOwnProperty(ev)) {
    emit.apply(this, arguments);
    return this;
  }

  var args = toArray(arguments);
  var packet = {
    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
    data: args
  };

  packet.options = {};
  packet.options.compress = !this.flags || false !== this.flags.compress;

  // event ack callback
  if ('function' === typeof args[args.length - 1]) {
    debug('emitting packet with ack id %d', this.ids);
    this.acks[this.ids] = args.pop();
    packet.id = this.ids++;
  }

  if (this.connected) {
    this.packet(packet);
  } else {
    this.sendBuffer.push(packet);
  }

  this.flags = {};

  return this;
};

/**
 * Sends a packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.packet = function (packet) {
  packet.nsp = this.nsp;
  this.io.packet(packet);
};

/**
 * Called upon engine `open`.
 *
 * @api private
 */

Socket.prototype.onopen = function () {
  debug('transport is open - connecting');

  // write connect packet if necessary
  if ('/' !== this.nsp) {
    if (this.query) {
      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;
      debug('sending connect packet with query %s', query);
      this.packet({type: parser.CONNECT, query: query});
    } else {
      this.packet({type: parser.CONNECT});
    }
  }
};

/**
 * Called upon engine `close`.
 *
 * @param {String} reason
 * @api private
 */

Socket.prototype.onclose = function (reason) {
  debug('close (%s)', reason);
  this.connected = false;
  this.disconnected = true;
  delete this.id;
  this.emit('disconnect', reason);
};

/**
 * Called with socket packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onpacket = function (packet) {
  var sameNamespace = packet.nsp === this.nsp;
  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';

  if (!sameNamespace && !rootNamespaceError) return;

  switch (packet.type) {
    case parser.CONNECT:
      this.onconnect();
      break;

    case parser.EVENT:
      this.onevent(packet);
      break;

    case parser.BINARY_EVENT:
      this.onevent(packet);
      break;

    case parser.ACK:
      this.onack(packet);
      break;

    case parser.BINARY_ACK:
      this.onack(packet);
      break;

    case parser.DISCONNECT:
      this.ondisconnect();
      break;

    case parser.ERROR:
      this.emit('error', packet.data);
      break;
  }
};

/**
 * Called upon a server event.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onevent = function (packet) {
  var args = packet.data || [];
  debug('emitting event %j', args);

  if (null != packet.id) {
    debug('attaching ack callback to event');
    args.push(this.ack(packet.id));
  }

  if (this.connected) {
    emit.apply(this, args);
  } else {
    this.receiveBuffer.push(args);
  }
};

/**
 * Produces an ack callback to emit with an event.
 *
 * @api private
 */

Socket.prototype.ack = function (id) {
  var self = this;
  var sent = false;
  return function () {
    // prevent double callbacks
    if (sent) return;
    sent = true;
    var args = toArray(arguments);
    debug('sending ack %j', args);

    self.packet({
      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
      id: id,
      data: args
    });
  };
};

/**
 * Called upon a server acknowlegement.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onack = function (packet) {
  var ack = this.acks[packet.id];
  if ('function' === typeof ack) {
    debug('calling ack %s with %j', packet.id, packet.data);
    ack.apply(this, packet.data);
    delete this.acks[packet.id];
  } else {
    debug('bad ack %s', packet.id);
  }
};

/**
 * Called upon server connect.
 *
 * @api private
 */

Socket.prototype.onconnect = function () {
  this.connected = true;
  this.disconnected = false;
  this.emit('connect');
  this.emitBuffered();
};

/**
 * Emit buffered events (received and emitted).
 *
 * @api private
 */

Socket.prototype.emitBuffered = function () {
  var i;
  for (i = 0; i < this.receiveBuffer.length; i++) {
    emit.apply(this, this.receiveBuffer[i]);
  }
  this.receiveBuffer = [];

  for (i = 0; i < this.sendBuffer.length; i++) {
    this.packet(this.sendBuffer[i]);
  }
  this.sendBuffer = [];
};

/**
 * Called upon server disconnect.
 *
 * @api private
 */

Socket.prototype.ondisconnect = function () {
  debug('server disconnect (%s)', this.nsp);
  this.destroy();
  this.onclose('io server disconnect');
};

/**
 * Called upon forced client/server side disconnections,
 * this method ensures the manager stops tracking us and
 * that reconnections don't get triggered for this.
 *
 * @api private.
 */

Socket.prototype.destroy = function () {
  if (this.subs) {
    // clean subscriptions to avoid reconnections
    for (var i = 0; i < this.subs.length; i++) {
      this.subs[i].destroy();
    }
    this.subs = null;
  }

  this.io.destroy(this);
};

/**
 * Disconnects the socket manually.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.close =
Socket.prototype.disconnect = function () {
  if (this.connected) {
    debug('performing disconnect (%s)', this.nsp);
    this.packet({ type: parser.DISCONNECT });
  }

  // remove socket from pool
  this.destroy();

  if (this.connected) {
    // fire events
    this.onclose('io client disconnect');
  }
  return this;
};

/**
 * Sets the compress flag.
 *
 * @param {Boolean} if `true`, compresses the sending data
 * @return {Socket} self
 * @api public
 */

Socket.prototype.compress = function (compress) {
  this.flags.compress = compress;
  return this;
};

/**
 * Sets the binary flag
 *
 * @param {Boolean} whether the emitted data contains binary
 * @return {Socket} self
 * @api public
 */

Socket.prototype.binary = function (binary) {
  this.flags.binary = binary;
  return this;
};


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Expose `Emitter`.
 */

if (true) {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),
/* 243 */
/***/ (function(module, exports) {


/**
 * Module exports.
 */

module.exports = on;

/**
 * Helper for subscriptions.
 *
 * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
 * @param {String} event name
 * @param {Function} callback
 * @api public
 */

function on (obj, ev, fn) {
  obj.on(ev, fn);
  return {
    destroy: function () {
      obj.removeListener(ev, fn);
    }
  };
}


/***/ }),
/* 244 */
/***/ (function(module, exports) {

/**
 * Slice reference.
 */

var slice = [].slice;

/**
 * Bind `obj` to `fn`.
 *
 * @param {Object} obj
 * @param {Function|String} fn or string
 * @return {Function}
 * @api public
 */

module.exports = function(obj, fn){
  if ('string' == typeof fn) fn = obj[fn];
  if ('function' != typeof fn) throw new Error('bind() requires a function');
  var args = slice.call(arguments, 2);
  return function(){
    return fn.apply(obj, args.concat(slice.call(arguments)));
  }
};


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);
var settle = __webpack_require__(488);
var buildURL = __webpack_require__(490);
var parseHeaders = __webpack_require__(491);
var isURLSameOrigin = __webpack_require__(492);
var createError = __webpack_require__(247);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(493);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ("production" !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(494);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(489);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = layoutReducer;

var _helper = __webpack_require__(106);

var _layoutActions = __webpack_require__(6);

var layoutAction = _interopRequireWildcard(_layoutActions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var layoutReducerInitState = {
    focusCardPrevious: [],
    focusCard: {
        component: null,
        props: null,
        title: null,
        show: false,
        className: null
    },
    blockLoader: {
        loading: null,
        success: null,
        error: null,
        confirm: null,
        custom: null,
        show: false
    }
};

function layoutReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : layoutReducerInitState;
    var action = arguments[1];

    switch (action.type) {
        case layoutAction.UPDATE_FOCUS_CARD:
            {
                var newState = {};
                newState["focusCard"] = (0, _helper.getNewState)(state.focusCard, action.payload);

                //push to previous
                if (state.focusCard.component !== null) {
                    var prev = (0, _helper.getNewState)(state.focusCard, {});
                    state.focusCardPrevious.push(prev);
                    newState["focusCardPrevious"] = state.focusCardPrevious;
                }
                //clear the previous    
                else {
                        newState["focusCardPrevious"] = [];
                    }

                return (0, _helper.getNewState)(state, newState);
            }

        case layoutAction.PREVIOUS_FOCUS_CARD:
            {
                var newState = {};
                newState["focusCard"] = state.focusCardPrevious.pop();
                newState["focusCardPrevious"] = state.focusCardPrevious;

                return (0, _helper.getNewState)(state, newState);
            }

        case layoutAction.UPDATE_BLOCK_LOADER:
            {
                return (0, _helper.getNewState)(state, { blockLoader: (0, _helper.getNewState)(state.blockLoader, action.payload) });
            }
    }

    return state;
};

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

const types = __webpack_require__(111);

const INTS = () => [{ type: types.RANGE , from: 48, to: 57 }];

const WORDS = () => {
  return [
    { type: types.CHAR, value: 95 },
    { type: types.RANGE, from: 97, to: 122 },
    { type: types.RANGE, from: 65, to: 90 }
  ].concat(INTS());
};

const WHITESPACE = () => {
  return [
    { type: types.CHAR, value: 9 },
    { type: types.CHAR, value: 10 },
    { type: types.CHAR, value: 11 },
    { type: types.CHAR, value: 12 },
    { type: types.CHAR, value: 13 },
    { type: types.CHAR, value: 32 },
    { type: types.CHAR, value: 160 },
    { type: types.CHAR, value: 5760 },
    { type: types.RANGE, from: 8192, to: 8202 },
    { type: types.CHAR, value: 8232 },
    { type: types.CHAR, value: 8233 },
    { type: types.CHAR, value: 8239 },
    { type: types.CHAR, value: 8287 },
    { type: types.CHAR, value: 12288 },
    { type: types.CHAR, value: 65279 }
  ];
};

const NOTANYCHAR = () => {
  return [
    { type: types.CHAR, value: 10 },
    { type: types.CHAR, value: 13 },
    { type: types.CHAR, value: 8232 },
    { type: types.CHAR, value: 8233 },
  ];
};

// Predefined class objects.
exports.words = () => ({ type: types.SET, set: WORDS(), not: false });
exports.notWords = () => ({ type: types.SET, set: WORDS(), not: true });
exports.ints = () => ({ type: types.SET, set: INTS(), not: false });
exports.notInts = () => ({ type: types.SET, set: INTS(), not: true });
exports.whitespace = () => ({ type: types.SET, set: WHITESPACE(), not: false });
exports.notWhitespace = () => ({ type: types.SET, set: WHITESPACE(), not: true });
exports.anyChar = () => ({ type: types.SET, set: NOTANYCHAR(), not: true });


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var hexTable = (function () {
    var array = [];
    for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }

    return array;
}());

var compactQueue = function compactQueue(queue) {
    while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];

        if (isArray(obj)) {
            var compacted = [];

            for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }

            item.obj[item.prop] = compacted;
        }
    }
};

var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

var merge = function merge(target, source, options) {
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (isArray(target)) {
            target.push(source);
        } else if (target && typeof target === 'object') {
            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [target, source];
        }

        return target;
    }

    if (!target || typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
    }

    if (isArray(target) && isArray(source)) {
        source.forEach(function (item, i) {
            if (has.call(target, i)) {
                var targetItem = target[i];
                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
                    target[i] = merge(targetItem, item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (has.call(acc, key)) {
            acc[key] = merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};

var decode = function (str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, ' ');
    if (charset === 'iso-8859-1') {
        // unescape never throws, no try...catch needed:
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    }
    // utf-8
    try {
        return decodeURIComponent(strWithoutPlus);
    } catch (e) {
        return strWithoutPlus;
    }
};

var encode = function encode(str, defaultEncoder, charset) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    var string = typeof str === 'string' ? str : String(str);

    if (charset === 'iso-8859-1') {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
        });
    }

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (
            c === 0x2D // -
            || c === 0x2E // .
            || c === 0x5F // _
            || c === 0x7E // ~
            || (c >= 0x30 && c <= 0x39) // 0-9
            || (c >= 0x41 && c <= 0x5A) // a-z
            || (c >= 0x61 && c <= 0x7A) // A-Z
        ) {
            out += string.charAt(i);
            continue;
        }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        i += 1;
        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
        out += hexTable[0xF0 | (c >> 18)]
            + hexTable[0x80 | ((c >> 12) & 0x3F)]
            + hexTable[0x80 | ((c >> 6) & 0x3F)]
            + hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

var compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: 'o' }];
    var refs = [];

    for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];

        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
            }
        }
    }

    compactQueue(queue);

    return value;
};

var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

var isBuffer = function isBuffer(obj) {
    if (!obj || typeof obj !== 'object') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};

var combine = function combine(a, b) {
    return [].concat(a, b);
};

module.exports = {
    arrayToObject: arrayToObject,
    assign: assign,
    combine: combine,
    compact: compact,
    decode: decode,
    encode: encode,
    isBuffer: isBuffer,
    isRegExp: isRegExp,
    merge: merge
};


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var replace = String.prototype.replace;
var percentTwenties = /%20/g;

module.exports = {
    'default': 'RFC3986',
    formatters: {
        RFC1738: function (value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
            return value;
        }
    },
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPageMyInbox = isPageMyInbox;
exports.getRoute = getRoute;
exports.getBar = getBar;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _landing = __webpack_require__(511);

var _landing2 = _interopRequireDefault(_landing);

var _volunteerScheduledInterview = __webpack_require__(585);

var _volunteerScheduledInterview2 = _interopRequireDefault(_volunteerScheduledInterview);

var _login = __webpack_require__(157);

var _login2 = _interopRequireDefault(_login);

var _signUp = __webpack_require__(586);

var _signUp2 = _interopRequireDefault(_signUp);

var _about = __webpack_require__(589);

var _about2 = _interopRequireDefault(_about);

var _logout = __webpack_require__(296);

var _logout2 = _interopRequireDefault(_logout);

var _users = __webpack_require__(27);

var _users2 = _interopRequireDefault(_users);

var _companiesAdmin = __webpack_require__(82);

var _companiesAdmin2 = _interopRequireDefault(_companiesAdmin);

var _recruiters = __webpack_require__(590);

var _recruiters2 = _interopRequireDefault(_recruiters);

var _hall = __webpack_require__(289);

var _hall2 = _interopRequireDefault(_hall);

var _hallOld = __webpack_require__(293);

var _hallOld2 = _interopRequireDefault(_hallOld);

var _activateAccount = __webpack_require__(591);

var _activateAccount2 = _interopRequireDefault(_activateAccount);

var _editProfile = __webpack_require__(592);

var _editProfile2 = _interopRequireDefault(_editProfile);

var _manageCompany = __webpack_require__(593);

var _manageCompany2 = _interopRequireDefault(_manageCompany);

var _company = __webpack_require__(98);

var _company2 = _interopRequireDefault(_company);

var _activity = __webpack_require__(594);

var _activity2 = _interopRequireDefault(_activity);

var _resumeDrop = __webpack_require__(287);

var _resumeDrop2 = _interopRequireDefault(_resumeDrop);

var _vacancy = __webpack_require__(283);

var _vacancy2 = _interopRequireDefault(_vacancy);

var _externalAction = __webpack_require__(595);

var _externalAction2 = _interopRequireDefault(_externalAction);

var _session = __webpack_require__(596);

var _session2 = _interopRequireDefault(_session);

var _static = __webpack_require__(599);

var _companyChat = __webpack_require__(601);

var _companyChat2 = _interopRequireDefault(_companyChat);

var _notFound = __webpack_require__(284);

var _notFound2 = _interopRequireDefault(_notFound);

var _comingSoon = __webpack_require__(180);

var _comingSoon2 = _interopRequireDefault(_comingSoon);

var _auditorium = __webpack_require__(182);

var _dashboard = __webpack_require__(184);

var _dashboard2 = _interopRequireDefault(_dashboard);

var _timeConverter = __webpack_require__(603);

var _timeConverter2 = _interopRequireDefault(_timeConverter);

var _passwordReset = __webpack_require__(297);

var _passwordReset2 = _interopRequireDefault(_passwordReset);

var _passwordForgot = __webpack_require__(604);

var _passwordForgot2 = _interopRequireDefault(_passwordForgot);

var _forum = __webpack_require__(181);

var _forum2 = _interopRequireDefault(_forum);

var _overview = __webpack_require__(605);

var _support = __webpack_require__(303);

var _analytics = __webpack_require__(606);

var _analytics2 = _interopRequireDefault(_analytics);

var _feedback = __webpack_require__(57);

var _otherActions = __webpack_require__(30);

var _dbConfig = __webpack_require__(5);

var _authActions = __webpack_require__(2);

var _notifications = __webpack_require__(285);

var _hallGallery = __webpack_require__(290);

var _listCompanies = __webpack_require__(607);

var _listCompanies2 = _interopRequireDefault(_listCompanies);

var _listEventsWebinars = __webpack_require__(608);

var _listEventsWebinars2 = _interopRequireDefault(_listEventsWebinars);

var _listJobPosts = __webpack_require__(609);

var _listJobPosts2 = _interopRequireDefault(_listJobPosts);

var _eventManagement = __webpack_require__(610);

var _eventManagement2 = _interopRequireDefault(_eventManagement);

var _listEvents = __webpack_require__(611);

var _listEvents2 = _interopRequireDefault(_listEvents);

var _listInterviews = __webpack_require__(612);

var _listInterviews2 = _interopRequireDefault(_listInterviews);

var _browseStudent = __webpack_require__(613);

var _hallRecruiter = __webpack_require__(617);

var _hallRecruiter2 = _interopRequireDefault(_hallRecruiter);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getHomeComponent(COMING_SOON) {
  var homeComponent = null;
  if ((0, _authActions.isAuthorized)()) {
    if ((0, _authActions.isRoleRec)() && _appConfig.IsRecruiterNewHall) {
      homeComponent = _hallRecruiter2.default;
    } else if (_appConfig.IsNewHall) {
      // new hall takde pegi page coming soon
      if ((0, _authActions.isRoleStudent)()) homeComponent = _hall2.default;else if ((0, _authActions.isRoleRec)()) homeComponent = _hall2.default;else if ((0, _authActions.isRoleAdmin)()) homeComponent = _hall2.default;else if ((0, _authActions.isRoleVolunteer)()) homeComponent = _volunteerScheduledInterview2.default;
    } else {
      if (COMING_SOON) {
        var homeComponent = _comingSoon2.default;
      } else {
        if ((0, _authActions.isRoleStudent)()) homeComponent = _hallOld2.default;else if ((0, _authActions.isRoleRec)()) homeComponent = _hallOld2.default;else if ((0, _authActions.isRoleAdmin)()) homeComponent = _companiesAdmin2.default;
      }
    }
  } else {
    homeComponent = _landing2.default;
  }
  return homeComponent;
}

function isDisabled(page, COMING_SOON) {
  if (page == "auditorium" || page == "career-fair") {
    if (((0, _authActions.isRoleStudent)() || (0, _authActions.isRoleRec)()) && !COMING_SOON) {
      return false;
    }
  }

  return true;
}

function isPageMyInbox() {
  return location.href.indexOf("my-inbox") >= 0;
}

function getMenuItem(COMING_SOON) {
  var homeComponent = getHomeComponent(COMING_SOON);

  var menuItem = [
  // {
  //   url: null,
  //   label: "Notification",
  //   icon: "bell",
  //   component: homeComponent,
  //   count_attr: "count_notification",
  //   is_popup: true,
  //   bar_app: true,
  //   bar_auth: false,
  //   hd_app: true,
  //   hd_auth: false
  // },
  {
    url: "/",
    label: "Home",
    icon: "home",
    component: homeComponent,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true
  },
  // ###############################################################
  // VOLUNTEER
  {
    url: "/manage-scheduled-interview",
    label: "Manage Scheduled Interview",
    icon: "building",
    component: _volunteerScheduledInterview2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleVolunteer)() && !(0, _authActions.isRoleAdmin)()
  },
  // ###############################################################
  // ADMIN
  {
    // Admin Only
    url: "/students",
    label: "Students",
    icon: "user",
    component: _users2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  }, {
    // Admin Only
    url: "/companies",
    label: "Companies",
    icon: "building",
    component: _companiesAdmin2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  }, {
    // Admin Only
    url: "/recruiters",
    label: "Recruiters",
    icon: "black-tie",
    component: _recruiters2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  }, {
    // Admin Only
    url: "/hall-gallery",
    label: "Hall Gallery",
    icon: "home",
    component: _hallGallery.ManageHallGallery,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  }, {
    // Admin Only
    url: "/live-feed",
    label: "Live Feed",
    icon: "commenting-o",
    component: _dashboard2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  }, {
    // Admin Only
    url: "/analytics/:current",
    label: "Analytics",
    icon: "bar-chart",
    component: _analytics2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    default_param: { current: "subscriber" },
    disabled: !(0, _authActions.isRoleAdmin)()
  }, {
    // Admin Only
    url: "/support",
    label: "Support",
    icon: "comments",
    component: _support.SupportPage,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleSupport)()
  }, {
    // Student Only
    url: "/edit-profile/:current",
    label: "My Profile",
    icon: "user",
    component: _editProfile2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    default_param: { current: "profile" },
    disabled: !(0, _authActions.isRoleStudent)()
  }, {
    url: "/manage-events",
    // EUR FIX
    //label: "Auditorium",
    label: "Manage Events",
    icon: "microphone",
    component: _eventManagement2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  }, {
    url: "/browse-student",
    label: "All Students",
    icon: "users",
    component: _browseStudent.BrowseStudent,
    bar_app: true,
    bar_auth: false,
    hd_app: _appConfig.IsRecruiterNewHall ? false : true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)() && !(0, _authActions.isRoleRec)()
  }, {
    url: "/interested-student",
    label: "Interested Students",
    icon: "heart",
    component: _browseStudent.BrowseStudent,
    bar_app: true,
    bar_auth: false,
    hd_app: false,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleRec)()
  }, {
    url: "/auditorium",
    // EUR FIX
    //label: "Auditorium",
    label: "Webinar",
    icon: "microphone",
    component: _auditorium.AuditoriumFeed,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: _appConfig.IsNewHall //isDisabled("auditorium", COMING_SOON)
  }, {
    // Student Only
    url: "/edit-profile/:current",
    label: "Upload Document",
    icon: "file-text",
    component: _editProfile2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    default_param: { current: "doc-link" },
    disabled: !(0, _authActions.isRoleStudent)()
  }, {
    // Student Only
    url: "/edit-profile/:current",
    label: "Upload Video Resume",
    icon: "youtube-play",
    component: _editProfile2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    default_param: { current: "video-resume" },
    disabled: !(0, _authActions.isRoleStudent)()
  },
  // {
  //   // Student Only
  //   url: "/edit-profile/:current",
  //   label: "Add Skills",
  //   icon: "star",
  //   component: EditProfilePage,
  //   bar_app: true,
  //   bar_auth: false,
  //   hd_app: true,
  //   hd_auth: false,
  //   default_param: { current: "skills" },
  //   disabled: !isRoleStudent()
  // },
  {
    // Student Only
    url: "/edit-profile/:current",
    label: "Manage Availability",
    icon: "clock-o",
    component: _editProfile2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    default_param: { current: "availability" },
    //disabled: !isRoleStudent()
    disabled: _appConfig.IsNewHall
  },
  // Remove For Eur
  // {
  //     url: "/career-fair",
  //     label: "Career Fair",
  //     icon: "suitcase",
  //     component: HallPage,
  //     bar_app: true,
  //     bar_auth: false,
  //     hd_app: true,
  //     hd_auth: false,
  //     // is not coming soon and one of the row then show = !disabled
  //     disabled: isDisabled("career-fair", COMING_SOON)
  // },

  // {
  //   url: "/my-activity/:current",
  //   label: isRoleRec() ? "All Students" : "My Activity",
  //   icon: isRoleRec() ? "users" : "list-ul",
  //   component: ActivityPage,
  //   bar_app: true,
  //   bar_auth: false,
  //   hd_app: true,
  //   hd_auth: false,
  //   default_param: { current: isRoleRec() ? "student-listing" : "session" },
  //   //disabled: (!isRoleRec() && !isRoleStudent()) || (isRoleStudent() && COMING_SOON) //for student disable first
  //   // remove mmy activity from student
  //   disabled: !isRoleRec() || (isRoleStudent() && COMING_SOON) //for student disable first
  // },
  // {
  //   url: "/my-activity/:current",
  //   label: "All Student",
  //   icon: "address-book-o",
  //   component: ActivityPage,
  //   bar_app: true,
  //   bar_auth: false,
  //   hd_app: true,
  //   hd_auth: false,
  //   default_param: { current: "all-student" },
  //   disabled: !isRoleRec()
  // },
  {
    url: "/manage-company/:id/:current",
    label: "My Company",
    icon: "building",
    component: _manageCompany2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: _appConfig.IsRecruiterNewHall ? false : true,
    hd_auth: false,
    routeOnly: (0, _authActions.isRoleAdmin)() || (0, _authActions.isRoleOrganizer)(),
    default_param: { id: (0, _authActions.getAuthUser)().rec_company, current: "about" },
    disabled: !(0, _authActions.isRoleRec)() && !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  }, {
    url: "/manage-company/:id/:current",
    label: "Add Job Post",
    icon: "suitcase",
    component: _manageCompany2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: _appConfig.IsRecruiterNewHall ? false : true,
    hd_auth: false,
    default_param: { id: (0, _authActions.getAuthUser)().rec_company, current: "vacancy" },
    disabled: !(0, _authActions.isRoleRec)()
  }, {
    url: "/my-activity/:current",
    label: "My Activity",
    icon: "list-ul",
    component: _activity2.default,
    bar_app: false,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    default_param: { current: "session" },
    //disabled: (!isRoleRec() && !isRoleStudent()) || (isRoleStudent() && COMING_SOON) //for student disable first
    // remove mmy activity from student
    disabled: (0, _authActions.isRoleStudent)() && COMING_SOON //for student disable first
  }, {
    // Admin Only
    url: "/auditorium-management",
    // EUR FIX
    label: "Manage Webinar",
    //label: "Auditorium",
    icon: "microphone",
    component: _auditorium.AuditoriumManagement,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()
  },
  // {
  //   url: "/company-forum",
  //   label: "Forum",
  //   icon: "comments",
  //   component: ForumPage,
  //   bar_app: true,
  //   bar_auth: false,
  //   hd_app: true,
  //   hd_auth: false,
  //   disabled: !isRoleRec()
  // },
  {
    url: "/my-inbox",
    label: "Inbox",
    icon: "envelope-o",
    count_attr: "count_inbox",
    component: _companyChat2.default,
    bar_app: false,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    disabled: !_appConfig.IsNewHall || !(0, _authActions.isRoleRec)() && !(0, _authActions.isRoleStudent)()
    //disabled: COMING_SOON || !IsNewHall || (!isRoleRec() && !isRoleStudent())
  }, {
    url: "/overview",
    label: "Overview",
    icon: "desktop",
    component: _overview.Overview,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    // EUR FIX
    disabled: !(0, _authActions.isRoleAdmin)()
    //disabled: COMING_SOON
    //,disabled: !isRoleAdmin() && !isRoleOrganizer() && !isRoleRec()
  },
  // {
  //   url: "/about",
  //   label: "About",
  //   icon: "question",
  //   component: null,
  //   href: LandingUrl,
  //   bar_app: COMING_SOON && !(isRoleOrganizer() || isRoleAdmin()),
  //   bar_app: COMING_SOON && !(isRoleOrganizer() || isRoleAdmin()),
  //   hd_app: true,
  //   hd_auth: true
  // },
  // {
  //     url: "/faq",
  //     label: "FAQ",
  //     icon: "question-circle",
  //     component: FaqPage,
  //     bar_app: false, //COMING_SOON && !(isRoleOrganizer() || isRoleAdmin()),
  //     //bar_app: COMING_SOON && !(isRoleOrganizer() || isRoleAdmin()),
  //     hd_app: true,
  //     hd_auth: true
  // },
  // {
  //     url: "/contact",
  //     label: "Contact Us",
  //     icon: "envelope",
  //     component: ContactUsPage,
  //     bar_app: false, //COMING_SOON && !(isRoleOrganizer() || isRoleAdmin()),
  //     //bar_app: COMING_SOON && !(isRoleOrganizer() || isRoleAdmin()),
  //     hd_app: true,
  //     hd_auth: true
  // },
  {
    url: "/login",
    label: "Login",
    icon: "sign-in",
    component: _login2.default,
    bar_app: false,
    bar_auth: true,
    hd_app: false,
    hd_auth: true,
    allRoute: true
  }, {
    url: "/logout",
    label: "Logout",
    icon: "sign-out",
    component: _logout2.default,
    bar_app: false,
    bar_auth: false,
    hd_app: true,
    hd_auth: false
  }, {
    url: "/sign-up",
    label: "Sign Up",
    icon: "user-plus",
    component: _signUp2.default,
    bar_app: false,
    bar_auth: true,
    hd_app: false,
    hd_auth: true
  }];
  // ############################################################################/
  /**** ROUTE ONLY *******/
  menuItem.push.apply(menuItem, [{
    url: "/list-interviews",
    component: _listInterviews2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/list-events",
    component: _listEvents2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/list-job-posts",
    component: _listJobPosts2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/list-events-webinars",
    component: _listEventsWebinars2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/list-companies",
    component: _listCompanies2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/my-local-time",
    component: _timeConverter2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/company-chat/:id",
    component: _companyChat.CompanyChatStarter,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: (0, _authActions.isRoleStudent)()
  }, {
    url: "/student-chat/:id",
    component: _companyChat.StudentChatStarter,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: (0, _authActions.isRoleRec)()
  }, {
    url: "/company/:id",
    component: _company2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: true
  }, {
    url: "/forum/:forum_id",
    component: _forum2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: true
  }, {
    url: "/feedback/:user_role",
    component: _feedback.FeedbackForm,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: true
  }, {
    url: "/session/:id",
    component: _session2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: true
  }, {
    url: "/password-reset/:token/:user_id",
    component: _passwordReset2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/allow-cookie",
    component: _static.AllowCookiePage,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/password-forgot",
    component: _passwordForgot2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/edit-profile/:current",
    component: _editProfile2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: true
  }, {
    url: "/activate-account/:key/:user_id",
    component: _activateAccount2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }, {
    url: "/resume-drop/:company_id",
    component: _resumeDrop2.default,
    bar_app: true,
    bar_auth: false,
    hd_app: true,
    hd_auth: false,
    routeOnly: true
  }, {
    url: "/vacancy/:id",
    component: _vacancy2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  },
  // email
  {
    url: "/external-action/:type/:param",
    component: _externalAction2.default,
    bar_app: true,
    bar_auth: true,
    hd_app: true,
    hd_auth: true,
    routeOnly: true
  }]);

  return menuItem;
}

// ############################################################################/
/**** HELPER FUNCTION *******/

function getRoute(path, COMING_SOON) {
  var isLog = (0, _authActions.isAuthorized)();
  var menuItem = getMenuItem(COMING_SOON);
  var routes = menuItem.map(function (d, i) {
    //restricted
    if (d.disabled) {
      return false;
    }

    var exact = d.url === "/" ? true : false;

    if (!d.allRoute) {
      if (isLog && !(d.hd_app || d.bar_app)) {
        return;
      }

      if (!isLog && !(d.hd_auth || d.bar_auth)) {
        return;
      }
    }

    return _react2.default.createElement(_reactRouterDom.Route, {
      path: "" + path + d.url,
      exact: exact,
      key: i,
      component: d.component
    });
  });

  return _react2.default.createElement(
    _reactRouterDom.Switch,
    null,
    routes,
    _react2.default.createElement(_reactRouterDom.Route, { path: "*", component: _notFound2.default })
  );
}

// strictly for getBar only
// wont work for getRoute
function isBarValid(isHeader, isLog, d) {
  if (d.disabled) {
    return false;
  }

  // Header and is logged in
  if (isHeader && isLog && !d.hd_app) {
    return false;
  }

  // Header and is logged out
  if (isHeader && !isLog && !d.hd_auth) {
    return false;
  }

  // Bar and is logged in
  if (!isHeader && isLog && !d.bar_app) {
    return false;
  }

  // Bar and is logged out
  if (!isHeader && !isLog && !d.bar_auth) {
    return false;
  }
  return true;
}

function getBar(path, _ref) {
  var COMING_SOON = _ref.COMING_SOON,
      isHeader = _ref.isHeader,
      count_notification = _ref.count_notification,
      count_inbox = _ref.count_inbox;

  var isLog = (0, _authActions.isAuthorized)();
  var menuItem = getMenuItem(COMING_SOON);

  var menuList = menuItem.map(function (d, i) {
    var exact = d.url === "/" ? true : false;

    if (d.routeOnly) {
      return;
    }

    if (!isBarValid(isHeader, isLog, d)) {
      return;
    }

    var url = d.url;
    if (d.default_param) {
      for (var key in d.default_param) {
        url = url.replace(":" + key, d.default_param[key]);
      }
    }

    if (d.component === null && d.href != "") {
      return _react2.default.createElement(
        "a",
        { href: d.href, target: "blank" },
        _react2.default.createElement(
          "li",
          null,
          isHeader ? "" : _react2.default.createElement("i", { className: "fa fa-" + d.icon }),
          _react2.default.createElement(
            "span",
            { className: "menu_label" },
            d.label
          )
        )
      );
    }

    // generate item
    var onClickBar = function onClickBar(e) {
      var label = e.currentTarget.dataset.label;
      (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_LEFT_BAR, label);

      // for popup
      var is_popup = e.currentTarget.dataset.is_popup;
      if (is_popup == "1") {
        var component = null;
        if (label == "Notification") {
          component = _notifications.NotificationFeed;
        }
        if (component != null) {
          layoutActions.storeUpdateFocusCard(label, component, {}, "no-margin");
        } else {
          alert("popup component is null");
        }
      }
    };

    // get item count
    var item_count = null;
    if (d.count_attr !== "undefined") {
      var countVal = 0;
      switch (d.count_attr) {
        case "count_notification":
          countVal = count_notification;
          break;
        case "count_inbox":
          countVal = count_inbox;
          break;
      }

      if (typeof countVal !== "undefined" && countVal != null && countVal > 0) {
        item_count = _react2.default.createElement(
          "div",
          { className: "menu_count" },
          countVal
        );
      }
    }

    // create item
    var item_li = _react2.default.createElement(
      "li",
      null,
      _react2.default.createElement("i", { className: "fa fa-" + d.icon + " left" }),
      _react2.default.createElement(
        "span",
        { className: "menu_label" },
        d.label
      ),
      item_count
    );

    // handle for normal url or popup
    if (d.is_popup == true) {
      return _react2.default.createElement(
        "a",
        {
          "data-label": d.label,
          "data-is_popup": "1",
          key: i,
          onClick: onClickBar,
          activeClassName: "active"
        },
        item_li
      );
    } else {
      return _react2.default.createElement(
        _reactRouterDom.NavLink,
        {
          to: "" + path + url,
          "data-label": d.label,
          exact: exact,
          key: i,
          onClick: onClickBar,
          activeClassName: "active"
        },
        item_li
      );
    }
  });

  return _react2.default.createElement(
    "ul",
    null,
    menuList
  );
}

/***/ }),
/* 255 */
/***/ (function(module, exports) {



/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(518)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(257)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(92);
var $export = __webpack_require__(53);
var redefine = __webpack_require__(259);
var hide = __webpack_require__(62);
var Iterators = __webpack_require__(95);
var $iterCreate = __webpack_require__(519);
var setToStringTag = __webpack_require__(117);
var getPrototypeOf = __webpack_require__(523);
var ITERATOR = __webpack_require__(33)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(64) && !__webpack_require__(94)(function () {
  return Object.defineProperty(__webpack_require__(162)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(62);


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(65);
var toIObject = __webpack_require__(76);
var arrayIndexOf = __webpack_require__(521)(false);
var IE_PROTO = __webpack_require__(165)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(96);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(160);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(31).document;
module.exports = document && document.documentElement;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(161);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(524);
var global = __webpack_require__(31);
var hide = __webpack_require__(62);
var Iterators = __webpack_require__(95);
var TO_STRING_TAG = __webpack_require__(33)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(96);
var TAG = __webpack_require__(33)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(46);
var aFunction = __webpack_require__(113);
var SPECIES = __webpack_require__(33)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(93);
var invoke = __webpack_require__(533);
var html = __webpack_require__(263);
var cel = __webpack_require__(162);
var global = __webpack_require__(31);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(96)(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),
/* 269 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(46);
var isObject = __webpack_require__(54);
var newPromiseCapability = __webpack_require__(168);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(541);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(543);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(260);
var hiddenKeys = __webpack_require__(167).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(118);
var createDesc = __webpack_require__(114);
var toIObject = __webpack_require__(76);
var toPrimitive = __webpack_require__(163);
var has = __webpack_require__(65);
var IE8_DOM_DEFINE = __webpack_require__(258);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(64) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 274 */
/***/ (function(module, exports) {

var canUseDOM = !!(
  typeof window !== 'undefined' &&
  window.document &&
  window.document.createElement
);

module.exports = canUseDOM;

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  SMALL: 'small',
  LARGE: 'large'
};
//# sourceMappingURL=LikeSize.js.map

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  STANDARD: 'standard',
  BUTTON_COUNT: 'button_count',
  BUTTON: 'button',
  BOX_COUNT: 'box_count'
};
//# sourceMappingURL=LikeLayout.js.map

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  LIKE: 'like',
  RECOMMEND: 'recommend'
};
//# sourceMappingURL=LikeAction.js.map

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(77);

var _extends3 = _interopRequireDefault(_extends2);

var _regenerator = __webpack_require__(60);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(61);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getCurrentHref = __webpack_require__(78);

var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);

var _clearUndefinedProperties = __webpack_require__(279);

var _clearUndefinedProperties2 = _interopRequireDefault(_clearUndefinedProperties);

var _Process2 = __webpack_require__(174);

var _Process3 = _interopRequireDefault(_Process2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Share = (_temp = _class = function (_Process) {
  (0, _inherits3.default)(Share, _Process);

  function Share() {
    (0, _classCallCheck3.default)(this, Share);
    return (0, _possibleConstructorReturn3.default)(this, _Process.apply(this, arguments));
  }

  Share.prototype.process = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(facebook) {
      var _props, _props$href, href, display, _props$appId, appId, hashtag, redirectURI, quote, mobileIframe;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _props = this.props, _props$href = _props.href, href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href, display = _props.display, _props$appId = _props.appId, appId = _props$appId === undefined ? facebook.getAppId() : _props$appId, hashtag = _props.hashtag, redirectURI = _props.redirectURI, quote = _props.quote, mobileIframe = _props.mobileIframe;
              return _context.abrupt('return', facebook.ui((0, _clearUndefinedProperties2.default)({
                method: 'share',
                href: href,
                display: display,
                app_id: appId,
                hashtag: hashtag,
                redirect_uri: redirectURI,
                quote: quote,
                mobile_iframe: mobileIframe
              })));

            case 2:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function process(_x) {
      return _ref.apply(this, arguments);
    }

    return process;
  }();

  return Share;
}(_Process3.default), _class.propTypes = (0, _extends3.default)({}, _Process3.default.propTypes, {
  href: _propTypes2.default.string,
  hashtag: _propTypes2.default.string,
  quote: _propTypes2.default.string,
  mobileIframe: _propTypes2.default.bool,
  display: _propTypes2.default.string,
  appId: _propTypes2.default.string,
  redirectURI: _propTypes2.default.string
}), _class.defaultProps = (0, _extends3.default)({}, _Process3.default.defaultProps, {
  href: undefined,
  hashtag: undefined,
  quote: undefined,
  mobileIframe: undefined,
  display: undefined,
  appId: undefined,
  redirectURI: undefined
}), _temp);
exports.default = Share;
//# sourceMappingURL=Share.js.map

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = clearUndefinedProperties;
function clearUndefinedProperties(obj) {
  if (!obj) {
    return obj;
  }

  var newObj = {};

  Object.keys(obj).forEach(function (propertyName) {
    var value = obj[propertyName];
    if (value !== undefined) {
      newObj[propertyName] = value;
    }
  });

  return newObj;
}
//# sourceMappingURL=clearUndefinedProperties.js.map

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(77);

var _extends3 = _interopRequireDefault(_extends2);

var _regenerator = __webpack_require__(60);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(61);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Process2 = __webpack_require__(174);

var _Process3 = _interopRequireDefault(_Process2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Login = (_temp = _class = function (_Process) {
  (0, _inherits3.default)(Login, _Process);

  function Login() {
    (0, _classCallCheck3.default)(this, Login);
    return (0, _possibleConstructorReturn3.default)(this, _Process.apply(this, arguments));
  }

  Login.prototype.process = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(facebook) {
      var _props, scope, fields, returnScopes, rerequest, reauthorize, loginQpts, authType, response;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _props = this.props, scope = _props.scope, fields = _props.fields, returnScopes = _props.returnScopes, rerequest = _props.rerequest, reauthorize = _props.reauthorize;
              loginQpts = { scope: scope };
              authType = [];


              if (returnScopes) {
                loginQpts.return_scopes = true;
              }

              if (rerequest) {
                authType.push('rerequest');
              }

              if (reauthorize) {
                authType.push('reauthenticate');
              }

              if (authType.length) {
                loginQpts.auth_type = authType.join(',');
              }

              _context.next = 9;
              return facebook.login(loginQpts);

            case 9:
              response = _context.sent;

              if (!(response.status !== 'connected')) {
                _context.next = 12;
                break;
              }

              throw new Error('Unauthorized user');

            case 12:
              return _context.abrupt('return', facebook.getTokenDetailWithProfile({ fields: fields }));

            case 13:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function process(_x) {
      return _ref.apply(this, arguments);
    }

    return process;
  }();

  return Login;
}(_Process3.default), _class.propTypes = (0, _extends3.default)({}, _Process3.default.propTypes, {
  scope: _propTypes2.default.string.isRequired,
  fields: _propTypes2.default.arrayOf(_propTypes2.default.string),
  returnScopes: _propTypes2.default.bool,
  rerequest: _propTypes2.default.bool,
  reauthorize: _propTypes2.default.bool
}), _class.defaultProps = (0, _extends3.default)({}, _Process3.default.defaultProps, {
  scope: '',
  fields: ['id', 'first_name', 'last_name', 'middle_name', 'name', 'email', 'locale', 'gender', 'timezone', 'verified', 'link'],
  returnScopes: false,
  rerequest: false,
  reauthorize: false
}), _temp);
exports.default = Login;
//# sourceMappingURL=Login.js.map

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = {
  SOCIAL: 'social',
  REVERSE_TIME: 'reverse_time',
  TIME: 'time'
};
//# sourceMappingURL=CommentsOrderBy.js.map

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _list = __webpack_require__(11);

var _notFound = __webpack_require__(284);

var _notFound2 = _interopRequireDefault(_notFound);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _otherActions = __webpack_require__(30);

var _authActions = __webpack_require__(2);

var _interested = __webpack_require__(66);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import FacebookProvider, { Page, ShareButton } from 'react-facebook';


var VacancyPage = function (_React$Component) {
  _inherits(VacancyPage, _React$Component);

  function VacancyPage(props) {
    _classCallCheck(this, VacancyPage);

    var _this = _possibleConstructorReturn(this, (VacancyPage.__proto__ || Object.getPrototypeOf(VacancyPage)).call(this, props));

    _this.state = {
      data: null,
      loading: true
    };
    return _this;
  }

  _createClass(VacancyPage, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      var id = null;

      if (this.props.match) {
        id = this.props.match.params.id;
      } else {
        id = this.props.id;
      }

      var logData = {
        id: Number.parseInt(id),
        location: window.location.pathname
      };
      (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_VISIT_VACANCY, JSON.stringify(logData), (0, _authActions.getAuthUser)().ID);

      var query = "query {\n              vacancy(ID:" + id + ", user_id:" + (0, _authActions.getAuthUser)().ID + ") {\n                ID\n                company_id\n                location\n                company {ID name}\n                title\n                description\n                requirement\n                type\n                application_url\n                updated_at\n                interested{ID is_interested}\n            }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.setState(function () {
          return { data: res.data.data.vacancy, loading: false };
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var id = null;
      var vacan = this.state.data;
      var view = null;

      if (!this.props.isPopup) {
        document.setTitle("Vacancy");
      }

      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { size: "3", text: "Loading Vacancy Information..." });
      } else {
        if (this.state.data === null) {
          view = _react2.default.createElement(_notFound2.default, this.props);
        } else {
          var isModeCount = this.props.isRecThisCompany;
          var isModeAction = (0, _authActions.isRoleStudent)();
          var interestedBtn = _react2.default.createElement(_interested.InterestedButton, {
            customStyle: {
              position: "initial"
              //   top: "3px",
              //   left: "20px",
              //   width: "max-content"
            },
            isModeCount: isModeCount,
            isModeAction: isModeAction,
            ID: vacan.interested.ID,
            is_interested: vacan.interested.is_interested,
            entity: "vacancies",
            entity_id: vacan.ID,
            tooltipObj: {
              arrowPosition: "left",
              left: "41px",
              bottom: "-2px",
              width: "97px",
              tooltip: "Show Interest",
              debug: false
            }
          });

          if (!this.props.isPopup) {
            document.setTitle("Vacancy - " + vacan.title);
          }

          var non = _react2.default.createElement(
            "div",
            { className: "text-muted" },
            "Nothing To Show Here"
          );

          var items = [_react2.default.createElement(
            "span",
            null,
            _react2.default.createElement("i", { className: "fa fa-hashtag left" }),
            "Vacancy Id - ",
            vacan.ID
          ), !vacan.type ? null : _react2.default.createElement(
            "span",
            null,
            _react2.default.createElement("i", { className: "fa fa-star left" }),
            vacan.type
          ), !vacan.location ? null : _react2.default.createElement(
            "span",
            null,
            _react2.default.createElement("i", { className: "fa fa-map-marker left" }),
            vacan.location
          ), _react2.default.createElement(
            "span",
            null,
            _react2.default.createElement("i", { className: "fa fa-building left" }),
            vacan.company.name
          ), !vacan.application_url ? null : _react2.default.createElement(
            "span",
            null,
            _react2.default.createElement("i", { className: "fa fa-link left" }),
            _react2.default.createElement(
              "a",
              { target: "_blank", href: vacan.application_url },
              vacan.application_url
            )
          )];

          //var share_url = `${SiteUrl}/auth/vacancy/${vacan.ID}`;
          //var share_url = window.location.href;
          //console.log(share_url);

          var about = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(_list.CustomList, { className: "empty", items: items })
          );

          var desc = vacan.description !== null ? _react2.default.createElement(
            "p",
            null,
            vacan.description
          ) : non;
          var req = vacan.requirement !== null ? _react2.default.createElement(
            "p",
            null,
            vacan.requirement
          ) : non;

          view = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(_pageSection2.default, {
              className: "left",
              title: vacan.title,
              body: _react2.default.createElement(
                "div",
                null,
                " ",
                interestedBtn,
                _react2.default.createElement("div", { style: { height: "10px" } }),
                about
              )
            }),
            _react2.default.createElement(_pageSection2.default, {
              className: "left",
              title: "Description",
              body: desc
            }),
            _react2.default.createElement(_pageSection2.default, {
              className: "left",
              title: "Requirement",
              body: req
            })
          );
        }
      }

      return view;
    }
  }]);

  return VacancyPage;
}(_react2.default.Component);

exports.default = VacancyPage;


VacancyPage.propTypes = {
  id: _propTypes2.default.number,
  isPopup: _propTypes2.default.bool,
  isRecThisCompany: _propTypes2.default.bool
};

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NotFoundPage = function (_React$Component) {
    _inherits(NotFoundPage, _React$Component);

    function NotFoundPage() {
        _classCallCheck(this, NotFoundPage);

        return _possibleConstructorReturn(this, (NotFoundPage.__proto__ || Object.getPrototypeOf(NotFoundPage)).apply(this, arguments));
    }

    _createClass(NotFoundPage, [{
        key: "handleRedirect",
        value: function handleRedirect() {}
    }, {
        key: "render",
        value: function render() {
            document.setTitle("Page Not Found");

            console.log(this.props.match.url);
            return _react2.default.createElement(
                "div",
                null,
                _react2.default.createElement(
                    "b",
                    null,
                    this.props.match.url
                ),
                _react2.default.createElement("br", null),
                "Page Not Found"
            );
        }
    }]);

    return NotFoundPage;
}(_react2.default.Component);

exports.default = NotFoundPage;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotificationFeed = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.addNotification = addNotification;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var layoutAction = _interopRequireWildcard(_layoutActions);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _profileCard = __webpack_require__(13);

var _socketClient = __webpack_require__(17);

var _socketConfig = __webpack_require__(32);

var _dbConfig = __webpack_require__(5);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _activity = __webpack_require__(176);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/notification.scss");

function addNotification(_ref) {
  var user_id = _ref.user_id,
      param = _ref.param,
      text = _ref.text,
      type = _ref.type,
      img_entity = _ref.img_entity,
      img_id = _ref.img_id,
      successHandler = _ref.successHandler;

  if ((typeof param === "undefined" ? "undefined" : _typeof(param)) !== "object") {
    param = {};
  }

  var p = {
    user_id: user_id,
    cf: (0, _authActions.getCF)(),
    param: JSON.stringify(param),
    text: text,
    type: type,
    img_entity: img_entity,
    img_id: img_id
  };

  var query = "mutation{\n    add_notification(" + (0, _graphqlObj2arg2.default)(p, { noOuterBraces: true }) + "){\n      ID\n    }\n  }";

  (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
    successHandler(res.data.data.add_notification);
    (0, _socketClient.emitHallActivity)(hallAction.ActivityType.NOTIFICATION_COUNT, user_id, null);
  });
}

var NotificationFeed = exports.NotificationFeed = function (_React$Component) {
  _inherits(NotificationFeed, _React$Component);

  function NotificationFeed(props) {
    _classCallCheck(this, NotificationFeed);

    var _this = _possibleConstructorReturn(this, (NotificationFeed.__proto__ || Object.getPrototypeOf(NotificationFeed)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.cf = (0, _authActions.getCF)();
    _this.loadData = _this.loadData.bind(_this);
    _this.getDataFromRes = _this.getDataFromRes.bind(_this);
    _this.addFeedToView = _this.addFeedToView.bind(_this);
    _this.itemOnClick = _this.itemOnClick.bind(_this);
    _this.listComponentDidUpdate = _this.listComponentDidUpdate.bind(_this);
    _this.renderList = _this.renderList.bind(_this);
    _this.offset = 10;

    _this.rawData = {};

    _this.state = {
      extraData: []
    };
    _this.isInit = true;
    return _this;
  }

  _createClass(NotificationFeed, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // socketOn(BOTH.LIVE_FEED, data => {
      //   this.addFeedToView(data);
      // });
    }
  }, {
    key: "listComponentDidUpdate",
    value: function listComponentDidUpdate() {}
    // if (this.scrollTo == "bottom") {
    //   //scroll to bottom
    //   this.dashBody.scrollTop = 99999999;
    //   //console.log("go bottom");
    // }
    // if (this.scrollTo == "top") {
    //   //scroll to top
    //   this.dashBody.scrollTop = 0;
    //   //console.log("go top");
    // }
    // //console.log(this.dashBody.scrollTop);
    // this.scrollTo == "";


    // ##############################################################
    // function for list

  }, {
    key: "loadData",
    value: function loadData(page, offset) {
      var query = "query{\n            notifications(user_id:" + this.authUser.ID + ", \n            cf:\"" + this.cf + "\", \n            page:" + page + ", offset:" + offset + "){\n            ID text is_read type param created_at img_obj{img_pos img_url img_size} }}";
      // console.log("query",query)
      // console.log("query",query)
      // console.log("query",query)
      // console.log("query",query)
      return (0, _apiHelper.getAxiosGraphQLQuery)(query);
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      if (this.isInit) {
        this.scrollTo = "top";
        this.isInit = false;
      } else {
        this.scrollTo = "bottom";
      }
      return res.data.data.notifications;
    }

    // from socket trigger

  }, {
    key: "addFeedToView",
    value: function addFeedToView(d) {
      this.rawData[d.ID] = d;

      this.scrollTo = "top";
      var newData = this.renderList(d, 0, true);
      // add to view
      this.setState(function (prevState) {
        prevState.extraData.push(newData);

        return { extraData: prevState.extraData };
      });
    }
  }, {
    key: "updateIsRead",
    value: function updateIsRead(id) {
      var _this2 = this;

      var d = this.rawData[id];
      if (d.is_read == 1) {
        return;
      }
      var query = "mutation{\n      edit_notification(ID:" + id + ", is_read:1)\n      { ID is_read }\n    }";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.rawData[id].is_read = 1;
        hallAction.storeLoadActivity(hallAction.ActivityType.NOTIFICATION_COUNT);
      });
    }
  }, {
    key: "getParamObj",
    value: function getParamObj(d) {
      var param = d.param;
      try {
        param = JSON.parse(param);
      } catch (err) {
        param = null;
      }
      return param;
    }
  }, {
    key: "itemOnClick",
    value: function itemOnClick(e) {
      var id = e.currentTarget.dataset.id;
      this.updateIsRead(id);

      var d = this.rawData[id];
      var param = this.getParamObj(d);
      switch (d.type) {
        case _dbConfig.NotificationsEnum.TYPE_CREATE_PRIVATE_SESSION:
          if (param !== null) {
            var preScreenId = param[_dbConfig.Prescreen.ID];
            layoutAction.storeUpdateFocusCard("Private Session", _activity.ActivitySingle, {
              id: preScreenId,
              type: hallAction.ActivityType.PRESCREEN
            });
          }
          break;
      }
    }
  }, {
    key: "getNotificationText",
    value: function getNotificationText(d) {
      var toRet = d.text;
      var param = this.getParamObj(d);

      switch (d.type) {
        case _dbConfig.NotificationsEnum.TYPE_CREATE_PRIVATE_SESSION:
          if (param !== null) {
            toRet += " on <u>" + _time.Time.getString(param[_dbConfig.Prescreen.APPNMENT_TIME]) + "</u> (your local time)";
          }
          break;
      }

      return toRet;
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      this.rawData[d.ID] = d;

      var isNew = d.is_read != "1";

      var img = (0, _profileCard.createImageElement)(d.img_obj.img_url, d.img_obj.img_pos, d.img_obj.img_size, "50px", "", _profileCard.PCType.COMPANY);

      var icon = "";
      var iconColor = "";
      var blueColor = "#337ab7";
      var greenColor = "#449d44";

      switch (d.type) {
        case _dbConfig.NotificationsEnum.TYPE_CREATE_PRIVATE_SESSION:
          icon = "video-camera";
          iconColor = greenColor;
          break;
        case _dbConfig.NotificationsEnum.TYPE_REMIND_PRIVATE_SESSION:
          icon = "bell";
          iconColor = blueColor;
          break;
        case _dbConfig.NotificationsEnum.TYPE_REMIND_GROUP_SESSION:
          icon = "bell";
          iconColor = blueColor;
          break;
      }

      var item = _react2.default.createElement(
        "div",
        {
          onClick: this.itemOnClick,
          "data-id": d.ID,
          className: "not_item " + (isNew ? "item_new" : "") + " "
        },
        _react2.default.createElement(
          "div",
          { className: "not_item_img" },
          img
        ),
        _react2.default.createElement(
          "div",
          { className: "not_item_content" },
          _react2.default.createElement("p", {
            className: "not_item_text",
            dangerouslySetInnerHTML: { __html: this.getNotificationText(d) }
          }),
          _react2.default.createElement(
            "div",
            { className: "not_item_subtext" },
            _react2.default.createElement(
              "div",
              { className: "not_item_icon", style: { background: iconColor } },
              _react2.default.createElement("i", { className: "fa fa-" + icon })
            ),
            _react2.default.createElement(
              "div",
              { className: "not_item_time" },
              _time.Time.getAgo(d.created_at)
            )
          )
        )
      );

      return item;
    }
    //<button onClick={() => this.addFeedToView({ ID: "a" })}>Add</button>

  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        "div",
        { className: "notification" },
        _react2.default.createElement(_list2.default, {
          type: "append-bottom",
          appendText: "Load Older Notification",
          listClass: "not_body",
          componentDidUpdate: this.listComponentDidUpdate,
          listRef: function listRef(v) {
            return _this3.dashBody = v;
          },
          getDataFromRes: this.getDataFromRes,
          loadData: this.loadData,
          extraData: this.state.extraData,
          offset: this.offset,
          renderList: this.renderList
        })
      );
    }
  }]);

  return NotificationFeed;
}(_react2.default.Component);

NotificationFeed.propTypes = {};

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _resumeDrop = __webpack_require__(287);

var _resumeDrop2 = _interopRequireDefault(_resumeDrop);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ResumeDropPopup = function (_Component) {
    _inherits(ResumeDropPopup, _Component);

    function ResumeDropPopup() {
        _classCallCheck(this, ResumeDropPopup);

        return _possibleConstructorReturn(this, (ResumeDropPopup.__proto__ || Object.getPrototypeOf(ResumeDropPopup)).apply(this, arguments));
    }

    _createClass(ResumeDropPopup, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_resumeDrop2.default, { company_id: this.props.company_id });
        }
    }]);

    return ResumeDropPopup;
}(_react.Component);

exports.default = ResumeDropPopup;
;

ResumeDropPopup.propTypes = {
    company_id: _propTypes2.default.number.isRequired
};

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _loader = __webpack_require__(8);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _list = __webpack_require__(11);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _time = __webpack_require__(9);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _feedback = __webpack_require__(57);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import ValidationStudentAction from '../component/validation-student-action';
//import { hasResume, hasCV } from '../component/doc-link-form.jsx';

var ResumeDropPage = function (_React$Component) {
  _inherits(ResumeDropPage, _React$Component);

  function ResumeDropPage(props) {
    _classCallCheck(this, ResumeDropPage);

    var _this = _possibleConstructorReturn(this, (ResumeDropPage.__proto__ || Object.getPrototypeOf(ResumeDropPage)).call(this, props));

    _this.formOnSubmit = _this.formOnSubmit.bind(_this);
    _this.state = {
      isEdit: false,
      error: null,
      disableSubmit: false,
      success: null,
      loading: true,
      data: {
        resume_drop: null,
        company: null,
        doc_links: null,
        resume_drops_limit: null
      }
    };
    return _this;
  }

  _createClass(ResumeDropPage, [{
    key: "getFormItems",
    value: function getFormItems(isEdit) {
      var items = [{
        name: _dbConfig.ResumeDrop.DOC_LINKS,
        type: "checkbox",
        // EUR CHANGES
        label: isEdit ? "Documents Submitted" : "Documents To Be Submitted",
        required: true,
        disabled: true,
        sublabel: _react2.default.createElement(
          _reactRouterDom.NavLink,
          {
            onClick: function onClick() {
              (0, _layoutActions.storeHideFocusCard)();
            },
            to: _appConfig.RootPath + "/app/edit-profile/doc-link"
          },
          "Add More Documents"
        ),
        data: null
      }];

      return items;
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      if (this.props.match) {
        this.company_id = this.props.match.params.company_id;
      } else {
        this.company_id = this.props.company_id;
      }

      this.company_id = Number.parseInt(this.company_id);
      this.defaultValues = {};
      this.isEdit = false;

      this.formItems = this.getFormItems(false);
      this.formItemsEdit = this.getFormItems(true);

      this.loadData();
    }
  }, {
    key: "loadData",
    value: function loadData() {
      var _this2 = this;

      var data = {
        resume_drop: null,
        resume_drops_limit: null,
        company: null,
        doc_links: null
      };

      var loaded = 0;
      var toLoad = 4;

      var user_id = (0, _authActions.getAuthUser)().ID;

      var finishLoad = function finishLoad() {
        loaded++;
        console.log("loaded", loaded, toLoad, data);
        if (loaded >= toLoad) {
          _this2.setState(function () {
            return { data: data, loading: false };
          });
        }
      };

      // load company info
      var query = "query{company(ID:" + this.company_id + "){\n            message_drop_resume name}}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        data.company = res.data.data.company;
        finishLoad();
      });

      //load if there is any resume_drops_limit
      var query = "query{resume_drops_limit(user_id:" + user_id + ")}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        data.resume_drops_limit = res.data.data.resume_drops_limit;
        finishLoad();
      });

      // load document
      var query = "query{user(ID:" + user_id + "){ doc_links{ID label url} }}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var userData = res.data.data.user;
        var dl = userData.doc_links;
        data.doc_links = dl;
        // if (hasResume(dl) || hasCV(dl)) {
        //     data.doc_links = dl;
        // } else {
        //     data.doc_links = null;
        // }
        finishLoad();
      });

      // load existing resume drop
      var query = "query{resume_drop(student_id:" + user_id + ", company_id:" + this.company_id + "){\n                    ID doc_links{ID label url} message updated_at}}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        data.resume_drop = res.data.data.resume_drop;
        if (data.resume_drop !== null) {
          _this2.isEdit = true;
        }
        finishLoad();
      });
    }
  }, {
    key: "formOnSubmit",
    value: function formOnSubmit(d) {
      var _this3 = this;

      (0, _form.toggleSubmit)(this, { error: null, success: null });

      if (!d[_dbConfig.ResumeDrop.DOC_LINKS]) {
        (0, _form.toggleSubmit)(this, { error: "Please Select A Document", success: null });
        return;
      }

      var doc_links = JSON.stringify(d[_dbConfig.ResumeDrop.DOC_LINKS].map(function (d, i) {
        return Number.parseInt(d);
      }));
      var query = null;

      //edit
      if (this.isEdit) {
        var original = this.defaultValues;
        d[_dbConfig.ResumeDrop.DOC_LINKS] = doc_links;
        original[_dbConfig.ResumeDrop.DOC_LINKS] = JSON.stringify(original[_dbConfig.ResumeDrop.DOC_LINKS]);

        var update = (0, _form.checkDiff)(this, this.defaultValues, d);
        if (update === false) {
          return;
        }
        update[_dbConfig.ResumeDrop.ID] = this.state.data.resume_drop.ID;

        query = "mutation{edit_resume_drop(" + (0, _graphqlObj2arg2.default)(update, {
          noOuterBraces: true
        }) + ") {\n            ID doc_links{ID label url} message updated_at}}";
      }
      // create new
      else {
          var ins = d;
          ins[_dbConfig.ResumeDrop.DOC_LINKS] = doc_links;
          ins[_dbConfig.ResumeDrop.STUDENT_ID] = (0, _authActions.getAuthUser)().ID;
          ins[_dbConfig.ResumeDrop.COMPANY_ID] = this.company_id;
          query = "mutation{add_resume_drop(" + (0, _graphqlObj2arg2.default)(ins, {
            noOuterBraces: true
          }) + ") {\n            ID doc_links{ID label url} message updated_at}}";
        }

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var data = _this3.state.data;
        data.resume_drop = _this3.isEdit ? res.data.data.edit_resume_drop : res.data.data.add_resume_drop;

        var m = "Successfully " + (_this3.isEdit ? "Edit" : "Added New") + " Record";

        _this3.isEdit = true;

        (0, _form.toggleSubmit)(_this3, { error: null, data: data, success: m });
      }, function (err) {
        (0, _form.toggleSubmit)(_this3, { error: err.response.data });
      });
    }
  }, {
    key: "getWhatsNextView",
    value: function getWhatsNextView() {
      var actData = [{
        icon: "file-text",
        color: "#007BB4",
        text: _react2.default.createElement(
          "span",
          null,
          _react2.default.createElement(
            "b",
            null,
            this.state.data.company.name
          ),
          " will review your resume"
        )
      }, {
        icon: "envelope",
        color: "#007BB4",
        text: _react2.default.createElement(
          "span",
          null,
          "You will be ",
          _react2.default.createElement(
            "b",
            null,
            "notified through email"
          ),
          " if you are selected for 1-1 session"
        )
      }];

      var defaultMes = (0, _list.createIconList)("sm", actData, "400px", {
        customTextWidth: "350px",
        customIconDimension: "40px",
        customIconFont: "initial"
      });

      var onClickGotIt = function onClickGotIt() {
        (0, _layoutActions.storeHideFocusCard)();
        //storeUpdateFocusCard(this.state.data.company.name, CompanyPopup, { id: this.props.company_id });
      };

      var customMes = this.state.data.company.message_drop_resume;
      var mes = customMes !== null && customMes != "" ? _react2.default.createElement(
        "p",
        {
          style: {
            textAlign: "center",
            padding: "10px",
            paddingBottom: "20px"
          }
        },
        customMes
      ) : defaultMes;
      var v = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h4",
          { className: "text-primary" },
          "Whats Next?"
        ),
        mes,
        _react2.default.createElement(
          "button",
          { onClick: onClickGotIt, className: "btn btn-primary" },
          "Got It!"
        )
      );

      return v;
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.props.company_id) {
        document.setTitle("Resume Drop");
      }

      var view = null;
      var isFeedback = false;
      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { text: "Loading information...", size: "3" });
      } else {
        var v = null;
        var submitedText = null;

        var no_doc_link = typeof this.state.data.doc_links === "undefined" || this.state.data.doc_links === null || this.state.data.doc_links.length === 0;

        console.log("no_doc_link", no_doc_link);
        console.log("this.state.data.doc_links", this.state.data.doc_links);

        console.log("this.state.data.resume_drops_limit", this.state.data.resume_drops_limit);
        console.log("isEdit", this.isEdit);
        // has limit need to fill feedback
        if (this.state.data.resume_drops_limit !== null && !this.isEdit) {
          view = _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement("br", null),
            (0, _feedback.getFeedbackPopupView)()
          );
          isFeedback = true;
        }
        // no doc
        // else if (no_doc_link) {
        //     v = [];
        //     if (no_doc_link) {
        //         v.push(<div>
        //             It seems that you don't have any<br></br><b>Resume</b> or <b>CV</b> uploaded in your profile yet.
        //             <br></br><br></br>
        //             <NavLink onClick={storeHideFocusCard}
        //                 className="btn btn-primary"
        //                 to={`${RootPath}/app/edit-profile/doc-link`}>Upload Resume Now</NavLink>
        //         </div>);
        //     }

        // }
        else {
            // EUR CHANGES
            // changes to select all by default
            this.defaultValues[_dbConfig.ResumeDrop.DOC_LINKS] = this.state.data.doc_links.map(function (d, i) {
              if (d == null) return;
              return d.ID;
            });

            // already submitted, create for default values
            if (this.isEdit) {
              // this.defaultValues[ResumeDrop.DOC_LINKS] = this.state.data.resume_drop.doc_links.map((d, i) => {
              //     if (d == null) return;
              //     return d.ID
              // });
              this.defaultValues[_dbConfig.ResumeDrop.MESSAGE] = this.state.data.resume_drop.message;

              submitedText = _react2.default.createElement(
                "h4",
                { className: "text-primary" },
                "Resume Successfully Submitted",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "small",
                  null,
                  "On ",
                  _time.Time.getString(this.state.data.resume_drop.updated_at)
                )
              );
            }

            // create document checbox
            var docs = this.state.data.doc_links.map(function (d, i) {
              if (d == null) return;

              return {
                key: d.ID,
                label: _react2.default.createElement(
                  "a",
                  { href: d.url, target: "_blank" },
                  d.label
                )
              };
            });
            if (this.formItems[0].data === null) {
              this.formItems[0].data = docs;
            }
            if (this.formItemsEdit[0].data === null) {
              this.formItemsEdit[0].data = docs;
            }

            // create form
            var checkboxForm = _react2.default.createElement(_form2.default, {
              className: "form-row",
              items: this.isEdit ? this.formItemsEdit : this.formItems,
              onSubmit: this.formOnSubmit,
              submitText: this.isEdit ? "Save Change" : "Submit",
              defaultValues: this.defaultValues,
              disableSubmit: this.state.disableSubmit,
              error: this.state.error,
              hideSubmit: this.isEdit ? true : false,
              success: this.state.success
            });
          }

        if (!isFeedback) {
          var title = this.props.company_id ? _react2.default.createElement("br", null) : _react2.default.createElement(
            "h4",
            null,
            this.state.data.company.name
          );

          if (!this.props.company_id) {
            document.setTitle("Resume Drop - " + this.state.data.company.name);
          }

          if (this.isEdit) {
            view = _react2.default.createElement(
              "div",
              null,
              title,
              submitedText,
              checkboxForm,
              _react2.default.createElement("hr", null),
              this.getWhatsNextView()
            );
          } else {
            view = _react2.default.createElement(
              "div",
              null,
              title,
              checkboxForm
            );
          }
        }
      }

      return _react2.default.createElement(
        "div",
        null,
        this.props.company_id ? null : _react2.default.createElement(
          "h3",
          null,
          "Resume Drop"
        ),
        view
      );
    }
  }]);

  return ResumeDropPage;
}(_react2.default.Component);

exports.default = ResumeDropPage;


_dbConfig.ResumeDrop.propTypes = {
  company_id: _propTypes2.default.number
};

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _reactRouterDom = __webpack_require__(7);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

var _socketClient = __webpack_require__(17);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/action-box.scss");


// Ask a Question style instagram
var ActionBox = function (_Component) {
  _inherits(ActionBox, _Component);

  function ActionBox(props) {
    _classCallCheck(this, ActionBox);

    var _this = _possibleConstructorReturn(this, (ActionBox.__proto__ || Object.getPrototypeOf(ActionBox)).call(this, props));

    _this.state = {
      hideSubmit: true
    };
    _this.inputName = "inputName";
    _this.inputPlaceHolder = "Type here";
    _this.inputRef = null;
    _this.inputVal = "";
    return _this;
  }

  _createClass(ActionBox, [{
    key: "componentWillMount",
    value: function componentWillMount() {}
  }, {
    key: "v_Input",
    value: function v_Input() {
      var _this2 = this;

      var _onChange = function _onChange() {
        var v = _this2.inputRef.value;
        _this2.inputVal = v;
        if (v == "" || v == null) {
          // empty
          _this2.setState(function (prevState) {
            return { hideSubmit: true };
          });
        }

        if (_this2.state.hideSubmit) {
          _this2.setState(function (prevState) {
            return { hideSubmit: false };
          });
        }
      };
      var formClass = "form-control input-sm";
      var input = _react2.default.createElement("textarea", {
        className: formClass,
        onChange: function onChange() {
          _onChange();
        },
        name: this.inputName,
        rows: 1,
        placeholder: this.inputPlaceHolder,
        ref: function ref(r) {
          return _this2.inputRef = r;
        }
      });

      return input;
    }
  }, {
    key: "v_BtnSubmit",
    value: function v_BtnSubmit() {
      var _this3 = this;

      var onClickSubmit = function onClickSubmit() {
        if (_this3.props.qs_onSubmit) {
          _this3.props.qs_onSubmit(_this3.inputVal);
        }
      };
      return this.state.hideSubmit ? null : _react2.default.createElement(
        "button",
        {
          className: "btn btn-sm btn-block btn-" + this.props.btnClass,
          onClick: function onClick() {
            onClickSubmit();
          }
        },
        "Submit"
      );
    }
  }, {
    key: "v_BtnClick",
    value: function v_BtnClick() {
      var _this4 = this;

      var onClickBtn = function onClickBtn() {
        var doAction = function doAction() {
          if (_this4.props.btn_onClick) {
            _this4.props.btn_onClick();
          }
          if (_this4.props.isNavLink) {
            _this4.props.history.push(_this4.props.navlink_url);
          }
        };

        if (_this4.props.isDoAfterComingSoon) {
          (0, _authActions.doAfterValidateComingSoon)(doAction);
        } else {
          doAction();
        }
      };
      return _react2.default.createElement(
        "button",
        {
          className: "btn btn-sm btn-block btn-" + this.props.btnClass,
          onClick: function onClick() {
            onClickBtn();
          }
        },
        "Click Here"
      );
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { className: "action-box" },
        _react2.default.createElement(
          "div",
          { className: "ab-title" },
          this.props.title
        ),
        this.props.isQuestion ? _react2.default.createElement(
          "div",
          { className: "ab-input" },
          this.v_Input()
        ) : null,
        this.props.isQuestion ? _react2.default.createElement(
          "div",
          { className: "ab-btn-submit" },
          this.v_BtnSubmit()
        ) : null,
        this.props.isButton ? _react2.default.createElement(
          "div",
          { className: "ab-btn-click" },
          this.v_BtnClick()
        ) : null,
        this.props.isNavLink ? _react2.default.createElement(
          "div",
          { className: "ab-btn-click" },
          this.v_BtnClick()
        )
        // <NavLink className="ab-btn-click" to={this.props.navlink_url}>{this.v_BtnClick()}</NavLink>
        : null
      );
    }
  }]);

  return ActionBox;
}(_react.Component);

exports.default = ActionBox;


ActionBox.propTypes = {
  isDoAfterComingSoon: _propTypes2.default.bool,
  title: _propTypes2.default.string.isRequired,

  isNavLink: _propTypes2.default.bool,
  navlink_url: _propTypes2.default.string,

  isQuestion: _propTypes2.default.bool,
  qs_onSubmit: _propTypes2.default.func,

  isButton: _propTypes2.default.bool,
  btn_onClick: _propTypes2.default.func,

  btnClass: _propTypes2.default.string
};

ActionBox.defaultProps = {
  isDoAfterComingSoon: false,
  isQuestion: false,
  isButton: false,
  isNavLink: false,
  btnClass: "success"
};

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _list = __webpack_require__(11);

var _buttons = __webpack_require__(15);

var _reactRouterDom = __webpack_require__(7);

var _liveSession = __webpack_require__(97);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _groupSession = __webpack_require__(178);

var _companies = __webpack_require__(91);

var _companies2 = _interopRequireDefault(_companies);

var _forum = __webpack_require__(181);

var _forum2 = _interopRequireDefault(_forum);

var _sponsorList = __webpack_require__(112);

var _sponsorList2 = _interopRequireDefault(_sponsorList);

var _auditorium = __webpack_require__(182);

var _activity = __webpack_require__(176);

var _activity2 = _interopRequireDefault(_activity);

var _appConfig = __webpack_require__(4);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _authActions = __webpack_require__(2);

var _hallGallery = __webpack_require__(290);

var _generalHelper = __webpack_require__(126);

var _timer = __webpack_require__(179);

var _timer2 = _interopRequireDefault(_timer);

var _comingSoon = __webpack_require__(180);

var _listRow = __webpack_require__(582);

var _listRow2 = _interopRequireDefault(_listRow);

var _company = __webpack_require__(98);

var _eventList = __webpack_require__(292);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/hall.scss");

var HallPage = function (_React$Component) {
  _inherits(HallPage, _React$Component);

  function HallPage(props) {
    _classCallCheck(this, HallPage);

    var _this = _possibleConstructorReturn(this, (HallPage.__proto__ || Object.getPrototypeOf(HallPage)).call(this, props));

    _this.getHighlight = _this.getHighlight.bind(_this);
    _this.CFDetail = (0, _authActions.getCFObj)();
    _this.title = _this.CFDetail.title;

    _this.authUser = (0, _authActions.getAuthUser)();

    _this.state = {
      next_live_session_time: null
    };
    return _this;
  }

  _createClass(HallPage, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      // this.body = document.getElementsByTagName("body")[0];
      // this.body.className += " body-full-width ";
      (0, _generalHelper.setBodyFullWidth)();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      if ((0, _authActions.isRoleRec)()) {
        var company_id = (0, _authActions.getAuthUser)().rec_company;
        var q = "query { group_sessions(" + (0, _liveSession.getGroupSessionQueryFilter)(company_id) + " ) \n        {ID start_time} } ";

        (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
          _this2.setState(function (prevState) {
            var gs = res.data.data.group_sessions;
            var smallest = null;
            for (var i in gs) {
              var start_time = gs[i].start_time;
              if ((0, _liveSession.__IS_GROUP_SESSION_NOW)(start_time) || (0, _liveSession.__IS_GROUP_SESSION_UPCOMING)(start_time)) {
                if (smallest == null || start_time < smallest) {
                  smallest = start_time;
                }
              }
            }

            return { next_live_session_time: smallest };
          });
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _generalHelper.unsetBodyFullWidth)();
    }
  }, {
    key: "getHighlight",
    value: function getHighlight() {
      var v = null;

      if ((0, _authActions.isRoleRec)()) {
        var vData = [{
          label: "Student Listing & Resume Drop",
          url: _appConfig.RootPath + "/app/my-activity/student-listing",
          icon: "users"
        }];

        var views = vData.map(function (d, i) {
          return _react2.default.createElement(
            "span",
            null,
            _react2.default.createElement("i", { className: "fa left fa-" + d.icon }),
            _react2.default.createElement(
              _reactRouterDom.NavLink,
              { to: "" + d.url },
              "" + d.label
            )
          );
        });

        v = _react2.default.createElement(_list.CustomList, { className: "label", alignCenter: true, items: views });
      }
      return v;
    }
  }, {
    key: "getGallery",
    value: function getGallery() {
      // let imgUrl = `${ImageUrl}/banner/${this.CFDetail.banner}`;
      // var galleryStyle = {
      //   backgroundImage: `url('${imgUrl}')`,
      //   backgroundPosition: this.CFDetail.banner_pos,
      //   backgroundSize: "cover"
      // };
      // return (
      //   <div style={galleryStyle} className="gallery-section">
      //     Gallery
      //   </div>
      // );

      return _react2.default.createElement(
        "div",
        { className: "gallery-section main-width" },
        _react2.default.createElement(_hallGallery.HallGalleryView, null)
      );
    }
  }, {
    key: "getTitle",
    value: function getTitle() {
      var logo = null;
      var has = {
        logo: this.CFDetail.logo !== "undefined" && this.CFDetail.logo !== null,
        height: this.CFDetail.logo_height_hall !== "undefined" && this.CFDetail.logo_height_hall !== null,
        width: this.CFDetail.logo_width_hall !== "undefined" && this.CFDetail.logo_width_hall !== null,
        margin: this.CFDetail.logo_margin_hall !== "undefined" && this.CFDetail.logo_margin_hall !== null
      };
      if (has.logo && has.height && has.width && has.margin) {
        var imgUrl = "" + _appConfig.ImageUrl + this.CFDetail.logo;
        var logoStyle = {
          backgroundImage: "url('" + imgUrl + "')",
          backgroundPosition: this.CFDetail.logo_position,
          backgroundSize: this.CFDetail.logo_size,
          height: this.CFDetail.logo_height_hall,
          width: this.CFDetail.logo_width_hall,
          margin: this.CFDetail.logo_margin_hall
        };
        logo = _react2.default.createElement("div", { className: "title-logo", style: logoStyle });
      }

      return _react2.default.createElement(
        "div",
        { className: "title-section" },
        _react2.default.createElement(
          "div",
          null,
          "Welcome To ",
          this.title
        ),
        logo,
        _react2.default.createElement(
          "div",
          { style: { width: "100%" } },
          this.getTimerComingSoon()
        )
      );
    }
  }, {
    key: "getSponsor",
    value: function getSponsor() {
      return _react2.default.createElement(
        "div",
        { style: { marginTop: "25px", marginBottom: "25px" }, className: "sponsor-section main-width" },
        _react2.default.createElement(_sponsorList2.default
        //ignore_types={[CompanyEnum.TYPE_BRONZE]}
        , { title: false,
          part_com: false,
          type: "hall-page",
          sponsor_size: "85px"
        })
      );
    }
  }, {
    key: "getInterview",
    value: function getInterview(backgroundColor) {
      return _react2.default.createElement(
        "div",
        { className: "col-md-12 no-padding" },
        _react2.default.createElement(_listRow2.default, { title: "My Interviews",
          backgroundColor: backgroundColor,
          items: _react2.default.createElement(_activity2.default, { limitLoad: 5 }),
          see_more_text: "See More Interviews",
          see_more_onclick: function see_more_onclick() {
            // console.log(`${AppPath}/list-interviews`)
            window.location = _appConfig.AppPath + "/list-interviews";
          }
        })
      );
    }
    // getActivityAndWebinar() {
    //   return (
    //     <div className="activity-section main-width main-width-lg">
    //       <div className={`col-md-6 no-padding my-activity`}>
    //         <ActivitySection />
    //       </div>
    //       <div className={`col-md-6 no-padding`}>
    //         <WebinarHall />
    //       </div>
    //     </div>
    //   );
    // }

  }, {
    key: "getJobPost",
    value: function getJobPost(backgroundColor) {
      return _react2.default.createElement(
        "div",
        { style: { marginTop: "25px" }, className: "col-md-12 no-padding" },
        _react2.default.createElement(_listRow2.default, { title: "Job Posts",
          backgroundColor: backgroundColor,
          items: _react2.default.createElement(_company.VacancyList, { limitLoad: 4, filterByCf: true, isListAll: true, listClass: "flex-wrap-center text-left" }),
          see_more_text: "See More Job Posts",
          see_more_to: _appConfig.AppPath + "/list-job-posts"
        })
      );
    }
  }, {
    key: "getEvents",
    value: function getEvents(backgroundColor) {
      return _react2.default.createElement(
        "div",
        { style: { marginTop: "25px" }, className: "col-md-12 no-padding" },
        _react2.default.createElement(_listRow2.default, { title: "Events & Webinars",
          backgroundColor: backgroundColor,
          items: _react2.default.createElement(_eventList.EventList, { limitLoad: 4 }),
          see_more_text: "See More Events & Webinars",
          see_more_to: _appConfig.AppPath + "/list-events"
        })
      );
    }
    // getEventAndWebinar() {
    //   return <div style={{ marginTop: "25px" }} className="col-md-12 no-padding">
    //     <ListRow title="Events & Webinars"
    //       backgroundColor={null}
    //       items={<WebinarHall noBorderCard={true} limitLoad={4} />}
    //       see_more_text="See More Events & Webinars"
    //       see_more_to={`${AppPath}/list-events-webinars`}
    //     ></ListRow>
    //   </div >
    // }

  }, {
    key: "getCompanyBooth",
    value: function getCompanyBooth(backgroundColor) {

      return _react2.default.createElement(
        "div",
        { className: "col-md-12 no-padding" },
        _react2.default.createElement(_listRow2.default, { title: "Company Profiles",
          backgroundColor: backgroundColor,
          items: _react2.default.createElement(_companies2.default, _extends({}, this.props, { limitLoad: 3 })),
          see_more_text: "See More Companies",
          see_more_to: _appConfig.AppPath + "/list-companies"
        })
      );

      // return (
      //   <div className="company-section">
      //     <div style={{ marginTop: "25px" }} className="col-md-12 no-padding">
      //       <div className="title-section">
      //         <div>Company Booth</div>
      //       </div>
      //       <div className="main-width main-width-lg">
      //         <CompaniesSection {...this.props} />
      //       </div>
      //     </div>
      //   </div>
      // );
    }
  }, {
    key: "getRecruiterAction",
    value: function getRecruiterAction() {
      /**
       * 2 When Are you live?
        - kalau ada : Next Live at xxxxx
        - kalau takde : Click here to set your live session
        // this.state.next_live_session_time
      */
      var nextSessionStr = "Click here to set your live session";
      if (this.state.next_live_session_time != null && this.state.next_live_session_time > 0) {
        nextSessionStr = "Next Live @ " + _time.Time.getString(this.state.next_live_session_time);
      }

      return _react2.default.createElement(
        "div",
        { className: "title-sectaion" },
        _react2.default.createElement(
          "div",
          { className: "main-width" },
          _react2.default.createElement(_buttons.ButtonAction, {
            style: { width: "350px" },
            btnClass: "btn-lg btn-success"
            // to={`${RootPath}/app/my-activity/student-listing`}
            , to: _appConfig.RootPath + "/app/browse-student",
            icon: "users",
            iconSize: "3x",
            mainText: "All Students"
            // subText={`See who's interested in ${this.authUser.company.name}`}
            , subText: "Browse all students"
          }),
          _react2.default.createElement(_buttons.ButtonAction, {
            style: { width: "350px" },
            btnClass: "btn-lg btn-blue"
            // to={`${RootPath}/app/my-activity/student-listing`}
            , to: _appConfig.RootPath + "/app/browse-student?interested_only=1",
            icon: "user",
            iconSize: "3x",
            mainText: "Interested Students"
            // subText={`See who's interested in ${this.authUser.company.name}`}
            , subText: "Browse students interested in you"
          })
        )
      );
    }
  }, {
    key: "getTimerComingSoon",
    value: function getTimerComingSoon() {
      if ((0, _authActions.isComingSoon)()) {
        var doneMes = null;
        return _react2.default.createElement(_timer2.default, { end: this.CFDetail.start, doneMes: doneMes });
      }

      return null;
    }
  }, {
    key: "render",
    value: function render() {
      document.setTitle("Career Fair");

      var v = null;

      if ((0, _authActions.isRoleStudent)()) {
        v = _react2.default.createElement(
          "div",
          { className: "hall-page" },
          this.getGallery(),
          this.getTitle(),
          this.getSponsor(),
          this.getInterview(null),
          this.getCompanyBooth("#eef0ee"),
          this.getEvents(null),
          this.getJobPost("#eef0ee")
        );
      } else if ((0, _authActions.isRoleRec)()) {
        v = _react2.default.createElement(
          "div",
          { className: "hall-page" },
          this.getGallery(),
          this.getTitle(),
          this.getSponsor(),
          this.getRecruiterAction(this.state),
          this.getInterview("#eef0ee"),
          this.getEvents(null)
        );
      } else if ((0, _authActions.isRoleAdmin)() || (0, _authActions.isRoleOrganizer)()) {
        v = _react2.default.createElement(
          "div",
          { className: "hall-page" },
          this.getGallery(),
          this.getTitle(),
          this.getSponsor(),
          this.getCompanyBooth("#eef0ee"),
          this.getEvents(null)
        );
      }

      return v;
      // return (
      //   <div className="hall-page">
      //     {this.getGallery()}
      //     {this.getTitle()}
      //     {this.getSponsor()}
      //     {isRoleRec() ? this.getRecruiterAction(this.state) : null}
      //     {isRoleRec() || isRoleStudent() ? this.getActivityAndWebinar() : null}
      //     {/* {isRoleStudent() || isRoleAdmin() ? this.getCompanyBooth() : null} */}
      //     {this.getCompanyBooth()}
      //   </div>
      // );
    }
  }]);

  return HallPage;
}(_react2.default.Component);

exports.default = HallPage;


HallPage.propTypes = {
  isPreEvent: _propTypes2.default.bool
};

HallPage.defaultProps = {
  isPreEvent: false
};

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ManageHallGallery = exports.HallGalleryView = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _buttons = __webpack_require__(15);

var _list = __webpack_require__(11);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _activityApi = __webpack_require__(67);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _users = __webpack_require__(27);

var _scheduledInterview = __webpack_require__(28);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _time = __webpack_require__(9);

var _apiHelper = __webpack_require__(3);

var _availability = __webpack_require__(81);

var _availability2 = _interopRequireDefault(_availability);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _gallery = __webpack_require__(125);

var _dbConfig = __webpack_require__(5);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _generalHelper = __webpack_require__(126);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../../../css/hall-gallery.scss");
// remove limit join

var LIMIT = 5;
var LEFT_2 = "left-2";
var LEFT_1 = "left-1";
var CENTER = "center";
var RIGHT_1 = "right-1";
var RIGHT_2 = "right-2";
var CLASS_ARR = [LEFT_2, LEFT_1, CENTER, RIGHT_1, RIGHT_2];

var HallGalleryView = exports.HallGalleryView = function (_React$Component) {
  _inherits(HallGalleryView, _React$Component);

  function HallGalleryView(props) {
    _classCallCheck(this, HallGalleryView);

    var _this = _possibleConstructorReturn(this, (HallGalleryView.__proto__ || Object.getPrototypeOf(HallGalleryView)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();

    var defaultItems = [{
      ID: "1",
      title: "Test Video 1",
      type: _dbConfig.HallGalleryEnum.TYPE_VIDEO,
      // img_url: "http://localhost:4000/asset/image/banner/EUR.jpg",
      // img_pos: "center center",
      // img_size: "cover",
      video_url: "https://youtu.be/RNMTDv-w9MU"
    }, {
      ID: "2",
      title: "Test Image 2",
      type: "image",
      img_url: "http://localhost:4000/asset/image/banner/EUR.jpg",
      img_pos: "center center",
      img_size: "cover"
    }, {
      ID: "3",
      title: "Test Image 3",
      type: "image",
      img_url: "http://localhost:4000/asset/image/banner/EUR.jpg",
      img_pos: "center center",
      img_size: "cover"
    }, {
      ID: "4",
      title: "Test Image 4",
      type: "image",
      img_url: "http://localhost:4000/asset/image/banner/EUR.jpg",
      img_pos: "center center",
      img_size: "cover"
    }, {
      ID: "5",
      title: "Test Image 5",
      type: "image",
      img_url: "http://localhost:4000/asset/image/banner/EUR.jpg",
      img_pos: "center center",
      img_size: "cover"
    }];

    _this.state = {
      data: defaultItems,
      loading: true
    };
    return _this;
  }

  _createClass(HallGalleryView, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      // initialize all this
      // debug
      // this.currentIndex = 0;
      // this.items = this.getAllItem();
      // this.itemViews = this.items.map((d, i) => {
      //   return this.createItemView(d, i);
      // });
      // this.setState(prevState => {
      //   return { loading: false };
      // });
      // return;

      // load data
      var q = "query{\n      hall_galleries(cf :\"" + (0, _authActions.getCF)() + "\", is_active: 1, page:1, offset:5) {\n        ID\n        item_order\n        is_active\n        title\n        description\n        type\n        img_url\n        img_size\n        img_pos\n        video_url\n      }\n    }";

      (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
        _this2.setState(function (prevState) {
          var hg = res.data.data.hall_galleries;
          return { loading: false, data: hg };
        });
      });
    }
  }, {
    key: "nextOnClick",
    value: function nextOnClick() {
      var nextMap = {};
      nextMap[CENTER] = LEFT_1;
      nextMap[RIGHT_1] = CENTER;
      nextMap[RIGHT_2] = RIGHT_1;
      nextMap[LEFT_1] = LEFT_2;
      nextMap[LEFT_2] = RIGHT_2;

      var parent = document.getElementById("hall-gallery");

      var elObj = {};

      for (var i in CLASS_ARR) {
        var _currentClass = CLASS_ARR[i];
        var el = parent.getElementsByClassName(CLASS_ARR[i]);
        el = el[0];

        elObj[_currentClass] = el;
      }

      for (var currentClass in elObj) {
        var _el = elObj[currentClass];
        var changeClass = nextMap[currentClass];
        // console.log("el", el);
        // console.log("el.className", el.className);
        // console.log("currentClass", currentClass);
        // console.log("changeClass", changeClass);
        _el.className = _el.className.replaceAll(currentClass, changeClass);
      }
    }
  }, {
    key: "prevOnClick",
    value: function prevOnClick() {
      var prevMap = {};
      prevMap[CENTER] = RIGHT_1;
      prevMap[RIGHT_1] = RIGHT_2;
      prevMap[RIGHT_2] = LEFT_2;
      prevMap[LEFT_1] = CENTER;
      prevMap[LEFT_2] = LEFT_1;

      var parent = document.getElementById("hall-gallery");

      var elObj = {};

      for (var i in CLASS_ARR) {
        var _currentClass2 = CLASS_ARR[i];
        var el = parent.getElementsByClassName(CLASS_ARR[i]);
        el = el[0];

        elObj[_currentClass2] = el;
      }

      for (var currentClass in elObj) {
        var _el2 = elObj[currentClass];
        var changeClass = prevMap[currentClass];
        // console.log("el", el);
        // console.log("el.className", el.className);
        // console.log("currentClass", currentClass);
        // console.log("changeClass", changeClass);
        _el2.className = _el2.className.replaceAll(currentClass, changeClass);
      }
    }
  }, {
    key: "getAllItem",
    value: function getAllItem() {
      // to change if ada CR count
      var data = [];
      data.push(this.getItemByOffset(-2, this.currentIndex));
      data.push(this.getItemByOffset(-1, this.currentIndex));
      data.push(this.getItemByOffset(0, this.currentIndex));
      data.push(this.getItemByOffset(1, this.currentIndex));
      data.push(this.getItemByOffset(2, this.currentIndex));
      return data;
    }
  }, {
    key: "getItemClassName",
    value: function getItemClassName(i) {
      // to change if ada CR count
      var toRet = "";
      switch (i) {
        case 0:
          toRet = LEFT_2;
          break;
        case 1:
          toRet = LEFT_1;
          break;
        case 2:
          toRet = CENTER;
          break;
        case 3:
          toRet = RIGHT_1;
          break;
        case 4:
          toRet = RIGHT_2;
          break;
      }

      return toRet;
    }
  }, {
    key: "createItemView",
    value: function createItemView(d, i) {
      var _this3 = this;

      var className = this.getItemClassName(i);
      className = "hg-item " + className;

      var classNameTitle = "hg-item-title";
      var id = "hg-item-id-" + d.ID;

      var _onClick = function _onClick(e) {
        var curClass = e.currentTarget.className;
        // console.log(curClass);
        // console.log(id);
        if (curClass.indexOf(CENTER) >= 0) {
          return;
        } else if (curClass.indexOf(LEFT_2) >= 0) {
          _this3.prevOnClick();
          _this3.prevOnClick();
        } else if (curClass.indexOf(LEFT_1) >= 0) {
          _this3.prevOnClick();
        } else if (curClass.indexOf(RIGHT_1) >= 0) {
          _this3.nextOnClick();
        } else if (curClass.indexOf(RIGHT_2) >= 0) {
          _this3.nextOnClick();
          _this3.nextOnClick();
        }
      };

      // #######################################
      // start create view
      if (d.type == _dbConfig.HallGalleryEnum.TYPE_IMAGE) {
        var imgStyle = {
          backgroundImage: "url('" + d.img_url + "')",
          backgroundPosition: d.img_pos,
          backgroundSize: d.img_size,
          backgroundRepeat: "no-repeat"
        };

        var titleDesc = d.title || d.description ? _react2.default.createElement(
          "div",
          { className: classNameTitle },
          !d.title ? null : _react2.default.createElement(
            "span",
            null,
            d.title,
            _react2.default.createElement("br", null)
          ),
          _react2.default.createElement(
            "small",
            null,
            d.description
          )
        ) : null;

        return _react2.default.createElement(
          "div",
          {
            id: id,
            onClick: function onClick(e) {
              _onClick(e);
            },
            className: className,
            style: imgStyle
          },
          titleDesc
        );
      } else if (d.type == _dbConfig.HallGalleryEnum.TYPE_VIDEO) {
        return _react2.default.createElement(
          "div",
          {
            id: id,
            onClick: function onClick(e) {
              _onClick(e);
            },
            className: className
          },
          (0, _gallery.getYoutubeIframe)(d.video_url)
        );
      }
    }
  }, {
    key: "getItemByOffset",
    value: function getItemByOffset(offset, currentIndex) {
      if (offset == 0) {
        return this.state.data[currentIndex];
      }

      var offsetIndex = currentIndex + offset;
      var realIndex = null;
      if (offsetIndex >= 0 && offsetIndex < this.state.data.length) {
        realIndex = offsetIndex;
      } else if (offsetIndex >= this.state.data.length) {
        realIndex = this.state.data.length - offsetIndex;
        realIndex = Math.abs(realIndex);
      } else {
        realIndex = this.state.data.length + offsetIndex;
      }

      // console.log("offset", offset);
      // console.log("offsetIndex", offsetIndex);
      // console.log("realIndex", realIndex);

      if (realIndex != null) {
        return this.state.data[realIndex];
      } else {
        return {};
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var v = null;
      if (this.state.loading) {
        v = _react2.default.createElement(_loader.Loader, { text: "Loading Gallery...", size: "3" });
      } else {
        if (this.state.data.length <= 0) {
          return null;
        }
        this.currentIndex = 0;
        this.items = this.getAllItem();
        this.itemViews = this.items.map(function (d, i) {
          return _this4.createItemView(d, i);
        });

        var leftArrow = _react2.default.createElement(
          "div",
          {
            className: "hg-arrow left-arrow",
            onClick: function onClick() {
              _this4.prevOnClick();
            }
          },
          _react2.default.createElement("i", { className: "fa fa-angle-left" })
        );

        var rightArrow = _react2.default.createElement(
          "div",
          {
            className: "hg-arrow right-arrow",
            onClick: function onClick() {
              _this4.nextOnClick();
            }
          },
          _react2.default.createElement("i", { className: "fa fa-angle-right" })
        );

        v = _react2.default.createElement(
          "div",
          { className: "hg-item hg-container" },
          leftArrow,
          this.itemViews,
          rightArrow
        );
      }

      return _react2.default.createElement(
        "div",
        { id: "hall-gallery", className: "hall-gallery" },
        v
      );
    }
  }]);

  return HallGalleryView;
}(_react2.default.Component);

_dbConfig.HallGallery.propTypes = {};

// #########################################################################################################
// #########################################################################################################

var ManageHallGallery = exports.ManageHallGallery = function (_React$Component2) {
  _inherits(ManageHallGallery, _React$Component2);

  function ManageHallGallery(props) {
    _classCallCheck(this, ManageHallGallery);

    var _this5 = _possibleConstructorReturn(this, (ManageHallGallery.__proto__ || Object.getPrototypeOf(ManageHallGallery)).call(this, props));

    _this5.authUser = (0, _authActions.getAuthUser)();
    _this5.cf = (0, _authActions.getCF)();
    return _this5;
  }

  _createClass(ManageHallGallery, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _generalHelper.unsetBodyFullWidth)();
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this6 = this;

      (0, _generalHelper.setBodyFullWidth)();

      this.DATA_CF = (0, _form.getDataCareerFair)();
      this.FIELD_SELECT = "ID cf is_active item_order title description type img_url img_pos img_size video_url";
      this.offset = 20;
      this.tableHeader = _react2.default.createElement(
        "thead",
        null,
        _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "th",
            null,
            "ID"
          ),
          _react2.default.createElement(
            "th",
            null,
            "CF"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Is Active"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Item Order"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Title"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Description"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Type"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Meta"
          )
        )
      );

      //##########################################
      //  search
      this.searchParams = "";
      this.search = {};
      this.searchFormItem = [{ header: "Enter Your Search Query" }, {
        label: "Career Fair",
        name: _dbConfig.HallGallery.CF,
        type: "radio",
        data: this.DATA_CF
      }];

      this.searchFormOnSubmit = function (d) {
        _this6.search = d;
        _this6.searchParams = "";
        if (d != null) {
          _this6.searchParams += d.cf !== "" ? "cf:\"" + d.cf + "\"," : "";
        }
      };

      this.loadData = function (page, offset) {
        var q = "query{hall_galleries(" + _this6.searchParams + " \n              order_by: \"cf asc, is_active desc, item_order asc\", page:" + page + ", offset:" + offset + ") \n            { " + _this6.FIELD_SELECT + " } }";
        console.log(q);
        return (0, _apiHelper.getAxiosGraphQLQuery)(q);
      };

      this.getDataFromRes = function (res) {
        return res.data.data.hall_galleries;
      };

      // create form add new default
      this.newFormDefault = {};
      this.newFormDefault[_dbConfig.HallGallery.CF] = this.cf;
      this.newFormDefault[_dbConfig.HallGallery.IS_ACTIVE] = 1;
      this.newFormDefault[_dbConfig.HallGallery.ITEM_ORDER] = 0;

      this.getFormItem = function (edit) {
        var ret = [{ header: "Hall Gallery Form" }];
        ret.push.apply(ret, [{
          label: "Career Fair",
          name: _dbConfig.HallGallery.CF,
          type: "radio",
          data: _this6.DATA_CF,
          required: true
        }, {
          label: "Title",
          name: _dbConfig.HallGallery.TITLE,
          type: "text"
        }, {
          label: "Description",
          name: _dbConfig.HallGallery.DESCRIPTION,
          type: "textarea",
          rows: 2
        }, {
          label: "Is Active?",
          name: _dbConfig.HallGallery.IS_ACTIVE,
          type: "radio",
          data: [{ key: 1, label: "Yes" }, { key: 0, label: "No" }],
          required: true
        }, {
          label: "Item Order",
          name: _dbConfig.HallGallery.ITEM_ORDER,
          type: "number"
        }, {
          label: "Type",
          name: _dbConfig.HallGallery.TYPE,
          type: "select",
          data: ["", _dbConfig.HallGalleryEnum.TYPE_IMAGE, _dbConfig.HallGalleryEnum.TYPE_VIDEO],
          required: true
        }, {
          label: "Image Url",
          name: _dbConfig.HallGallery.IMG_URL,
          type: "text"
        }, {
          label: "Image Position",
          name: _dbConfig.HallGallery.IMG_POS,
          type: "text"
        }, {
          label: "Image Size",
          name: _dbConfig.HallGallery.IMG_SIZE,
          type: "text"
        }, {
          label: "Video Url",
          name: _dbConfig.HallGallery.VIDEO_URL,
          type: "text"
        }]);

        var extra = [];
        if (edit) {
          // extra = [
          //   {
          //     label: "Is Active",
          //     name: HallGallery.IS_DISABLED,
          //     type: "select",
          //     data: [{ key: 0, label: "Yes" }, { key: 1, label: "No" }],
          //     required: true
          //   }
          // ];
        }

        ret.push.apply(ret, extra);

        return ret;
      };

      this.getEditFormDefault = function (ID) {
        var query = "query\n          {hall_galleries(ID: " + ID + "){ " + _this6.FIELD_SELECT + " }}";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var hg = res.data.data.hall_galleries[0];
          return hg;
        });
      };

      this.renderRow = function (d, i) {
        var row = [];
        var discard = ["img_pos", "img_size", "video_url"];
        for (var key in d) {
          if (discard.indexOf(key) >= 0) {
            continue;
          }
          if (key == "img_url") {
            var v = [_react2.default.createElement(
              "li",
              null,
              _react2.default.createElement(
                "b",
                null,
                "Image Url"
              ),
              " : ",
              _react2.default.createElement(
                "span",
                null,
                d.img_url
              )
            ), _react2.default.createElement(
              "li",
              null,
              _react2.default.createElement(
                "b",
                null,
                "Image Position"
              ),
              " : ",
              _react2.default.createElement(
                "span",
                null,
                d.img_pos
              )
            ), _react2.default.createElement(
              "li",
              null,
              _react2.default.createElement(
                "b",
                null,
                "Image Size"
              ),
              " : ",
              _react2.default.createElement(
                "span",
                null,
                d.img_size
              )
            ), _react2.default.createElement(
              "li",
              null,
              _react2.default.createElement("br", null),
              _react2.default.createElement(
                "b",
                null,
                "Video Url"
              ),
              " : ",
              _react2.default.createElement(
                "span",
                null,
                d.video_url
              )
            )];
            row.push(_react2.default.createElement(
              "td",
              null,
              _react2.default.createElement(
                "ul",
                null,
                _react2.default.createElement(
                  "div",
                  { style: { maxWidth: "40vw" } },
                  v
                )
              )
            ));
          } else if (key == "is_active") {
            var is_active = d.is_active == "0" ? _react2.default.createElement(
              "label",
              { className: "label label-danger" },
              "Not Active"
            ) : _react2.default.createElement(
              "label",
              { className: "label label-success" },
              "Active"
            );
            row.push(_react2.default.createElement(
              "td",
              { className: "text-center" },
              is_active
            ));
          } else {
            row.push(_react2.default.createElement(
              "td",
              null,
              d[key]
            ));
          }
        }
        return row;
      };

      // if used in formWillSubmit, better put in force diff
      this.forceDiff = [_dbConfig.HallGallery.TITLE, _dbConfig.HallGallery.DESCRIPTION, _dbConfig.HallGallery.IS_ACTIVE, _dbConfig.HallGallery.TYPE, _dbConfig.HallGallery.VIDEO_URL, _dbConfig.HallGallery.IMG_URL, _dbConfig.HallGallery.IMG_POS, _dbConfig.HallGallery.IMG_SIZE];

      this.formWillSubmit = function (d, edit) {
        for (var i in d) {
          if (d[i] == null) {
            d[i] = "";
          }
        }

        var parseInt = [_dbConfig.HallGallery.IS_ACTIVE];

        for (var i in parseInt) {
          if (typeof d[parseInt[i]] === "string") {
            d[parseInt[i]] = Number.parseInt(d[parseInt[i]]);
          }
        }

        if (d[_dbConfig.HallGallery.TYPE] === _dbConfig.HallGalleryEnum.TYPE_IMAGE) {
          d[_dbConfig.HallGallery.VIDEO_URL] = "";

          if ((0, _form.isValueEmpty)(d[_dbConfig.HallGallery.IMG_URL])) {
            return "Please fill in 'Image Url' field";
          } else {
            if ((0, _form.isValueEmpty)(d[_dbConfig.HallGallery.IMG_POS])) {
              d[_dbConfig.HallGallery.IMG_POS] = "center center";
            }
            if ((0, _form.isValueEmpty)(d[_dbConfig.HallGallery.IMG_SIZE])) {
              d[_dbConfig.HallGallery.IMG_SIZE] = "100%";
            }
          }
        }

        if (d[_dbConfig.HallGallery.TYPE] === _dbConfig.HallGalleryEnum.TYPE_VIDEO) {
          d[_dbConfig.HallGallery.IMG_URL] = "";
          d[_dbConfig.HallGallery.IMG_POS] = "";
          d[_dbConfig.HallGallery.IMG_SIZE] = "";

          if ((0, _form.isValueEmpty)(d[_dbConfig.HallGallery.VIDEO_URL])) {
            return "Please fill in 'Video Url' field";
          }
        }

        if (edit) {
          d.updated_by = _this6.authUser.ID;
        } else {
          d.created_by = _this6.authUser.ID;
        }

        return d;
      };
    }
  }, {
    key: "render",
    value: function render() {
      document.setTitle("Manage Hall Gallery");
      return _react2.default.createElement(
        "div",
        { className: "main-width main-width-lg" },
        _react2.default.createElement(
          "h3",
          null,
          "Manage Hall Gallery"
        ),
        _react2.default.createElement(_generalForm2.default, {
          entity_singular: "Hall Gallery",
          entity: "hall_gallery",
          addButtonText: "Add New Hall Gallery",
          dataTitle: this.dataTitle,
          forceDiff: this.forceDiff,
          getFormItem: this.getFormItem,
          newFormDefault: this.newFormDefault,
          getEditFormDefault: this.getEditFormDefault,
          noMutation: true,
          formWillSubmit: this.formWillSubmit,
          canEdit: true,
          canAdd: true,
          dataOffset: 20,
          searchFormItem: this.searchFormItem,
          searchFormOnSubmit: this.searchFormOnSubmit,
          tableHeader: this.tableHeader,
          renderRow: this.renderRow,
          getDataFromRes: this.getDataFromRes,
          loadData: this.loadData
        })
      );
    }
  }]);

  return ManageHallGallery;
}(_react2.default.Component);

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmptyCard = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EmptyCard = exports.EmptyCard = function (_React$Component) {
  _inherits(EmptyCard, _React$Component);

  function EmptyCard(props) {
    _classCallCheck(this, EmptyCard);

    return _possibleConstructorReturn(this, (EmptyCard.__proto__ || Object.getPrototypeOf(EmptyCard)).call(this, props));
  }

  _createClass(EmptyCard, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var style = {
        minWidth: this.props.minWidth,
        minHeight: this.props.minHeight,
        height: this.props.height,
        width: this.props.width,
        borderRadius: this.props.borderRadius
      };

      var className = "card empty-card";
      if (this.props.onClick != null) {
        className += " clickable ";
      }
      return _react2.default.createElement(
        "div",
        { style: style, className: className, onClick: function onClick() {
            return _this2.props.onClick(_this2.props.paramForOnClick);
          } },
        this.props.body
      );
    }
  }]);

  return EmptyCard;
}(_react2.default.Component);

EmptyCard.propTypes = {
  paramForOnClick: _propTypes2.default.object,
  body: _propTypes2.default.object,
  borderRadius: _propTypes2.default.string,
  minHeight: _propTypes2.default.string,
  minWidth: _propTypes2.default.string,
  height: _propTypes2.default.string,
  width: _propTypes2.default.string,
  onClick: _propTypes2.default.func
};
EmptyCard.defaultProps = {
  onClick: null
};

// export  class EmptyCard extends React.Component {
//   constructor(props) {
//     super(props);
//   }
//   render() {
//   }
// }

// EmptyCard.propTypes = {
// };
// EmptyCard.defaultProps = {
// };

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EventList = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _dbConfig = __webpack_require__(5);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _interested = __webpack_require__(66);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _toggleTimezone = __webpack_require__(80);

var _toggleTimezone2 = _interopRequireDefault(_toggleTimezone);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import { AppPath } from "../../config/app-config";
// import { NavLink } from "react-router-dom";
// import GeneralFormPage from "../component/general-form";
// import obj2arg from "graphql-obj2arg";
// import { getDataCareerFair } from "../component/form";
// import { socketOn, emitLiveFeed } from "../socket/socket-client";
// import { BOTH } from "../../config/socket-config";
// import CompanyPopup from "./partial/popup/company-popup";
// import { Loader } from "../component/loader";

var EventList = exports.EventList = function (_React$Component) {
  _inherits(EventList, _React$Component);

  function EventList(props) {
    _classCallCheck(this, EventList);

    var _this = _possibleConstructorReturn(this, (EventList.__proto__ || Object.getPrototypeOf(EventList)).call(this, props));

    _this.loadData = _this.loadData.bind(_this);
    _this.getDataFromRes = _this.getDataFromRes.bind(_this);
    // this.addFeedToView = this.addFeedToView.bind(this);
    _this.renderList = _this.renderList.bind(_this);
    _this.offset = 8;

    _this.state = {
      extraData: [],
      key: 0
    };

    _this.isInit = true;
    return _this;
  }

  _createClass(EventList, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      // socketOn(BOTH.LIVE_FEED, data => {
      //   this.addFeedToView(data);
      // });

      this.getMainQueryParam = function (page, offset) {
        var paging = "";
        if (page && offset) {
          paging = "page:" + page + ",offset:" + offset;
        }

        // order_by:"end_time desc"
        return "user_id:" + (0, _authActions.getAuthUser)().ID + ", \n        " + paging + " ";
      };
      this.loadCount = function () {
        var query = "query{\n        events_count(" + _this2.getMainQueryParam() + ")\n       }";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      this.getCountFromRes = function (res) {
        return res.data.data.events_count;
      };
    }

    // ##############################################################
    // function for list

  }, {
    key: "loadData",
    value: function loadData(page, offset) {
      var query = "query{\n        events(" + this.getMainQueryParam(page, offset) + ") {\n          ID\n          is_ended\n          company_id\n          company{ID name img_url img_position img_size}\n          type\n          title\n          location\n          interested{ID is_interested}\n          start_time\n          end_time\n        }\n      }";
      return (0, _apiHelper.getAxiosGraphQLQuery)(query);
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      this.hasUpNext = false;
      this.hasNow = false;

      if (this.isInit) {
        this.scrollTo = "top";
        this.isInit = false;
      } else {
        this.scrollTo = "bottom";
      }
      return res.data.data.events;
    }

    // from socket trigger
    // addFeedToView(d) {
    //   this.scrollTo = "top";
    //   var newData = this.renderList(d, 0, true);
    //   // add to view
    //   this.setState(prevState => {
    //     prevState.extraData.push(newData);
    //     return { extraData: prevState.extraData };
    //   });
    // }

  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var isExtraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      var img = _react2.default.createElement(
        "div",
        { className: "el-image" },
        _react2.default.createElement(_profileCard2.default, {
          type: "company",
          img_url: d.company.img_url,
          img_pos: d.company.img_pos,
          img_size: d.company.img_size,
          img_dimension: "65px",
          className: "square with-border",
          body: null
        })
      );

      var detailStyle = {
        position: "relative",
        fontSize: "14px",
        textAlign: "left"
      };

      // let companyName = isRoleRec() ? (
      //   d.company.name
      // ) : (
      //     <NavLink to={`${AppPath}/company/${d.company.ID}`}>
      //       {d.company.name}
      //     </NavLink>
      //   );
      var companyName = d.company.name;

      // Display Time
      // ToogleTimezone
      var createBody = function createBody(timeStr) {
        return timeStr;
      };
      var createView = function createView(body, toggler) {
        return _react2.default.createElement(
          "div",
          { className: "el-time" },
          body,
          " ",
          toggler
        );
      };
      var createCustomToggler = function createCustomToggler(isDefaultTime, onClick) {
        return _react2.default.createElement(
          "div",
          { className: "el-toggle-timezone", onClick: onClick },
          " ",
          "Toggle Timezone ",
          isDefaultTime
        );
      };
      // let time = (
      //   <ToogleTimezone
      //     createCustomToggler={createCustomToggler}
      //     createDefaultTime={(unix, timezone) => {
      //       return (
      //         <div><i className="fa fa-clock-o left"></i> {Time.getDate(unix)} {Time.getStringShort(unix)} ({timezone}) </div>
      //       );
      //     }}
      //     createAlternateTime={(unix, timezone) => {
      //       return (
      //         <div><i className="fa fa-clock-o left"></i> {Time.getDateMas(unix)} {Time.getStringShortMas(unix)} ({timezone})</div>
      //       );
      //     }}
      //     unixtimestamp={d.start_time}
      //     createBody={createBody}
      //     createView={createView}
      //   />
      // );

      var time = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement("i", { className: "fa fa-clock-o left" }),
        " ",
        _time.Time.getDateMas(d.start_time),
        " ",
        _time.Time.getStringShortMas(d.start_time),
        " (MYT)"
      );
      var locationText = _react2.default.createElement(
        "div",
        { className: "el-location-text" },
        d.location
      );
      var location = _react2.default.createElement(
        "div",
        { className: "el-location" },
        _react2.default.createElement("i", { className: "fa fa-map-marker left", style: { marginRight: "12px" } }),
        !d.location ? _react2.default.createElement(
          "i",
          { className: "text-muted" },
          "Not Speficied"
        ) : _react2.default.createElement(
          "span",
          null,
          d.type == _dbConfig.EventEnum.TYPE_VIRTUAL ? _react2.default.createElement(
            "b",
            null,
            _react2.default.createElement(
              "a",
              { target: "_blank", href: d.location },
              locationText
            )
          ) // location jadi url utk virtual
          : locationText // location biasa untuk physical

        )
      );

      var title = _react2.default.createElement(
        "div",
        { className: "el-title" },
        _react2.default.createElement(
          "b",
          null,
          d.title
        ),
        _react2.default.createElement("br", null)
      );

      var details = _react2.default.createElement(
        "div",
        { className: "el-details", style: detailStyle },
        title,
        time,
        location
      );

      // var action_disabled = true;
      // var action_link = "";
      // var action_text = "";
      // var action_color = "";
      // if (d.recorded_link != null && d.recorded_link != "") {
      //   // Has Recorded Video
      //   action_disabled = false;
      //   action_link = d.recorded_link;
      //   action_text = (
      //     <span>
      //       <i className="fa fa-play-circle" />
      //       <br />
      //       Watch
      //     </span>
      //   );
      //   action_color = "danger";
      // } else if (d.link != null && d.link != "") {
      //   // Has Join Link
      //   action_disabled = false;
      //   action_link = d.link;
      //   action_text = (
      //     <span>
      //       <i className="fa fa-sign-in" />
      //       <br />
      //       Join Now
      //     </span>
      //   );
      //   action_color = "success";
      // }


      var rsvpButton = _react2.default.createElement(_interested.InterestedButton, {
        customStyle: {
          top: "3px",
          left: "7px",
          width: "max-content"
        },
        customView: function customView(_ref) {
          var is_interested = _ref.is_interested,
              onClickModeAction = _ref.onClickModeAction;

          var r = null;

          // if (Time.getUnixTimestampNow() > d.end_time) {
          if (d.is_ended) {
            r = _react2.default.createElement(
              "div",
              { className: "el-ended el-action-item" },
              "Event Ended"
            );
          } else {
            if (is_interested) {
              r = _react2.default.createElement(
                "div",
                { className: "el-rsvped el-action-item", onClick: onClickModeAction },
                _react2.default.createElement("i", { className: "fa fa-check left" }),
                "Registered"
              );
            } else {
              r = _react2.default.createElement(
                "div",
                { className: "el-rsvp el-action-item", onClick: onClickModeAction },
                _react2.default.createElement("i", { className: "fa fa-plus left" }),
                "RSVP For Event"
              );
            }
          }

          return _react2.default.createElement(
            "div",
            { className: "el-action" },
            r
          );
        },
        isModeCount: false,
        isModeAction: true,
        finishHandler: function finishHandler(is_interested) {
          if (is_interested == 1) {
            layoutActions.successBlockLoader(_react2.default.createElement(
              "div",
              null,
              "Successfully RSVP'ed for event",
              _react2.default.createElement("br", null),
              _react2.default.createElement(
                "b",
                null,
                d.title
              ),
              _react2.default.createElement("br", null),
              "with ",
              companyName
            ));
          }

          // else {
          //   layoutActions.successBlockLoader(`YRSVP'ed for ${d.title} webinar`)
          // }
        },
        ID: d.interested.ID,
        is_interested: d.interested.is_interested,
        entity: "event",
        entity_id: d.ID
      });

      //rsvpButton = null;
      var v = _react2.default.createElement(
        "div",
        { className: "event-list", style: { position: "relative" } },
        (0, _authActions.isRoleStudent)() ? rsvpButton : null,
        img,
        details
      );
      return v;
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      // kalau list semua
      var countParam = {};
      if (!this.props.limitLoad) {
        countParam = {
          loadCount: this.loadCount,
          getCountFromRes: this.getCountFromRes
        };
      }

      return _react2.default.createElement(_list2.default, _extends({}, countParam, {
        key: this.state.key,
        type: "list",
        listClass: "flex-wrap",
        pageClass: "text-right",
        listRef: function listRef(v) {
          return _this3.dashBody = v;
        },
        getDataFromRes: this.getDataFromRes,
        loadData: this.loadData,
        extraData: this.state.extraData,
        hideLoadMore: this.props.limitLoad ? true : false,
        offset: this.props.limitLoad ? this.props.limitLoad : this.offset,
        renderList: this.renderList
      }));
    }
  }]);

  return EventList;
}(_react2.default.Component);

EventList.propTypes = {
  limitLoad: _propTypes2.default.number
};

EventList.defaultProps = {};

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.getStudentListingBtn = getStudentListingBtn;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _list = __webpack_require__(11);

var _reactRouterDom = __webpack_require__(7);

var _activityOld = __webpack_require__(583);

var _activityOld2 = _interopRequireDefault(_activityOld);

var _groupSession = __webpack_require__(178);

var _companiesOld = __webpack_require__(584);

var _companiesOld2 = _interopRequireDefault(_companiesOld);

var _forum = __webpack_require__(181);

var _forum2 = _interopRequireDefault(_forum);

var _dbConfig = __webpack_require__(5);

var _appConfig = __webpack_require__(4);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function getStudentListingBtn() {
    var text = _react2.default.createElement(
        'h3',
        { style: {
                marginTop: "11px",
                marginLeft: "10px"
            }, className: 'text-left' },
        'Student Listing &',
        _react2.default.createElement('br', null),
        'Resume Drop'
    );

    var actData = [{
        label: "Schedule 1-1 Interview Here",
        url: _appConfig.RootPath + '/app/my-activity/student-listing',
        icon: "users",
        color: "#007BB4",
        isNavLink: true,
        text: text
    }];
    return (0, _list.createIconLink)("lg", actData, true);
}

var HallPage = function (_React$Component) {
    _inherits(HallPage, _React$Component);

    function HallPage(props) {
        _classCallCheck(this, HallPage);

        var _this = _possibleConstructorReturn(this, (HallPage.__proto__ || Object.getPrototypeOf(HallPage)).call(this, props));

        _this.getHighlight = _this.getHighlight.bind(_this);
        _this.title = (0, _authActions.getCFObj)().title;
        _this.authUser = (0, _authActions.getAuthUser)();
        return _this;
    }

    _createClass(HallPage, [{
        key: 'getHighlight',
        value: function getHighlight() {
            var v = null;

            if ((0, _authActions.isRoleRec)()) {

                var vData = [{
                    label: "Student Listing & Resume Drop",
                    url: _appConfig.RootPath + '/app/my-activity/student-listing',
                    icon: "users"
                }];

                var views = vData.map(function (d, i) {
                    return _react2.default.createElement(
                        'span',
                        null,
                        _react2.default.createElement('i', { className: 'fa left fa-' + d.icon }),
                        _react2.default.createElement(
                            _reactRouterDom.NavLink,
                            { to: '' + d.url },
                            '' + d.label
                        )
                    );
                });

                v = _react2.default.createElement(_list.CustomList, { className: 'label',
                    alignCenter: true, items: views });
            }
            return v;
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Career Fair");

            var gSesion = null;
            if ((0, _authActions.isRoleRec)()) {
                gSesion = _react2.default.createElement(_groupSession.GroupSessionView, { forRec: true, company_id: this.authUser.rec_company });
                gSesion = _react2.default.createElement(_pageSection2.default, { showOverflow: true, title: '', body: gSesion });
            }

            var companyBooth = null;
            if ((0, _authActions.isRoleStudent)()) {
                companyBooth = _react2.default.createElement(_pageSection2.default, { showOverflow: true, title: null, body: _companiesOld2.default });
            }

            var midView = null;
            if ((0, _authActions.isRoleRec)()) {

                var forum = _react2.default.createElement(_forum2.default, { isHomePage: true, forum_id: 'company_' + (0, _authActions.getAuthUser)().company_id });
                midView = _react2.default.createElement(
                    'div',
                    { className: 'container-fluid' },
                    _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6', style: { marginTop: "20px" } },
                            getStudentListingBtn(),
                            _react2.default.createElement(_pageSection2.default, { showOverflow: true, title: null, body: _activityOld2.default })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'col-md-6' },
                            _react2.default.createElement(_pageSection2.default, { showOverflow: true, title: '', body: forum })
                        )
                    )
                );
            } else {
                midView = _react2.default.createElement(_pageSection2.default, { showOverflow: true, title: null, body: _activityOld2.default });
            }

            var titlePage = (0, _authActions.isRoleRec)() ? _react2.default.createElement(
                'h2',
                null,
                'Welcome To ',
                this.title
            ) : _react2.default.createElement(
                'h4',
                null,
                'Welcome To ',
                this.title
            );
            return _react2.default.createElement(
                'div',
                null,
                this.props.isPreEvent ? _react2.default.createElement('div', { className: 'line' }) : titlePage,
                gSesion,
                companyBooth,
                midView
            );
        }
    }]);

    return HallPage;
}(_react2.default.Component);

exports.default = HallPage;


HallPage.propTypes = {
    isPreEvent: _propTypes2.default.bool
};

HallPage.defaultProps = {
    isPreEvent: false
};

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UserFormItem = exports.TotalRegisterStep = undefined;
exports.getRequiredStudentInfo = getRequiredStudentInfo;
exports.getEditProfileFormItem = getEditProfileFormItem;
exports.getRegisterFormItem = getRegisterFormItem;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _form = __webpack_require__(19);

var _appConfig = __webpack_require__(4);

var _dataConfig = __webpack_require__(175);

var _registrationConfig = __webpack_require__(295);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var TotalRegisterStep = exports.TotalRegisterStep = 3;

var UserFormItem = exports.UserFormItem = [
// {
//     header: "Select Career Fair",
//     register: 1, editStudent: 0, editRec: 0
// },
// {
//     name: User.CF,
//     type: "radio",
//     data: getDataCareerFair("register"),
//     hidden:false,
//     //required: true,
//     register: 1, editStudent: 0, editRec: 0
// },
{
    header: "Basic Information",
    register: 1, editStudent: 1, editRec: 1
}, {
    label: "First Name",
    name: _dbConfig.UserMeta.FIRST_NAME,
    type: "text",
    placeholder: "John",
    //required: true,
    register: 1, editStudent: 0, editRec: 0
}, {
    label: "Last Name",
    name: _dbConfig.UserMeta.LAST_NAME,
    type: "text",
    placeholder: "Doe",
    //required: true,
    register: 1, editStudent: 0, editRec: 0
}, {
    label: "Email",
    name: _dbConfig.User.EMAIL,
    type: "email",
    placeholder: "john.doe@gmail.com",
    //required: true,
    register: 1, editStudent: 0, editRec: 0
}, {
    label: "Password",
    name: _dbConfig.User.PASSWORD,
    type: "password",
    placeholder: "*****",
    //required: true,
    register: 1, editStudent: 0, editRec: 0
},
// {
//     label: "Confirm Password",
//     name: `${User.PASSWORD}-confirm`,
//     type: "password",
//     placeholder: "*****",
//     //required: true,
//     register: 1, editStudent: 0, editRec: 0
// }, 
{
    label: "Position",
    name: _dbConfig.UserMeta.REC_POSITION,
    type: "text",
    placeholder: "HR Manager",
    register: 0, editStudent: 0, editRec: 1
}, {
    header: "A Little More About Yourself",
    register: 2, editStudent: 0, editRec: 0
}, {
    label: "Phone Number",
    name: _dbConfig.UserMeta.PHONE_NUMBER,
    type: "text",
    placeholder: "XXX-XXXXXXX",
    //required: true,
    register: 2, editStudent: 1, editRec: 0
},
// {
//     label: "Gender",
//     name: UserMeta.GENDER,
//     type: "select",
//     data: ["", UserEnum.GENDER_MALE, UserEnum.GENDER_FEMALE],
//     //required: true,
// register:1, editStudent: 1, editRec: 0 },
{
    header: "Where Do You Reside In Malaysia?",
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "State",
    name: _dbConfig.UserMeta.MAS_STATE,
    type: "select",
    data: _dataConfig.MasState,
    //required: true,
    register: 2, editStudent: 1, editRec: 0
},
// {
//     label: "Postcode",
//     name: UserMeta.MAS_POSTCODE,
//     type: "text",
//     //required: true,,
//     placeholder: "20050"
// register:1, editStudent: 1, editRec: 1 },
{
    header: "Degree Related Information",
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "Degree Level",
    name: _dbConfig.UserMeta.DEGREE_LEVEL,
    type: "select",
    data: _dataConfig.DegreeLevel,
    //required: true,
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "Field Of Study",
    name: _dbConfig.UserMeta.STUDY_FIELD,
    type: "select",
    data: _dataConfig.StudyField,
    //required: true,
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "Major",
    name: _dbConfig.UserMeta.MAJOR,
    type: "text",
    multiple: true,
    //required: true,
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "Minor",
    name: _dbConfig.UserMeta.MINOR,
    type: "text",
    multiple: true,
    //required: false,
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "University",
    name: _dbConfig.UserMeta.UNIVERSITY,
    type: "text",
    //required: true,
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "Where Is Your University Located?",
    name: _dbConfig.UserMeta.STUDY_PLACE,
    type: "select",
    data: _dataConfig.Country,
    //required: true,
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "Current Grade",
    name: _dbConfig.UserMeta.CGPA,
    type: "text",
    //step: "0.01",
    //min: "0",
    //required: false,
    sublabel: "Based On Your Grading System",
    // sublabel: <ButtonLink label="Don't Use CGPA system?"
    //     target='_blank'
    //     href="https://www.foreigncredits.com/resources/gpa-calculator/">
    // </ButtonLink>
    register: 2, editStudent: 1, editRec: 0
}, {
    label: "Expected Graduation",
    name: _dbConfig.UserMeta.GRADUATION_MONTH,
    type: "select",
    data: _dataConfig.Month,
    //required: true,,
    register: 2, editStudent: 1, editRec: 0
}, {
    label: null,
    name: _dbConfig.UserMeta.GRADUATION_YEAR,
    type: "select",
    data: _dataConfig.Year,
    //required: true,,
    register: 2, editStudent: 1, editRec: 0
}, {
    header: "Future Employment Information",
    register: 3, editStudent: 1, editRec: 0
}, {
    label: "Looking For",
    name: _dbConfig.UserMeta.LOOKING_FOR,
    type: "select",
    data: ["", _dbConfig.UserEnum.LOOK_FOR_FULL_TIME, _dbConfig.UserEnum.LOOK_FOR_INTERN],
    //required: true,
    register: 3, editStudent: 1, editRec: 0
}, {
    label: "Work Availability Date",
    //sublabel: "Select 'Available To Start Anytime' for both field below if you are ready to work anytime.",
    name: _dbConfig.UserMeta.AVAILABLE_MONTH,
    type: "select",
    data: Array.apply(undefined, _toConsumableArray(_dataConfig.Month)),
    //required: true,
    register: 3, editStudent: 1, editRec: 0
}, {
    label: null,
    name: _dbConfig.UserMeta.AVAILABLE_YEAR,
    type: "select",
    data: Array.apply(undefined, _toConsumableArray(_dataConfig.Year)),
    //required: true,
    register: 3, editStudent: 1, editRec: 0
},
// {
//     label: "Are You Willing To Relocate?",
//     name: UserMeta.RELOCATE,
//     type: "select",
//     data: Array("", "Yes", "No"),
//     //required: true,
//     register: 3, editStudent: 1, editRec: 0
// },
{
    header: "Additional Information",
    register: 3, editStudent: 1, editRec: 0
}, {
    label: "Sponsor",
    name: _dbConfig.UserMeta.SPONSOR,
    type: "select",
    data: _dataConfig.Sponsor,
    //required: false,
    sublabel: "This information will not be displayed in your profile.",
    register: 3, editStudent: 1, editRec: 0
}, {
    label: "Description",
    name: _dbConfig.UserMeta.DESCRIPTION,
    type: "textarea",
    placeholder: "Tell More About Yourself",
    //required: false,
    rows: 5,
    register: 3, editStudent: 1, editRec: 0
}, {
    label: null,
    name: "accept-policy",
    type: "checkbox",
    data: [{
        key: "accepted",
        label: _react2.default.createElement(
            'small',
            null,
            'I agree to ',
            _react2.default.createElement(
                'a',
                { href: _appConfig.DocumentUrl + '/privacy-policy.pdf', target: '_blank' },
                'terms and conditions'
            )
        )
    }],
    //required: true,,
    register: 1, editStudent: 0, editRec: 0
}];

function setAdditionalAttribute(item) {
    if (typeof item.name !== "undefined") {
        if (_registrationConfig.RequiredFieldStudent.indexOf(item.name) >= 0 || _registrationConfig.RequiredFieldRecruiter.indexOf(item.name) >= 0) {
            item.required = true;
        } else {
            item.required = false;
        }
    }

    return item;
}

// used to check if profile dah complete ke belum
function getRequiredStudentInfo() {
    var arr = [];

    for (var i in UserFormItem) {
        var item = UserFormItem[i];
        item = setAdditionalAttribute(item);
        if (item.register == 1 && item.required == true) {
            arr.push(item.name);
        }
    }

    return arr;
}

function getEditProfileFormItem(type) {
    var toRet = [];

    for (var i in UserFormItem) {
        var item = UserFormItem[i];
        item = setAdditionalAttribute(item);

        if (type == _dbConfig.UserEnum.ROLE_STUDENT && item.editStudent == 1) {
            toRet.push(item);
        }

        if (type == _dbConfig.UserEnum.ROLE_RECRUITER && item.editRec == 1) {
            toRet.push(item);
        }
    }

    return toRet;
}

function getRegisterFormItem(registerStep) {
    var toRet = [];

    for (var i in UserFormItem) {
        var item = UserFormItem[i];
        item = setAdditionalAttribute(item);

        if (item.register == registerStep) {
            toRet.push(item);
        }
    }

    return toRet;
}

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(5),
    User = _require.User,
    UserMeta = _require.UserMeta;

var Single = {
    first_name: "first_name",
    last_name: "last_name",
    country_study: "country_study",
    university: "university",
    qualification: "qualification",
    graduation_month: "graduation_month",
    graduation_year: "graduation_year",
    working_availability_month: "working_availability_month",
    working_availability_year: "working_availability_year",
    where_in_malaysia: "where_in_malaysia",
    grade: "grade",
    phone_number: "phone_number"
    //sponsor : "sponsor",
    //description : "description",
};

var Multi = {
    field_study: "field_study",
    looking_for_position: "looking_for_position",
    interested_role: "interested_role",
    interested_job_location: "interested_job_location",
    skill: "skill",
    extracurricular: "extracurricular"
};

var RequiredFieldStudent = [UserMeta.FIRST_NAME, UserMeta.LAST_NAME, User.EMAIL, User.PASSWORD,
//`${User.PASSWORD}-confirm`,
UserMeta.PHONE_NUMBER, UserMeta.MAS_STATE, UserMeta.DEGREE_LEVEL, UserMeta.STUDY_FIELD, UserMeta.MAJOR,
//UserMeta.MINOR,
UserMeta.UNIVERSITY, UserMeta.STUDY_PLACE,
//UserMeta.CGPA,
UserMeta.GRADUATION_MONTH, UserMeta.GRADUATION_YEAR, UserMeta.LOOKING_FOR, UserMeta.AVAILABLE_MONTH, UserMeta.AVAILABLE_YEAR,
//UserMeta.RELOCATE,
UserMeta.SPONSOR];

var RequiredFieldRecruiter = [UserMeta.FIRST_NAME, UserMeta.LAST_NAME, User.EMAIL, User.PASSWORD];

module.exports = {
    Single: Single, Multi: Multi,
    RequiredFieldStudent: RequiredFieldStudent,
    RequiredFieldRecruiter: RequiredFieldRecruiter
};

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _authActions = __webpack_require__(2);

var authActions = _interopRequireWildcard(_authActions);

var _redux = __webpack_require__(26);

var _reactRouterDom = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//state is from redux reducer
// with multiple objects
function mapStateToProps(state, ownProps) {
    return {
        redux: state.auth
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({
        logout: authActions.logout
    }, dispatch);
}

var LogoutPage = function (_React$Component) {
    _inherits(LogoutPage, _React$Component);

    function LogoutPage(props) {
        _classCallCheck(this, LogoutPage);

        return _possibleConstructorReturn(this, (LogoutPage.__proto__ || Object.getPrototypeOf(LogoutPage)).call(this, props));
    }

    _createClass(LogoutPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.props.logout();
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                'Logging Out'
            );
        }
    }]);

    return LogoutPage;
}(_react2.default.Component);

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LogoutPage);

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _restricted = __webpack_require__(298);

var _restricted2 = _interopRequireDefault(_restricted);

var _authConfig = __webpack_require__(75);

var _authActions = __webpack_require__(2);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import { AuthAPIErr } from '../../server/api/auth-api';


var PasswordResetPage = function (_React$Component) {
    _inherits(PasswordResetPage, _React$Component);

    function PasswordResetPage(props) {
        _classCallCheck(this, PasswordResetPage);

        var _this = _possibleConstructorReturn(this, (PasswordResetPage.__proto__ || Object.getPrototypeOf(PasswordResetPage)).call(this, props));

        _this.getFormItem = _this.getFormItem.bind(_this);
        _this.finishFormSubmit = _this.finishFormSubmit.bind(_this);
        _this.formOnSubmit = _this.formOnSubmit.bind(_this);
        _this.TYPE_TOKEN = "token";
        _this.TYPE_OLD = "old";
        _this.state = {
            error: null,
            disableSubmit: false,
            success: null
        };
        return _this;
    }

    _createClass(PasswordResetPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.token = null;
            this.user_id = null;
            if (this.props.match) {
                var url_params = this.props.match.params;
                this.token = url_params.token ? url_params.token : null;
                this.user_id = url_params.user_id ? Number.parseInt(url_params.user_id) : null;
                console.log(url_params);
                console.log(this.user_id);
                console.log(this.user_id);
                console.log(this.user_id);
                if (Number.isNaN(this.user_id)) {
                    this.user_id = null;
                }
            }
            // open from reset password link
            if (this.token !== null && this.user_id !== null) {
                this.type = this.TYPE_TOKEN;
            }
            // open after login to change old password
            else if ((0, _authActions.isAuthorized)()) {
                    this.type = this.TYPE_OLD;
                    this.user_id = (0, _authActions.getAuthUser)().ID;
                }
                // invalid -- show error
                else {
                        this.type = null;
                    }

            this.formItem = this.getFormItem();
        }
    }, {
        key: 'getFormItem',
        value: function getFormItem() {
            var formItem = [];
            if (this.type == this.TYPE_OLD) {
                formItem.push({
                    label: "Old Password",
                    name: "old_password",
                    type: "password",
                    placeholder: "****",
                    required: true
                });
            }

            formItem.push.apply(formItem, [{
                label: "New Password",
                name: "new_password",
                type: "password",
                placeholder: "****",
                required: true
            }, {
                label: "Confirm New Password",
                name: "confirm_new_password",
                type: "password",
                placeholder: "****",
                required: true
            }]);

            return formItem;
        }
    }, {
        key: 'finishFormSubmit',
        value: function finishFormSubmit(res) {
            var err = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            var errorMes = null;

            if (err != null) {
                var tokenMes = _react2.default.createElement(
                    'span',
                    null,
                    'Please request a new password reset link ',
                    _react2.default.createElement(
                        _reactRouterDom.NavLink,
                        { to: _appConfig.RootPath + '/auth/password-forgot' },
                        'here'
                    )
                );

                switch (err.response.data) {
                    case _authConfig.AuthAPIErr.WRONG_PASS:
                        errorMes = "The old password given is incorrect";
                        break;
                    case _authConfig.AuthAPIErr.TOKEN_INVALID:
                        errorMes = _react2.default.createElement(
                            'span',
                            null,
                            _react2.default.createElement(
                                'b',
                                null,
                                'Invalid Token'
                            ),
                            _react2.default.createElement('br', null),
                            tokenMes
                        );
                        break;
                    case _authConfig.AuthAPIErr.TOKEN_EXPIRED:
                        errorMes = _react2.default.createElement(
                            'span',
                            null,
                            _react2.default.createElement(
                                'b',
                                null,
                                'Token Has Expired'
                            ),
                            _react2.default.createElement('br', null),
                            tokenMes
                        );
                        break;
                }
            }

            (0, _form.toggleSubmit)(this, {
                error: errorMes,
                success: res == null ? null : "Your password has been successfully set"
            });
        }
    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            var _this2 = this;

            (0, _form.toggleSubmit)(this, { error: null });

            if (d.new_password !== d.confirm_new_password) {
                (0, _form.toggleSubmit)(this, { error: "New Password Does Not Match" });
                return;
            }

            if (this.type == this.TYPE_OLD) {
                (0, _authActions.passwordResetOld)(d.new_password, d.old_password, this.user_id).then(function (res) {
                    _this2.finishFormSubmit(res);
                }, function (err) {
                    _this2.finishFormSubmit(null, err);
                });
            } else if (this.type == this.TYPE_TOKEN) {
                (0, _authActions.passwordResetToken)(d.new_password, this.token, this.user_id).then(function (res) {
                    _this2.finishFormSubmit(res);
                }, function (err) {
                    _this2.finishFormSubmit(null, err);
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Password Reset");

            if (!this.type) {
                return _react2.default.createElement(_restricted2.default, null);
            }

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    'Password Reset'
                ),
                _react2.default.createElement(_form2.default, { className: 'form-row',
                    items: this.formItem,
                    disableSubmit: this.state.disableSubmit,
                    submitText: 'Submit',
                    onSubmit: this.formOnSubmit,
                    success: this.state.success,
                    emptyOnSuccess: true,
                    error: this.state.error })
            );
        }
    }]);

    return PasswordResetPage;
}(_react2.default.Component);

exports.default = PasswordResetPage;

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Restricted = function (_React$Component) {
    _inherits(Restricted, _React$Component);

    function Restricted() {
        _classCallCheck(this, Restricted);

        return _possibleConstructorReturn(this, (Restricted.__proto__ || Object.getPrototypeOf(Restricted)).apply(this, arguments));
    }

    _createClass(Restricted, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    this.props.title
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    this.props.message
                )
            );
        }
    }]);

    return Restricted;
}(_react2.default.Component);

exports.default = Restricted;


Restricted.propTypes = {
    title: _propTypes2.default.string,
    message: _propTypes2.default.string
};

Restricted.defaultProps = {
    title: "You Seems To Be Lost",
    message: "Sorry. You are not allowed here"
};

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _uploader = __webpack_require__(159);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import { postAxios } from "../../helper/api-helper";
// import { AppConfig } from "../../config/app-config";
// import { emitProgess, socketOn } from "../socket/socket-client";
// import { BOTH } from "../../config/socket-config";

var UploaderVideoProgress = function (_React$Component) {
  _inherits(UploaderVideoProgress, _React$Component);

  function UploaderVideoProgress(props) {
    _classCallCheck(this, UploaderVideoProgress);

    return _possibleConstructorReturn(this, (UploaderVideoProgress.__proto__ || Object.getPrototypeOf(UploaderVideoProgress)).call(this, props));

    //this.PARSE_MAX_PERCENT = 100;
    // this.INTERVAL_TIME = 10 * 1000;
    // this.state = {
    //   progress: null // {bytesReceived, bytesExpected, parseCompleted, uploadCompleted}
    // };
  }

  _createClass(UploaderVideoProgress, [{
    key: "componentWillMount",
    value: function componentWillMount() {}
    // this.interval = setInterval(() => {
    //   emitProgess({ fileName: this.props.fileName });
    // }, 5000);

    // socketOn(BOTH.PROGRESS, data => {
    //   // console.log("from socket server", data);
    //   if (data.parseCompleted == true || data.uploadCompleted == true) {
    //     clearInterval(this.interval);
    //   }

    //   this.setState({ progress: data });
    // });

    //return;
    // var interval = setInterval(() => {
    //   postAxios(
    //     `${AppConfig.Api}/upload-progress/${this.props.fileName}`,
    //     {}
    //   ).then(res => {
    //     let progress = res.data;
    //     if (progress.uploadCompleted == true) {
    //       console.log("clear interval");
    //       clearInterval(interval);
    //     }
    //     this.setState({ progress: progress });
    //   });
    // }, this.INTERVAL_TIME);


    // getPercentage() {
    //   let percentage = this.percentage;
    //   if (this.state.progress) {
    //     if (this.state.progress.parseCompleted == true) {
    //       percentage = this.PARSE_MAX_PERCENT;
    //     } else if (this.state.progress.uploadCompleted == true) {
    //       percentage = "100";
    //     } else {
    //       try {
    //         percentage =
    //           (this.state.progress.bytesReceived /
    //             this.state.progress.bytesExpected) *
    //           100 *
    //           (this.PARSE_MAX_PERCENT / 100);
    //       } catch (err) { }
    //     }
    //   }
    //   this.percentage = percentage;
    //   // console.log("this.state.progress", this.state.progress);
    //   // console.log("percentage", percentage);

    //   return percentage;
    // }

  }, {
    key: "render",
    value: function render() {
      // let percentage = this.getPercentage();
      var percentageView = [_react2.default.createElement("br", null), _react2.default.createElement(
        "div",
        { style: { padding: "10px 15px" } },
        _react2.default.createElement(
          "div",
          { className: "progress", style: { border: "#5f5f5f 1px solid", marginBottom: "0px" } },
          _react2.default.createElement("div", {
            className: "progress-bar bg-warning",
            role: "progressbar",
            style: { width: this.props.percentCompleted + "%" },
            "aria-valuenow": this.props.percentCompleted,
            "aria-valuemin": "0",
            "aria-valuemax": "100"
          })
        )
      )];

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "b",
          null,
          "Uploading Video.."
        ),
        _react2.default.createElement("br", null),
        "This may take a while. Please don't close this window or hit refresh",
        percentageView
      );
    }
  }]);

  return UploaderVideoProgress;
}(_react2.default.Component);

UploaderVideoProgress.propTypes = {
  fileName: _propTypes2.default.string,
  percentCompleted: _propTypes2.default.number
};

var UploaderVideo = function (_React$Component2) {
  _inherits(UploaderVideo, _React$Component2);

  function UploaderVideo(props) {
    _classCallCheck(this, UploaderVideo);

    var _this2 = _possibleConstructorReturn(this, (UploaderVideo.__proto__ || Object.getPrototypeOf(UploaderVideo)).call(this, props));

    _this2.state = {
      error: null,
      currentFile: null,
      loading: false,
      percentCompleted: 0
      // success: null
    };
    _this2.fileName = _this2.props.entity + "_" + _this2.props.entity_id + "_" + _this2.props.meta_key;
    _this2.uploadOnClick = _this2.uploadOnClick.bind(_this2);
    _this2.uploaderOnChange = _this2.uploaderOnChange.bind(_this2);
    _this2.uploaderOnError = _this2.uploaderOnError.bind(_this2);
    _this2.uploaderOnSuccess = _this2.uploaderOnSuccess.bind(_this2);
    return _this2;
  }

  _createClass(UploaderVideo, [{
    key: "componentWillMount",
    value: function componentWillMount() {}
  }, {
    key: "uploaderOnChange",
    value: function uploaderOnChange(file) {}
  }, {
    key: "uploaderOnError",
    value: function uploaderOnError(err) {
      this.setState(function () {
        return { error: err, currentFile: null };
      });
    }
  }, {
    key: "uploaderOnSuccess",
    value: function uploaderOnSuccess(file) {
      this.setState(function () {
        return { error: null, currentFile: file, percentCompleted: 0 };
      });
    }
  }, {
    key: "isUploadEnable",
    value: function isUploadEnable() {
      return this.state.currentFile != null && this.state.error == null && this.state.loading == false;
    }
  }, {
    key: "uploadOnClick",
    value: function uploadOnClick() {
      var _this3 = this;

      this.setState({ loading: true, error: null, percentCompleted: 0 });
      var extraParam = {
        entity: this.props.entity,
        entity_id: this.props.entity_id,
        meta_key: this.props.meta_key
      };

      // let timestamp = Date.now();d

      // layoutActions.loadingBlockLoader(
      //   <UploaderVideoProgress percentCompleted={this.state.percentCompleted} fileName={fileName}></UploaderVideoProgress>
      // );

      var onUploadProgress = function onUploadProgress(progressEvent) {
        var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);
        console.log("onUploadProgress", percentCompleted);
        _this3.setState({ percentCompleted: percentCompleted });
      };

      (0, _uploader.uploadFile)(this.state.currentFile, _uploader.FileType.VIDEO, this.fileName, extraParam, onUploadProgress).then(function (res) {
        console.log(res);
        _this3.setState({
          loading: false,
          error: null
        });
        layoutActions.successBlockLoader(_react2.default.createElement(
          "div",
          null,
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "b",
            null,
            "Video successfully uploaded."
          ),
          _react2.default.createElement("br", null),
          "Refresh page to see changes."
        ));
      });
    }
  }, {
    key: "render",
    value: function render() {

      var v = null;
      if (this.state.loading) {
        v = _react2.default.createElement(UploaderVideoProgress, {
          percentCompleted: this.state.percentCompleted,
          fileName: this.fileName });
      } else {
        v = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_uploader.Uploader, {
            label: this.props.label,
            name: this.props.name,
            type: _uploader.FileType.VIDEO,
            onSuccess: this.uploaderOnSuccess,
            onChange: this.uploaderOnChange,
            onError: this.uploaderOnError
          }),
          _react2.default.createElement(
            "div",
            { className: "error" },
            this.state.error
          ),
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "button",
            {
              disabled: !this.isUploadEnable(),
              className: "btn btn-blue",
              onClick: this.uploadOnClick
            },
            "Upload"
          )
        );
      }
      return _react2.default.createElement(
        "div",
        { className: "uploader-video" },
        v
      );
    }
  }]);

  return UploaderVideo;
}(_react2.default.Component);

exports.default = UploaderVideo;


UploaderVideo.propTypes = {
  entity: _propTypes2.default.string,
  entity_id: _propTypes2.default.number,
  meta_key: _propTypes2.default.string,
  label: _propTypes2.default.string,
  name: _propTypes2.default.string
};

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SessionsList = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _dbConfig = __webpack_require__(5);

var _appConfig = __webpack_require__(4);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _users = __webpack_require__(27);

var _companiesAdmin = __webpack_require__(82);

var _scheduledInterview = __webpack_require__(28);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//importing for list


var SessionsList = exports.SessionsList = function (_React$Component) {
    _inherits(SessionsList, _React$Component);

    function SessionsList(props) {
        _classCallCheck(this, SessionsList);

        var _this = _possibleConstructorReturn(this, (SessionsList.__proto__ || Object.getPrototypeOf(SessionsList)).call(this, props));

        _this.openNextRoundForm = _this.openNextRoundForm.bind(_this);
        return _this;
    }

    _createClass(SessionsList, [{
        key: 'sessionStatusString',
        value: function sessionStatusString(status) {
            var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            switch (status) {
                case _dbConfig.SessionEnum.STATUS_ACTIVE:
                    var toRet = "Currently Active";
                    if (!style) {
                        return toRet;
                    } else {
                        return _react2.default.createElement(
                            'b',
                            { style: { color: "green" } },
                            toRet
                        );
                    }
                    break;
                case _dbConfig.SessionEnum.STATUS_EXPIRED:
                    return "Ended by Recruiter";
                case _dbConfig.SessionEnum.STATUS_LEFT:
                    return "Left by Student";
            }
        }
    }, {
        key: 'openNextRoundForm',
        value: function openNextRoundForm(student_id) {
            (0, _scheduledInterview.openSIAddForm)(student_id, this.props.company_id, _dbConfig.PrescreenEnum.ST_NEXT_ROUND);
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            this.entityQuery = this.props.isRec ? 'company_id:' + this.props.company_id + ',' : 'participant_id:' + this.props.student_id + ',';

            this.offset = 10;

            //##########################################
            //  search
            this.searchParams = "";
            this.search = {};
            this.searchFormItem = null;

            if (this.props.isRec) {
                var _searchFormItem;

                this.searchFormItem = [{ header: "Enter Your Search Query" }];
                (_searchFormItem = this.searchFormItem).push.apply(_searchFormItem, [{
                    label: "Find Student",
                    name: "search_student",
                    type: "text",
                    placeholder: "Type student name or email"
                }, {
                    label: "Find University",
                    name: "search_university",
                    type: "text",
                    placeholder: "Type university name"
                }]);
            } else {}
            // this.searchFormItem.push({
            //     label: "Find Company",
            //     name: "search_company",
            //     type: "text",
            //     placeholder: "Type student name or email"
            // });


            /*
            this.searchFormItem.push({
                label: "Status",
                name: "status",
                type: "select",
                data: [{
                    key: ""
                    , label: "All"
                }, {
                    key: SessionEnum.STATUS_ACTIVE
                    , label: this.sessionStatusString(SessionEnum.STATUS_ACTIVE)
                }, {
                    key: SessionEnum.STATUS_EXPIRED
                    , label: this.sessionStatusString(SessionEnum.STATUS_EXPIRED)
                }, {
                    key: SessionEnum.STATUS_LEFT
                    , label: this.sessionStatusString(SessionEnum.STATUS_LEFT)
                }]
            });
            */

            this.searchFormOnSubmit = function (d) {
                _this2.search = d;
                _this2.searchParams = "";
                if (d != null) {
                    _this2.searchParams += d.search_student != "" ? 'search_student:"' + d.search_student + '",' : "";
                    _this2.searchParams += d.search_university != "" ? 'search_university:"' + d.search_university + '",' : "";
                    //this.searchParams += (d.status != "") ? `status:"${d.status}",` : "";
                    //this.searchParams += (d.search_company) ? `search_company:"${d.search_company}",` : "";
                }
            };

            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'Action'
                    ),
                    this.props.isRec ? _react2.default.createElement(
                        'th',
                        null,
                        'Student'
                    ) : _react2.default.createElement(
                        'th',
                        null,
                        'Company'
                    ),
                    this.props.isRec ? _react2.default.createElement(
                        'th',
                        null,
                        'Notes'
                    ) : null,
                    this.props.isRec ? _react2.default.createElement(
                        'th',
                        null,
                        'Ratings'
                    ) : null,
                    this.props.isRec ? _react2.default.createElement(
                        'th',
                        null,
                        'Major'
                    ) : null,
                    this.props.isRec ? _react2.default.createElement(
                        'th',
                        null,
                        'Minor'
                    ) : null,
                    this.props.isRec ? _react2.default.createElement(
                        'th',
                        null,
                        'University'
                    ) : null,
                    this.props.isRec ? _react2.default.createElement(
                        'th',
                        null,
                        'Hosted By'
                    ) : null,
                    this.props.isRec ? null : _react2.default.createElement(
                        'th',
                        null,
                        'Status'
                    ),
                    this.props.isRec ? null : _react2.default.createElement(
                        'th',
                        null,
                        'Started At'
                    ),
                    this.props.isRec ? null : _react2.default.createElement(
                        'th',
                        null,
                        'Ended At'
                    )
                )
            );

            this.renderRow = function (d, i) {
                var row = [];
                row.push(_react2.default.createElement(
                    'td',
                    null,
                    _this2.props.isRec ? _react2.default.createElement(
                        'a',
                        { className: 'btn btn-sm btn-block btn-default', id: d.student.ID, onClick: function onClick(ev) {
                                _this2.openNextRoundForm(ev.currentTarget.id);
                            } },
                        _react2.default.createElement('i', { className: 'fa fa-plus left' }),
                        'Add Next Round'
                    ) : null,
                    _react2.default.createElement(
                        _reactRouterDom.NavLink,
                        { className: 'btn btn-sm btn-block btn-default', to: _appConfig.RootPath + '/app/session/' + d.ID },
                        _react2.default.createElement('i', { className: 'fa fa-commenting left' }),
                        'View Chat Log'
                    )
                ));

                //row.push(<td><NavLink to={`${RootPath}/app/session/${d.ID}`}>Session {d.ID}</NavLink></td>);

                // entity
                var other = _this2.props.isRec ? _react2.default.createElement(
                    'span',
                    null,
                    (0, _users.createUserTitle)(d.student, _this2.search.search_student),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        (0, _userPopup.createUserDocLinkList)(d.student.doc_links, d.student.ID, true, false, true)
                    )
                ) : (0, _companiesAdmin.createCompanyTitle)(d.company, "");
                row.push(_react2.default.createElement(
                    'td',
                    null,
                    other
                ));

                // status

                if (_this2.props.isRec) {
                    var notes = d.session_notes.map(function (d, i) {
                        return d.note;
                    });
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        _react2.default.createElement(
                            'small',
                            null,
                            _react2.default.createElement(_list.CustomList, { emptyMessage: null, items: notes, className: 'normal' })
                        )
                    ));

                    var ratings = d.session_ratings.map(function (d, i) {
                        return d.category + '-' + d.rating;
                    });
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        _react2.default.createElement(
                            'small',
                            null,
                            _react2.default.createElement(_list.CustomList, { emptyMessage: null, items: ratings, className: 'normal' })
                        )
                    ));

                    row.push.apply(row, [_react2.default.createElement(
                        'td',
                        null,
                        (0, _userPopup.createUserMajorList)(d.student.major)
                    ), _react2.default.createElement(
                        'td',
                        null,
                        (0, _userPopup.createUserMajorList)(d.student.minor)
                    ), _react2.default.createElement(
                        'td',
                        null,
                        d.student.university
                    )]);

                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        (0, _users.createUserTitle)(d.recruiter)
                    ));
                } else {
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        _this2.sessionStatusString(d.status, true)
                    ));
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        _time.Time.getString(d.started_at)
                    ));
                    row.push(_react2.default.createElement(
                        'td',
                        null,
                        _time.Time.getString(d.ended_at)
                    ));
                }

                // other

                return row;
            };

            this.loadData = function (page, offset) {
                var extra = _this2.props.isRec ? 'session_notes{note}\n                    session_ratings{category rating}\n                    student{ID first_name last_name user_email university major minor doc_links{url label} }\n                    recruiter{ID first_name last_name user_email}' : "company{ID name} started_at ended_at";

                return (0, _apiHelper.getAxiosGraphQLQuery)('query{\n                sessions(' + _this2.searchParams + ' ' + _this2.entityQuery + ' page: ' + page + ', offset:' + offset + ', order_by:"ID desc"){\n                ID host_id ' + extra + ' status}}');
            };

            this.getDataFromRes = function (res) {
                return res.data.data.sessions;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            var title = "Past Sessions";
            document.setTitle(title);
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h2',
                    null,
                    title
                ),
                _react2.default.createElement(_generalForm2.default, {
                    entity_singular: title,
                    dataTitle: this.dataTitle,
                    noMutation: true,
                    dataOffset: this.offset,
                    searchFormItem: this.searchFormItem,
                    searchFormOnSubmit: this.searchFormOnSubmit,
                    tableHeader: this.tableHeader,
                    renderRow: this.renderRow,
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData
                })
            );
        }
    }]);

    return SessionsList;
}(_react2.default.Component);

SessionsList.propTypes = {
    isRec: _react.PropTypes.bool,
    company_id: _react.PropTypes.number,
    student_id: _react.PropTypes.number
};

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ResumeDrop = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _dbConfig = __webpack_require__(5);

var _appConfig = __webpack_require__(4);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _profileCard = __webpack_require__(13);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _users = __webpack_require__(27);

var _companiesAdmin = __webpack_require__(82);

var _scheduledInterview = __webpack_require__(28);

var _feedback = __webpack_require__(57);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//importing for list


var ResumeDrop = exports.ResumeDrop = function (_React$Component) {
    _inherits(ResumeDrop, _React$Component);

    function ResumeDrop(props) {
        _classCallCheck(this, ResumeDrop);

        var _this = _possibleConstructorReturn(this, (ResumeDrop.__proto__ || Object.getPrototypeOf(ResumeDrop)).call(this, props));

        _this.openSIForm = _this.openSIForm.bind(_this);
        return _this;
    }

    _createClass(ResumeDrop, [{
        key: 'openSIForm',
        value: function openSIForm(student_id) {
            //openSIAddForm(student_id, this.props.company_id, PrescreenEnum.ST_RESUME_DROP);
            (0, _scheduledInterview.openSIFormNew)(student_id, this.props.company_id);
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            (0, _feedback.openFeedbackBlockRec)();

            this.offset = 10;
            //##########################################
            //  search
            this.searchParams = "";
            this.search = {};
            this.searchFormItem = null;

            if (this.props.isRec) {
                this.searchFormItem = [];
                this.searchFormItem.push({ header: "Enter Your Search Query" });
                this.searchFormItem.push({
                    label: "Find Student",
                    name: "search_student",
                    type: "text",
                    placeholder: "Type student name or email"
                });
            }

            this.searchFormOnSubmit = function (d) {
                _this2.search = d;
                _this2.searchParams = "";
                if (d != null) {
                    _this2.searchParams += d.search_student != "" ? 'search_student:"' + d.search_student + '",' : "";
                    _this2.searchParams += d.search_company ? 'search_company:"' + d.search_company + '",' : "";
                }
            };

            this.renderRow = function (d, i) {
                var title = _this2.props.isRec ? (0, _users.createUserTitle)(d.student, _this2.search.search_student) : (0, _companiesAdmin.createCompanyTitle)(d.company, "");

                var message = d.message ? _react2.default.createElement(
                    'p',
                    { style: { borderTop: "solid 1px darkgrey" } },
                    _react2.default.createElement(
                        'small',
                        null,
                        d.message
                    )
                ) : null;

                var details = _react2.default.createElement(
                    'div',
                    null,
                    (0, _userPopup.createUserDocLinkList)(d.doc_links, _this2.props.student_id, false),
                    _react2.default.createElement(
                        'small',
                        null,
                        ' ',
                        _react2.default.createElement(
                            'i',
                            null,
                            'submitted on ',
                            _time.Time.getString(d.created_at),
                            ' '
                        ),
                        ' ',
                        _react2.default.createElement('br', null)
                    ),
                    message
                );

                var imgObj = _this2.props.isRec ? (0, _profileCard.getImageObj)(d.student) : (0, _profileCard.getImageObj)(d.company);

                var item = _react2.default.createElement(_list.ProfileListWide, { title: title,
                    img_url: imgObj.img_url,
                    img_pos: imgObj.img_pos,
                    img_size: imgObj.img_size,
                    img_dimension: "80px",
                    body: details,
                    action_text: _react2.default.createElement(
                        'small',
                        null,
                        _react2.default.createElement('i', { className: 'fa fa-plus left' }),
                        'Schedule For Call'
                    ),
                    action_handler: function action_handler() {
                        _this2.openSIForm(d.student.ID);
                    },
                    action_disabled: !_this2.props.isRec,
                    type: _this2.props.isRec ? "student" : "company", key: i });

                return item;
            };

            this.loadData = function (page, offset) {
                var entityQuery = _this2.props.isRec ? 'company_id:' + _this2.props.company_id + ',' : 'student_id:' + _this2.props.student_id + ',';
                var extra = _this2.props.isRec ? 'student{ID first_name last_name user_email img_url img_pos img_size}' : 'company{ID name img_url img_position img_size}';

                var query = 'query{\n                        resume_drops(' + _this2.searchParams + ' ' + entityQuery + ' page: ' + page + ', offset:' + offset + ', order_by:"created_at desc"){\n                        ID\n                        doc_links { type label url }\n                        message\n                        created_at\n                        updated_at\n                        ' + extra + '\n                    }}';

                return (0, _apiHelper.getAxiosGraphQLQuery)(query);
            };

            this.getDataFromRes = function (res) {
                return res.data.data.resume_drops;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Resume Drop");
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h2',
                    null,
                    'Resume Drop'
                ),
                _react2.default.createElement(_generalForm2.default, {
                    dataTitle: this.dataTitle,
                    noMutation: true,
                    dataOffset: this.offset,
                    searchFormItem: this.searchFormItem,
                    searchFormOnSubmit: this.searchFormOnSubmit,
                    renderRow: this.renderRow,
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData
                })
            );
        }
    }]);

    return ResumeDrop;
}(_react2.default.Component);

ResumeDrop.propTypes = {
    isRec: _react.PropTypes.bool,
    company_id: _react.PropTypes.number,
    student_id: _react.PropTypes.number
};

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StudentListing = exports.StudentListingCard = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _interested = __webpack_require__(66);

var _buttons = __webpack_require__(15);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _authActions = __webpack_require__(2);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _profileCard = __webpack_require__(13);

var _loader = __webpack_require__(8);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _users = __webpack_require__(27);

var _scheduledInterview = __webpack_require__(28);

var _feedback = __webpack_require__(57);

var _appConfig = __webpack_require__(4);

var _dbConfig = __webpack_require__(5);

var _dataConfig = __webpack_require__(175);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//importing for list


var StudentListingCard = exports.StudentListingCard = function (_React$Component) {
  _inherits(StudentListingCard, _React$Component);

  function StudentListingCard(props) {
    _classCallCheck(this, StudentListingCard);

    var _this = _possibleConstructorReturn(this, (StudentListingCard.__proto__ || Object.getPrototypeOf(StudentListingCard)).call(this, props));

    _this.openSIForm = _this.openSIForm.bind(_this);
    _this.toggleShowMore = _this.toggleShowMore.bind(_this);
    _this.state = {
      isShowMore: false
    };
    return _this;
  }

  _createClass(StudentListingCard, [{
    key: "openSIForm",
    value: function openSIForm(student_id) {
      (0, _scheduledInterview.openSIFormAnytime)(student_id, this.props.company_id);
      //openSIFormNew(student_id, this.props.company_id);
    }
  }, {
    key: "toggleShowMore",
    value: function toggleShowMore() {
      this.setState(function (prevState) {
        return {
          isShowMore: !prevState.isShowMore
        };
      });
    }
  }, {
    key: "notSpecifiedView",
    value: function notSpecifiedView(entity) {
      return _react2.default.createElement(
        "div",
        { className: "text-muted" },
        _react2.default.createElement(
          "i",
          null,
          entity,
          " Not Specifed"
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      var i = this.props.index;
      var d = this.props.data;
      var search = this.props.search;

      var title = (0, _users.createUserTitle)(d.student, search.search_student, true, undefined, { companyPrivs: this.props.privs, company_id: this.props.company_id });

      // create uni view
      var uniView = this.notSpecifiedView("University");
      if (d.student.university != null && d.student.university != "") {
        uniView = _react2.default.createElement(
          "b",
          null,
          d.student.university
        );
      }

      // create place view
      // let placeView = null;
      // if (d.student.study_place != null && d.student.study_place != "") {
      //   placeView = <small>, {d.student.study_place}</small>;
      // }
      var placeView = null;
      if (d.student.country_study != null && d.student.country_study != "") {
        placeView = _react2.default.createElement(
          "small",
          null,
          ", ",
          d.student.country_study
        );
      }

      // create major view
      // let majors = null;
      // let majorView = this.notSpecifiedView("Major");
      // try {
      //   majors = JSON.parse(d.student.major);
      // } catch (err) {
      //   majors = null;
      // }
      // if (Array.isArray(majors)) {
      //   majorView = majors.map((d, i) => {
      //     if (i % 2 == 0) {
      //       return <span>{d}</span>;
      //     } else {
      //       return <span>, {d}</span>;
      //     }
      //   });

      //   if (majors.length > 0) {
      //     majorView = (
      //       <i>
      //         <br />
      //         {majorView}
      //       </i>
      //     );
      //   }
      // }
      var fieldStudyView = this.notSpecifiedView("Major");
      var field_study = d.student.field_study;
      if (Array.isArray(field_study)) {
        fieldStudyView = field_study.map(function (d, i) {
          if (i % 2 == 0) {
            return _react2.default.createElement(
              "span",
              null,
              d.val
            );
          } else {
            return _react2.default.createElement(
              "span",
              null,
              ", ",
              d.val
            );
          }
        });

        if (field_study.length > 0) {
          fieldStudyView = _react2.default.createElement(
            "i",
            null,
            _react2.default.createElement("br", null),
            fieldStudyView
          );
        }
      }

      var labelView = null;
      var lookingForView = [];
      var hasLookFor = Array.isArray(d.student.looking_for_position) && d.student.looking_for_position.length >= 0;
      if (hasLookFor) {
        for (var i in d.student.looking_for_position) {
          var lfp = d.student.looking_for_position[i];
          lfp = lfp.val;
          var labelType = "";
          switch (lfp) {
            case _dbConfig.UserEnum.LOOK_FOR_FULL_TIME:
              labelType = "success";
              break;
            case _dbConfig.UserEnum.LOOK_FOR_PART_TIME:
              labelType = "danger";
              break;
            case _dbConfig.UserEnum.LOOK_FOR_INTERN:
              labelType = "warning";
              break;
          }

          lookingForView.push(_react2.default.createElement(_tooltip2.default, {
            bottom: "19px",
            left: "-19px",
            width: "114px",
            alignCenter: true,
            content: _react2.default.createElement(
              "label",
              {
                style: { marginRight: "5px" },
                className: "label label-" + labelType
              },
              lfp
            ),
            tooltip: null
          }));
        }

        labelView = _react2.default.createElement(
          "div",
          { style: { fontSize: "16px", margin: "6px 0px" } },
          lookingForView
        );
      }

      var scheduledView = null;
      if (d.student.prescreens_for_student_listing.length > 0) {
        // find index yang tak DONE lagi
        var baIndex = 0;
        for (var ba in d.student.prescreens_for_student_listing) {
          baIndex = ba;
          var _tempObj = d.student.prescreens_for_student_listing[ba];
          var _psStatus = _tempObj.status != null ? _tempObj.status : null;
          if (_psStatus != null && _psStatus != _dbConfig.PrescreenEnum.STATUS_DONE) {
            break;
          }
        }

        // find yang tak DONE lagi
        var tempObj = d.student.prescreens_for_student_listing[baIndex];
        var psStatus = tempObj.status != null ? tempObj.status : null;
        scheduledView = _react2.default.createElement(
          "div",
          { style: { marginBottom: "8px", marginTop: "0px" } },
          _react2.default.createElement(
            "label",
            { className: "label label-success label-custom" },
            psStatus == _dbConfig.PrescreenEnum.STATUS_STARTED ? "Session Created on " : "Scheduled Interview on ",
            _react2.default.createElement(
              "b",
              null,
              _time.Time.getString(tempObj.appointment_time)
            )
          )
        );
      }
      // var scheduledView = null;
      // if (d.student.booked_at.length > 0) {

      //   // find index yang tak DONE lagi
      //   let baIndex = 0;
      //   for (var ba in d.student.booked_at) {
      //     baIndex = ba;
      //     let tempObj = d.student.booked_at[ba];
      //     let psStatus = (tempObj.prescreen != null) ? tempObj.prescreen.status : null;
      //     if (psStatus != null && psStatus != PrescreenEnum.STATUS_DONE) {
      //       break;
      //     }
      //   }

      //   // find yang tak DONE lagi
      //   let tempObj = d.student.booked_at[baIndex];
      //   let psStatus = (tempObj.prescreen != null) ? tempObj.prescreen.status : null;
      //   scheduledView = <div style={{ marginBottom: "8px", marginTop: "0px" }}>
      //     <label
      //       className={`label label-success label-custom`}>
      //       {psStatus == PrescreenEnum.STATUS_DONE ? "Session Created on " : "Scheduled Interview on "}
      //       <b>{Time.getString(tempObj.timestamp)}</b>
      //     </label>
      //   </div>
      // }

      // title = (
      //   <div>
      //     {title} {lookingForView}
      //   </div>
      // );

      var studentInfo = _react2.default.createElement(
        "div",
        { style: { lineHeight: "17px" } },
        scheduledView,
        labelView,
        uniView,
        placeView,
        fieldStudyView
      );

      var styleToggler = { marginLeft: "-12px", marginBottom: "-10px" };
      var description = null;
      if (d.student.description !== null && d.student.description != "") {
        if (!this.state.isShowMore) {
          description = _react2.default.createElement(
            "div",
            { style: styleToggler },
            _react2.default.createElement(
              "a",
              { onClick: this.toggleShowMore, className: "btn btn-link" },
              "See More About This Student ..."
            )
          );
        } else {
          description = _react2.default.createElement(
            "p",
            { style: { marginTop: "7px" } },
            _react2.default.createElement(
              "b",
              null,
              _react2.default.createElement(
                "u",
                null,
                "About ",
                d.student.first_name
              )
            ),
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "small",
              null,
              d.student.description
            ),
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "div",
              { style: styleToggler },
              _react2.default.createElement(
                "a",
                { onClick: this.toggleShowMore, className: "btn btn-link" },
                "See Less"
              )
            )
          );
        }
      }

      var details = _react2.default.createElement(
        "div",
        null,
        studentInfo,
        _react2.default.createElement(
          "div",
          { style: { marginTop: "8px" } },
          (0, _userPopup.createUserDocLinkList)(d.student.doc_links, d.student_id, false, false, false, true)
        ),
        description
      );

      //var imgObj = getImageObj(d.student);

      // var canSchedule = CompanyEnum.hasPriv(
      //   this.props.privs,
      //   CompanyEnum.PRIV.SCHEDULE_PRIVATE_SESSION
      // );

      // const actionHandler = () => {
      //   if (canSchedule) {
      //     this.openSIForm(d.student.ID);
      //   } else {
      //     // EUR FIX
      //     // See Availability
      //     layoutActions.errorBlockLoader(
      //       "Opps.. It seems that you don't have privilege to see student's availability yet."
      //     );
      //   }
      // };

      // const action_text = (
      //   <small>
      //     <i className="fa fa-video-camera left" />
      //     Schedule Call
      //   </small>
      // );
      // const isNavLink = false;

      var actionHandler = function actionHandler() {};

      var action_text = _react2.default.createElement(
        "small",
        null,
        _react2.default.createElement("i", { className: "fa fa-comment left" }),
        "Start Chat"
      );
      var isNavLink = true;
      var actionTo = _appConfig.RootPath + "/app/student-chat/" + d.student.ID;

      // EUR FIX
      // Schedule For Call -> See Availability
      // img_url={imgObj.img_url}
      // img_pos={imgObj.img_pos}
      // img_size={imgObj.img_size}
      // img_dimension={"80px"}

      // todo

      // console.log("d.student", d.student);
      var likeButton = _react2.default.createElement(_interested.InterestedButton, {
        tooltipObj: {
          left: "-36px",
          bottom: "26px",
          width: "97px",
          tooltip: "Show Interest",
          debug: false
        },
        isBottom: true,
        customUserId: this.props.company_id,
        isModeCount: false,
        isModeAction: true,
        isNonClickable: (0, _authActions.isRoleAdmin)(),
        ID: d.student.student_listing_interested.ID,
        is_interested: d.student.student_listing_interested.is_interested,
        entity: "student_listing",
        entity_id: d.student.ID
      });

      var item = _react2.default.createElement(_list.ProfileListWide, {
        rootContent: likeButton,
        is_no_image: true,
        title: title,
        body: details,
        isNavLink: isNavLink,
        action_to: actionTo,
        action_text: action_text,
        action_handler: actionHandler,
        action_disabled: false,
        type: this.props.isRec ? "student" : "company",
        key: i
      });

      return item;
    }
  }]);

  return StudentListingCard;
}(_react2.default.Component);

StudentListingCard.propTypes = {
  company_id: _react.PropTypes.number,
  data: _react.PropTypes.object,
  index: _react.PropTypes.number,
  isRec: _react.PropTypes.bool,
  search: _react.PropTypes.object,
  privs: _react.PropTypes.object
};

// ###########################################################################################
// ###########################################################################################
// ###########################################################################################
// ###########################################################################################

var StudentListing = exports.StudentListing = function (_React$Component2) {
  _inherits(StudentListing, _React$Component2);

  function StudentListing(props) {
    _classCallCheck(this, StudentListing);

    // this.getContentBelowFilter = this.getContentBelowFilter.bind(this);
    var _this2 = _possibleConstructorReturn(this, (StudentListing.__proto__ || Object.getPrototypeOf(StudentListing)).call(this, props));

    _this2.searchFormOnSubmit = _this2.searchFormOnSubmit.bind(_this2);
    _this2.state = {
      search: {},
      loadPriv: true,
      privs: []
    };
    return _this2;
  }

  _createClass(StudentListing, [{
    key: "loadPriv",
    value: function loadPriv() {
      var _this3 = this;

      var q = "query {company(ID:" + this.props.company_id + ") { priviledge name } }";
      (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
        var privs = res.data.data.company.priviledge;
        _this3.privs = privs;
        _this3.setState(function (prevState) {
          var companyName = res.data.data.company.name;
          if (privs == null) {
            privs = "";
          }
          // console.log("[StudentListing]", privs);
          return {
            loadPriv: false,
            privs: privs,
            companyName: companyName
          };
        });
      });
    }
  }, {
    key: "getSearchFormContentBottom",
    value: function getSearchFormContentBottom() {
      return null;
      var exportWithFilter = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_buttons.ButtonExport, {
          action: "student_listing",
          text: "Export " + this.props.title,
          filter: _extends({}, this.getMainQueryParamObj(), {
            for_rec: "1"
          })
        })
      );

      return exportWithFilter;
    }
  }, {
    key: "getMainQueryParamObj",
    value: function getMainQueryParamObj() {
      return _extends({}, this.state.search, {
        company_id: this.props.company_id,
        cf: (0, _authActions.getCF)()
      });
    }
  }, {
    key: "getMainQueryParam",
    value: function getMainQueryParam(page, offset) {
      var toRet = this.searchParams + " company_id:" + this.props.company_id + ", cf:\"" + (0, _authActions.getCF)() + "\"";

      if (page && offset) {
        toRet += ", page: " + page + ", offset:" + offset;
      }
      return toRet;
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this4 = this;

      (0, _feedback.openFeedbackBlockRec)();

      this.loadPriv();

      this.offset = 5;
      //##########################################
      //  search

      this.searchParams = "";
      this.search = {};
      this.searchFormItem = null;

      if (this.props.isRec) {
        this.searchFormItem = [];
        // this.searchFormItem.push({ header: "Find Student" });
        this.searchFormItem.push({
          label: "Name Or Email",
          name: "search_student",
          type: "text",
          placeholder: "John Doe"
        });

        // single

        this.searchFormItem.push({
          label: "University",
          name: "search_university",
          type: "input_suggestion",
          table_name: "university",
          input_placeholder: "University",
          filter_column: "country_id",
          filter_val: "Malaysia",
          // filter_val: "Malaysia::United Kingdom",
          filter_find_id: true // kena ubah kat ref-query
        });

        this.searchFormItem.push({
          input_type: "select",
          label: "Graduation Year",
          name: "search_graduation_year",
          type: "input_suggestion",
          table_name: "year"
        });

        this.searchFormItem.push({
          input_type: "select",
          label: "Looking For Position",
          name: "search_looking_for",
          type: "input_suggestion",
          table_name: "looking_for_position"
        });

        this.searchFormItem.push({
          input_type: "select",
          label: "Field Of Study",
          name: "search_field_study",
          type: "input_suggestion",
          table_name: "field_study"
        });

        this.searchFormItem.push({
          input_type: "select",
          label: "Grade",
          name: "search_grade_category",
          type: "input_suggestion",
          table_name: "grade_category"
        });

        this.searchFormItem.push({
          //  label: "Show Favourited Student Only",
          name: "search_favourite_student",
          type: "checkbox",
          data: [{ key: "1", label: "Show Liked Students Only" }]
        });
      }

      // this.searchFormItem.push({
      //   label: "Field Of Study",
      //   name: "search_field_study",
      //   type: "text",
      //   placeholder: "Software Engineering"
      // });

      // this.searchFormItem.push({
      //   label: "Study Place",
      //   name: "search_country_study",
      //   type: "text",
      //   placeholder: "Malaysia"
      // });

      //  let cf = getCF()

      // this.searchFormItem.push({
      //   label: "Looking For Position",
      //   name: "search_looking_for",
      //   type: "select",
      //   data: [
      //     "",
      //     UserEnum.LOOK_FOR_FULL_TIME,
      //     UserEnum.LOOK_FOR_PART_TIME,
      //     UserEnum.LOOK_FOR_INTERN
      //   ]
      // });

      this.searchParamGet = function (key, val) {
        if (Array.isArray(val)) {
          if (val.indexOf("1") >= 0) {
            val = "1";
          }
        }
        return val != "" && typeof val !== "undefined" && val != null ? key + ":\"" + val + "\"," : "";
      };

      this.renderRow = function (d, i) {
        return _react2.default.createElement(StudentListingCard, {
          company_id: _this4.props.company_id,
          privs: _this4.privs
          // privs={this.state.privs}
          , data: d,
          index: i,
          isRec: _this4.props.isRec,
          search: _this4.search
        });
      };

      this.loadCount = function () {
        var query = "query{\n        student_listing_count(" + _this4.getMainQueryParam() + ")\n       }";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      this.getCountFromRes = function (res) {
        return res.data.data.student_listing_count;
      };
      // TODO
      // prescreens_for_student_listing{status appointment_time}
      // university study_place major available_month available_year
      // ID first_name last_name user_email description looking_for
      // doc_links { type label url }
      // this.getCfStr()
      this.loadData = function (page, offset) {
        // let companyIdInq = this.getCompanyIdQuery();

        var query = "query{\n          student_listing(" + _this4.getMainQueryParam(page, offset) + ")\n          {\n            student_id\n            created_at\n            student{\n                student_listing_interested{ID is_interested}\n                prescreens_for_student_listing{status appointment_time}\n                university country_study available_month available_year\n                ID first_name last_name user_email description \n                doc_links {type label url} field_study{val} looking_for_position{val}\n      }}}";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      this.getDataFromRes = function (res) {
        return res.data.data.student_listing;
      };
    }

    // getCompanyIdQuery() {
    //   if (CompanyEnum.hasPriv(this.privs, CompanyEnum.PRIV.ACCESS_ALL_STUDENT)) {
    //     return -1;
    //   }

    //   let toRet = this.props.isAllStudent ? -1 : this.props.company_id;

    //   let cfs = this.getCfAccessAllStudent();
    //   if (cfs.length > 0) {
    //     toRet = -1;
    //   }

    //   return toRet;
    // }
    // getCfAccessAllStudent() {
    //   let r = [];
    //   if (CompanyEnum.hasPriv(this.privs, CompanyEnum.PRIV.AAS_MDC)) {
    //     r.push("MDEC");
    //   }
    //   if (CompanyEnum.hasPriv(this.privs, CompanyEnum.PRIV.AAS_ANE)) {
    //     r.push("ANE");
    //   }
    //   if (CompanyEnum.hasPriv(this.privs, CompanyEnum.PRIV.AAS_EUR)) {
    //     r.push("EUR");
    //   }
    //   if (CompanyEnum.hasPriv(this.privs, CompanyEnum.PRIV.AAS_NZL)) {
    //     r.push("NZL");
    //   }

    //   if (r.length >= 0) {
    //     r.push(getCF());
    //   }

    //   return r;
    // }
    // getCfStr() {
    //   let cfs = this.getCfAccessAllStudent();
    //   let cfStr = "";
    //   if (Array.isArray(cfs) && cfs.length > 0) {
    //     cfs.map((d, i) => {
    //       cfStr += (i > 0 ? "," : "") + d;
    //     });
    //   } else {
    //     cfStr = getCF();
    //   }

    //   return cfStr;
    // }

    // getContentBelowFilter() {
    //   let label = `Export ${this.props.title}`;
    //   return (
    //     <ButtonExport
    //       action="student_listing"
    //       text={label}
    //       filter={{
    //         company_id: this.getCompanyIdQuery(),
    //         cf: this.getCfStr(),
    //         for_rec: "1"
    //       }}
    //     ></ButtonExport>
    //   );
    // }

  }, {
    key: "searchFormOnSubmit",
    value: function searchFormOnSubmit(d) {
      this.search = d;
      this.searchParams = "";

      for (var i in d) {
        if (Array.isArray(d[i])) {
          try {
            d[i] = d[i][0];
          } catch (err) {
            d[i] = "";
          }
        }
      }

      if (d != null) {
        this.searchParams += this.searchParamGet("search_favourite_student", d.search_favourite_student);
        this.searchParams += this.searchParamGet("search_student", d.search_student);
        this.searchParams += this.searchParamGet("search_field_study", d.search_field_study);

        this.searchParams += this.searchParamGet("search_university", d.search_university);

        this.searchParams += this.searchParamGet("search_graduation_year", d.search_graduation_year);

        this.searchParams += this.searchParamGet("search_country_study", d.search_country_study);
        this.searchParams += this.searchParamGet("search_looking_for", d.search_looking_for);

        this.searchParams += this.searchParamGet("search_grade_category", d.search_grade_category);
      }
      // console.log("searchFormOnSubmit", this.searchParams);
      // console.log("searchFormOnSubmit", this.searchParams);
      // console.log("searchFormOnSubmit", this.searchParams);
      this.setState(function (prevState) {
        // console.log("setState searchFormOnSubmit", prevState);
        // console.log("d", d);
        return { search: d };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var view = null;
      if (this.state.loadPriv) {
        view = _react2.default.createElement(_loader.Loader, { size: "2", text: "Loading..." });
      } else {
        var hide = false;
        if ((0, _authActions.isRoleRec)() || (0, _authActions.isRoleStudent)()) {
          if (this.props.isAllStudent) {
            hide = !_dbConfig.CompanyEnum.hasPriv(this.privs, _dbConfig.CompanyEnum.PRIV.ACCESS_ALL_STUDENT);
          } else {
            if ((0, _authActions.isComingSoon)()) {
              hide = !_dbConfig.CompanyEnum.hasPriv(this.privs, _dbConfig.CompanyEnum.PRIV.ACCESS_RS_PRE_EVENT);
            } else {
              hide = !_dbConfig.CompanyEnum.hasPriv(this.privs, _dbConfig.CompanyEnum.PRIV.ACCESS_RS_DURING_EVENT);
            }
          }
        }

        view = hide ? _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "h4",
            null,
            _react2.default.createElement("i", { className: "fa fa-3x fa-frown-o" }),
            _react2.default.createElement("br", null),
            _react2.default.createElement("br", null),
            "Opss.. It seems that ",
            _react2.default.createElement(
              "b",
              null,
              this.state.companyName
            ),
            " does not have access to this page yet."
          )
        ) : _react2.default.createElement(_generalForm2.default, {
          loadCount: this.loadCount,
          getCountFromRes: this.getCountFromRes,
          searchFormContentBottom: this.getSearchFormContentBottom(),
          searchFormNonPopup: true,
          searchFormItem: this.searchFormItem,
          searchFormOnSubmit: this.searchFormOnSubmit,
          hasResetFilter: false
          // contentBelowFilter={this.getContentBelowFilter()}
          , contentBelowFilter: null,
          entity_singular: "Student",
          dataTitle: this.dataTitle,
          noMutation: true,
          dataOffset: this.offset,
          renderRow: this.renderRow,
          getDataFromRes: this.getDataFromRes,
          loadData: this.loadData
        });
      }

      var title = this.props.title;
      document.setTitle(title);

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h2",
          null,
          title
        ),
        view
      );
    }
  }]);

  return StudentListing;
}(_react2.default.Component);

StudentListing.propTypes = {
  company_id: _react.PropTypes.number.isRequired,
  isRec: _react.PropTypes.bool,
  isAllStudent: _react.PropTypes.bool,
  title: _react.PropTypes.string
};

StudentListing.defaultProps = {
  isRec: true,
  isAllStudent: false,
  title: null
};

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SupportPage = exports.SupportChat = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _chat = __webpack_require__(42);

var _chat2 = _interopRequireDefault(_chat);

var _appConfig = __webpack_require__(4);

var _dbConfig = __webpack_require__(5);

var _authActions = __webpack_require__(2);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _users = __webpack_require__(27);

var _profileCard = __webpack_require__(13);

var _time = __webpack_require__(9);

var _socketConfig = __webpack_require__(32);

var _socketClient = __webpack_require__(17);

var _otherActions = __webpack_require__(30);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../css/forum.scss');
// require('../css/support-chat.scss');

// support chat floating at bottom right page
var SupportChat = exports.SupportChat = function (_React$Component) {
    _inherits(SupportChat, _React$Component);

    function SupportChat(props) {
        _classCallCheck(this, SupportChat);

        var _this = _possibleConstructorReturn(this, (SupportChat.__proto__ || Object.getPrototypeOf(SupportChat)).call(this, props));

        _this.toogle = _this.toogle.bind(_this);
        _this.getChatBox = _this.getChatBox.bind(_this);
        _this.state = {
            show: false,
            supportUser: false
        };

        _this.self_id = (0, _authActions.getAuthUser)().ID;
        _this.hide = _this.self_id === _appConfig.SupportUserID;
        return _this;
    }

    _createClass(SupportChat, [{
        key: 'getChatBox',
        value: function getChatBox() {
            var _this2 = this;

            if (this.state.supportUser === false) {
                // get support user
                var query = 'query{ user(ID:' + _appConfig.SupportUserID + ') {  \n            ID first_name last_name img_url img_pos img_size\n            }}';

                (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    _this2.setState(function () {
                        var user = res.data.data.user;
                        return { supportUser: user };
                    });
                });
                return _react2.default.createElement(
                    'div',
                    { style: { padding: "10px" } },
                    _react2.default.createElement(_loader.Loader, { text: 'Initializing chat with support' })
                );
            } else if (this.state.supportUser === null) {
                return _react2.default.createElement(
                    'div',
                    { style: { padding: "10px" } },
                    'Support is not available currently'
                );
            } else {
                return _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_chat2.default, { session_id: null,
                        disableChat: false,
                        other_id: _appConfig.SupportUserID,
                        other_data: this.state.supportUser,
                        self_id: this.self_id })
                );
            }
        }
    }, {
        key: 'toogle',
        value: function toogle() {
            if (!this.state.show) {
                (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_GOT_QUESTION, "");
            }
            this.setState(function (prevState) {
                return { show: !prevState.show };
            });
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.hide) {
                return null;
            }

            var v = null;
            var className = "";
            if (!this.state.show) {
                className = "sc-open";
                v = _react2.default.createElement(
                    'div',
                    { onClick: this.toogle,
                        className: 'btn btn-success btn-lg' },
                    _react2.default.createElement(
                        'span',
                        null,
                        _react2.default.createElement(
                            'span',
                            { className: 'sc-open-text' },
                            'Got',
                            _react2.default.createElement('br', null),
                            'Question',
                            _react2.default.createElement('br', null)
                        ),
                        _react2.default.createElement('i', { className: 'fa fa-question-circle fa-3x' })
                    )
                );
            } else {
                v = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'button',
                        { className: 'btn btn-sm btn-danger btn-block',
                            onClick: this.toogle },
                        'Close Chat'
                    ),
                    this.getChatBox()
                );
            }
            return _react2.default.createElement(
                'div',
                { id: 'support-chat', className: className },
                v
            );
        }
    }]);

    return SupportChat;
}(_react2.default.Component);

// page for support to see all the chat list with users
// has to create another table for list of chats with support

// only limit to one support account
// to prevent from real time conflict

var SupportPage = exports.SupportPage = function (_React$Component2) {
    _inherits(SupportPage, _React$Component2);

    function SupportPage(props) {
        _classCallCheck(this, SupportPage);

        var _this3 = _possibleConstructorReturn(this, (SupportPage.__proto__ || Object.getPrototypeOf(SupportPage)).call(this, props));

        _this3.authUser = (0, _authActions.getAuthUser)();
        _this3.getChatBox = _this3.getChatBox.bind(_this3);
        _this3.getChatList = _this3.getChatList.bind(_this3);
        _this3.changeChat = _this3.changeChat.bind(_this3);
        _this3.loadChatList = _this3.loadChatList.bind(_this3);
        _this3.state = {
            loading: true,
            sessions: [],
            current_user: 0,
            newChat: []
        };
        return _this3;
    }

    _createClass(SupportPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this4 = this;

            this.loadChatList();

            (0, _socketClient.socketOn)(_socketConfig.BOTH.CHAT_MESSAGE, function (data) {
                var keyId = _this4.getKey(data.from_id);

                // if not exist?
                // list of newChat
                if (typeof _this4.state.sessions[keyId] === "undefined") {
                    _this4.setState(function (prevState) {
                        var newChat = prevState.newChat;
                        if (newChat.indexOf(data.from_id) <= -1) {
                            newChat.push(data.from_id);
                        }
                        return { newChat: newChat };
                    });
                    return;
                }

                // update last_message and last message time
                // set is new to true
                _this4.setState(function (prevState) {
                    var obj = prevState.sessions[keyId];

                    if (_this4.state.current_user != keyId) {
                        obj.isNew = true;
                    }

                    obj.last_message = data.message;
                    obj.last_message_time = data.created_at;
                    prevState.sessions[keyId] = obj;

                    return { sessions: prevState.sessions };
                });
            });
        }
    }, {
        key: 'loadChatList',
        value: function loadChatList() {
            var _this5 = this;

            var query = 'query{ support_sessions(support_id:' + _appConfig.SupportUserID + ') {  \n            ID\n            support_id\n            created_at\n            last_message_time\n            last_message\n            user { ID first_name last_name img_url img_pos img_size}\n          }}';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                _this5.setState(function (prevState) {
                    var sessions = res.data.data.support_sessions;
                    var data = {};
                    var current = 0;

                    for (var i in sessions) {
                        var d = sessions[i];
                        var uid = d.user.ID;
                        if (i == 0) {
                            current = _this5.getKey(uid);
                        }
                        // to restrain order
                        data[_this5.getKey(uid)] = d;
                    }

                    // if loaded from chat socket trigger
                    if (prevState.current_user !== 0) {
                        current = prevState.current_user;
                    }

                    return { sessions: data, loading: false, current_user: current, newChat: [] };
                });
            });
        }
    }, {
        key: 'getKey',
        value: function getKey(user_id) {
            return "u:" + user_id;
        }
    }, {
        key: 'getChatBox',
        value: function getChatBox() {
            var s = this.state.sessions[this.state.current_user];
            var other_data = s.user;
            var other_id = s.user.ID;
            var self_id = s.support_id;

            return _react2.default.createElement(
                'div',
                { key: this.state.current_user },
                _react2.default.createElement(_chat2.default, { session_id: null,
                    disableChat: false,
                    other_id: other_id,
                    other_data: other_data,
                    self_id: self_id })
            );
        }
    }, {
        key: 'changeChat',
        value: function changeChat(user_id) {
            var keyId = this.getKey(user_id);
            this.setState(function (prevState) {
                prevState.sessions[keyId].isNew = false;
                return { current_user: keyId, sessions: prevState.sessions };
            });
        }
    }, {
        key: 'getChatList',
        value: function getChatList() {
            var _this6 = this;

            var view = [];
            console.log(this.state.sessions);
            for (var i in this.state.sessions) {
                var d = this.state.sessions[i];
                var title = (0, _users.createUserTitle)(d.user);
                var imgView = (0, _profileCard.createImageElement)(d.user.img_url, d.user.img_pos, d.user.img_size, "45px", "frm-image");

                var isNew = typeof d.isNew !== "undefined" ? d.isNew : false;
                var body = d.last_message != null ? d.last_message : _react2.default.createElement(
                    'small',
                    { className: 'text-muted' },
                    _react2.default.createElement(
                        'i',
                        null,
                        'Nothing To Show Here'
                    )
                );

                var action = _react2.default.createElement(
                    'span',
                    null,
                    d.last_message_time !== null ? _time.Time.getString(d.last_message_time) + " | " : null,
                    _react2.default.createElement(
                        'a',
                        { id: d.user.ID, onClick: function onClick(ev) {
                                _this6.changeChat(ev.currentTarget.id);
                            } },
                        _react2.default.createElement(
                            'b',
                            null,
                            'Open Chat'
                        )
                    )
                );

                view.push(_react2.default.createElement(
                    'div',
                    { key: i, id: d.user.ID,
                        className: "forum chat-list", onClick: function onClick(ev) {
                            _this6.changeChat(ev.currentTarget.id);
                        } },
                    imgView,
                    _react2.default.createElement(
                        'div',
                        { className: 'frm-body' },
                        _react2.default.createElement(
                            'div',
                            { className: 'frm-title' },
                            title
                        ),
                        _react2.default.createElement(
                            'p',
                            { className: 'frm-content ' + (isNew ? "fc-blue" : "") },
                            body
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'frm-timestamp' },
                            _time.Time.getString(d.last_message_time)
                        )
                    )
                ));
            }

            return view;
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Support");
            var view = null;

            if (this.state.loading) {
                view = _react2.default.createElement(_loader.Loader, { text: 'Loading Chat List' });
            } else {
                view = [];
                var newBtn = this.state.newChat.length == 0 ? null : _react2.default.createElement(
                    'b',
                    null,
                    _react2.default.createElement(
                        'a',
                        { onClick: this.loadChatList },
                        this.state.newChat.length,
                        ' New Chat'
                    )
                );

                view.push(_react2.default.createElement(
                    'div',
                    { className: 'col-md-6 no-padding padding-right' },
                    _react2.default.createElement(
                        'h4',
                        null,
                        'Tech Support',
                        _react2.default.createElement('br', null),
                        newBtn
                    ),
                    this.getChatList()
                ));
                view.push(_react2.default.createElement(
                    'div',
                    { className: 'col-md-6 no-padding' },
                    this.getChatBox()
                ));
            }

            return _react2.default.createElement(
                'div',
                null,
                view
            );
        }
    }]);

    return SupportPage;
}(_react2.default.Component);

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ManageQsPopup = exports.QsPopupList = exports.QsPopupView = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _reactRouterDom = __webpack_require__(7);

var _loader = __webpack_require__(8);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _dbConfig = __webpack_require__(5);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _users = __webpack_require__(27);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../../../css/qs-popup.scss');

// #########################################################################################################
// #########################################################################################################

var QsPopupView = exports.QsPopupView = function (_React$Component) {
    _inherits(QsPopupView, _React$Component);

    function QsPopupView(props) {
        _classCallCheck(this, QsPopupView);

        var _this = _possibleConstructorReturn(this, (QsPopupView.__proto__ || Object.getPrototypeOf(QsPopupView)).call(this, props));

        _this.authUser = (0, _authActions.getAuthUser)();
        _this.loadQs = _this.loadQs.bind(_this);
        _this.state = {
            loading: true,
            currentQs: null,
            currentAnswers: [],
            disableSubmit: false,
            error: ""
        };
        return _this;
    }

    _createClass(QsPopupView, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.loadQs();
        }
    }, {
        key: 'loadQs',
        value: function loadQs() {
            var _this2 = this;

            if (!this.state.loading) {
                this.setState(function (prevState) {
                    return {
                        loading: true
                    };
                });
            }
            //type:"MCQ",
            var forWho = (0, _authActions.isRoleStudent)() ? ", for_student: 1 " : ", for_rec: 1 ";
            var query = 'query{ qs_popup( user_id: ' + this.authUser.ID + ', is_disabled:0 ' + forWho + '){\n                        ID label type answers } }';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                var qs = res.data.data.qs_popup;
                var ans = [];
                if (qs == null) {
                    qs = "";
                } else {
                    try {
                        ans = JSON.parse(qs.answers);
                    } catch (err) {
                        ans = [];
                    }
                }

                _this2.setState(function (prevState) {
                    return {
                        currentQs: qs,
                        currentAnswers: ans,
                        loading: false
                    };
                });
            });
        }
    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            var _this3 = this;

            this.setState(function (prevState) {
                return { error: "" };
            });
            var qs = this.state.currentQs;

            var answers = "";
            if (qs.type === _dbConfig.QsPopupEnum.TYPE_SUBJECTIVE) {
                answers = d.answer;
            }
            if (qs.type === _dbConfig.QsPopupEnum.TYPE_MCQ) {
                answers = this.state.currentAnswers[d.answer];
            }

            if (typeof answers === "undefined") {
                this.setState(function (prevState) {
                    return { error: "Please choose an answer" };
                });

                return;
            }

            var param = {};
            param[_dbConfig.QsPopupAnswer.USER_ID] = this.authUser.ID;
            param[_dbConfig.QsPopupAnswer.QS_POPUP_ID] = qs.ID;
            param[_dbConfig.QsPopupAnswer.ANSWER] = answers;
            console.log(param);

            var q = 'mutation { add_qs_popup_answer(' + (0, _graphqlObj2arg2.default)(param, { noOuterBraces: true }) + ') {ID} }';
            (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                _this3.loadQs();
            });
        }
    }, {
        key: 'getQsView',
        value: function getQsView() {
            var _this4 = this;

            var qs = this.state.currentQs;

            if (qs == "") {
                return null;
            }

            var items = [];

            if (qs.type === _dbConfig.QsPopupEnum.TYPE_SUBJECTIVE) {
                items.push({
                    label: qs.label,
                    name: _dbConfig.QsPopupAnswer.ANSWER,
                    type: "textarea",
                    required: true
                });
            }

            if (qs.type === _dbConfig.QsPopupEnum.TYPE_MCQ) {
                var dataset = this.state.currentAnswers.map(function (d, i) {
                    return { key: i, label: d };
                });

                items.push({
                    label: qs.label,
                    name: _dbConfig.QsPopupAnswer.ANSWER,
                    type: "radio",
                    data: dataset,
                    required: true

                });
            }

            // on success reload question
            return _react2.default.createElement(
                'div',
                { className: 'qs-popup' },
                _react2.default.createElement(
                    'div',
                    { className: 'qs-form' },
                    _react2.default.createElement(_form2.default, { className: 'form-row',
                        items: items,
                        btnColorClass: "default",
                        onSubmit: function onSubmit(data) {
                            _this4.formOnSubmit(data);
                        },
                        submitText: 'Submit',
                        error: this.state.error,
                        disableSubmit: this.state.disableSubmit,
                        emptyOnSuccess: true })
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var v = _react2.default.createElement(_loader.Loader, { size: '2', text: '' });

            if (!this.state.loading) {
                v = this.getQsView();
            }

            return _react2.default.createElement(
                'div',
                null,
                v
            );
        }
    }]);

    return QsPopupView;
}(_react2.default.Component);

// #########################################################################################################
// #########################################################################################################

var QsPopupList = exports.QsPopupList = function (_React$Component2) {
    _inherits(QsPopupList, _React$Component2);

    function QsPopupList(props) {
        _classCallCheck(this, QsPopupList);

        var _this5 = _possibleConstructorReturn(this, (QsPopupList.__proto__ || Object.getPrototypeOf(QsPopupList)).call(this, props));

        _this5.createFeedbackView = _this5.createFeedbackView.bind(_this5);

        _this5.authUser = (0, _authActions.getAuthUser)();

        _this5.state = {
            loading: true,
            qs: {}
        };
        return _this5;
    }

    _createClass(QsPopupList, [{
        key: 'loadQs',
        value: function loadQs() {
            var _this6 = this;

            var q = 'query{ qs_popups {ID type label} }';
            (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                var qs = {};
                res.data.data.qs_popups.map(function (d, i) {
                    qs[d.ID] = d;
                });
                _this6.setState({ qs: qs, loading: false });
            });
        }

        // return array of tds

    }, {
        key: 'createFeedbackView',
        value: function createFeedbackView(raw) {
            var data = JSON.parse(raw);
            console.log(data);
            var v = [];
            var style = { marginBottom: "5px" };
            for (var id in data) {
                var d = data[id];

                var qs = _react2.default.createElement(_tooltip2.default, {
                    left: '-204px',
                    content: _react2.default.createElement(
                        'small',
                        null,
                        _react2.default.createElement(
                            'i',
                            null,
                            _react2.default.createElement(
                                'b',
                                null,
                                'Question Id bottom="-11px" noArrow=',
                                true,
                                ' ',
                                id
                            )
                        )
                    ),
                    tooltip: this.state.qs[id] });

                v.push(_react2.default.createElement(
                    'td',
                    { style: style },
                    qs,
                    _react2.default.createElement('br', null),
                    d
                ));
            }

            return v;
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this7 = this;

            this.loadQs();
            this.ROLE_DATA = [{ key: "", label: "ALL USER TYPE" }, _dbConfig.UserEnum.ROLE_STUDENT, _dbConfig.UserEnum.ROLE_RECRUITER];
            this.offset = 20;
            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'Question ID'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Question'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Question Type'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Answer'
                    )
                )
            );

            this.renderRow = function (d, i) {
                var row = [];
                for (var k in d) {
                    if (k == "qs_popup_id") {
                        var qs = _this7.state.qs[d[k]];
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            d[k]
                        ));
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            qs.label
                        ));
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            qs.type
                        ));
                    } else {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            d[k]
                        ));
                    }
                }
                return row;
            };

            //##########################################
            //  search
            this.searchParams = "";
            this.search = {};
            this.searchFormItem = [{ header: "Enter Your Search Query" }, {
                label: "Answer From?",
                name: "user_role",
                type: "select",
                data: this.ROLE_DATA
            }];

            this.searchFormOnSubmit = function (d) {
                _this7.search = d;
                _this7.searchParams = "";
                if (d != null) {
                    _this7.searchParams += d.user_role !== "" ? 'user_role:"' + d.user_role + '",' : "";
                    _this7.searchParams += d.qs_popup_id !== "" ? 'qs_popup_id:' + d.qs_popup_id + ',' : "";
                }
            };

            this.loadData = function (page, offset) {
                return (0, _apiHelper.getAxiosGraphQLQuery)('query{\n                qs_popup_answers(' + _this7.searchParams + ' page:' + page + ', offset:' + offset + '){\n                qs_popup_id answer }}');
            };

            this.getDataFromRes = function (res) {
                return res.data.data.qs_popup_answers;
            };
        }
    }, {
        key: 'addQsPopupIdFilter',
        value: function addQsPopupIdFilter() {
            var data = [{ key: "", label: "ALL QUESTIONS" }];
            for (var id in this.state.qs) {
                var label = id + " - " + this.state.qs[id].label;
                data.push({ key: id, label: label });
            }
            this.searchFormItem.push({
                label: "Select Question",
                name: "qs_popup_id",
                type: "select",
                data: data
            });
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("User Answers");

            var v = null;

            if (this.state.loading) {
                v = _react2.default.createElement(_loader.Loader, { size: '2', text: 'Loading user answers' });
            } else {
                this.addQsPopupIdFilter();
                v = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'h3',
                        null,
                        'User Answers'
                    ),
                    _react2.default.createElement(_generalForm2.default, {
                        dataTitle: this.dataTitle,
                        noMutation: true,
                        dataOffset: 20,
                        searchFormItem: this.searchFormItem,
                        searchFormOnSubmit: this.searchFormOnSubmit,
                        tableHeader: this.tableHeader,
                        renderRow: this.renderRow,
                        getDataFromRes: this.getDataFromRes,
                        loadData: this.loadData })
                );
            }

            return v;
        }
    }]);

    return QsPopupList;
}(_react2.default.Component);

// #########################################################################################################
// #########################################################################################################

var ManageQsPopup = exports.ManageQsPopup = function (_React$Component3) {
    _inherits(ManageQsPopup, _React$Component3);

    function ManageQsPopup(props) {
        _classCallCheck(this, ManageQsPopup);

        var _this8 = _possibleConstructorReturn(this, (ManageQsPopup.__proto__ || Object.getPrototypeOf(ManageQsPopup)).call(this, props));

        _this8.authUser = (0, _authActions.getAuthUser)();
        return _this8;
    }

    _createClass(ManageQsPopup, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this9 = this;

            this.BOTH = "BOTH";
            this.ROLE_DATA = [_dbConfig.UserEnum.ROLE_STUDENT, _dbConfig.UserEnum.ROLE_RECRUITER, this.BOTH];
            this.offset = 20;
            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'ID'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'For Student?'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'For Recruiter?'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Question'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Type'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Answer Choice'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Status'
                    )
                )
            );

            //##########################################
            //  search
            this.searchParams = "";
            this.search = {};
            this.searchFormItem = [{ header: "Enter Your Search Query" }, {
                label: "Question For",
                name: "user_role",
                type: "select",
                data: this.ROLE_DATA
            }];

            this.searchFormOnSubmit = function (d) {
                _this9.search = d;
                _this9.searchParams = "";
                if (d != null) {
                    if (d.user_role == _dbConfig.UserEnum.ROLE_STUDENT) {
                        _this9.searchParams = ' for_student:1, ';
                    } else if (d.user_role == _dbConfig.UserEnum.ROLE_RECRUITER) {
                        _this9.searchParams = '  for_rec:1, ';
                    }
                }
            };

            this.loadData = function (page, offset) {
                var q = 'query{qs_popups(' + _this9.searchParams + ' \n                order_by: "is_disabled asc, ID", page:' + page + ', offset:' + offset + '){\n                ID for_student for_rec label type answers   is_disabled}}';
                console.log(q);
                return (0, _apiHelper.getAxiosGraphQLQuery)(q);
            };

            this.getDataFromRes = function (res) {
                return res.data.data.qs_popups;
            };

            // create form add new default
            this.newFormDefault = {};
            this.newFormDefault[_dbConfig.QsPopup.FOR_STUDENT] = 0;
            this.newFormDefault[_dbConfig.QsPopup.FOR_REC] = 0;

            this.getFormItem = function (edit) {
                var ret = [{ header: "Question Popup Form" }];
                ret.push.apply(ret, [{
                    label: "Question",
                    name: _dbConfig.QsPopup.LABEL,
                    type: "textarea",
                    rows: 2,
                    required: true,
                    placeholder: "Write question here.."
                }, {
                    label: "For Student?",
                    name: _dbConfig.QsPopup.FOR_STUDENT,
                    type: "radio",
                    data: [{ key: 1, label: "Yes" }, { key: 0, label: "No" }],
                    required: true
                }, {
                    label: "For Recruiter?",
                    name: _dbConfig.QsPopup.FOR_REC,
                    type: "radio",
                    data: [{ key: 1, label: "Yes" }, { key: 0, label: "No" }],
                    required: true
                }, {
                    label: "Type",
                    name: _dbConfig.QsPopup.TYPE,
                    type: "select",
                    data: ["", _dbConfig.QsPopupEnum.TYPE_MCQ, _dbConfig.QsPopupEnum.TYPE_SUBJECTIVE],
                    required: true
                }, {
                    label: "Answer Choice",
                    sublabel: "For type 'MCQ' only",
                    name: _dbConfig.QsPopup.ANSWERS,
                    type: "text",
                    multiple: true
                }]);

                var extra = [];
                if (edit) {
                    extra = [{
                        label: "Is Active",
                        name: _dbConfig.QsPopup.IS_DISABLED,
                        type: "select",
                        data: [{ key: 0, label: "Yes" }, { key: 1, label: "No" }],
                        required: true
                    }];
                }

                ret.push.apply(ret, _toConsumableArray(extra));

                return ret;
            };

            this.getEditFormDefault = function (ID) {
                var query = 'query\n            {qs_popup(ID: ' + ID + '){ID label type answers for_student for_rec  is_disabled}}';

                return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    var qs = res.data.data.qs_popup;
                    return qs;
                });
            };

            this.forceDiff = [_dbConfig.QsPopup.TYPE];

            this.renderRow = function (d, i) {
                var row = [];
                for (var key in d) {
                    if (key == "is_disabled") {
                        var is_disabled = d.is_disabled ? _react2.default.createElement(
                            'label',
                            { className: 'label label-danger' },
                            'Not Active'
                        ) : _react2.default.createElement(
                            'label',
                            { className: 'label label-success' },
                            'Active'
                        );
                        row.push(_react2.default.createElement(
                            'td',
                            { className: 'text-center' },
                            is_disabled
                        ));
                    } else if (key == "for_student" || key == "for_rec") {
                        var forRole = d[key] ? _react2.default.createElement(
                            'label',
                            { className: 'label label-success' },
                            'Yes'
                        ) : _react2.default.createElement(
                            'label',
                            { className: 'label label-danger' },
                            'No'
                        );
                        row.push(_react2.default.createElement(
                            'td',
                            { className: 'text-center' },
                            forRole
                        ));
                    } else {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            d[key]
                        ));
                    }
                }
                return row;
            };

            this.formWillSubmit = function (d, edit) {

                var parseInt = [_dbConfig.QsPopup.IS_DISABLED, _dbConfig.QsPopup.FOR_REC, _dbConfig.QsPopup.FOR_STUDENT];

                for (var i in parseInt) {
                    if (typeof d[parseInt[i]] === "string") {
                        d[parseInt[i]] = Number.parseInt(d[parseInt[i]]);
                    }
                }

                //d[QsPopup.ANSWERS] = JSON.stringify(d[QsPopup.ANSWERS])

                if (d[_dbConfig.QsPopup.TYPE] === _dbConfig.QsPopupEnum.TYPE_MCQ) {
                    var ans = d[_dbConfig.QsPopup.ANSWERS];
                    if (!Array.isArray(ans) || ans.length < 2) {
                        return "Please enter at least two answer choice";
                    }
                    d[_dbConfig.QsPopup.ANSWERS] = JSON.stringify(d[_dbConfig.QsPopup.ANSWERS]);
                } else {
                    delete d[_dbConfig.QsPopup.ANSWERS];
                }

                if (edit) {
                    d.updated_by = _this9.authUser.ID;
                } else {
                    d.created_by = _this9.authUser.ID;
                }

                // for edit takde param for type
                // we just need it to validate answers
                if (edit) {
                    delete d[_dbConfig.QsPopup.TYPE];
                }

                return d;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Manage Question Popup");
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    'Manage Question Popup'
                ),
                _react2.default.createElement(_generalForm2.default, {
                    entity_singular: 'Question Popup',
                    entity: 'qs_popup',
                    addButtonText: 'Add New Question Popup',
                    dataTitle: this.dataTitle,
                    forceDiff: this.forceDiff,
                    getFormItem: this.getFormItem,
                    newFormDefault: this.newFormDefault,
                    getEditFormDefault: this.getEditFormDefault,
                    noMutation: true,
                    formWillSubmit: this.formWillSubmit,
                    canEdit: true,
                    canAdd: true,
                    dataOffset: 20,
                    searchFormItem: this.searchFormItem,
                    searchFormOnSubmit: this.searchFormOnSubmit,
                    tableHeader: this.tableHeader,
                    renderRow: this.renderRow,
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData })
            );
        }
    }]);

    return ManageQsPopup;
}(_react2.default.Component);

// #########################################################################################################
// #########################################################################################################

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _store = __webpack_require__(34);

var _buttons = __webpack_require__(15);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/focus-card.scss");

//state is from redux reducer
// with multiple objects
function mapStateToProps(state, ownProps) {
    return {
        focusCard: state.layout.focusCard,
        focusCardPrevious: state.layout.focusCardPrevious
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({
        updateFocusCard: layoutActions.updateFocusCard,
        hideFocusCard: layoutActions.hideFocusCard,
        previousFocusCard: layoutActions.previousFocusCard
    }, dispatch);
}

var FocusCard = function (_React$Component) {
    _inherits(FocusCard, _React$Component);

    function FocusCard(props) {
        _classCallCheck(this, FocusCard);

        var _this = _possibleConstructorReturn(this, (FocusCard.__proto__ || Object.getPrototypeOf(FocusCard)).call(this, props));

        _this.lastUpdate = null;
        return _this;
    }

    _createClass(FocusCard, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            //console.log("componentWillMount", "focus");
        }
    }, {
        key: 'render',
        value: function render() {

            var focus = this.props.focusCard;
            var componentName = null;
            //console.log("render focus card");
            //console.log(focus.props);

            var component = null;
            if (focus.component !== null) {
                componentName = focus.component.name;
                //this to force the child component to re-render
                focus.props["key"] = new Date().getTime();
                component = _react2.default.createElement(focus.component, focus.props);
            }
            //console.log(focus);
            //console.log(focus.show);
            //var display = (focus.show == true) ? "flow-root" : "none";
            var display = focus.show == true ? "block" : "none";
            var style = {
                display: display
            };

            var fc = "fc-";

            // get previous btn
            var prev = this.props.focusCardPrevious;
            var prevBtn = prev.length <= 0 ? null : _react2.default.createElement(
                'div',
                { className: fc + 'previous-btn' },
                _react2.default.createElement(
                    'a',
                    {
                        onClick: function onClick() {
                            return _store.store.dispatch(layoutActions.previousFocusCard());
                        },
                        size: '18px' },
                    _react2.default.createElement('i', { className: 'fa fa-arrow-left left' }),
                    prev[prev.length - 1].title
                )
            );

            var componentClass = componentName !== null ? "fc-" + componentName : "";

            return _react2.default.createElement(
                'div',
                { style: style, id: 'focus-card', className: focus.className + " " + componentClass },
                _react2.default.createElement(
                    'div',
                    { className: fc + 'content' },
                    _react2.default.createElement(
                        'div',
                        { className: fc + 'header' + (prev.length > 0 ? " previous" : "") },
                        prevBtn,
                        _react2.default.createElement(
                            'div',
                            { className: fc + 'close-btn' },
                            _react2.default.createElement(_buttons.ButtonIcon, {
                                onClick: function onClick() {
                                    return _store.store.dispatch(layoutActions.hideFocusCard());
                                },
                                size: '18px', icon: 'close' })
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: fc + 'title' },
                            focus.title
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: fc + 'body' },
                        component
                    )
                ),
                _react2.default.createElement('div', { onClick: function onClick() {
                        return _store.store.dispatch(layoutActions.hideFocusCard());
                    },
                    className: fc + 'background' })
            );
        }
    }]);

    return FocusCard;
}(_react2.default.Component);

FocusCard.propTypes = {
    title: _propTypes2.default.string,
    component: _propTypes2.default.func,
    props: _propTypes2.default.object,
    show: _propTypes2.default.bool,
    className: _propTypes2.default.oneOf(["small"])
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FocusCard);

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(322);

var _reactRouterDom = __webpack_require__(7);

var _reactRedux = __webpack_require__(25);

var _store = __webpack_require__(34);

var _primaryLayout = __webpack_require__(510);

var _primaryLayout2 = _interopRequireDefault(_primaryLayout);

var _testLayout = __webpack_require__(627);

var _testLayout2 = _interopRequireDefault(_testLayout);

var _authorizeRoute = __webpack_require__(628);

var _authorizeRoute2 = _interopRequireDefault(_authorizeRoute);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//require("./lib/AutoComplete.js");
//require("./lib/font-awesome-4.7.0/css/font-awesome.css");

// import {
//   isAuthorized,
//   isComingSoon,
//   setLocalStorageCf,
//   getAuthUser
// } from "./redux/actions/auth-actions";

// import { addLog } from "./redux/actions/other-actions";
// import { LogEnum, CFSMetaObject, CFSMetaOrg } from "../config/db-config";

// import { getAxiosGraphQLQuery } from "../helper/api-helper";
__webpack_require__(45);
// import { Loader } from "./component/loader";

var scss = ["action-box", "app", "availability", "block-loader", "border-card", "chat", "company-chat", "company-page", "company-sec", "company-sec-old", "content", "dashboard", "focus-card", "footer", "form", "forum", "gallery", "general", "group-session", "hall", "hall-gallery", "header", "home", "left-bar", "list", "list-row", "live-session", "notess", "notification", "overview", "page-sec", "profile-card", "qs-popup", "right-bar", "session-note", "sponsor", "sub-nav", "support-chat", "time-converter", "timer", "toogle-timezone", "tooltip", "input-suggestion", "input-single", "input-multi", "input-general", "vacancy", "event", "browse-student", "input-select", "input-checkbox", "list-board"];
for (var i in scss) {
  __webpack_require__(629)("./" + scss[i] + ".scss");
}

var App = function App() {
  return _react2.default.createElement(
    _reactRedux.Provider,
    { store: _store.store },
    _react2.default.createElement(
      _reactRouterDom.BrowserRouter,
      null,
      _react2.default.createElement(
        _reactRouterDom.Switch,
        null,
        _react2.default.createElement(_authorizeRoute2.default, { path: _appConfig.RootPath + "/app", component: _primaryLayout2.default }),
        _react2.default.createElement(_reactRouterDom.Route, { path: _appConfig.RootPath + "/auth", component: _primaryLayout2.default }),
        _react2.default.createElement(_reactRouterDom.Route, { path: _appConfig.RootPath + "/test", component: _testLayout2.default })
      )
    )
  );
};
(0, _reactDom.render)(_react2.default.createElement(App, null), document.getElementById("app"));

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

if (false) {
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = lowPriorityWarning;

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var PooledClass = __webpack_require__(309);
var ReactElement = __webpack_require__(69);

var emptyFunction = __webpack_require__(39);
var traverseAllChildren = __webpack_require__(310);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(83);

var invariant = __webpack_require__(10);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(83);

var ReactCurrentOwner = __webpack_require__(43);
var REACT_ELEMENT_TYPE = __webpack_require__(189);

var getIteratorFn = __webpack_require__(311);
var invariant = __webpack_require__(10);
var KeyEscapeUtils = __webpack_require__(312);
var warning = __webpack_require__(16);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (false) {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (false) {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactElement = __webpack_require__(69);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (false) {
  var ReactElementValidator = require('./ReactElementValidator');
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _require = __webpack_require__(69),
    isValidElement = _require.isValidElement;

var factory = __webpack_require__(190);

module.exports = factory(isValidElement);

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(128);
var assign = __webpack_require__(18);

var ReactPropTypesSecret = __webpack_require__(191);
var checkPropTypes = __webpack_require__(317);

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (false) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (false) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (false) {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (false) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       false ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports,"__esModule",{value:!0});
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.memo"):
60115,r=b?Symbol.for("react.lazy"):60116;function t(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;
exports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||"object"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};
exports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};
exports.isSuspense=function(a){return t(a)===p};


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (false) {
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (false) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (false) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



module.exports = '15.6.2';

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _require = __webpack_require__(186),
    Component = _require.Component;

var _require2 = __webpack_require__(69),
    isValidElement = _require2.isValidElement;

var ReactNoopUpdateQueue = __webpack_require__(187);
var factory = __webpack_require__(320);

module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var emptyObject = __webpack_require__(99);
var _invariant = __webpack_require__(10);

if (false) {
  var warning = require('fbjs/lib/warning');
}

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (false) {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillMount`.
     *
     * @optional
     */
    UNSAFE_componentWillMount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillReceiveProps`.
     *
     * @optional
     */
    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillUpdate`.
     *
     * @optional
     */
    UNSAFE_componentWillUpdate: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Similar to ReactClassInterface but for static methods.
   */
  var ReactClassStaticInterface = {
    /**
     * This method is invoked after a component is instantiated and when it
     * receives new props. Return an object to update state in response to
     * prop changes. Return null to indicate no change to state.
     *
     * If an object is returned, its keys will be merged into the existing state.
     *
     * @return {object || null}
     * @optional
     */
    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if (false) {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if (false) {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if (false) {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (false) {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (false) {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (false) {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }

    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isAlreadyDefined = name in Constructor;
      if (isAlreadyDefined) {
        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)
          ? ReactClassStaticInterface[name]
          : null;

        _invariant(
          specPolicy === 'DEFINE_MANY_MERGED',
          'ReactClass: You are attempting to define ' +
            '`%s` on your component more than once. This conflict may be ' +
            'due to a mixin.',
          name
        );

        Constructor[name] = createMergedResultFunction(Constructor[name], property);

        return;
      }

      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (false) {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if (false) {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (false) {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (false) {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (false) {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if (false) {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.UNSAFE_componentWillRecieveProps,
        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +
          'Did you mean UNSAFE_componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */


var _prodInvariant = __webpack_require__(83);

var ReactElement = __webpack_require__(69);

var invariant = __webpack_require__(10);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(323);


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/



var ReactDOMComponentTree = __webpack_require__(20);
var ReactDefaultInjection = __webpack_require__(324);
var ReactMount = __webpack_require__(215);
var ReactReconciler = __webpack_require__(71);
var ReactUpdates = __webpack_require__(40);
var ReactVersion = __webpack_require__(396);

var findDOMNode = __webpack_require__(397);
var getHostComponentFromComposite = __webpack_require__(216);
var renderSubtreeIntoContainer = __webpack_require__(398);
var warning = __webpack_require__(16);

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
  /* eslint-enable camelcase */
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (false) {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if (false) {
  var ReactInstrumentation = require('./ReactInstrumentation');
  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ARIADOMPropertyConfig = __webpack_require__(325);
var BeforeInputEventPlugin = __webpack_require__(326);
var ChangeEventPlugin = __webpack_require__(330);
var DefaultEventPluginOrder = __webpack_require__(333);
var EnterLeaveEventPlugin = __webpack_require__(334);
var HTMLDOMPropertyConfig = __webpack_require__(335);
var ReactComponentBrowserEnvironment = __webpack_require__(336);
var ReactDOMComponent = __webpack_require__(342);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactDOMEmptyComponent = __webpack_require__(367);
var ReactDOMTreeTraversal = __webpack_require__(368);
var ReactDOMTextComponent = __webpack_require__(369);
var ReactDefaultBatchingStrategy = __webpack_require__(370);
var ReactEventListener = __webpack_require__(371);
var ReactInjection = __webpack_require__(373);
var ReactReconcileTransaction = __webpack_require__(374);
var SVGDOMPropertyConfig = __webpack_require__(380);
var SelectEventPlugin = __webpack_require__(381);
var SimpleEventPlugin = __webpack_require__(382);

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var EventPropagators = __webpack_require__(84);
var ExecutionEnvironment = __webpack_require__(29);
var FallbackCompositionState = __webpack_require__(327);
var SyntheticCompositionEvent = __webpack_require__(328);
var SyntheticInputEvent = __webpack_require__(329);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var PooledClass = __webpack_require__(58);

var getTextContentAccessor = __webpack_require__(195);

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticEvent = __webpack_require__(44);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticEvent = __webpack_require__(44);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var EventPluginHub = __webpack_require__(85);
var EventPropagators = __webpack_require__(84);
var ExecutionEnvironment = __webpack_require__(29);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactUpdates = __webpack_require__(40);
var SyntheticEvent = __webpack_require__(44);

var inputValueTracking = __webpack_require__(198);
var getEventTarget = __webpack_require__(132);
var isEventSupported = __webpack_require__(133);
var isTextInputElement = __webpack_require__(199);

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
  event.type = 'change';
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getInstIfValueChanged(targetInst, nativeEvent) {
  var updated = inputValueTracking.updateValueIfChanged(targetInst);
  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

  if (updated || simulated) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}

function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.

  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst, nativeEvent);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topClick') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes,

  _allowSimulatedPassThrough: true,
  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

module.exports = ChangeEventPlugin;

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var ReactOwner = __webpack_require__(332);

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }
};

module.exports = ReactOwner;

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var EventPropagators = __webpack_require__(84);
var ReactDOMComponentTree = __webpack_require__(20);
var SyntheticMouseEvent = __webpack_require__(101);

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMProperty = __webpack_require__(70);

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    controlsList: 0,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {},
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMChildrenOperations = __webpack_require__(135);
var ReactDOMIDOperations = __webpack_require__(341);

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {
  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
};

module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var DOMLazyTree = __webpack_require__(72);
var ExecutionEnvironment = __webpack_require__(29);

var createNodesFromMarkup = __webpack_require__(338);
var emptyFunction = __webpack_require__(39);
var invariant = __webpack_require__(10);

var Danger = {
  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }
};

module.exports = Danger;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = __webpack_require__(29);

var createArrayFromMixed = __webpack_require__(339);
var getMarkupWrap = __webpack_require__(340);
var invariant = __webpack_require__(10);

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var invariant = __webpack_require__(10);

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = __webpack_require__(29);

var invariant = __webpack_require__(10);

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMChildrenOperations = __webpack_require__(135);
var ReactDOMComponentTree = __webpack_require__(20);

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {
  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* global hasOwnProperty:true */



var _prodInvariant = __webpack_require__(14),
    _assign = __webpack_require__(18);

var AutoFocusUtils = __webpack_require__(343);
var CSSPropertyOperations = __webpack_require__(344);
var DOMLazyTree = __webpack_require__(72);
var DOMNamespaces = __webpack_require__(136);
var DOMProperty = __webpack_require__(70);
var DOMPropertyOperations = __webpack_require__(204);
var EventPluginHub = __webpack_require__(85);
var EventPluginRegistry = __webpack_require__(129);
var ReactBrowserEventEmitter = __webpack_require__(104);
var ReactDOMComponentFlags = __webpack_require__(192);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactDOMInput = __webpack_require__(354);
var ReactDOMOption = __webpack_require__(356);
var ReactDOMSelect = __webpack_require__(205);
var ReactDOMTextarea = __webpack_require__(357);
var ReactInstrumentation = __webpack_require__(38);
var ReactMultiChild = __webpack_require__(358);
var ReactServerRenderingTransaction = __webpack_require__(365);

var emptyFunction = __webpack_require__(39);
var escapeTextContentForBrowser = __webpack_require__(103);
var invariant = __webpack_require__(10);
var isEventSupported = __webpack_require__(133);
var shallowEqual = __webpack_require__(140);
var inputValueTracking = __webpack_require__(198);
var validateDOMNesting = __webpack_require__(144);
var warning = __webpack_require__(16);

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { string: true, number: true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (false) {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if (false) {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trackInputValue() {
  inputValueTracking.track(this);
}

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':
      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

var newlineEatingTags = {
  listing: true,
  pre: true,
  textarea: true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (false) {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {
  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (false) {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (false) {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (false) {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if (false) {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);

        // We also check that we haven't missed a value update, such as a
        // Radio group shifting the checked value to another named radio input.
        inputValueTracking.updateValueIfChanged(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (false) {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (false) {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (false) {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (false) {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (false) {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'input':
      case 'textarea':
        inputValueTracking.stopTracking(this);
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if (false) {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }
};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactDOMComponentTree = __webpack_require__(20);

var focusNode = __webpack_require__(202);

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var CSSProperty = __webpack_require__(203);
var ExecutionEnvironment = __webpack_require__(29);
var ReactInstrumentation = __webpack_require__(38);

var camelizeStyleName = __webpack_require__(345);
var dangerousStyleValue = __webpack_require__(347);
var hyphenateStyleName = __webpack_require__(348);
var memoizeStringOnly = __webpack_require__(350);
var warning = __webpack_require__(16);

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (false) {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {
  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      var styleValue = styles[styleName];
      if (false) {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styleValue, component);
        }
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (false) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      if (false) {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styles[styleName], component);
        }
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (isCustomProperty) {
        style.setProperty(styleName, styleValue);
      } else if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }
};

module.exports = CSSPropertyOperations;

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var camelize = __webpack_require__(346);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var CSSProperty = __webpack_require__(203);
var warning = __webpack_require__(16);

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (false) {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(349);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @typechecks static-only
 */



/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var escapeTextContentForBrowser = __webpack_require__(103);

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var EventPluginHub = __webpack_require__(85);

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {
  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ExecutionEnvironment = __webpack_require__(29);

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14),
    _assign = __webpack_require__(18);

var DOMPropertyOperations = __webpack_require__(204);
var LinkedValueUtils = __webpack_require__(138);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactUpdates = __webpack_require__(40);

var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (false) {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      controlled: isControlled(props)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (false) {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      if (value === 0 && node.value === '') {
        node.value = '0';
        // Note: IE9 reports a number inputs as 'text', so check props instead.
      } else if (props.type === 'number') {
        // Simulate `input.valueAsNumber`. IE9 does not support it
        var valueAsNumber = parseFloat(node.value, 10) || 0;

        if (
        // eslint-disable-next-line
        value != valueAsNumber ||
        // eslint-disable-next-line
        value == valueAsNumber && node.value != value) {
          // Cast `value` to a string to ensure the value is set correctly. While
          // browsers typically do this as necessary, jsdom doesn't.
          node.value = '' + value;
        }
      } else if (node.value !== '' + value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var React = __webpack_require__(68);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactDOMSelect = __webpack_require__(205);

var warning = __webpack_require__(16);
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }
};

module.exports = ReactDOMOption;

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14),
    _assign = __webpack_require__(18);

var LinkedValueUtils = __webpack_require__(138);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactUpdates = __webpack_require__(40);

var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (false) {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (false) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var ReactComponentEnvironment = __webpack_require__(139);
var ReactInstanceMap = __webpack_require__(87);
var ReactInstrumentation = __webpack_require__(38);

var ReactCurrentOwner = __webpack_require__(43);
var ReactReconciler = __webpack_require__(71);
var ReactChildReconciler = __webpack_require__(359);

var emptyFunction = __webpack_require__(39);
var flattenChildren = __webpack_require__(364);
var invariant = __webpack_require__(10);

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (false) {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {
  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {
    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (false) {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if (false) {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if (false) {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (false) {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (false) {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }
  }
};

module.exports = ReactMultiChild;

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactReconciler = __webpack_require__(71);

var instantiateReactComponent = __webpack_require__(206);
var KeyEscapeUtils = __webpack_require__(142);
var shouldUpdateReactComponent = __webpack_require__(141);
var traverseAllChildren = __webpack_require__(210);
var warning = __webpack_require__(16);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && Object({"NODE_ENV":"production"}) && "production" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(211);
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (false) {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
    }
    if (!keyUnique) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
  {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (false) {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
  {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }
};

module.exports = ReactChildReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14),
    _assign = __webpack_require__(18);

var React = __webpack_require__(68);
var ReactComponentEnvironment = __webpack_require__(139);
var ReactCurrentOwner = __webpack_require__(43);
var ReactErrorUtils = __webpack_require__(131);
var ReactInstanceMap = __webpack_require__(87);
var ReactInstrumentation = __webpack_require__(38);
var ReactNodeTypes = __webpack_require__(207);
var ReactReconciler = __webpack_require__(71);

if (false) {
  var checkReactTypeSpec = require('./checkReactTypeSpec');
}

var emptyObject = __webpack_require__(99);
var invariant = __webpack_require__(10);
var shallowEqual = __webpack_require__(140);
var shouldUpdateReactComponent = __webpack_require__(141);
var warning = __webpack_require__(16);

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {
  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (false) {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (false) {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (false) {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (false) {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (false) {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (false) {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if (false) {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (false) {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (false) {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (false) {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (false) {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (false) {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (false) {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (false) {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if (false) {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (false) {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (false) {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (false) {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (false) {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (false) {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (false) {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if (false) {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (false) {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if ("production" !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (false) {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null
};

module.exports = ReactCompositeComponent;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var KeyEscapeUtils = __webpack_require__(142);
var traverseAllChildren = __webpack_require__(210);
var warning = __webpack_require__(16);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && Object({"NODE_ENV":"production"}) && "production" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(211);
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (false) {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
      }
      if (!keyUnique) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (false) {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var PooledClass = __webpack_require__(58);
var Transaction = __webpack_require__(100);
var ReactInstrumentation = __webpack_require__(38);
var ReactServerUpdateQueue = __webpack_require__(366);

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (false) {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = __webpack_require__(143);

var warning = __webpack_require__(16);

function warnNoop(publicInstance, callerName) {
  if (false) {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var DOMLazyTree = __webpack_require__(72);
var ReactDOMComponentTree = __webpack_require__(20);

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var invariant = __webpack_require__(10);

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14),
    _assign = __webpack_require__(18);

var DOMChildrenOperations = __webpack_require__(135);
var DOMLazyTree = __webpack_require__(72);
var ReactDOMComponentTree = __webpack_require__(20);

var escapeTextContentForBrowser = __webpack_require__(103);
var invariant = __webpack_require__(10);
var validateDOMNesting = __webpack_require__(144);

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {
  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (false) {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMTextComponent;

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var ReactUpdates = __webpack_require__(40);
var Transaction = __webpack_require__(100);

var emptyFunction = __webpack_require__(39);

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var EventListener = __webpack_require__(212);
var ExecutionEnvironment = __webpack_require__(29);
var PooledClass = __webpack_require__(58);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactUpdates = __webpack_require__(40);

var getEventTarget = __webpack_require__(132);
var getUnboundedScrollPosition = __webpack_require__(372);

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable.Window && scrollable instanceof scrollable.Window) {
    return {
      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var DOMProperty = __webpack_require__(70);
var EventPluginHub = __webpack_require__(85);
var EventPluginUtils = __webpack_require__(130);
var ReactComponentEnvironment = __webpack_require__(139);
var ReactEmptyComponent = __webpack_require__(208);
var ReactBrowserEventEmitter = __webpack_require__(104);
var ReactHostComponent = __webpack_require__(209);
var ReactUpdates = __webpack_require__(40);

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(18);

var CallbackQueue = __webpack_require__(196);
var PooledClass = __webpack_require__(58);
var ReactBrowserEventEmitter = __webpack_require__(104);
var ReactInputSelection = __webpack_require__(213);
var ReactInstrumentation = __webpack_require__(38);
var Transaction = __webpack_require__(100);
var ReactUpdateQueue = __webpack_require__(143);

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (false) {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ExecutionEnvironment = __webpack_require__(29);

var getNodeForCharacterOffset = __webpack_require__(376);
var getTextContentAccessor = __webpack_require__(195);

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = __webpack_require__(378);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = __webpack_require__(379);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var EventPropagators = __webpack_require__(84);
var ExecutionEnvironment = __webpack_require__(29);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactInputSelection = __webpack_require__(213);
var SyntheticEvent = __webpack_require__(44);

var getActiveElement = __webpack_require__(214);
var isTextInputElement = __webpack_require__(199);
var shallowEqual = __webpack_require__(140);

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var _prodInvariant = __webpack_require__(14);

var EventListener = __webpack_require__(212);
var EventPropagators = __webpack_require__(84);
var ReactDOMComponentTree = __webpack_require__(20);
var SyntheticAnimationEvent = __webpack_require__(383);
var SyntheticClipboardEvent = __webpack_require__(384);
var SyntheticEvent = __webpack_require__(44);
var SyntheticFocusEvent = __webpack_require__(385);
var SyntheticKeyboardEvent = __webpack_require__(386);
var SyntheticMouseEvent = __webpack_require__(101);
var SyntheticDragEvent = __webpack_require__(388);
var SyntheticTouchEvent = __webpack_require__(389);
var SyntheticTransitionEvent = __webpack_require__(390);
var SyntheticUIEvent = __webpack_require__(86);
var SyntheticWheelEvent = __webpack_require__(391);

var emptyFunction = __webpack_require__(39);
var getEventCharCode = __webpack_require__(145);
var invariant = __webpack_require__(10);

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }
};

module.exports = SimpleEventPlugin;

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticEvent = __webpack_require__(44);

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticEvent = __webpack_require__(44);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticUIEvent = __webpack_require__(86);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticUIEvent = __webpack_require__(86);

var getEventCharCode = __webpack_require__(145);
var getEventKey = __webpack_require__(387);
var getEventModifierState = __webpack_require__(134);

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var getEventCharCode = __webpack_require__(145);

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1',
  113: 'F2',
  114: 'F3',
  115: 'F4',
  116: 'F5',
  117: 'F6',
  118: 'F7',
  119: 'F8',
  120: 'F9',
  121: 'F10',
  122: 'F11',
  123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticMouseEvent = __webpack_require__(101);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticUIEvent = __webpack_require__(86);

var getEventModifierState = __webpack_require__(134);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticEvent = __webpack_require__(44);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var SyntheticMouseEvent = __webpack_require__(101);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var validateDOMNesting = __webpack_require__(144);

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (false) {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var adler32 = __webpack_require__(395);

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



module.exports = '15.6.2';

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _prodInvariant = __webpack_require__(14);

var ReactCurrentOwner = __webpack_require__(43);
var ReactDOMComponentTree = __webpack_require__(20);
var ReactInstanceMap = __webpack_require__(87);

var getHostComponentFromComposite = __webpack_require__(216);
var invariant = __webpack_require__(10);
var warning = __webpack_require__(16);

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (false) {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var ReactMount = __webpack_require__(215);

module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 399 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(146);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







/**
 * The public API for a <Router> that uses HTML5 history.
 */

var BrowserRouter = function (_React$Component) {
  _inherits(BrowserRouter, _React$Component);

  function BrowserRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, BrowserRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = Object(__WEBPACK_IMPORTED_MODULE_3_history__["a" /* createBrowserHistory */])(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  BrowserRouter.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.");
  };

  BrowserRouter.prototype.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Router__["a" /* default */], { history: this.history, children: this.props.children });
  };

  return BrowserRouter;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

BrowserRouter.propTypes = {
  basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
  forceRefresh: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
  getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
  keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
  children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node
};


/* harmony default export */ __webpack_exports__["a"] = (BrowserRouter);

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(191);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 401 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
}

// About 1.5x faster than the two-arg version of Array#splice()
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
}

// This implementation is based heavily on node's url.parse
function resolvePathname(to) {
  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  var toParts = to && to.split('/') || [];
  var fromParts = from && from.split('/') || [];

  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';

  var hasTrailingSlash = void 0;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) {
    fromParts.unshift('..');
  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');

  var result = fromParts.join('/');

  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (resolvePathname);

/***/ }),
/* 402 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function valueEqual(a, b) {
  if (a === b) return true;

  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
      return valueEqual(item, b[index]);
    });
  }

  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

  if (aType !== bType) return false;

  if (aType === 'object') {
    var aValue = a.valueOf();
    var bValue = b.valueOf();

    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);

    if (aKeys.length !== bKeys.length) return false;

    return aKeys.every(function (key) {
      return valueEqual(a[key], b[key]);
    });
  }

  return false;
}

/* harmony default export */ __webpack_exports__["a"] = (valueEqual);

/***/ }),
/* 403 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var isProduction = "production" === 'production';
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }

    var text = "Warning: " + message;

    if (typeof console !== 'undefined') {
      console.warn(text);
    }

    try {
      throw Error(text);
    } catch (x) {}
  }
}

/* unused harmony default export */ var _unused_webpack_default_export = (warning);


/***/ }),
/* 404 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var isProduction = "production" === 'production';
var prefix = 'Invariant failed';
function invariant(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction) {
    throw new Error(prefix);
  } else {
    throw new Error(prefix + ": " + (message || ''));
  }
}

/* harmony default export */ __webpack_exports__["a"] = (invariant);


/***/ }),
/* 405 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(146);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







/**
 * The public API for a <Router> that uses window.location.hash.
 */

var HashRouter = function (_React$Component) {
  _inherits(HashRouter, _React$Component);

  function HashRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, HashRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = Object(__WEBPACK_IMPORTED_MODULE_3_history__["b" /* createHashHistory */])(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  HashRouter.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.");
  };

  HashRouter.prototype.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Router__["a" /* default */], { history: this.history, children: this.props.children });
  };

  return HashRouter;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

HashRouter.propTypes = {
  basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
  getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
  hashType: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOf(["hashbang", "noslash", "slash"]),
  children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node
};


/* harmony default export */ __webpack_exports__["a"] = (HashRouter);

/***/ }),
/* 406 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_MemoryRouter__ = __webpack_require__(407);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_MemoryRouter__["a" /* default */]);

/***/ }),
/* 407 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(147);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







/**
 * The public API for a <Router> that stores location in memory.
 */

var MemoryRouter = function (_React$Component) {
  _inherits(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, MemoryRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = Object(__WEBPACK_IMPORTED_MODULE_3_history__["d" /* createMemoryHistory */])(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  MemoryRouter.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.");
  };

  MemoryRouter.prototype.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Router__["a" /* default */], { history: this.history, children: this.props.children });
  };

  return MemoryRouter;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

MemoryRouter.propTypes = {
  initialEntries: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,
  initialIndex: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
  getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
  keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
  children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node
};


/* harmony default export */ __webpack_exports__["a"] = (MemoryRouter);

/***/ }),
/* 408 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Route__ = __webpack_require__(218);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Link__ = __webpack_require__(217);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }






/**
 * A <Link> wrapper that knows if it's "active" or not.
 */
var NavLink = function NavLink(_ref) {
  var to = _ref.to,
      exact = _ref.exact,
      strict = _ref.strict,
      location = _ref.location,
      activeClassName = _ref.activeClassName,
      className = _ref.className,
      activeStyle = _ref.activeStyle,
      style = _ref.style,
      getIsActive = _ref.isActive,
      ariaCurrent = _ref["aria-current"],
      rest = _objectWithoutProperties(_ref, ["to", "exact", "strict", "location", "activeClassName", "className", "activeStyle", "style", "isActive", "aria-current"]);

  var path = (typeof to === "undefined" ? "undefined" : _typeof(to)) === "object" ? to.pathname : to;

  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202
  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");

  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__Route__["a" /* default */], {
    path: escapedPath,
    exact: exact,
    strict: strict,
    location: location,
    children: function children(_ref2) {
      var location = _ref2.location,
          match = _ref2.match;

      var isActive = !!(getIsActive ? getIsActive(match, location) : match);

      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__Link__["a" /* default */], _extends({
        to: to,
        className: isActive ? [className, activeClassName].filter(function (i) {
          return i;
        }).join(" ") : className,
        style: isActive ? _extends({}, style, activeStyle) : style,
        "aria-current": isActive && ariaCurrent || null
      }, rest));
    }
  });
};

NavLink.propTypes = {
  to: __WEBPACK_IMPORTED_MODULE_3__Link__["a" /* default */].propTypes.to,
  exact: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  strict: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  activeClassName: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
  className: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
  activeStyle: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  style: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
  isActive: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
  "aria-current": __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOf(["page", "step", "location", "date", "time", "true"])
};

NavLink.defaultProps = {
  activeClassName: "active",
  "aria-current": "page"
};

/* harmony default export */ __webpack_exports__["a"] = (NavLink);

/***/ }),
/* 409 */
/***/ (function(module, exports) {

module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};


/***/ }),
/* 410 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Prompt__ = __webpack_require__(411);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Prompt__["a" /* default */]);

/***/ }),
/* 411 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_invariant__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





/**
 * The public API for prompting the user before navigating away
 * from a screen with a component.
 */

var Prompt = function (_React$Component) {
  _inherits(Prompt, _React$Component);

  function Prompt() {
    _classCallCheck(this, Prompt);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Prompt.prototype.enable = function enable(message) {
    if (this.unblock) this.unblock();

    this.unblock = this.context.router.history.block(message);
  };

  Prompt.prototype.disable = function disable() {
    if (this.unblock) {
      this.unblock();
      this.unblock = null;
    }
  };

  Prompt.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_2_invariant___default()(this.context.router, "You should not use <Prompt> outside a <Router>");

    if (this.props.when) this.enable(this.props.message);
  };

  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.when) {
      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
    } else {
      this.disable();
    }
  };

  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
    this.disable();
  };

  Prompt.prototype.render = function render() {
    return null;
  };

  return Prompt;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Prompt.propTypes = {
  when: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  message: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string]).isRequired
};
Prompt.defaultProps = {
  when: true
};
Prompt.contextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
    history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
      block: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired
    }).isRequired
  }).isRequired
};


/* harmony default export */ __webpack_exports__["a"] = (Prompt);

/***/ }),
/* 412 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Redirect__ = __webpack_require__(413);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Redirect__["a" /* default */]);

/***/ }),
/* 413 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_history__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__generatePath__ = __webpack_require__(221);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








/**
 * The public API for updating the location programmatically
 * with a component.
 */

var Redirect = function (_React$Component) {
  _inherits(Redirect, _React$Component);

  function Redirect() {
    _classCallCheck(this, Redirect);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Redirect.prototype.isStatic = function isStatic() {
    return this.context.router && this.context.router.staticContext;
  };

  Redirect.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_3_invariant___default()(this.context.router, "You should not use <Redirect> outside a <Router>");

    if (this.isStatic()) this.perform();
  };

  Redirect.prototype.componentDidMount = function componentDidMount() {
    if (!this.isStatic()) this.perform();
  };

  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var prevTo = Object(__WEBPACK_IMPORTED_MODULE_4_history__["c" /* createLocation */])(prevProps.to);
    var nextTo = Object(__WEBPACK_IMPORTED_MODULE_4_history__["c" /* createLocation */])(this.props.to);

    if (Object(__WEBPACK_IMPORTED_MODULE_4_history__["f" /* locationsAreEqual */])(prevTo, nextTo)) {
      __WEBPACK_IMPORTED_MODULE_2_warning___default()(false, "You tried to redirect to the same route you're currently on: " + ("\"" + nextTo.pathname + nextTo.search + "\""));
      return;
    }

    this.perform();
  };

  Redirect.prototype.computeTo = function computeTo(_ref) {
    var computedMatch = _ref.computedMatch,
        to = _ref.to;

    if (computedMatch) {
      if (typeof to === "string") {
        return Object(__WEBPACK_IMPORTED_MODULE_5__generatePath__["a" /* default */])(to, computedMatch.params);
      } else {
        return _extends({}, to, {
          pathname: Object(__WEBPACK_IMPORTED_MODULE_5__generatePath__["a" /* default */])(to.pathname, computedMatch.params)
        });
      }
    }

    return to;
  };

  Redirect.prototype.perform = function perform() {
    var history = this.context.router.history;
    var push = this.props.push;

    var to = this.computeTo(this.props);

    if (push) {
      history.push(to);
    } else {
      history.replace(to);
    }
  };

  Redirect.prototype.render = function render() {
    return null;
  };

  return Redirect;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Redirect.propTypes = {
  computedMatch: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object, // private, from <Switch>
  push: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
  from: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
  to: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object]).isRequired
};
Redirect.defaultProps = {
  push: false
};
Redirect.contextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
    history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
      push: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,
      replace: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired
    }).isRequired,
    staticContext: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
  }).isRequired
};


/* harmony default export */ __webpack_exports__["a"] = (Redirect);

/***/ }),
/* 414 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_StaticRouter__ = __webpack_require__(415);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_StaticRouter__["a" /* default */]);

/***/ }),
/* 415 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_history__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Router__ = __webpack_require__(147);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var addLeadingSlash = function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
};

var addBasename = function addBasename(basename, location) {
  if (!basename) return location;

  return _extends({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
};

var stripBasename = function stripBasename(basename, location) {
  if (!basename) return location;

  var base = addLeadingSlash(basename);

  if (location.pathname.indexOf(base) !== 0) return location;

  return _extends({}, location, {
    pathname: location.pathname.substr(base.length)
  });
};

var createURL = function createURL(location) {
  return typeof location === "string" ? location : Object(__WEBPACK_IMPORTED_MODULE_4_history__["e" /* createPath */])(location);
};

var staticHandler = function staticHandler(methodName) {
  return function () {
    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, "You cannot %s with <StaticRouter>", methodName);
  };
};

var noop = function noop() {};

/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

var StaticRouter = function (_React$Component) {
  _inherits(StaticRouter, _React$Component);

  function StaticRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, StaticRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
      return addLeadingSlash(_this.props.basename + createURL(path));
    }, _this.handlePush = function (location) {
      var _this$props = _this.props,
          basename = _this$props.basename,
          context = _this$props.context;

      context.action = "PUSH";
      context.location = addBasename(basename, Object(__WEBPACK_IMPORTED_MODULE_4_history__["c" /* createLocation */])(location));
      context.url = createURL(context.location);
    }, _this.handleReplace = function (location) {
      var _this$props2 = _this.props,
          basename = _this$props2.basename,
          context = _this$props2.context;

      context.action = "REPLACE";
      context.location = addBasename(basename, Object(__WEBPACK_IMPORTED_MODULE_4_history__["c" /* createLocation */])(location));
      context.url = createURL(context.location);
    }, _this.handleListen = function () {
      return noop;
    }, _this.handleBlock = function () {
      return noop;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  StaticRouter.prototype.getChildContext = function getChildContext() {
    return {
      router: {
        staticContext: this.props.context
      }
    };
  };

  StaticRouter.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.");
  };

  StaticRouter.prototype.render = function render() {
    var _props = this.props,
        basename = _props.basename,
        context = _props.context,
        location = _props.location,
        props = _objectWithoutProperties(_props, ["basename", "context", "location"]);

    var history = {
      createHref: this.createHref,
      action: "POP",
      location: stripBasename(basename, Object(__WEBPACK_IMPORTED_MODULE_4_history__["c" /* createLocation */])(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };

    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__Router__["a" /* default */], _extends({}, props, { history: history }));
  };

  return StaticRouter;
}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

StaticRouter.propTypes = {
  basename: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string,
  context: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,
  location: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object])
};
StaticRouter.defaultProps = {
  basename: "",
  location: "/"
};
StaticRouter.childContextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired
};


/* harmony default export */ __webpack_exports__["a"] = (StaticRouter);

/***/ }),
/* 416 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Switch__ = __webpack_require__(417);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Switch__["a" /* default */]);

/***/ }),
/* 417 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_warning__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__matchPath__ = __webpack_require__(148);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







/**
 * The public API for rendering the first <Route> that matches.
 */

var Switch = function (_React$Component) {
  _inherits(Switch, _React$Component);

  function Switch() {
    _classCallCheck(this, Switch);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Switch.prototype.componentWillMount = function componentWillMount() {
    __WEBPACK_IMPORTED_MODULE_3_invariant___default()(this.context.router, "You should not use <Switch> outside a <Router>");
  };

  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    __WEBPACK_IMPORTED_MODULE_2_warning___default()(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

    __WEBPACK_IMPORTED_MODULE_2_warning___default()(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
  };

  Switch.prototype.render = function render() {
    var route = this.context.router.route;
    var children = this.props.children;

    var location = this.props.location || route.location;

    var match = void 0,
        child = void 0;
    __WEBPACK_IMPORTED_MODULE_0_react___default.a.Children.forEach(children, function (element) {
      if (match == null && __WEBPACK_IMPORTED_MODULE_0_react___default.a.isValidElement(element)) {
        var _element$props = element.props,
            pathProp = _element$props.path,
            exact = _element$props.exact,
            strict = _element$props.strict,
            sensitive = _element$props.sensitive,
            from = _element$props.from;

        var path = pathProp || from;

        child = element;
        match = Object(__WEBPACK_IMPORTED_MODULE_4__matchPath__["a" /* default */])(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }, route.match);
      }
    });

    return match ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.cloneElement(child, { location: location, computedMatch: match }) : null;
  };

  return Switch;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Switch.contextTypes = {
  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
    route: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired
  }).isRequired
};
Switch.propTypes = {
  children: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.node,
  location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
};


/* harmony default export */ __webpack_exports__["a"] = (Switch);

/***/ }),
/* 418 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_generatePath__ = __webpack_require__(221);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_generatePath__["a" /* default */]);

/***/ }),
/* 419 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_matchPath__ = __webpack_require__(148);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_matchPath__["a" /* default */]);

/***/ }),
/* 420 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_withRouter__ = __webpack_require__(421);
// Written in this round about way for babel-transform-imports


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_withRouter__["a" /* default */]);

/***/ }),
/* 421 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__ = __webpack_require__(422);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Route__ = __webpack_require__(219);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }






/**
 * A public higher-order component to access the imperative API
 */
var withRouter = function withRouter(Component) {
  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = _objectWithoutProperties(props, ["wrappedComponentRef"]);

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__Route__["a" /* default */], {
      children: function children(routeComponentProps) {
        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component, _extends({}, remainingProps, routeComponentProps, {
          ref: wrappedComponentRef
        }));
      }
    });
  };

  C.displayName = "withRouter(" + (Component.displayName || Component.name) + ")";
  C.WrappedComponent = Component;
  C.propTypes = {
    wrappedComponentRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func
  };

  return __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default()(C, Component);
};

/* harmony default export */ __webpack_exports__["a"] = (withRouter);

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try { // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 423 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = createProvider;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_PropTypes__ = __webpack_require__(223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_warning__ = __webpack_require__(149);





var didWarnAboutReceivingStore = false;

function warnAboutReceivingStore() {
  if (didWarnAboutReceivingStore) {
    return;
  }

  didWarnAboutReceivingStore = true;
  Object(__WEBPACK_IMPORTED_MODULE_4__utils_warning__["a" /* default */])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reduxjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
}

function createProvider(storeKey) {
  var _Provider$childContex;

  if (storeKey === void 0) {
    storeKey = 'store';
  }

  var subscriptionKey = storeKey + "Subscription";

  var Provider =
  /*#__PURE__*/
  function (_Component) {
    Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Provider, _Component);

    var _proto = Provider.prototype;

    _proto.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
    };

    function Provider(props, context) {
      var _this;

      _this = _Component.call(this, props, context) || this;
      _this[storeKey] = props.store;
      return _this;
    }

    _proto.render = function render() {
      return __WEBPACK_IMPORTED_MODULE_1_react__["Children"].only(this.props.children);
    };

    return Provider;
  }(__WEBPACK_IMPORTED_MODULE_1_react__["Component"]);

  if (false) {
    Provider.prototype.componentWillReceiveProps = function (nextProps) {
      if (this[storeKey] !== nextProps.store) {
        warnAboutReceivingStore();
      }
    };
  }

  Provider.propTypes = {
    store: __WEBPACK_IMPORTED_MODULE_3__utils_PropTypes__["a" /* storeShape */].isRequired,
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.element.isRequired
  };
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = __WEBPACK_IMPORTED_MODULE_3__utils_PropTypes__["a" /* storeShape */].isRequired, _Provider$childContex[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_3__utils_PropTypes__["b" /* subscriptionShape */], _Provider$childContex);
  return Provider;
}
/* harmony default export */ __webpack_exports__["b"] = (createProvider());

/***/ }),
/* 424 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _assertThisInitialized;
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var ReactIs = __webpack_require__(128);
var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};

var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
};

var TYPE_STATICS = {};
TYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;

function getStatics(component) {
    if (ReactIs.isMemo(component)) {
        return MEMO_STATICS;
    }
    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
        // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 426 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscription; });
// encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants
var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  // the current/next pattern is copied from redux's createStore code.
  // TODO: refactor+expose that code to be reusable here?
  var current = [];
  var next = [];
  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;

      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }
    },
    get: function get() {
      return next;
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);
      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;
        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription =
/*#__PURE__*/
function () {
  function Subscription(store, parentSub, onStateChange) {
    this.store = store;
    this.parentSub = parentSub;
    this.onStateChange = onStateChange;
    this.unsubscribe = null;
    this.listeners = nullListeners;
  }

  var _proto = Subscription.prototype;

  _proto.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  _proto.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  _proto.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  _proto.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
      this.listeners = createListenerCollection();
    }
  };

  _proto.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();



/***/ }),
/* 427 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export createConnect */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_connectAdvanced__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_shallowEqual__ = __webpack_require__(428);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mapDispatchToProps__ = __webpack_require__(429);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mapStateToProps__ = __webpack_require__(445);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mergeProps__ = __webpack_require__(446);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__selectorFactory__ = __webpack_require__(447);








/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? __WEBPACK_IMPORTED_MODULE_2__components_connectAdvanced__["a" /* default */] : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? __WEBPACK_IMPORTED_MODULE_5__mapStateToProps__["a" /* default */] : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? __WEBPACK_IMPORTED_MODULE_4__mapDispatchToProps__["a" /* default */] : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? __WEBPACK_IMPORTED_MODULE_6__mergeProps__["a" /* default */] : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? __WEBPACK_IMPORTED_MODULE_7__selectorFactory__["a" /* default */] : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? __WEBPACK_IMPORTED_MODULE_3__utils_shallowEqual__["a" /* default */] : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? __WEBPACK_IMPORTED_MODULE_3__utils_shallowEqual__["a" /* default */] : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? __WEBPACK_IMPORTED_MODULE_3__utils_shallowEqual__["a" /* default */] : _ref3$areMergedPropsE,
        extraOptions = Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}
/* harmony default export */ __webpack_exports__["a"] = (createConnect());

/***/ }),
/* 428 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = shallowEqual;
var hasOwn = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 429 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export whenMapDispatchToPropsIsFunction */
/* unused harmony export whenMapDispatchToPropsIsMissing */
/* unused harmony export whenMapDispatchToPropsIsObject */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__ = __webpack_require__(230);


function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["b" /* wrapMapToPropsFunc */])(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["a" /* wrapMapToPropsConstant */])(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["a" /* wrapMapToPropsConstant */])(function (dispatch) {
    return Object(__WEBPACK_IMPORTED_MODULE_0_redux__["bindActionCreators"])(mapDispatchToProps, dispatch);
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["a"] = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);

/***/ }),
/* 430 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(227);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getRawTag_js__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objectToString_js__ = __webpack_require__(434);




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? Object(__WEBPACK_IMPORTED_MODULE_1__getRawTag_js__["a" /* default */])(value)
    : Object(__WEBPACK_IMPORTED_MODULE_2__objectToString_js__["a" /* default */])(value);
}

/* harmony default export */ __webpack_exports__["a"] = (baseGetTag);


/***/ }),
/* 431 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__ = __webpack_require__(432);


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__["a" /* default */] || freeSelf || Function('return this')();

/* harmony default export */ __webpack_exports__["a"] = (root);


/***/ }),
/* 432 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ __webpack_exports__["a"] = (freeGlobal);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(88)))

/***/ }),
/* 433 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(227);


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (getRawTag);


/***/ }),
/* 434 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/* harmony default export */ __webpack_exports__["a"] = (objectToString);


/***/ }),
/* 435 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__overArg_js__ = __webpack_require__(436);


/** Built-in value references. */
var getPrototype = Object(__WEBPACK_IMPORTED_MODULE_0__overArg_js__["a" /* default */])(Object.getPrototypeOf, Object);

/* harmony default export */ __webpack_exports__["a"] = (getPrototype);


/***/ }),
/* 436 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ __webpack_exports__["a"] = (overArg);


/***/ }),
/* 437 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ __webpack_exports__["a"] = (isObjectLike);


/***/ }),
/* 438 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ponyfill_js__ = __webpack_require__(440);
/* global window */


var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {
  root = Function('return this')();
}

var result = Object(__WEBPACK_IMPORTED_MODULE_0__ponyfill_js__["a" /* default */])(root);
/* harmony default export */ __webpack_exports__["a"] = (result);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(88), __webpack_require__(439)(module)))

/***/ }),
/* 439 */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if(!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true,
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 440 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};


/***/ }),
/* 441 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = combineReducers;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_warning__ = __webpack_require__(228);




function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === __WEBPACK_IMPORTED_MODULE_0__createStore__["a" /* ActionTypes */].INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!Object(__WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__["a" /* default */])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });

  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: __WEBPACK_IMPORTED_MODULE_0__createStore__["a" /* ActionTypes */].INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + __WEBPACK_IMPORTED_MODULE_0__createStore__["a" /* ActionTypes */].INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
    }
  });
}

/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */
function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (false) {
      if (typeof reducers[key] === 'undefined') {
        warning('No reducer provided for key "' + key + '"');
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  var unexpectedKeyCache = void 0;
  if (false) {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError = void 0;
  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (false) {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
      if (warningMessage) {
        warning(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }
      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}

/***/ }),
/* 442 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass a single function as the first argument,
 * and get a function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */
function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}

/***/ }),
/* 443 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = applyMiddleware;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(229);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */
function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, preloadedState, enhancer) {
      var store = createStore(reducer, preloadedState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = __WEBPACK_IMPORTED_MODULE_0__compose__["a" /* default */].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}

/***/ }),
/* 444 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isPlainObject;
/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
}

/***/ }),
/* 445 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export whenMapStateToPropsIsFunction */
/* unused harmony export whenMapStateToPropsIsMissing */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__ = __webpack_require__(230);

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? Object(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__["b" /* wrapMapToPropsFunc */])(mapStateToProps, 'mapStateToProps') : undefined;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? Object(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__["a" /* wrapMapToPropsConstant */])(function () {
    return {};
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["a"] = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);

/***/ }),
/* 446 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export defaultMergeProps */
/* unused harmony export wrapMergePropsFunc */
/* unused harmony export whenMergePropsIsFunction */
/* unused harmony export whenMergePropsIsOmitted */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_verifyPlainObject__ = __webpack_require__(231);


function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (false) verifyPlainObject(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}
/* harmony default export */ __webpack_exports__["a"] = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);

/***/ }),
/* 447 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export impureFinalPropsSelectorFactory */
/* unused harmony export pureFinalPropsSelectorFactory */
/* harmony export (immutable) */ __webpack_exports__["a"] = finalPropsSelectorFactory;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__verifySubselectors__ = __webpack_require__(448);


function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (false) {
    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

/***/ }),
/* 448 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export default */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_warning__ = __webpack_require__(149);


function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
      Object(__WEBPACK_IMPORTED_MODULE_0__utils_warning__["a" /* default */])("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

/***/ }),
/* 449 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

/* harmony default export */ __webpack_exports__["default"] = (thunk);

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {!function(e,t){ true?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){"use strict";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,"kind",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,"path",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,"E",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0}),Object.defineProperty(this,"rhs",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,"N",e),Object.defineProperty(this,"rhs",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,"D",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,"A",e),Object.defineProperty(this,"index",{value:t,enumerable:!0}),Object.defineProperty(this,"item",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t="undefined"==typeof e?"undefined":N(e);return"object"!==t?t:e===Math?"math":null===e?"null":Array.isArray(e)?"array":"[object Date]"===Object.prototype.toString.call(e)?"date":"function"==typeof e.toString&&/^\/.*\//.test(e.toString())?"regexp":"object"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if("undefined"!=typeof d){if(c){if("function"==typeof c&&c(g,d))return;if("object"===("undefined"==typeof c?"undefined":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}"regexp"===u(e)&&"regexp"===u(t)&&(e=e.toString(),t=t.toString());var y="undefined"==typeof e?"undefined":N(e),v="undefined"==typeof t?"undefined":N(t),b="undefined"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m="undefined"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if("date"===u(e)&&e-t!==0)r(new n(g,e,t));else if("object"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&("number"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":s(o[r.path[n]],r.index,r.item);break;case"D":delete o[r.path[n]];break;case"E":case"N":o[r.path[n]]=r.rhs}}else switch(r.kind){case"A":s(e[t],r.index,r.item);break;case"D":e=f(e,t);break;case"E":case"N":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)"undefined"==typeof n[r.path[o]]&&(n[r.path[o]]="number"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case"A":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case"D":delete n[r.path[o]];break;case"E":case"N":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":p(o[r.path[n]],r.index,r.item);break;case"D":o[r.path[n]]=r.lhs;break;case"E":o[r.path[n]]=r.lhs;break;case"N":delete o[r.path[n]]}}else switch(r.kind){case"A":p(e[t],r.index,r.item);break;case"D":e[t]=r.lhs;break;case"E":e[t]=r.lhs;break;case"N":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)"undefined"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case"A":p(i[r.path[n]],r.index,r.item);break;case"D":i[r.path[n]]=r.lhs;break;case"E":i[r.path[n]]=r.lhs;break;case"N":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return"color: "+F[e].color+"; font-weight: bold"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case"E":return[r.join("."),n,"→",o];case"N":return[r.join("."),o];case"D":return[r.join(".")];case"A":return[r.join(".")+"["+i+"]",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed("diff"):r.group("diff")}catch(e){r.log("diff")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,["%c "+F[t].text,y(t)].concat(P(n)))}):r.log("—— no diff ——");try{r.groupEnd()}catch(e){r.log("—— diff end —— ")}}function m(e,t,r,n){switch("undefined"==typeof e?"undefined":N(e)){case"object":return"function"==typeof e[n]?e[n].apply(e,P(r)):e[n];case"function":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=["action"];return i.push("%c"+String(e.type)),t&&i.push("%c@ "+n),r&&i.push("%c(in "+o.toFixed(2)+" ms)"),i.join(" ")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c="undefined"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k="function"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?"color: "+f.title(S)+";":"",A=["color: gray; font-weight: lighter;"];A.push(E),t.timestamp&&A.push("color: gray; font-weight: lighter;"),t.duration&&A.push("color: gray; font-weight: lighter;");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,["%c "+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,["%c "+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],"prevState"),P=m(u,S,[S],"action"),C=m(u,S,[y,h],"error"),F=m(u,S,[w],"nextState");if(N)if(f.prevState){var L="color: "+f.prevState(h)+"; font-weight: bold";r[N]("%c prev state",L,h)}else r[N]("prev state",h);if(P)if(f.action){var T="color: "+f.action(S)+"; font-weight: bold";r[P]("%c action    ",T,S)}else r[P]("action    ",S);if(y&&C)if(f.error){var M="color: "+f.error(y,h)+"; font-weight: bold;";r[C]("%c error     ",M,y)}else r[C]("error     ",y);if(F)if(f.nextState){var _="color: "+f.nextState(w)+"; font-weight: bold";r[F]("%c next state",_,w)}else r[F]("next state",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log("—— log end ——")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if("undefined"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error("[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\n// Logger with default options\nimport { logger } from 'redux-logger'\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\nimport createLogger from 'redux-logger'\nconst logger = createLogger({\n  // ...options\n});\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if("function"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&"function"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E("0",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+":"+A(e.getMinutes(),2)+":"+A(e.getSeconds(),2)+"."+A(e.getMilliseconds(),3)},O="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance:Date,N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k="object"===("undefined"==typeof global?"undefined":N(global))&&global?global:"undefined"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){"undefined"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return"undefined"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:"#2196F3",text:"CHANGED:"},N:{color:"#4CAF50",text:"ADDED:"},D:{color:"#F44336",text:"DELETED:"},A:{color:"#2196F3",text:"ARRAY:"}},L={level:"log",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return"inherit"},prevState:function(){return"#9E9E9E"},action:function(){return"#03A9F4"},nextState:function(){return"#4CAF50"},error:function(){return"#F20404"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return"function"==typeof t||"function"==typeof r?S()({dispatch:t,getState:r}):void console.error("\n[redux-logger v3] BREAKING CHANGE\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\n[redux-logger v3] Change\n[redux-logger v3] import createLogger from 'redux-logger'\n[redux-logger v3] to\n[redux-logger v3] import { createLogger } from 'redux-logger'\n")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,"__esModule",{value:!0})});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(88)))

/***/ }),
/* 451 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PENDING", function() { return PENDING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FULFILLED", function() { return FULFILLED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REJECTED", function() { return REJECTED; });
/* harmony export (immutable) */ __webpack_exports__["default"] = promiseMiddleware;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isPromise_js__ = __webpack_require__(452);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();



var PENDING = 'PENDING';
var FULFILLED = 'FULFILLED';
var REJECTED = 'REJECTED';

var defaultTypes = [PENDING, FULFILLED, REJECTED];

/**
 * @function promiseMiddleware
 * @description
 * @returns {function} thunk
 */
function promiseMiddleware() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypes;
  var promiseTypeSeparator = config.promiseTypeSeparator || '_';

  return function (ref) {
    var dispatch = ref.dispatch;


    return function (next) {
      return function (action) {
        if (action.payload) {
          if (!Object(__WEBPACK_IMPORTED_MODULE_0__isPromise_js__["a" /* default */])(action.payload) && !Object(__WEBPACK_IMPORTED_MODULE_0__isPromise_js__["a" /* default */])(action.payload.promise)) {
            return next(action);
          }
        } else {
          return next(action);
        }

        // Deconstruct the properties of the original action object to constants
        var type = action.type,
            payload = action.payload,
            meta = action.meta;

        // Assign values for promise type suffixes

        var _promiseTypeSuffixes = _slicedToArray(promiseTypeSuffixes, 3),
            _PENDING = _promiseTypeSuffixes[0],
            _FULFILLED = _promiseTypeSuffixes[1],
            _REJECTED = _promiseTypeSuffixes[2];

        /**
         * @function getAction
         * @description Utility function for creating a rejected or fulfilled
         * flux standard action object.
         * @param {boolean} Is the action rejected?
         * @returns {object} action
         */


        var getAction = function getAction(newPayload, isRejected) {
          return _extends({
            type: [type, isRejected ? _REJECTED : _FULFILLED].join(promiseTypeSeparator)
          }, newPayload === null || typeof newPayload === 'undefined' ? {} : {
            payload: newPayload
          }, meta !== undefined ? { meta: meta } : {}, isRejected ? {
            error: true
          } : {});
        };

        /**
         * Assign values for promise and data variables. In the case the payload
         * is an object with a `promise` and `data` property, the values of those
         * properties will be used. In the case the payload is a promise, the
         * value of the payload will be used and data will be null.
         */
        var promise = void 0;
        var data = void 0;

        if (!Object(__WEBPACK_IMPORTED_MODULE_0__isPromise_js__["a" /* default */])(action.payload) && _typeof(action.payload) === 'object') {
          promise = payload.promise;
          data = payload.data;
        } else {
          promise = payload;
          data = undefined;
        }

        /**
         * First, dispatch the pending action. This flux standard action object
         * describes the pending state of a promise and will include any data
         * (for optimistic updates) and/or meta from the original action.
         */
        next(_extends({
          type: [type, _PENDING].join(promiseTypeSeparator)
        }, data !== undefined ? { payload: data } : {}, meta !== undefined ? { meta: meta } : {}));

        /*
         * @function handleReject
         * @description Dispatch the rejected action and return
         * an error object. The error object is the original error
         * that was thrown. The user of the library is responsible for
         * best practices in ensure that they are throwing an Error object.
         * @params reason The reason the promise was rejected
         * @returns {object}
         */
        var handleReject = function handleReject(reason) {
          var rejectedAction = getAction(reason, true);
          dispatch(rejectedAction);

          throw reason;
        };

        /*
         * @function handleFulfill
         * @description Dispatch the fulfilled action and
         * return the success object. The success object should
         * contain the value and the dispatched action.
         * @param value The value the promise was resloved with
         * @returns {object}
         */
        var handleFulfill = function handleFulfill() {
          var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          var resolvedAction = getAction(value, false);
          dispatch(resolvedAction);

          return { value: value, action: resolvedAction };
        };

        /**
         * Second, dispatch a rejected or fulfilled action. This flux standard
         * action object will describe the resolved state of the promise. In
         * the case of a rejected promise, it will include an `error` property.
         *
         * In order to allow proper chaining of actions using `then`, a new
         * promise is constructed and returned. This promise will resolve
         * with two properties: (1) the value (if fulfilled) or reason
         * (if rejected) and (2) the flux standard action.
         *
         * Rejected object:
         * {
         *   reason: ...
         *   action: {
         *     error: true,
         *     type: 'ACTION_REJECTED',
         *     payload: ...
         *   }
         * }
         *
         * Fulfilled object:
         * {
         *   value: ...
         *   action: {
         *     type: 'ACTION_FULFILLED',
         *     payload: ...
         *   }
         * }
         */
        return promise.then(handleFulfill, handleReject);
      };
    };
  };
}

/***/ }),
/* 452 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isPromise;
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function isPromise(value) {
  if (value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
    return value && typeof value.then === 'function';
  }

  return false;
}

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = userReducer;

var _helper = __webpack_require__(106);

var _userActions = __webpack_require__(51);

var userAction = _interopRequireWildcard(_userActions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var userReducerInitState = {
    online_users: {},
    online_companies: {}
};

function userReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userReducerInitState;
    var action = arguments[1];

    switch (action.type) {
        case userAction.SET_ONLINE_USERS:
            {
                return (0, _helper.getNewState)(state, {
                    online_users: action.payload
                });
            }
        case userAction.SET_ONLINE_COMPANIES:
            {
                return (0, _helper.getNewState)(state, {
                    online_companies: action.payload
                });
            }
    }

    return state;
};

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var url = __webpack_require__(455);
var parser = __webpack_require__(151);
var Manager = __webpack_require__(235);
var debug = __webpack_require__(107)('socket.io-client');

/**
 * Module exports.
 */

module.exports = exports = lookup;

/**
 * Managers cache.
 */

var cache = exports.managers = {};

/**
 * Looks up an existing `Manager` for multiplexing.
 * If the user summons:
 *
 *   `io('http://localhost/a');`
 *   `io('http://localhost/b');`
 *
 * We reuse the existing instance based on same scheme/port/host,
 * and we initialize sockets for each namespace.
 *
 * @api public
 */

function lookup (uri, opts) {
  if (typeof uri === 'object') {
    opts = uri;
    uri = undefined;
  }

  opts = opts || {};

  var parsed = url(uri);
  var source = parsed.source;
  var id = parsed.id;
  var path = parsed.path;
  var sameNamespace = cache[id] && path in cache[id].nsps;
  var newConnection = opts.forceNew || opts['force new connection'] ||
                      false === opts.multiplex || sameNamespace;

  var io;

  if (newConnection) {
    debug('ignoring socket cache for %s', source);
    io = Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug('new io instance for %s', source);
      cache[id] = Manager(source, opts);
    }
    io = cache[id];
  }
  if (parsed.query && !opts.query) {
    opts.query = parsed.query;
  }
  return io.socket(parsed.path, opts);
}

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = parser.protocol;

/**
 * `connect`.
 *
 * @param {String} uri
 * @api public
 */

exports.connect = lookup;

/**
 * Expose constructors for standalone build.
 *
 * @api public
 */

exports.Manager = __webpack_require__(235);
exports.Socket = __webpack_require__(241);


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var parseuri = __webpack_require__(232);
var debug = __webpack_require__(107)('socket.io-client:url');

/**
 * Module exports.
 */

module.exports = url;

/**
 * URL parser.
 *
 * @param {String} url
 * @param {Object} An object meant to mimic window.location.
 *                 Defaults to window.location.
 * @api public
 */

function url (uri, loc) {
  var obj = uri;

  // default to window.location
  loc = loc || (typeof location !== 'undefined' && location);
  if (null == uri) uri = loc.protocol + '//' + loc.host;

  // relative path support
  if ('string' === typeof uri) {
    if ('/' === uri.charAt(0)) {
      if ('/' === uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }

    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug('protocol-less url %s', uri);
      if ('undefined' !== typeof loc) {
        uri = loc.protocol + '//' + uri;
      } else {
        uri = 'https://' + uri;
      }
    }

    // parse
    debug('parse %s', uri);
    obj = parseuri(uri);
  }

  // make sure we treat `localhost:80` and `localhost` equally
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = '80';
    } else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = '443';
    }
  }

  obj.path = obj.path || '/';

  var ipv6 = obj.host.indexOf(':') !== -1;
  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

  // define unique id
  obj.id = obj.protocol + '://' + host + ':' + obj.port;
  // define href
  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));

  return obj;
}


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(457);

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 457 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(459);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = Object({"NODE_ENV":"production"}).DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(460);

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 460 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Expose `Emitter`.
 */

if (true) {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

/*global Blob,File*/

/**
 * Module requirements
 */

var isArray = __webpack_require__(233);
var isBuf = __webpack_require__(234);
var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');
var withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');

/**
 * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
 * Anything with blobs or files should be fed through removeBlobs before coming
 * here.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @api public
 */

exports.deconstructPacket = function(packet) {
  var buffers = [];
  var packetData = packet.data;
  var pack = packet;
  pack.data = _deconstructPacket(packetData, buffers);
  pack.attachments = buffers.length; // number of binary 'attachments'
  return {packet: pack, buffers: buffers};
};

function _deconstructPacket(data, buffers) {
  if (!data) return data;

  if (isBuf(data)) {
    var placeholder = { _placeholder: true, num: buffers.length };
    buffers.push(data);
    return placeholder;
  } else if (isArray(data)) {
    var newData = new Array(data.length);
    for (var i = 0; i < data.length; i++) {
      newData[i] = _deconstructPacket(data[i], buffers);
    }
    return newData;
  } else if (typeof data === 'object' && !(data instanceof Date)) {
    var newData = {};
    for (var key in data) {
      newData[key] = _deconstructPacket(data[key], buffers);
    }
    return newData;
  }
  return data;
}

/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @api public
 */

exports.reconstructPacket = function(packet, buffers) {
  packet.data = _reconstructPacket(packet.data, buffers);
  packet.attachments = undefined; // no longer useful
  return packet;
};

function _reconstructPacket(data, buffers) {
  if (!data) return data;

  if (data && data._placeholder) {
    return buffers[data.num]; // appropriate buffer (should be natural order anyway)
  } else if (isArray(data)) {
    for (var i = 0; i < data.length; i++) {
      data[i] = _reconstructPacket(data[i], buffers);
    }
  } else if (typeof data === 'object') {
    for (var key in data) {
      data[key] = _reconstructPacket(data[key], buffers);
    }
  }

  return data;
}

/**
 * Asynchronously removes Blobs or Files from data via
 * FileReader's readAsArrayBuffer method. Used before encoding
 * data as msgpack. Calls callback with the blobless data.
 *
 * @param {Object} data
 * @param {Function} callback
 * @api private
 */

exports.removeBlobs = function(data, callback) {
  function _removeBlobs(obj, curKey, containingObject) {
    if (!obj) return obj;

    // convert any blob
    if ((withNativeBlob && obj instanceof Blob) ||
        (withNativeFile && obj instanceof File)) {
      pendingBlobs++;

      // async filereader
      var fileReader = new FileReader();
      fileReader.onload = function() { // this.result == arraybuffer
        if (containingObject) {
          containingObject[curKey] = this.result;
        }
        else {
          bloblessData = this.result;
        }

        // if nothing pending its callback time
        if(! --pendingBlobs) {
          callback(bloblessData);
        }
      };

      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
    } else if (isArray(obj)) { // handle array
      for (var i = 0; i < obj.length; i++) {
        _removeBlobs(obj[i], i, obj);
      }
    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object
      for (var key in obj) {
        _removeBlobs(obj[key], key, obj);
      }
    }
  }

  var pendingBlobs = 0;
  var bloblessData = data;
  _removeBlobs(bloblessData);
  if (!pendingBlobs) {
    callback(bloblessData);
  }
};


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 464 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 465 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {


module.exports = __webpack_require__(467);

/**
 * Exports parser
 *
 * @api public
 *
 */
module.exports.parser = __webpack_require__(74);


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var transports = __webpack_require__(236);
var Emitter = __webpack_require__(155);
var debug = __webpack_require__(110)('engine.io-client:socket');
var index = __webpack_require__(240);
var parser = __webpack_require__(74);
var parseuri = __webpack_require__(232);
var parseqs = __webpack_require__(108);

/**
 * Module exports.
 */

module.exports = Socket;

/**
 * Socket constructor.
 *
 * @param {String|Object} uri or options
 * @param {Object} options
 * @api public
 */

function Socket (uri, opts) {
  if (!(this instanceof Socket)) return new Socket(uri, opts);

  opts = opts || {};

  if (uri && 'object' === typeof uri) {
    opts = uri;
    uri = null;
  }

  if (uri) {
    uri = parseuri(uri);
    opts.hostname = uri.host;
    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
    opts.port = uri.port;
    if (uri.query) opts.query = uri.query;
  } else if (opts.host) {
    opts.hostname = parseuri(opts.host).host;
  }

  this.secure = null != opts.secure ? opts.secure
    : (typeof location !== 'undefined' && 'https:' === location.protocol);

  if (opts.hostname && !opts.port) {
    // if no port is specified manually, use the protocol default
    opts.port = this.secure ? '443' : '80';
  }

  this.agent = opts.agent || false;
  this.hostname = opts.hostname ||
    (typeof location !== 'undefined' ? location.hostname : 'localhost');
  this.port = opts.port || (typeof location !== 'undefined' && location.port
      ? location.port
      : (this.secure ? 443 : 80));
  this.query = opts.query || {};
  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
  this.upgrade = false !== opts.upgrade;
  this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
  this.forceJSONP = !!opts.forceJSONP;
  this.jsonp = false !== opts.jsonp;
  this.forceBase64 = !!opts.forceBase64;
  this.enablesXDR = !!opts.enablesXDR;
  this.timestampParam = opts.timestampParam || 't';
  this.timestampRequests = opts.timestampRequests;
  this.transports = opts.transports || ['polling', 'websocket'];
  this.transportOptions = opts.transportOptions || {};
  this.readyState = '';
  this.writeBuffer = [];
  this.prevBufferLen = 0;
  this.policyPort = opts.policyPort || 843;
  this.rememberUpgrade = opts.rememberUpgrade || false;
  this.binaryType = null;
  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;

  if (true === this.perMessageDeflate) this.perMessageDeflate = {};
  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
    this.perMessageDeflate.threshold = 1024;
  }

  // SSL options for Node.js client
  this.pfx = opts.pfx || null;
  this.key = opts.key || null;
  this.passphrase = opts.passphrase || null;
  this.cert = opts.cert || null;
  this.ca = opts.ca || null;
  this.ciphers = opts.ciphers || null;
  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
  this.forceNode = !!opts.forceNode;

  // detect ReactNative environment
  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');

  // other options for Node.js or ReactNative client
  if (typeof self === 'undefined' || this.isReactNative) {
    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
      this.extraHeaders = opts.extraHeaders;
    }

    if (opts.localAddress) {
      this.localAddress = opts.localAddress;
    }
  }

  // set on handshake
  this.id = null;
  this.upgrades = null;
  this.pingInterval = null;
  this.pingTimeout = null;

  // set on heartbeat
  this.pingIntervalTimer = null;
  this.pingTimeoutTimer = null;

  this.open();
}

Socket.priorWebsocketSuccess = false;

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Protocol version.
 *
 * @api public
 */

Socket.protocol = parser.protocol; // this is an int

/**
 * Expose deps for legacy compatibility
 * and standalone browser access.
 */

Socket.Socket = Socket;
Socket.Transport = __webpack_require__(154);
Socket.transports = __webpack_require__(236);
Socket.parser = __webpack_require__(74);

/**
 * Creates transport of the given type.
 *
 * @param {String} transport name
 * @return {Transport}
 * @api private
 */

Socket.prototype.createTransport = function (name) {
  debug('creating transport "%s"', name);
  var query = clone(this.query);

  // append engine.io protocol identifier
  query.EIO = parser.protocol;

  // transport name
  query.transport = name;

  // per-transport options
  var options = this.transportOptions[name] || {};

  // session id if we already have one
  if (this.id) query.sid = this.id;

  var transport = new transports[name]({
    query: query,
    socket: this,
    agent: options.agent || this.agent,
    hostname: options.hostname || this.hostname,
    port: options.port || this.port,
    secure: options.secure || this.secure,
    path: options.path || this.path,
    forceJSONP: options.forceJSONP || this.forceJSONP,
    jsonp: options.jsonp || this.jsonp,
    forceBase64: options.forceBase64 || this.forceBase64,
    enablesXDR: options.enablesXDR || this.enablesXDR,
    timestampRequests: options.timestampRequests || this.timestampRequests,
    timestampParam: options.timestampParam || this.timestampParam,
    policyPort: options.policyPort || this.policyPort,
    pfx: options.pfx || this.pfx,
    key: options.key || this.key,
    passphrase: options.passphrase || this.passphrase,
    cert: options.cert || this.cert,
    ca: options.ca || this.ca,
    ciphers: options.ciphers || this.ciphers,
    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
    extraHeaders: options.extraHeaders || this.extraHeaders,
    forceNode: options.forceNode || this.forceNode,
    localAddress: options.localAddress || this.localAddress,
    requestTimeout: options.requestTimeout || this.requestTimeout,
    protocols: options.protocols || void (0),
    isReactNative: this.isReactNative
  });

  return transport;
};

function clone (obj) {
  var o = {};
  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = obj[i];
    }
  }
  return o;
}

/**
 * Initializes transport to use and starts probe.
 *
 * @api private
 */
Socket.prototype.open = function () {
  var transport;
  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
    transport = 'websocket';
  } else if (0 === this.transports.length) {
    // Emit error on next tick so it can be listened to
    var self = this;
    setTimeout(function () {
      self.emit('error', 'No transports available');
    }, 0);
    return;
  } else {
    transport = this.transports[0];
  }
  this.readyState = 'opening';

  // Retry with the next transport if the transport is disabled (jsonp: false)
  try {
    transport = this.createTransport(transport);
  } catch (e) {
    this.transports.shift();
    this.open();
    return;
  }

  transport.open();
  this.setTransport(transport);
};

/**
 * Sets the current transport. Disables the existing one (if any).
 *
 * @api private
 */

Socket.prototype.setTransport = function (transport) {
  debug('setting transport %s', transport.name);
  var self = this;

  if (this.transport) {
    debug('clearing existing transport %s', this.transport.name);
    this.transport.removeAllListeners();
  }

  // set up transport
  this.transport = transport;

  // set up transport listeners
  transport
  .on('drain', function () {
    self.onDrain();
  })
  .on('packet', function (packet) {
    self.onPacket(packet);
  })
  .on('error', function (e) {
    self.onError(e);
  })
  .on('close', function () {
    self.onClose('transport close');
  });
};

/**
 * Probes a transport.
 *
 * @param {String} transport name
 * @api private
 */

Socket.prototype.probe = function (name) {
  debug('probing transport "%s"', name);
  var transport = this.createTransport(name, { probe: 1 });
  var failed = false;
  var self = this;

  Socket.priorWebsocketSuccess = false;

  function onTransportOpen () {
    if (self.onlyBinaryUpgrades) {
      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
      failed = failed || upgradeLosesBinary;
    }
    if (failed) return;

    debug('probe transport "%s" opened', name);
    transport.send([{ type: 'ping', data: 'probe' }]);
    transport.once('packet', function (msg) {
      if (failed) return;
      if ('pong' === msg.type && 'probe' === msg.data) {
        debug('probe transport "%s" pong', name);
        self.upgrading = true;
        self.emit('upgrading', transport);
        if (!transport) return;
        Socket.priorWebsocketSuccess = 'websocket' === transport.name;

        debug('pausing current transport "%s"', self.transport.name);
        self.transport.pause(function () {
          if (failed) return;
          if ('closed' === self.readyState) return;
          debug('changing transport and sending upgrade packet');

          cleanup();

          self.setTransport(transport);
          transport.send([{ type: 'upgrade' }]);
          self.emit('upgrade', transport);
          transport = null;
          self.upgrading = false;
          self.flush();
        });
      } else {
        debug('probe transport "%s" failed', name);
        var err = new Error('probe error');
        err.transport = transport.name;
        self.emit('upgradeError', err);
      }
    });
  }

  function freezeTransport () {
    if (failed) return;

    // Any callback called by transport should be ignored since now
    failed = true;

    cleanup();

    transport.close();
    transport = null;
  }

  // Handle any error that happens while probing
  function onerror (err) {
    var error = new Error('probe error: ' + err);
    error.transport = transport.name;

    freezeTransport();

    debug('probe transport "%s" failed because of error: %s', name, err);

    self.emit('upgradeError', error);
  }

  function onTransportClose () {
    onerror('transport closed');
  }

  // When the socket is closed while we're probing
  function onclose () {
    onerror('socket closed');
  }

  // When the socket is upgraded while we're probing
  function onupgrade (to) {
    if (transport && to.name !== transport.name) {
      debug('"%s" works - aborting "%s"', to.name, transport.name);
      freezeTransport();
    }
  }

  // Remove all listeners on the transport and on self
  function cleanup () {
    transport.removeListener('open', onTransportOpen);
    transport.removeListener('error', onerror);
    transport.removeListener('close', onTransportClose);
    self.removeListener('close', onclose);
    self.removeListener('upgrading', onupgrade);
  }

  transport.once('open', onTransportOpen);
  transport.once('error', onerror);
  transport.once('close', onTransportClose);

  this.once('close', onclose);
  this.once('upgrading', onupgrade);

  transport.open();
};

/**
 * Called when connection is deemed open.
 *
 * @api public
 */

Socket.prototype.onOpen = function () {
  debug('socket open');
  this.readyState = 'open';
  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
  this.emit('open');
  this.flush();

  // we check for `readyState` in case an `open`
  // listener already closed the socket
  if ('open' === this.readyState && this.upgrade && this.transport.pause) {
    debug('starting upgrade probes');
    for (var i = 0, l = this.upgrades.length; i < l; i++) {
      this.probe(this.upgrades[i]);
    }
  }
};

/**
 * Handles a packet.
 *
 * @api private
 */

Socket.prototype.onPacket = function (packet) {
  if ('opening' === this.readyState || 'open' === this.readyState ||
      'closing' === this.readyState) {
    debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

    this.emit('packet', packet);

    // Socket is live - any packet counts
    this.emit('heartbeat');

    switch (packet.type) {
      case 'open':
        this.onHandshake(JSON.parse(packet.data));
        break;

      case 'pong':
        this.setPing();
        this.emit('pong');
        break;

      case 'error':
        var err = new Error('server error');
        err.code = packet.data;
        this.onError(err);
        break;

      case 'message':
        this.emit('data', packet.data);
        this.emit('message', packet.data);
        break;
    }
  } else {
    debug('packet received with socket readyState "%s"', this.readyState);
  }
};

/**
 * Called upon handshake completion.
 *
 * @param {Object} handshake obj
 * @api private
 */

Socket.prototype.onHandshake = function (data) {
  this.emit('handshake', data);
  this.id = data.sid;
  this.transport.query.sid = data.sid;
  this.upgrades = this.filterUpgrades(data.upgrades);
  this.pingInterval = data.pingInterval;
  this.pingTimeout = data.pingTimeout;
  this.onOpen();
  // In case open handler closes socket
  if ('closed' === this.readyState) return;
  this.setPing();

  // Prolong liveness of socket on heartbeat
  this.removeListener('heartbeat', this.onHeartbeat);
  this.on('heartbeat', this.onHeartbeat);
};

/**
 * Resets ping timeout.
 *
 * @api private
 */

Socket.prototype.onHeartbeat = function (timeout) {
  clearTimeout(this.pingTimeoutTimer);
  var self = this;
  self.pingTimeoutTimer = setTimeout(function () {
    if ('closed' === self.readyState) return;
    self.onClose('ping timeout');
  }, timeout || (self.pingInterval + self.pingTimeout));
};

/**
 * Pings server every `this.pingInterval` and expects response
 * within `this.pingTimeout` or closes connection.
 *
 * @api private
 */

Socket.prototype.setPing = function () {
  var self = this;
  clearTimeout(self.pingIntervalTimer);
  self.pingIntervalTimer = setTimeout(function () {
    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
    self.ping();
    self.onHeartbeat(self.pingTimeout);
  }, self.pingInterval);
};

/**
* Sends a ping packet.
*
* @api private
*/

Socket.prototype.ping = function () {
  var self = this;
  this.sendPacket('ping', function () {
    self.emit('ping');
  });
};

/**
 * Called on `drain` event
 *
 * @api private
 */

Socket.prototype.onDrain = function () {
  this.writeBuffer.splice(0, this.prevBufferLen);

  // setting prevBufferLen = 0 is very important
  // for example, when upgrading, upgrade packet is sent over,
  // and a nonzero prevBufferLen could cause problems on `drain`
  this.prevBufferLen = 0;

  if (0 === this.writeBuffer.length) {
    this.emit('drain');
  } else {
    this.flush();
  }
};

/**
 * Flush write buffers.
 *
 * @api private
 */

Socket.prototype.flush = function () {
  if ('closed' !== this.readyState && this.transport.writable &&
    !this.upgrading && this.writeBuffer.length) {
    debug('flushing %d packets in socket', this.writeBuffer.length);
    this.transport.send(this.writeBuffer);
    // keep track of current length of writeBuffer
    // splice writeBuffer and callbackBuffer on `drain`
    this.prevBufferLen = this.writeBuffer.length;
    this.emit('flush');
  }
};

/**
 * Sends a message.
 *
 * @param {String} message.
 * @param {Function} callback function.
 * @param {Object} options.
 * @return {Socket} for chaining.
 * @api public
 */

Socket.prototype.write =
Socket.prototype.send = function (msg, options, fn) {
  this.sendPacket('message', msg, options, fn);
  return this;
};

/**
 * Sends a packet.
 *
 * @param {String} packet type.
 * @param {String} data.
 * @param {Object} options.
 * @param {Function} callback function.
 * @api private
 */

Socket.prototype.sendPacket = function (type, data, options, fn) {
  if ('function' === typeof data) {
    fn = data;
    data = undefined;
  }

  if ('function' === typeof options) {
    fn = options;
    options = null;
  }

  if ('closing' === this.readyState || 'closed' === this.readyState) {
    return;
  }

  options = options || {};
  options.compress = false !== options.compress;

  var packet = {
    type: type,
    data: data,
    options: options
  };
  this.emit('packetCreate', packet);
  this.writeBuffer.push(packet);
  if (fn) this.once('flush', fn);
  this.flush();
};

/**
 * Closes the connection.
 *
 * @api private
 */

Socket.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.readyState = 'closing';

    var self = this;

    if (this.writeBuffer.length) {
      this.once('drain', function () {
        if (this.upgrading) {
          waitForUpgrade();
        } else {
          close();
        }
      });
    } else if (this.upgrading) {
      waitForUpgrade();
    } else {
      close();
    }
  }

  function close () {
    self.onClose('forced close');
    debug('socket closing - telling transport to close');
    self.transport.close();
  }

  function cleanupAndClose () {
    self.removeListener('upgrade', cleanupAndClose);
    self.removeListener('upgradeError', cleanupAndClose);
    close();
  }

  function waitForUpgrade () {
    // wait for upgrade to finish since we can't send packets while pausing a transport
    self.once('upgrade', cleanupAndClose);
    self.once('upgradeError', cleanupAndClose);
  }

  return this;
};

/**
 * Called upon transport error
 *
 * @api private
 */

Socket.prototype.onError = function (err) {
  debug('socket error %j', err);
  Socket.priorWebsocketSuccess = false;
  this.emit('error', err);
  this.onClose('transport error', err);
};

/**
 * Called upon transport close.
 *
 * @api private
 */

Socket.prototype.onClose = function (reason, desc) {
  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
    debug('socket close with reason: "%s"', reason);
    var self = this;

    // clear timers
    clearTimeout(this.pingIntervalTimer);
    clearTimeout(this.pingTimeoutTimer);

    // stop event from firing again for transport
    this.transport.removeAllListeners('close');

    // ensure transport won't stay open
    this.transport.close();

    // ignore further transport communication
    this.transport.removeAllListeners();

    // set ready state
    this.readyState = 'closed';

    // clear session id
    this.id = null;

    // emit close event
    this.emit('close', reason, desc);

    // clean buffers after, so users can still
    // grab the buffers on `close` event
    self.writeBuffer = [];
    self.prevBufferLen = 0;
  }
};

/**
 * Filters upgrades, returning only those matching client transports.
 *
 * @param {Array} server upgrades
 * @api private
 *
 */

Socket.prototype.filterUpgrades = function (upgrades) {
  var filteredUpgrades = [];
  for (var i = 0, j = upgrades.length; i < j; i++) {
    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
  }
  return filteredUpgrades;
};


/***/ }),
/* 468 */
/***/ (function(module, exports) {


/**
 * Module exports.
 *
 * Logic borrowed from Modernizr:
 *
 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
 */

try {
  module.exports = typeof XMLHttpRequest !== 'undefined' &&
    'withCredentials' in new XMLHttpRequest();
} catch (err) {
  // if XMLHttp support is disabled in IE then it will throw
  // when trying to create
  module.exports = false;
}


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

/* global attachEvent */

/**
 * Module requirements.
 */

var XMLHttpRequest = __webpack_require__(153);
var Polling = __webpack_require__(237);
var Emitter = __webpack_require__(155);
var inherit = __webpack_require__(109);
var debug = __webpack_require__(110)('engine.io-client:polling-xhr');

/**
 * Module exports.
 */

module.exports = XHR;
module.exports.Request = Request;

/**
 * Empty function
 */

function empty () {}

/**
 * XHR Polling constructor.
 *
 * @param {Object} opts
 * @api public
 */

function XHR (opts) {
  Polling.call(this, opts);
  this.requestTimeout = opts.requestTimeout;
  this.extraHeaders = opts.extraHeaders;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||
      port !== opts.port;
    this.xs = opts.secure !== isSSL;
  }
}

/**
 * Inherits from Polling.
 */

inherit(XHR, Polling);

/**
 * XHR supports binary
 */

XHR.prototype.supportsBinary = true;

/**
 * Creates a request.
 *
 * @param {String} method
 * @api private
 */

XHR.prototype.request = function (opts) {
  opts = opts || {};
  opts.uri = this.uri();
  opts.xd = this.xd;
  opts.xs = this.xs;
  opts.agent = this.agent || false;
  opts.supportsBinary = this.supportsBinary;
  opts.enablesXDR = this.enablesXDR;

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  opts.requestTimeout = this.requestTimeout;

  // other options for Node.js client
  opts.extraHeaders = this.extraHeaders;

  return new Request(opts);
};

/**
 * Sends data.
 *
 * @param {String} data to send.
 * @param {Function} called upon flush.
 * @api private
 */

XHR.prototype.doWrite = function (data, fn) {
  var isBinary = typeof data !== 'string' && data !== undefined;
  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
  var self = this;
  req.on('success', fn);
  req.on('error', function (err) {
    self.onError('xhr post error', err);
  });
  this.sendXhr = req;
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

XHR.prototype.doPoll = function () {
  debug('xhr poll');
  var req = this.request();
  var self = this;
  req.on('data', function (data) {
    self.onData(data);
  });
  req.on('error', function (err) {
    self.onError('xhr poll error', err);
  });
  this.pollXhr = req;
};

/**
 * Request constructor
 *
 * @param {Object} options
 * @api public
 */

function Request (opts) {
  this.method = opts.method || 'GET';
  this.uri = opts.uri;
  this.xd = !!opts.xd;
  this.xs = !!opts.xs;
  this.async = false !== opts.async;
  this.data = undefined !== opts.data ? opts.data : null;
  this.agent = opts.agent;
  this.isBinary = opts.isBinary;
  this.supportsBinary = opts.supportsBinary;
  this.enablesXDR = opts.enablesXDR;
  this.requestTimeout = opts.requestTimeout;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;

  this.create();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Creates the XHR object and sends the request.
 *
 * @api private
 */

Request.prototype.create = function () {
  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;

  var xhr = this.xhr = new XMLHttpRequest(opts);
  var self = this;

  try {
    debug('xhr open %s: %s', this.method, this.uri);
    xhr.open(this.method, this.uri, this.async);
    try {
      if (this.extraHeaders) {
        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
        for (var i in this.extraHeaders) {
          if (this.extraHeaders.hasOwnProperty(i)) {
            xhr.setRequestHeader(i, this.extraHeaders[i]);
          }
        }
      }
    } catch (e) {}

    if ('POST' === this.method) {
      try {
        if (this.isBinary) {
          xhr.setRequestHeader('Content-type', 'application/octet-stream');
        } else {
          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
        }
      } catch (e) {}
    }

    try {
      xhr.setRequestHeader('Accept', '*/*');
    } catch (e) {}

    // ie6 check
    if ('withCredentials' in xhr) {
      xhr.withCredentials = true;
    }

    if (this.requestTimeout) {
      xhr.timeout = this.requestTimeout;
    }

    if (this.hasXDR()) {
      xhr.onload = function () {
        self.onLoad();
      };
      xhr.onerror = function () {
        self.onError(xhr.responseText);
      };
    } else {
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 2) {
          try {
            var contentType = xhr.getResponseHeader('Content-Type');
            if (self.supportsBinary && contentType === 'application/octet-stream') {
              xhr.responseType = 'arraybuffer';
            }
          } catch (e) {}
        }
        if (4 !== xhr.readyState) return;
        if (200 === xhr.status || 1223 === xhr.status) {
          self.onLoad();
        } else {
          // make sure the `error` event handler that's user-set
          // does not throw in the same tick and gets caught here
          setTimeout(function () {
            self.onError(xhr.status);
          }, 0);
        }
      };
    }

    debug('xhr data %s', this.data);
    xhr.send(this.data);
  } catch (e) {
    // Need to defer since .create() is called directly fhrom the constructor
    // and thus the 'error' event can only be only bound *after* this exception
    // occurs.  Therefore, also, we cannot throw here at all.
    setTimeout(function () {
      self.onError(e);
    }, 0);
    return;
  }

  if (typeof document !== 'undefined') {
    this.index = Request.requestsCount++;
    Request.requests[this.index] = this;
  }
};

/**
 * Called upon successful response.
 *
 * @api private
 */

Request.prototype.onSuccess = function () {
  this.emit('success');
  this.cleanup();
};

/**
 * Called if we have data.
 *
 * @api private
 */

Request.prototype.onData = function (data) {
  this.emit('data', data);
  this.onSuccess();
};

/**
 * Called upon error.
 *
 * @api private
 */

Request.prototype.onError = function (err) {
  this.emit('error', err);
  this.cleanup(true);
};

/**
 * Cleans up house.
 *
 * @api private
 */

Request.prototype.cleanup = function (fromError) {
  if ('undefined' === typeof this.xhr || null === this.xhr) {
    return;
  }
  // xmlhttprequest
  if (this.hasXDR()) {
    this.xhr.onload = this.xhr.onerror = empty;
  } else {
    this.xhr.onreadystatechange = empty;
  }

  if (fromError) {
    try {
      this.xhr.abort();
    } catch (e) {}
  }

  if (typeof document !== 'undefined') {
    delete Request.requests[this.index];
  }

  this.xhr = null;
};

/**
 * Called upon load.
 *
 * @api private
 */

Request.prototype.onLoad = function () {
  var data;
  try {
    var contentType;
    try {
      contentType = this.xhr.getResponseHeader('Content-Type');
    } catch (e) {}
    if (contentType === 'application/octet-stream') {
      data = this.xhr.response || this.xhr.responseText;
    } else {
      data = this.xhr.responseText;
    }
  } catch (e) {
    this.onError(e);
  }
  if (null != data) {
    this.onData(data);
  }
};

/**
 * Check if it has XDomainRequest.
 *
 * @api private
 */

Request.prototype.hasXDR = function () {
  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;
};

/**
 * Aborts the request.
 *
 * @api public
 */

Request.prototype.abort = function () {
  this.cleanup();
};

/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */

Request.requestsCount = 0;
Request.requests = {};

if (typeof document !== 'undefined') {
  if (typeof attachEvent === 'function') {
    attachEvent('onunload', unloadHandler);
  } else if (typeof addEventListener === 'function') {
    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';
    addEventListener(terminationEvent, unloadHandler, false);
  }
}

function unloadHandler () {
  for (var i in Request.requests) {
    if (Request.requests.hasOwnProperty(i)) {
      Request.requests[i].abort();
    }
  }
}


/***/ }),
/* 470 */
/***/ (function(module, exports) {


/**
 * Gets the keys for an object.
 *
 * @return {Array} keys
 * @api private
 */

module.exports = Object.keys || function keys (obj){
  var arr = [];
  var has = Object.prototype.hasOwnProperty;

  for (var i in obj) {
    if (has.call(obj, i)) {
      arr.push(i);
    }
  }
  return arr;
};


/***/ }),
/* 471 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 472 */
/***/ (function(module, exports) {

/**
 * An abstraction for slicing an arraybuffer even when
 * ArrayBuffer.prototype.slice is not supported
 *
 * @api public
 */

module.exports = function(arraybuffer, start, end) {
  var bytes = arraybuffer.byteLength;
  start = start || 0;
  end = end || bytes;

  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }

  if (start < 0) { start += bytes; }
  if (end < 0) { end += bytes; }
  if (end > bytes) { end = bytes; }

  if (start >= bytes || start >= end || bytes === 0) {
    return new ArrayBuffer(0);
  }

  var abv = new Uint8Array(arraybuffer);
  var result = new Uint8Array(end - start);
  for (var i = start, ii = 0; i < end; i++, ii++) {
    result[ii] = abv[i];
  }
  return result.buffer;
};


/***/ }),
/* 473 */
/***/ (function(module, exports) {

module.exports = after

function after(count, callback, err_cb) {
    var bail = false
    err_cb = err_cb || noop
    proxy.count = count

    return (count === 0) ? callback() : proxy

    function proxy(err, result) {
        if (proxy.count <= 0) {
            throw new Error('after called too many times')
        }
        --proxy.count

        // after first error, rest are passed to err_cb
        if (err) {
            bail = true
            callback(err)
            // future error callbacks will go to error handler
            callback = err_cb
        } else if (proxy.count === 0 && !bail) {
            callback(null, result)
        }
    }
}

function noop() {}


/***/ }),
/* 474 */
/***/ (function(module, exports) {

/*! https://mths.be/utf8js v2.1.2 by @mathias */

var stringFromCharCode = String.fromCharCode;

// Taken from https://mths.be/punycode
function ucs2decode(string) {
	var output = [];
	var counter = 0;
	var length = string.length;
	var value;
	var extra;
	while (counter < length) {
		value = string.charCodeAt(counter++);
		if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
			// high surrogate, and there is a next character
			extra = string.charCodeAt(counter++);
			if ((extra & 0xFC00) == 0xDC00) { // low surrogate
				output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
			} else {
				// unmatched surrogate; only append this code unit, in case the next
				// code unit is the high surrogate of a surrogate pair
				output.push(value);
				counter--;
			}
		} else {
			output.push(value);
		}
	}
	return output;
}

// Taken from https://mths.be/punycode
function ucs2encode(array) {
	var length = array.length;
	var index = -1;
	var value;
	var output = '';
	while (++index < length) {
		value = array[index];
		if (value > 0xFFFF) {
			value -= 0x10000;
			output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
			value = 0xDC00 | value & 0x3FF;
		}
		output += stringFromCharCode(value);
	}
	return output;
}

function checkScalarValue(codePoint, strict) {
	if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
		if (strict) {
			throw Error(
				'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
				' is not a scalar value'
			);
		}
		return false;
	}
	return true;
}
/*--------------------------------------------------------------------------*/

function createByte(codePoint, shift) {
	return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
}

function encodeCodePoint(codePoint, strict) {
	if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
		return stringFromCharCode(codePoint);
	}
	var symbol = '';
	if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
		symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
	}
	else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
		if (!checkScalarValue(codePoint, strict)) {
			codePoint = 0xFFFD;
		}
		symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
		symbol += createByte(codePoint, 6);
	}
	else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
		symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
		symbol += createByte(codePoint, 12);
		symbol += createByte(codePoint, 6);
	}
	symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
	return symbol;
}

function utf8encode(string, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	var codePoints = ucs2decode(string);
	var length = codePoints.length;
	var index = -1;
	var codePoint;
	var byteString = '';
	while (++index < length) {
		codePoint = codePoints[index];
		byteString += encodeCodePoint(codePoint, strict);
	}
	return byteString;
}

/*--------------------------------------------------------------------------*/

function readContinuationByte() {
	if (byteIndex >= byteCount) {
		throw Error('Invalid byte index');
	}

	var continuationByte = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	if ((continuationByte & 0xC0) == 0x80) {
		return continuationByte & 0x3F;
	}

	// If we end up here, it’s not a continuation byte
	throw Error('Invalid continuation byte');
}

function decodeSymbol(strict) {
	var byte1;
	var byte2;
	var byte3;
	var byte4;
	var codePoint;

	if (byteIndex > byteCount) {
		throw Error('Invalid byte index');
	}

	if (byteIndex == byteCount) {
		return false;
	}

	// Read first byte
	byte1 = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	// 1-byte sequence (no continuation bytes)
	if ((byte1 & 0x80) == 0) {
		return byte1;
	}

	// 2-byte sequence
	if ((byte1 & 0xE0) == 0xC0) {
		byte2 = readContinuationByte();
		codePoint = ((byte1 & 0x1F) << 6) | byte2;
		if (codePoint >= 0x80) {
			return codePoint;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 3-byte sequence (may include unpaired surrogates)
	if ((byte1 & 0xF0) == 0xE0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
		if (codePoint >= 0x0800) {
			return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 4-byte sequence
	if ((byte1 & 0xF8) == 0xF0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		byte4 = readContinuationByte();
		codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |
			(byte3 << 0x06) | byte4;
		if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
			return codePoint;
		}
	}

	throw Error('Invalid UTF-8 detected');
}

var byteArray;
var byteCount;
var byteIndex;
function utf8decode(byteString, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	byteArray = ucs2decode(byteString);
	byteCount = byteArray.length;
	byteIndex = 0;
	var codePoints = [];
	var tmp;
	while ((tmp = decodeSymbol(strict)) !== false) {
		codePoints.push(tmp);
	}
	return ucs2encode(codePoints);
}

module.exports = {
	version: '2.1.2',
	encode: utf8encode,
	decode: utf8decode
};


/***/ }),
/* 475 */
/***/ (function(module, exports) {

/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(){
  "use strict";

  var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

  // Use a lookup table to find the index.
  var lookup = new Uint8Array(256);
  for (var i = 0; i < chars.length; i++) {
    lookup[chars.charCodeAt(i)] = i;
  }

  exports.encode = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.decode =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = lookup[base64.charCodeAt(i)];
      encoded2 = lookup[base64.charCodeAt(i+1)];
      encoded3 = lookup[base64.charCodeAt(i+2)];
      encoded4 = lookup[base64.charCodeAt(i+3)];

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})();


/***/ }),
/* 476 */
/***/ (function(module, exports) {

/**
 * Create a blob builder even when vendor prefixes exist
 */

var BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :
  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :
  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :
  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : 
  false;

/**
 * Check if Blob constructor is supported
 */

var blobSupported = (function() {
  try {
    var a = new Blob(['hi']);
    return a.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if Blob constructor supports ArrayBufferViews
 * Fails in Safari 6, so we need to map to ArrayBuffers there.
 */

var blobSupportsArrayBufferView = blobSupported && (function() {
  try {
    var b = new Blob([new Uint8Array([1,2])]);
    return b.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if BlobBuilder is supported
 */

var blobBuilderSupported = BlobBuilder
  && BlobBuilder.prototype.append
  && BlobBuilder.prototype.getBlob;

/**
 * Helper function that maps ArrayBufferViews to ArrayBuffers
 * Used by BlobBuilder constructor and old browsers that didn't
 * support it in the Blob constructor.
 */

function mapArrayBufferViews(ary) {
  return ary.map(function(chunk) {
    if (chunk.buffer instanceof ArrayBuffer) {
      var buf = chunk.buffer;

      // if this is a subarray, make a copy so we only
      // include the subarray region from the underlying buffer
      if (chunk.byteLength !== buf.byteLength) {
        var copy = new Uint8Array(chunk.byteLength);
        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
        buf = copy.buffer;
      }

      return buf;
    }

    return chunk;
  });
}

function BlobBuilderConstructor(ary, options) {
  options = options || {};

  var bb = new BlobBuilder();
  mapArrayBufferViews(ary).forEach(function(part) {
    bb.append(part);
  });

  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();
};

function BlobConstructor(ary, options) {
  return new Blob(mapArrayBufferViews(ary), options || {});
};

if (typeof Blob !== 'undefined') {
  BlobBuilderConstructor.prototype = Blob.prototype;
  BlobConstructor.prototype = Blob.prototype;
}

module.exports = (function() {
  if (blobSupported) {
    return blobSupportsArrayBufferView ? Blob : BlobConstructor;
  } else if (blobBuilderSupported) {
    return BlobBuilderConstructor;
  } else {
    return undefined;
  }
})();


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(478);

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 478 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module requirements.
 */

var Polling = __webpack_require__(237);
var inherit = __webpack_require__(109);

/**
 * Module exports.
 */

module.exports = JSONPPolling;

/**
 * Cached regular expressions.
 */

var rNewline = /\n/g;
var rEscapedNewline = /\\n/g;

/**
 * Global JSONP callbacks.
 */

var callbacks;

/**
 * Noop.
 */

function empty () { }

/**
 * Until https://github.com/tc39/proposal-global is shipped.
 */
function glob () {
  return typeof self !== 'undefined' ? self
      : typeof window !== 'undefined' ? window
      : typeof global !== 'undefined' ? global : {};
}

/**
 * JSONP Polling constructor.
 *
 * @param {Object} opts.
 * @api public
 */

function JSONPPolling (opts) {
  Polling.call(this, opts);

  this.query = this.query || {};

  // define global callbacks array if not present
  // we do this here (lazily) to avoid unneeded global pollution
  if (!callbacks) {
    // we need to consider multiple engines in the same page
    var global = glob();
    callbacks = global.___eio = (global.___eio || []);
  }

  // callback identifier
  this.index = callbacks.length;

  // add callback to jsonp global
  var self = this;
  callbacks.push(function (msg) {
    self.onData(msg);
  });

  // append to query string
  this.query.j = this.index;

  // prevent spurious errors from being emitted when the window is unloaded
  if (typeof addEventListener === 'function') {
    addEventListener('beforeunload', function () {
      if (self.script) self.script.onerror = empty;
    }, false);
  }
}

/**
 * Inherits from Polling.
 */

inherit(JSONPPolling, Polling);

/*
 * JSONP only supports binary as base64 encoded strings
 */

JSONPPolling.prototype.supportsBinary = false;

/**
 * Closes the socket.
 *
 * @api private
 */

JSONPPolling.prototype.doClose = function () {
  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  if (this.form) {
    this.form.parentNode.removeChild(this.form);
    this.form = null;
    this.iframe = null;
  }

  Polling.prototype.doClose.call(this);
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

JSONPPolling.prototype.doPoll = function () {
  var self = this;
  var script = document.createElement('script');

  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  script.async = true;
  script.src = this.uri();
  script.onerror = function (e) {
    self.onError('jsonp poll error', e);
  };

  var insertAt = document.getElementsByTagName('script')[0];
  if (insertAt) {
    insertAt.parentNode.insertBefore(script, insertAt);
  } else {
    (document.head || document.body).appendChild(script);
  }
  this.script = script;

  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

  if (isUAgecko) {
    setTimeout(function () {
      var iframe = document.createElement('iframe');
      document.body.appendChild(iframe);
      document.body.removeChild(iframe);
    }, 100);
  }
};

/**
 * Writes with a hidden iframe.
 *
 * @param {String} data to send
 * @param {Function} called upon flush.
 * @api private
 */

JSONPPolling.prototype.doWrite = function (data, fn) {
  var self = this;

  if (!this.form) {
    var form = document.createElement('form');
    var area = document.createElement('textarea');
    var id = this.iframeId = 'eio_iframe_' + this.index;
    var iframe;

    form.className = 'socketio';
    form.style.position = 'absolute';
    form.style.top = '-1000px';
    form.style.left = '-1000px';
    form.target = id;
    form.method = 'POST';
    form.setAttribute('accept-charset', 'utf-8');
    area.name = 'd';
    form.appendChild(area);
    document.body.appendChild(form);

    this.form = form;
    this.area = area;
  }

  this.form.action = this.uri();

  function complete () {
    initIframe();
    fn();
  }

  function initIframe () {
    if (self.iframe) {
      try {
        self.form.removeChild(self.iframe);
      } catch (e) {
        self.onError('jsonp polling iframe removal error', e);
      }
    }

    try {
      // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
      var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
      iframe = document.createElement(html);
    } catch (e) {
      iframe = document.createElement('iframe');
      iframe.name = self.iframeId;
      iframe.src = 'javascript:0';
    }

    iframe.id = self.iframeId;

    self.form.appendChild(iframe);
    self.iframe = iframe;
  }

  initIframe();

  // escape \n to prevent it from being converted into \r\n by some UAs
  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
  data = data.replace(rEscapedNewline, '\\\n');
  this.area.value = data.replace(rNewline, '\\n');

  try {
    this.form.submit();
  } catch (e) {}

  if (this.iframe.attachEvent) {
    this.iframe.onreadystatechange = function () {
      if (self.iframe.readyState === 'complete') {
        complete();
      }
    };
  } else {
    this.iframe.onload = complete;
  }
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(88)))

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/**
 * Module dependencies.
 */

var Transport = __webpack_require__(154);
var parser = __webpack_require__(74);
var parseqs = __webpack_require__(108);
var inherit = __webpack_require__(109);
var yeast = __webpack_require__(239);
var debug = __webpack_require__(110)('engine.io-client:websocket');

var BrowserWebSocket, NodeWebSocket;

if (typeof WebSocket !== 'undefined') {
  BrowserWebSocket = WebSocket;
} else if (typeof self !== 'undefined') {
  BrowserWebSocket = self.WebSocket || self.MozWebSocket;
} else {
  try {
    NodeWebSocket = __webpack_require__(481);
  } catch (e) { }
}

/**
 * Get either the `WebSocket` or `MozWebSocket` globals
 * in the browser or try to resolve WebSocket-compatible
 * interface exposed by `ws` for Node-like environment.
 */

var WebSocketImpl = BrowserWebSocket || NodeWebSocket;

/**
 * Module exports.
 */

module.exports = WS;

/**
 * WebSocket transport constructor.
 *
 * @api {Object} connection options
 * @api public
 */

function WS (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (forceBase64) {
    this.supportsBinary = false;
  }
  this.perMessageDeflate = opts.perMessageDeflate;
  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
  this.protocols = opts.protocols;
  if (!this.usingBrowserWebSocket) {
    WebSocketImpl = NodeWebSocket;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(WS, Transport);

/**
 * Transport name.
 *
 * @api public
 */

WS.prototype.name = 'websocket';

/*
 * WebSockets support binary
 */

WS.prototype.supportsBinary = true;

/**
 * Opens socket.
 *
 * @api private
 */

WS.prototype.doOpen = function () {
  if (!this.check()) {
    // let probe timeout
    return;
  }

  var uri = this.uri();
  var protocols = this.protocols;
  var opts = {
    agent: this.agent,
    perMessageDeflate: this.perMessageDeflate
  };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  if (this.extraHeaders) {
    opts.headers = this.extraHeaders;
  }
  if (this.localAddress) {
    opts.localAddress = this.localAddress;
  }

  try {
    this.ws =
      this.usingBrowserWebSocket && !this.isReactNative
        ? protocols
          ? new WebSocketImpl(uri, protocols)
          : new WebSocketImpl(uri)
        : new WebSocketImpl(uri, protocols, opts);
  } catch (err) {
    return this.emit('error', err);
  }

  if (this.ws.binaryType === undefined) {
    this.supportsBinary = false;
  }

  if (this.ws.supports && this.ws.supports.binary) {
    this.supportsBinary = true;
    this.ws.binaryType = 'nodebuffer';
  } else {
    this.ws.binaryType = 'arraybuffer';
  }

  this.addEventListeners();
};

/**
 * Adds event listeners to the socket
 *
 * @api private
 */

WS.prototype.addEventListeners = function () {
  var self = this;

  this.ws.onopen = function () {
    self.onOpen();
  };
  this.ws.onclose = function () {
    self.onClose();
  };
  this.ws.onmessage = function (ev) {
    self.onData(ev.data);
  };
  this.ws.onerror = function (e) {
    self.onError('websocket error', e);
  };
};

/**
 * Writes data to socket.
 *
 * @param {Array} array of packets.
 * @api private
 */

WS.prototype.write = function (packets) {
  var self = this;
  this.writable = false;

  // encodePacket efficient as it uses WS framing
  // no need for encodePayload
  var total = packets.length;
  for (var i = 0, l = total; i < l; i++) {
    (function (packet) {
      parser.encodePacket(packet, self.supportsBinary, function (data) {
        if (!self.usingBrowserWebSocket) {
          // always create a new object (GH-437)
          var opts = {};
          if (packet.options) {
            opts.compress = packet.options.compress;
          }

          if (self.perMessageDeflate) {
            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;
            if (len < self.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }

        // Sometimes the websocket has already been closed but the browser didn't
        // have a chance of informing us about it yet, in that case send will
        // throw an error
        try {
          if (self.usingBrowserWebSocket) {
            // TypeError is thrown when passing the second argument on Safari
            self.ws.send(data);
          } else {
            self.ws.send(data, opts);
          }
        } catch (e) {
          debug('websocket closed before onclose event');
        }

        --total || done();
      });
    })(packets[i]);
  }

  function done () {
    self.emit('flush');

    // fake drain
    // defer to next tick to allow Socket to clear writeBuffer
    setTimeout(function () {
      self.writable = true;
      self.emit('drain');
    }, 0);
  }
};

/**
 * Called upon close
 *
 * @api private
 */

WS.prototype.onClose = function () {
  Transport.prototype.onClose.call(this);
};

/**
 * Closes socket.
 *
 * @api private
 */

WS.prototype.doClose = function () {
  if (typeof this.ws !== 'undefined') {
    this.ws.close();
  }
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

WS.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'wss' : 'ws';
  var port = '';

  // avoid port if default for schema
  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||
    ('ws' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // append timestamp to URI
  if (this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  // communicate binary support capabilities
  if (!this.supportsBinary) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

/**
 * Feature detection for WebSocket.
 *
 * @return {Boolean} whether this transport is available.
 * @api public
 */

WS.prototype.check = function () {
  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(152).Buffer))

/***/ }),
/* 481 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 482 */
/***/ (function(module, exports) {

module.exports = toArray

function toArray(list, index) {
    var array = []

    index = index || 0

    for (var i = index || 0; i < list.length; i++) {
        array[i - index] = list[i]
    }

    return array
}


/***/ }),
/* 483 */
/***/ (function(module, exports) {


/**
 * Expose `Backoff`.
 */

module.exports = Backoff;

/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */

function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 10000;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}

/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */

Backoff.prototype.duration = function(){
  var ms = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand =  Math.random();
    var deviation = Math.floor(rand * this.jitter * ms);
    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;
  }
  return Math.min(ms, this.max) | 0;
};

/**
 * Reset the number of attempts.
 *
 * @api public
 */

Backoff.prototype.reset = function(){
  this.attempts = 0;
};

/**
 * Set the minimum duration
 *
 * @api public
 */

Backoff.prototype.setMin = function(min){
  this.ms = min;
};

/**
 * Set the maximum duration
 *
 * @api public
 */

Backoff.prototype.setMax = function(max){
  this.max = max;
};

/**
 * Set the jitter
 *
 * @api public
 */

Backoff.prototype.setJitter = function(jitter){
  this.jitter = jitter;
};



/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);
var bind = __webpack_require__(245);
var Axios = __webpack_require__(486);
var defaults = __webpack_require__(156);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(249);
axios.CancelToken = __webpack_require__(500);
axios.isCancel = __webpack_require__(248);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(501);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 485 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(156);
var utils = __webpack_require__(35);
var InterceptorManager = __webpack_require__(495);
var dispatchRequest = __webpack_require__(496);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(247);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);
var transformData = __webpack_require__(497);
var isCancel = __webpack_require__(248);
var defaults = __webpack_require__(156);
var isAbsoluteURL = __webpack_require__(498);
var combineURLs = __webpack_require__(499);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(35);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(249);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

const util      = __webpack_require__(503);
const types     = __webpack_require__(111);
const sets      = __webpack_require__(251);
const positions = __webpack_require__(504);


module.exports = (regexpStr) => {
  var i = 0, l, c,
    start = { type: types.ROOT, stack: []},

    // Keep track of last clause/group and stack.
    lastGroup = start,
    last = start.stack,
    groupStack = [];


  var repeatErr = (i) => {
    util.error(regexpStr, `Nothing to repeat at column ${i - 1}`);
  };

  // Decode a few escaped characters.
  var str = util.strToChars(regexpStr);
  l = str.length;

  // Iterate through each character in string.
  while (i < l) {
    c = str[i++];

    switch (c) {
      // Handle escaped characters, inclues a few sets.
      case '\\':
        c = str[i++];

        switch (c) {
          case 'b':
            last.push(positions.wordBoundary());
            break;

          case 'B':
            last.push(positions.nonWordBoundary());
            break;

          case 'w':
            last.push(sets.words());
            break;

          case 'W':
            last.push(sets.notWords());
            break;

          case 'd':
            last.push(sets.ints());
            break;

          case 'D':
            last.push(sets.notInts());
            break;

          case 's':
            last.push(sets.whitespace());
            break;

          case 'S':
            last.push(sets.notWhitespace());
            break;

          default:
            // Check if c is integer.
            // In which case it's a reference.
            if (/\d/.test(c)) {
              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });

            // Escaped character.
            } else {
              last.push({ type: types.CHAR, value: c.charCodeAt(0) });
            }
        }

        break;


      // Positionals.
      case '^':
        last.push(positions.begin());
        break;

      case '$':
        last.push(positions.end());
        break;


      // Handle custom sets.
      case '[':
        // Check if this class is 'anti' i.e. [^abc].
        var not;
        if (str[i] === '^') {
          not = true;
          i++;
        } else {
          not = false;
        }

        // Get all the characters in class.
        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);

        // Increase index by length of class.
        i += classTokens[1];
        last.push({
          type: types.SET,
          set: classTokens[0],
          not,
        });

        break;


      // Class of any character except \n.
      case '.':
        last.push(sets.anyChar());
        break;


      // Push group onto stack.
      case '(':
        // Create group.
        var group = {
          type: types.GROUP,
          stack: [],
          remember: true,
        };

        c = str[i];

        // If if this is a special kind of group.
        if (c === '?') {
          c = str[i + 1];
          i += 2;

          // Match if followed by.
          if (c === '=') {
            group.followedBy = true;

          // Match if not followed by.
          } else if (c === '!') {
            group.notFollowedBy = true;

          } else if (c !== ':') {
            util.error(regexpStr,
              `Invalid group, character '${c}'` +
              ` after '?' at column ${i - 1}`);
          }

          group.remember = false;
        }

        // Insert subgroup into current group stack.
        last.push(group);

        // Remember the current group for when the group closes.
        groupStack.push(lastGroup);

        // Make this new group the current group.
        lastGroup = group;
        last = group.stack;
        break;


      // Pop group out of stack.
      case ')':
        if (groupStack.length === 0) {
          util.error(regexpStr, `Unmatched ) at column ${i - 1}`);
        }
        lastGroup = groupStack.pop();

        // Check if this group has a PIPE.
        // To get back the correct last stack.
        last = lastGroup.options ?
          lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;
        break;


      // Use pipe character to give more choices.
      case '|':
        // Create array where options are if this is the first PIPE
        // in this clause.
        if (!lastGroup.options) {
          lastGroup.options = [lastGroup.stack];
          delete lastGroup.stack;
        }

        // Create a new stack and add to options for rest of clause.
        var stack = [];
        lastGroup.options.push(stack);
        last = stack;
        break;


      // Repetition.
      // For every repetition, remove last element from last stack
      // then insert back a RANGE object.
      // This design is chosen because there could be more than
      // one repetition symbols in a regex i.e. `a?+{2,3}`.
      case '{':
        var rs = /^(\d+)(,(\d+)?)?\}/.exec(str.slice(i)), min, max;
        if (rs !== null) {
          if (last.length === 0) {
            repeatErr(i);
          }
          min = parseInt(rs[1], 10);
          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;
          i += rs[0].length;

          last.push({
            type: types.REPETITION,
            min,
            max,
            value: last.pop(),
          });
        } else {
          last.push({
            type: types.CHAR,
            value: 123,
          });
        }
        break;

      case '?':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
          type: types.REPETITION,
          min: 0,
          max: 1,
          value: last.pop(),
        });
        break;

      case '+':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
          type: types.REPETITION,
          min: 1,
          max: Infinity,
          value: last.pop(),
        });
        break;

      case '*':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
          type: types.REPETITION,
          min: 0,
          max: Infinity,
          value: last.pop(),
        });
        break;


      // Default is a character that is not `\[](){}?+*^$`.
      default:
        last.push({
          type: types.CHAR,
          value: c.charCodeAt(0),
        });
    }

  }

  // Check if any groups have not been closed.
  if (groupStack.length !== 0) {
    util.error(regexpStr, 'Unterminated group');
  }

  return start;
};

module.exports.types = types;


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

const types = __webpack_require__(111);
const sets  = __webpack_require__(251);


const CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^ ?';
const SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };

/**
 * Finds character representations in str and convert all to
 * their respective characters
 *
 * @param {String} str
 * @return {String}
 */
exports.strToChars = function(str) {
  /* jshint maxlen: false */
  var chars_regex = /(\[\\b\])|(\\)?\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z[\\\]^?])|([0tnvfr]))/g;
  str = str.replace(chars_regex, function(s, b, lbs, a16, b16, c8, dctrl, eslsh) {
    if (lbs) {
      return s;
    }

    var code = b ? 8 :
      a16   ? parseInt(a16, 16) :
      b16   ? parseInt(b16, 16) :
      c8    ? parseInt(c8,   8) :
      dctrl ? CTRL.indexOf(dctrl) :
      SLSH[eslsh];

    var c = String.fromCharCode(code);

    // Escape special regex characters.
    if (/[[\]{}^$.|?*+()]/.test(c)) {
      c = '\\' + c;
    }

    return c;
  });

  return str;
};


/**
 * turns class into tokens
 * reads str until it encounters a ] not preceeded by a \
 *
 * @param {String} str
 * @param {String} regexpStr
 * @return {Array.<Array.<Object>, Number>}
 */
exports.tokenizeClass = (str, regexpStr) => {
  /* jshint maxlen: false */
  var tokens = [];
  var regexp = /\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\)(.)|([^\]\\]))-(?:\\)?([^\]]))|(\])|(?:\\)?([^])/g;
  var rs, c;


  while ((rs = regexp.exec(str)) != null) {
    if (rs[1]) {
      tokens.push(sets.words());

    } else if (rs[2]) {
      tokens.push(sets.ints());

    } else if (rs[3]) {
      tokens.push(sets.whitespace());

    } else if (rs[4]) {
      tokens.push(sets.notWords());

    } else if (rs[5]) {
      tokens.push(sets.notInts());

    } else if (rs[6]) {
      tokens.push(sets.notWhitespace());

    } else if (rs[7]) {
      tokens.push({
        type: types.RANGE,
        from: (rs[8] || rs[9]).charCodeAt(0),
        to: rs[10].charCodeAt(0),
      });

    } else if ((c = rs[12])) {
      tokens.push({
        type: types.CHAR,
        value: c.charCodeAt(0),
      });

    } else {
      return [tokens, regexp.lastIndex];
    }
  }

  exports.error(regexpStr, 'Unterminated character class');
};


/**
 * Shortcut to throw errors.
 *
 * @param {String} regexp
 * @param {String} msg
 */
exports.error = (regexp, msg) => {
  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);
};


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

const types = __webpack_require__(111);
exports.wordBoundary = () => ({ type: types.POSITION, value: 'b' });
exports.nonWordBoundary = () => ({ type: types.POSITION, value: 'B' });
exports.begin = () => ({ type: types.POSITION, value: '^' });
exports.end = () => ({ type: types.POSITION, value: '$' });


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(506);
var parse = __webpack_require__(507);
var formats = __webpack_require__(253);

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(252);
var formats = __webpack_require__(253);
var has = Object.prototype.hasOwnProperty;

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching
        return prefix + '[]';
    },
    comma: 'comma',
    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching
        return prefix;
    }
};

var isArray = Array.isArray;
var push = Array.prototype.push;
var pushToArray = function (arr, valueOrArray) {
    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
};

var toISO = Date.prototype.toISOString;

var defaults = {
    addQueryPrefix: false,
    allowDots: false,
    charset: 'utf-8',
    charsetSentinel: false,
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    formatter: formats.formatters[formats['default']],
    // deprecated
    indices: false,
    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};

var stringify = function stringify( // eslint-disable-line func-name-matching
    object,
    prefix,
    generateArrayPrefix,
    strictNullHandling,
    skipNulls,
    encoder,
    filter,
    sort,
    allowDots,
    serializeDate,
    formatter,
    encodeValuesOnly,
    charset
) {
    var obj = object;
    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
        obj = obj.join(',');
    }

    if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;
        }

        obj = '';
    }

    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);
            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        if (isArray(obj)) {
            pushToArray(values, stringify(
                obj[key],
                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly,
                charset
            ));
        } else {
            pushToArray(values, stringify(
                obj[key],
                prefix + (allowDots ? '.' + key : '[' + key + ']'),
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly,
                charset
            ));
        }
    }

    return values;
};

var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    var charset = opts.charset || defaults.charset;
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }

    var format = formats['default'];
    if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) {
            throw new TypeError('Unknown format option provided.');
        }
        format = opts.format;
    }
    var formatter = formats.formatters[format];

    var filter = defaults.filter;
    if (typeof opts.filter === 'function' || isArray(opts.filter)) {
        filter = opts.filter;
    }

    return {
        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter: filter,
        formatter: formatter,
        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);

    var objKeys;
    var filter;

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
    } else if (opts && 'indices' in opts) {
        arrayFormat = opts.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (options.sort) {
        objKeys.sort(options.sort);
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (options.skipNulls && obj[key] === null) {
            continue;
        }
        pushToArray(keys, stringify(
            obj[key],
            key,
            generateArrayPrefix,
            options.strictNullHandling,
            options.skipNulls,
            options.encode ? options.encoder : null,
            options.filter,
            options.sort,
            options.allowDots,
            options.serializeDate,
            options.formatter,
            options.encodeValuesOnly,
            options.charset
        ));
    }

    var joined = keys.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';

    if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') {
            // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
            prefix += 'utf8=%26%2310003%3B&';
        } else {
            // encodeURIComponent('✓')
            prefix += 'utf8=%E2%9C%93&';
        }
    }

    return joined.length > 0 ? prefix + joined : '';
};


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(252);

var has = Object.prototype.hasOwnProperty;

var defaults = {
    allowDots: false,
    allowPrototypes: false,
    arrayLimit: 20,
    charset: 'utf-8',
    charsetSentinel: false,
    comma: false,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1000,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
};

var interpretNumericEntities = function (str) {
    return str.replace(/&#(\d+);/g, function ($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
    });
};

// This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.
var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')

// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')

var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
    var i;

    var charset = options.charset;
    if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
            if (parts[i].indexOf('utf8=') === 0) {
                if (parts[i] === charsetSentinel) {
                    charset = 'utf-8';
                } else if (parts[i] === isoSentinel) {
                    charset = 'iso-8859-1';
                }
                skipIndex = i;
                i = parts.length; // The eslint settings do not allow break;
            }
        }
    }

    for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
            continue;
        }
        var part = parts[i];

        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder, charset);
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);
            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);
        }

        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
            val = interpretNumericEntities(val);
        }

        if (val && options.comma && val.indexOf(',') > -1) {
            val = val.split(',');
        }

        if (has.call(obj, key)) {
            obj[key] = utils.combine(obj[key], val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function (chain, val, options) {
    var leaf = val;

    for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];

        if (root === '[]' && options.parseArrays) {
            obj = [].concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (!options.parseArrays && cleanRoot === '') {
                obj = { 0: leaf };
            } else if (
                !isNaN(index)
                && root !== cleanRoot
                && String(index) === cleanRoot
                && index >= 0
                && (options.parseArrays && index <= options.arrayLimit)
            ) {
                obj = [];
                obj[index] = leaf;
            } else {
                obj[cleanRoot] = leaf;
            }
        }

        leaf = obj;
    }

    return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
    if (!givenKey) {
        return;
    }

    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;

    // The regex chunks

    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;

    // Get the parent

    var segment = brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;

    // Stash the parent if it exists

    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(parent);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options);
};

var normalizeParseOptions = function normalizeParseOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');
    }
    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;

    return {
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (str, opts) {
    var options = normalizeParseOptions(opts);

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options);
        obj = utils.merge(obj, newObj, options);
    }

    return utils.compact(obj);
};


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = authReducer;

var _helper = __webpack_require__(106);

var _authActions = __webpack_require__(2);

var authActions = _interopRequireWildcard(_authActions);

var _util = __webpack_require__(45);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var CF_DEFAULT = authActions.getCFDefault();
var IS_HAS_PARAM_CF = location.href.indexOf("?cf=") >= 0;

var getCF = (0, _util._GET)("cf");

var authReducerInitState = {
  cf: null,
  user: null,
  isAuthorized: false,
  fetching: false,
  error: null,
  cookie: true
};

var auth = null;
var hasLocalStorageSupport;

try {
  window.localStorage.setItem("testKey", "foo");
  window.localStorage.removeItem("testKey");
  hasLocalStorageSupport = true;
} catch (e) {
  console.log(e);
  hasLocalStorageSupport = false;
}

var AUTH_LOCAL_STORAGE = "auth";

function setAuthLocalStorage(newItem) {
  if (!hasLocalStorageSupport) {
    return;
  }
  var auth = JSON.parse(window.localStorage.getItem(AUTH_LOCAL_STORAGE));
  if (auth !== null) {
    for (var k in newItem) {
      auth[k] = newItem[k];
    }
  } else {
    auth = newItem;
  }
  window.localStorage.setItem(AUTH_LOCAL_STORAGE, JSON.stringify(auth));
}

function clearAuthLocalStorage() {
  if (hasLocalStorageSupport) {
    window.localStorage.removeItem(AUTH_LOCAL_STORAGE);
  }
}

function fixLocalStorageAuth(auth) {
  if (!hasLocalStorageSupport) {
    return;
  }

  if (typeof auth["user"] === "undefined" || typeof auth["isAuthorized"] === "undefined") {
    return fixCFAuth(authReducerInitState);
  }

  auth = fixCFAuth(auth);

  // clear all possible error
  auth["error"] = null;
  auth["fetching"] = false;

  return auth;
}

// the cf param will force to the cf
// use in logout
function fixCFAuth(auth) {
  var cf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  if (cf !== null) {
    auth["cf"] = cf;
    return auth;
  }

  // if get is changing and is not authorized
  if (!auth.isAuthorized || typeof auth["isAuthorized"] === "undefined") {
    if (getCF !== null) {
      auth["cf"] = getCF;
    }
  }

  // if still null get default
  if (auth["cf"] == null) {
    auth["cf"] = CF_DEFAULT;
  }

  // fix untuk amik yang default kalau takde param cf kat url
  // if (!IS_HAS_PARAM_CF) {
  //   auth["cf"] = CF_DEFAULT;
  // }

  return auth;
}

function autoLogoutIfCFChange(curAuth) {
  if (getCF !== null && getCF != curAuth.cf) {
    curAuth.isAuthorized = false;
    curAuth.cf = getCF;
  }
  return curAuth;
}

if (hasLocalStorageSupport) {
  auth = window.localStorage.getItem(AUTH_LOCAL_STORAGE);

  if (auth !== null) {
    auth = JSON.parse(auth);
    auth = (0, _helper.getNewState)(auth, {
      cookie: true
    });
    auth = fixLocalStorageAuth(auth);
  } else {
    auth = authReducerInitState;
    setAuthLocalStorage(authReducerInitState);
  }

  auth = fixCFAuth(auth);
  auth = autoLogoutIfCFChange(auth);
  setAuthLocalStorage(auth);
}
// need to find a fallback for safari
else {
    //    auth = {
    //
    //        user: {
    //            ID: 136,
    //            user_status: "Active",
    //            first_name: "Student",
    //            last_name: "For Test",
    //            img_url: "http://seedsjobfairapp.com/wp-content/uploads/2017/07/user_136_profile_image.jpeg",
    //            img_pos: "18% 29%",
    //            img_size: "195% auto"
    //        },
    //
    //        isAuthorized: true,
    //        fetching: false,
    //        error: null
    //    };

    auth = (0, _helper.getNewState)(authReducerInitState, {
      cookie: false
    });
    auth = fixCFAuth(auth);
  }

function authReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : auth;
  var action = arguments[1];

  switch (action.type) {
    case authActions.UPDATE_USER:
      {
        var newUser = (0, _helper.getNewState)(state.user, action.payload);
        var newState = {
          user: newUser
        };

        setAuthLocalStorage(newState);
        return (0, _helper.getNewState)(state, newState);
      }
    case authActions.DO_LOGOUT:
      {
        clearAuthLocalStorage();
        return (0, _helper.getNewState)(state, fixCFAuth(authReducerInitState, state.cf));
      }
    case authActions.DO_LOGIN + "_PENDING":
      {
        var newState = {
          fetching: true,
          error: null
        };

        setAuthLocalStorage(newState);
        return (0, _helper.getNewState)(state, newState);
      }
    case authActions.DO_LOGIN + "_FULFILLED":
      {
        var user = action.payload.data;
        var newState = {
          cf: user.cf,
          fetching: false,
          isAuthorized: state.cookie ? true : false,
          user: user,
          error: null
        };

        setAuthLocalStorage(newState);
        return (0, _helper.getNewState)(state, newState);
      }
    case authActions.DO_LOGIN + "_REJECTED":
      {
        var err = action.payload.response.data;

        var newState = {
          fetching: false,
          isAuthorized: false,
          error: err
        };

        setAuthLocalStorage(newState);
        return (0, _helper.getNewState)(state, newState);
      }
  }

  return state;
}

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = hallReducer;

var _helper = __webpack_require__(106);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var hallReducerInitState = {
    activity: {
        group_session_joins: [],
        sessions: [],
        queues: [],
        session_requests: [],
        prescreens: [],
        zoom_invites: [],
        fetching: {
            group_session_joins: true,
            sessions: true,
            queues: true,
            session_requests: true,
            prescreens: true,
            zoom_invites: true
        },
        error: null
    },
    traffic: {
        data: [],
        fetching: true,
        error: null
    },
    companies: {
        data: [],
        fetching: true,
        error: null
    },
    // from socket

    // dah tak pakai dah, kita pakai kat store.user.online_companies
    onlineCompanies: [],
    queueCompanies: []
};

function hallReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : hallReducerInitState;
    var action = arguments[1];

    var key = "";
    var newObj = {};
    console.log("Action");
    //set key here
    if (action.type.indexOf(hallAction.TRAFFIC) > -1) {
        key = "traffic";
    }

    if (action.type.indexOf(hallAction.FETCH_COMPANIES) > -1) {
        key = "companies";
    }

    if (action.type.indexOf(hallAction.ACTIVITY) > -1) {
        key = "activity";
    }

    // pending, set fetching to true
    if (action.type.indexOf('_PENDING') > -1) {

        var newState = {};

        if (key !== "activity") {
            newState["fetching"] = true;
        } else {
            newState["fetching"] = state[key]["fetching"];

            if (action.type.indexOf(hallAction.ActivityType.SESSION_REQUEST) > -1) {
                newState.fetching["session_requests"] = true;
            } else if (action.type.indexOf(hallAction.ActivityType.SESSION) > -1) {
                newState.fetching["sessions"] = true;
            } else if (action.type.indexOf(hallAction.ActivityType.QUEUE) > -1) {
                newState.fetching["queues"] = true;
            } else if (action.type.indexOf(hallAction.ActivityType.PRESCREEN) > -1) {
                newState.fetching["prescreens"] = true;
            } else if (action.type.indexOf(hallAction.ActivityType.ZOOM_INVITE) > -1) {
                newState.fetching["zoom_invites"] = true;
            } else if (action.type.indexOf(hallAction.ActivityType.GROUP_SESSION_JOIN) > -1) {
                newState.fetching["group_session_joins"] = true;
            } else if (action.type.indexOf(hallAction.ActivityType.NOTIFICATION_COUNT) > -1) {
                newState.fetching["notification_count"] = true;
            } else if (action.type.indexOf(hallAction.ActivityType.INBOX_COUNT) > -1) {
                newState.fetching["inbox_count"] = true;
            }
        }

        newState = (0, _helper.getNewState)(state[key], newState);
        newObj[key] = newState;
        return (0, _helper.getNewState)(state, newObj);
    }
    // fulfilled, set fetching to false and set data
    else if (action.type.indexOf('_FULFILLED') > -1) {
            var data = action.payload.data.data;
            var newState = {};

            if (key !== "activity") {
                newState["data"] = data;
                newState["fetching"] = false;
            } else {
                newState["fetching"] = state[key]["fetching"];
                if (data.user && data.user.sessions) {
                    newState["sessions"] = data.user.sessions;
                    newState.fetching["sessions"] = false;
                }
                if (data.user && data.user.queues) {
                    newState["queues"] = data.user.queues;
                    newState.fetching["queues"] = false;
                }
                if (data.user && data.user.session_requests) {
                    newState["session_requests"] = data.user.session_requests;
                    newState.fetching["session_requests"] = false;
                }
                if (data.user && data.user.prescreens) {
                    newState["prescreens"] = data.user.prescreens;
                    newState.fetching["prescreens"] = false;
                }
                if (data.user && data.user.zoom_invites) {
                    newState["zoom_invites"] = data.user.zoom_invites;
                    newState.fetching["zoom_invites"] = false;
                }
                if (data.user && data.user.group_sessions) {
                    newState["group_session_joins"] = data.user.group_sessions;
                    newState.fetching["group_session_joins"] = false;
                }
                if (data.notifications && data.notifications[0]) {
                    newState["notification_count"] = data.notifications[0].ttl;
                    newState.fetching["notification_count"] = false;
                }
                if (data.messages_count) {
                    newState["inbox_count"] = data.messages_count.total_unread;
                    newState.fetching["inbox_count"] = false;
                }
            }

            newState = (0, _helper.getNewState)(state[key], newState);
            newObj[key] = newState;
            return (0, _helper.getNewState)(state, newObj);
        }
        // rejected, set fetching to false and set error
        else if (action.type.indexOf('_REJECTED') > -1) {
                var newState = (0, _helper.getNewState)(state[key], {
                    fetching: false,
                    error: action.payload
                });

                newObj[key] = newState;
                return (0, _helper.getNewState)(state, newObj);
            } else {

                // non axios action
                if (action.type == hallAction.SET_NON_AXIOS) {
                    var newState = {};
                    newState[action.payload.key] = action.payload.data;
                    return (0, _helper.getNewState)(state, newState);
                }

                return state;
            }

    return state;
};

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _apiHelper = __webpack_require__(3);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

var _otherActions = __webpack_require__(30);

var _dbConfig = __webpack_require__(5);

var _appConfig = __webpack_require__(4);

var _navigation = __webpack_require__(254);

var Navigation = _interopRequireWildcard(_navigation);

var _headerLayout = __webpack_require__(621);

var _headerLayout2 = _interopRequireDefault(_headerLayout);

var _footerLayout = __webpack_require__(622);

var _footerLayout2 = _interopRequireDefault(_footerLayout);

var _leftBarLayout = __webpack_require__(623);

var _leftBarLayout2 = _interopRequireDefault(_leftBarLayout);

var _rightBarLayout = __webpack_require__(624);

var _rightBarLayout2 = _interopRequireDefault(_rightBarLayout);

var _focusCard = __webpack_require__(305);

var _focusCard2 = _interopRequireDefault(_focusCard);

var _support = __webpack_require__(303);

var _blockLoader = __webpack_require__(626);

var _blockLoader2 = _interopRequireDefault(_blockLoader);

var _socketClient = __webpack_require__(17);

var _socketConfig = __webpack_require__(32);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import { render } from "react-dom";


//singleton


//state is from redux reducer
// with multiple objects
function mapStateToProps(state, ownProps) {
  return {
    notification_count: state.hall.activity.notification_count,
    inbox_count: state.hall.activity.inbox_count
  };
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)({}, dispatch);
}

var PrimaryLayout = function (_React$Component) {
  _inherits(PrimaryLayout, _React$Component);

  function PrimaryLayout(props) {
    _classCallCheck(this, PrimaryLayout);

    var _this = _possibleConstructorReturn(this, (PrimaryLayout.__proto__ || Object.getPrototypeOf(PrimaryLayout)).call(this, props));

    _this.state = {
      loadingCf: true,
      count_notification: 0
    };
    return _this;
  }

  _createClass(PrimaryLayout, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      (0, _socketClient.initSocket)();
      this.loadCf();
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      // takleh panggil ni store action kat dalam componentWillMount
      //hallAction.storeLoadActivity(hallAction.ActivityType.NOTIFICATION_COUNT);

      hallAction.storeLoadActivity(hallAction.ActivityType.INBOX_COUNT);

      (0, _socketClient.socketOn)(_socketConfig.BOTH.CHAT_MESSAGE, function (data) {
        hallAction.storeLoadActivity(hallAction.ActivityType.INBOX_COUNT);
      });
    }
  }, {
    key: "loadCf",
    value: function loadCf() {
      var _this2 = this;

      var query = "query{cfs(is_load:1){\n\t\tID\n\t\tname\n\t\tcountry\n\t\ttime\n\t\tis_active\n\t\tcreated_at\n\t\tupdated_at\n\t\ttitle\n\t\tflag\n\t\tbanner\n\t\tbanner_pos\n\t\tschedule\n\t\toverride_coming_soon\n    logo\n    logo_height_hall\n\t\tlogo_width_hall\n\t\tlogo_margin_hall\n\t\tlogo_height\n\t\tlogo_width\n\t\tlogo_position\n\t\tlogo_size\n\t\tstart\n\t\tend\n\t\ttime_str\n\t\ttime_str_mas\n\t\ttest_start\n\t\ttest_end\n\t\tpage_url\n\t\tpage_banner\n\t\tcan_login\n    can_register\n    organizations\n    hall_cfg_onsite_call_use_group\n  }}";

      /**
       * Organizer
        Collaborator
        Powered
        University
       */

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var cfs = res.data.data.cfs;
        var attrObj = _dbConfig.CFSMetaObject;
        for (var i in cfs) {
          for (var cfKey in cfs[i]) {
            if (attrObj.indexOf(cfKey) >= 0) {
              var val = cfs[i][cfKey];
              if (val != null) {
                try {
                  val = JSON.parse(val);
                } catch (err) {
                  console.log("err in parsing " + cfKey + " for", cfs[i]);
                  val = null;
                }
              }
              cfs[i][cfKey] = val;
            }
          }
        }

        console.log(cfs);
        (0, _authActions.setLocalStorageCf)(cfs);

        _this2.setState(function (prevState) {
          return {
            loadingCf: false
          };
        });
      });
    }
  }, {
    key: "setPageId",
    value: function setPageId() {
      var pageId = location.href.split("/");
      this.pageId = pageId[pageId.length - 1];
      if (this.pageId.indexOf("?") >= 0) {
        this.pageId = this.pageId.split("?")[0];
      }
    }
    // componentWillMount(){
    //   this.setPageId();

    // }

  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate() {
      this.setPageId();
      // this.setState(() => {
      //   
      //   return { pageId: pageId };
      // })
    }
  }, {
    key: "isHasLeftBar",
    value: function isHasLeftBar() {
      return (0, _authActions.isRoleRec)() && _appConfig.IsRecruiterNewHall;
    }
  }, {
    key: "getLeftBar",
    value: function getLeftBar(path, COMING_SOON) {
      if (!this.isHasLeftBar()) {
        return null;
      }

      var sideMenu = Navigation.getBar(path, {
        COMING_SOON: COMING_SOON,
        isHeader: false,
        count_notification: this.props.notification_count
      });

      return _react2.default.createElement(_leftBarLayout2.default, { menuList: sideMenu });
    }
  }, {
    key: "getClassName",
    value: function getClassName() {
      var r = "primary-layout";
      if (this.isHasLeftBar()) {
        r += " with-left-bar";
      }
      return r;
    }
  }, {
    key: "render",
    value: function render() {
      //scroll to top
      console.log("PrimaryLayout");

      if (this.state.loadingCf) {
        var initStyle = {
          textAlign: "center",
          display: "flex",
          height: "100vh",
          color: "white",
          alignItems: "center",
          justifyContent: "center",
          flexFlow: "column"
        };
        return _react2.default.createElement(
          "div",
          { style: initStyle },
          _react2.default.createElement(_loader.Loader, { size: "3" }),
          _react2.default.createElement(
            "div",
            null,
            "Initializing Career Fair"
          )
        );
      }

      window.scrollTo(0, 0);
      var path = this.props.match.path;

      var logData = window.location.pathname;
      logData = logData.replace(path, "");
      (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_OPEN_PAGE, logData);

      var COMING_SOON = (0, _authActions.isComingSoon)();
      var headerMenu = Navigation.getBar(path, {
        COMING_SOON: COMING_SOON,
        isHeader: true,
        count_notification: this.props.notification_count,
        count_inbox: this.props.inbox_count
      });

      var route = Navigation.getRoute(path, COMING_SOON);

      if (!(0, _authActions.isAuthorized)()) {
        return _react2.default.createElement(
          "div",
          { className: "primary-layout landing-page" },
          _react2.default.createElement(_headerLayout2.default, { menuList: headerMenu }),
          _react2.default.createElement(
            "div",
            { className: "content" },
            _react2.default.createElement(
              "div",
              { id: this.pageId, className: "main" },
              route
            )
          ),
          _react2.default.createElement(_footerLayout2.default, null)
        );
      } else {
        return _react2.default.createElement(
          "div",
          { className: this.getClassName() },
          _react2.default.createElement(_focusCard2.default, null),
          _react2.default.createElement(_support.SupportChat, null),
          _react2.default.createElement(_blockLoader2.default, null),
          _react2.default.createElement(_headerLayout2.default, { menuList: headerMenu }),
          this.getLeftBar(path, COMING_SOON),
          _react2.default.createElement(
            "div",
            { className: "content" },
            _react2.default.createElement(
              "div",
              { id: this.pageId, className: "main" },
              route
            )
          ),
          _react2.default.createElement(_footerLayout2.default, null)
        );
      }
    }
  }]);

  return PrimaryLayout;
}(_react2.default.Component);

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PrimaryLayout);

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _buttons = __webpack_require__(15);

var _login = __webpack_require__(157);

var _login2 = _interopRequireDefault(_login);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _sponsorList = __webpack_require__(112);

var _sponsorList2 = _interopRequireDefault(_sponsorList);

var _time = __webpack_require__(9);

var _timer = __webpack_require__(179);

var _timer2 = _interopRequireDefault(_timer);

var _comingSoon = __webpack_require__(180);

var _profileCard = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/home.scss");

var LandingPage = function (_React$Component) {
  _inherits(LandingPage, _React$Component);

  function LandingPage(props) {
    _classCallCheck(this, LandingPage);

    var _this = _possibleConstructorReturn(this, (LandingPage.__proto__ || Object.getPrototypeOf(LandingPage)).call(this, props));

    _this.CF = (0, _authActions.getCF)();
    _this.CFDetail = (0, _authActions.getCFObj)();
    return _this;
  }

  _createClass(LandingPage, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      // set banner image
      this.body = document.getElementsByTagName("body")[0];
      this.body.className += " landing-page top ";
      this.body.style.backgroundImage = "url('" + _appConfig.ImgConfig.getBanner(this.CFDetail.banner) + "')";
      this.body.style.backgroundPosition = this.CFDetail.banner_pos ? this.CFDetail.banner_pos : "center center";

      //add scroll event listener
      this.body.onscroll = function () {
        if (window.pageYOffset > 40) {
          _this2.body.classList.remove("top");
        }

        if (window.pageYOffset < 40) {
          _this2.body.classList.add("top");
        }
      };

      // create subtitle from  date
      if (this.CFDetail.start != null && this.CFDetail.end != null) {
        var dateStr = _time.Time.getPeriodString(this.CFDetail.start, this.CFDetail.end, this.CFDetail.dates);
        this.subtitle = _react2.default.createElement(
          "span",
          { style: { fontSize: "85%" } },
          (0, _comingSoon.getCFTimeDetail)(dateStr, this.CFDetail.time_str, this.CFDetail.time_str_mas)
        );
      }

      var OrgConfig = (0, _authActions.getCFOrg)();
      this.organizations = OrgConfig.map(function (d, i) {
        var icons = d.data.map(function (_d, _i) {
          return _this2.getOrgItem(_d, d.icon_size);
        });
        return d.data.length <= 0 ? null : _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "h1",
            null,
            d.label
          ),
          _react2.default.createElement(
            "ul",
            { className: "sponsor-container" },
            icons
          ),
          _react2.default.createElement("br", null),
          _react2.default.createElement("br", null)
        );
      });
      // this.university = OrgConfig.University.map((d, i) => {
      //     return this.getOrgItem(d, 85);
      // });
      // this.org = OrgConfig.Organizer.map((d, i) => {
      //   return this.getOrgItem(d, 85);
      // });
      // this.collab = OrgConfig.Collaborator.map((d, i) => {
      //   return this.getOrgItem(d);
      // });
      // this.powered = OrgConfig.Powered.map((d, i) => {
      //   return this.getOrgItem(d, 100);
      // });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.body.className = "";
    }
  }, {
    key: "getCfLogo",
    value: function getCfLogo() {
      var logo = null;
      if (this.CFDetail.logo !== "undefined" && this.CFDetail.logo !== null) {
        var imgUrl = "" + _appConfig.ImageUrl + this.CFDetail.logo;
        var logoStyle = {
          backgroundImage: "url('" + imgUrl + "')",
          backgroundPosition: this.CFDetail.logo_position,
          backgroundSize: this.CFDetail.logo_size,
          height: this.CFDetail.logo_height,
          width: this.CFDetail.logo_width,
          margin: "auto"
        };
        logo = _react2.default.createElement("div", { style: logoStyle });
      }

      return logo;
    }
  }, {
    key: "getOrgItem",
    value: function getOrgItem(d) {
      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 75;

      var url = _appConfig.ImgConfig.getLogo(d.logo);
      var style = (0, _profileCard.getStyleImageObj)("company", url, "cover", "center center", size);
      return _react2.default.createElement(
        "li",
        null,
        _react2.default.createElement(
          "div",
          { className: "sponsor-card" },
          _react2.default.createElement(
            "a",
            { target: "_blank", href: d.url },
            _react2.default.createElement("div", { className: "image", style: style })
          )
        )
      );
    }
  }, {
    key: "getOrgsSection",
    value: function getOrgsSection() {
      return _react2.default.createElement(
        "div",
        null,
        this.organizations
      );
    }
  }, {
    key: "render",
    value: function render() {
      //  <NavLink to={`${RootPath}/auth/sign-up-recruiter`} className="btn btn-lg btn-danger">
      //  <i className="fa fa-suitcase left"></i>Recruiter</NavLink>

      document.setTitle("Home");
      // var register = (
      //   <div>
      //     {/* <h4>Register As</h4> */}
      //     <div
      //       style={{ boxShadow: "5px 5px 8px -1px rgba(0,0,0,0.5)" }}
      //       className="item-small btn-group btn-group-justified"
      //     >
      //       <NavLink
      //         to={`${RootPath}/auth/sign-up`}
      //         className="btn btn-lg btn-success"
      //       >
      //         <i className="fa fa-user-plus left"></i>Register Now
      //       </NavLink>
      //       <a
      //         target="blank"
      //         href={`${LandingUrl}#Companies`}
      //         className="btn btn-lg btn-danger"
      //       >
      //         <i className="fa fa-suitcase left"></i>Recruiter
      //       </a>
      //     </div>
      //     <br></br>
      //     <br></br>
      //   </div>
      // );

      var register = [_react2.default.createElement("br", null), _react2.default.createElement(
        "div",
        {
          style: { boxShadow: "5px 5px 8px -1px rgba(0,0,0,0.5)" },
          className: "item-small btn-group btn-group-justified"
        },
        _react2.default.createElement(
          _reactRouterDom.NavLink,
          {
            to: _appConfig.RootPath + "/auth/sign-up",
            className: "btn btn-lg btn-success"
          },
          _react2.default.createElement("i", { className: "fa fa-user-plus left" }),
          "Register As Student"
        )
      ), _react2.default.createElement("br", null), _react2.default.createElement("br", null)];

      var intro = _react2.default.createElement(
        "h1",
        { style: { marginTop: "5px" } },
        _react2.default.createElement(
          "small",
          null,
          "WELCOME TO"
        ),
        _react2.default.createElement("br", null),
        this.CFDetail.title,
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "div",
          { className: "subtitle" },
          this.subtitle,
          _react2.default.createElement(_timer2.default, { type: "light", end: this.CFDetail.start })
        )
      );

      // var intro = <h1>
      //     {this.CFDetail.title}
      //     <br></br>
      //     <div className="subtitle">{this.subtitle}
      //         <Timer type="light" end={this.CFDetail.start}></Timer>
      //     </div>
      // </h1>

      var login = _react2.default.createElement(
        "div",
        { className: "item-small item-login" },
        _react2.default.createElement(_login2.default, this.props)
      );

      var welcome = _react2.default.createElement(
        "div",
        { id: "home-welcome" },
        _react2.default.createElement(
          "div",
          { className: "container-fluid" },
          _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "div",
              { className: "col-lg-6 left-side" },
              this.getCfLogo(),
              intro
            ),
            _react2.default.createElement(
              "div",
              { className: "col-lg-6 right-side" },
              register,
              login
            )
          )
        )
      );

      var homeBody = _react2.default.createElement(
        "div",
        { id: "home-body" },
        _react2.default.createElement("br", null),
        _react2.default.createElement(_sponsorList2.default, { type: "landing" }),
        this.getOrgsSection()
      );

      return _react2.default.createElement(
        "div",
        { id: "home" },
        welcome,
        homeBody
      );
    }
  }]);

  return LandingPage;
}(_react2.default.Component);

exports.default = LandingPage;

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.MessengerColor = exports.MessengerSize = exports.CommentsOrderBy = exports.LikeAction = exports.ColorScheme = exports.LikeLayout = exports.LikeSize = exports.SendToMessenger = exports.MessengerCheckbox = exports.MessageUs = exports.CustomChat = exports.Feed = exports.CommentsCount = exports.Comments = exports.EmbeddedPost = exports.LoginButton = exports.Login = exports.Page = exports.ShareButton = exports.Share = exports.Like = exports.InitFacebook = exports.Parser = exports.FacebookProvider = exports.default = undefined;

var _FacebookProvider2 = __webpack_require__(513);

var _FacebookProvider3 = _interopRequireDefault(_FacebookProvider2);

var _Parser2 = __webpack_require__(41);

var _Parser3 = _interopRequireDefault(_Parser2);

var _InitFacebook2 = __webpack_require__(172);

var _InitFacebook3 = _interopRequireDefault(_InitFacebook2);

var _Like2 = __webpack_require__(567);

var _Like3 = _interopRequireDefault(_Like2);

var _Share2 = __webpack_require__(278);

var _Share3 = _interopRequireDefault(_Share2);

var _ShareButton2 = __webpack_require__(568);

var _ShareButton3 = _interopRequireDefault(_ShareButton2);

var _Page2 = __webpack_require__(569);

var _Page3 = _interopRequireDefault(_Page2);

var _Login2 = __webpack_require__(281);

var _Login3 = _interopRequireDefault(_Login2);

var _LoginButton2 = __webpack_require__(570);

var _LoginButton3 = _interopRequireDefault(_LoginButton2);

var _EmbeddedPost2 = __webpack_require__(573);

var _EmbeddedPost3 = _interopRequireDefault(_EmbeddedPost2);

var _Comments2 = __webpack_require__(574);

var _Comments3 = _interopRequireDefault(_Comments2);

var _CommentsCount2 = __webpack_require__(575);

var _CommentsCount3 = _interopRequireDefault(_CommentsCount2);

var _Feed2 = __webpack_require__(576);

var _Feed3 = _interopRequireDefault(_Feed2);

var _CustomChat2 = __webpack_require__(577);

var _CustomChat3 = _interopRequireDefault(_CustomChat2);

var _MessageUs2 = __webpack_require__(578);

var _MessageUs3 = _interopRequireDefault(_MessageUs2);

var _MessengerCheckbox2 = __webpack_require__(579);

var _MessengerCheckbox3 = _interopRequireDefault(_MessengerCheckbox2);

var _SendToMessenger2 = __webpack_require__(580);

var _SendToMessenger3 = _interopRequireDefault(_SendToMessenger2);

var _LikeSize2 = __webpack_require__(275);

var _LikeSize3 = _interopRequireDefault(_LikeSize2);

var _LikeLayout2 = __webpack_require__(276);

var _LikeLayout3 = _interopRequireDefault(_LikeLayout2);

var _ColorScheme2 = __webpack_require__(173);

var _ColorScheme3 = _interopRequireDefault(_ColorScheme2);

var _LikeAction2 = __webpack_require__(277);

var _LikeAction3 = _interopRequireDefault(_LikeAction2);

var _CommentsOrderBy2 = __webpack_require__(282);

var _CommentsOrderBy3 = _interopRequireDefault(_CommentsOrderBy2);

var _MessengerSize2 = __webpack_require__(119);

var _MessengerSize3 = _interopRequireDefault(_MessengerSize2);

var _MessengerColor2 = __webpack_require__(120);

var _MessengerColor3 = _interopRequireDefault(_MessengerColor2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _FacebookProvider3.default;
exports.FacebookProvider = _FacebookProvider3.default;
exports.Parser = _Parser3.default;
exports.InitFacebook = _InitFacebook3.default;
exports.Like = _Like3.default;
exports.Share = _Share3.default;
exports.ShareButton = _ShareButton3.default;
exports.Page = _Page3.default;
exports.Login = _Login3.default;
exports.LoginButton = _LoginButton3.default;
exports.EmbeddedPost = _EmbeddedPost3.default;
exports.Comments = _Comments3.default;
exports.CommentsCount = _CommentsCount3.default;
exports.Feed = _Feed3.default;
exports.CustomChat = _CustomChat3.default;
exports.MessageUs = _MessageUs3.default;
exports.MessengerCheckbox = _MessengerCheckbox3.default;
exports.SendToMessenger = _SendToMessenger3.default;
exports.LikeSize = _LikeSize3.default;
exports.LikeLayout = _LikeLayout3.default;
exports.ColorScheme = _ColorScheme3.default;
exports.LikeAction = _LikeAction3.default;
exports.CommentsOrderBy = _CommentsOrderBy3.default;
exports.MessengerSize = _MessengerSize3.default;
exports.MessengerColor = _MessengerColor3.default;
//# sourceMappingURL=index.js.map

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _regenerator = __webpack_require__(60);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(61);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Facebook = __webpack_require__(559);

var _Facebook2 = _interopRequireDefault(_Facebook);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var facebookInstance = null;

var Facebook = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(Facebook, _Component);

  function Facebook() {
    (0, _classCallCheck3.default)(this, Facebook);
    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
  }

  Facebook.prototype.getChildContext = function getChildContext() {
    return {
      facebook: this
    };
  };

  Facebook.prototype.init = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var _props, domain, version, appId, cookie, status, xfbml, language, frictionlessRequests, wait;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!this.facebook) {
                _props = this.props, domain = _props.domain, version = _props.version, appId = _props.appId, cookie = _props.cookie, status = _props.status, xfbml = _props.xfbml, language = _props.language, frictionlessRequests = _props.frictionlessRequests, wait = _props.wait;


                this.facebook = facebookInstance || new _Facebook2.default({
                  domain: domain,
                  appId: appId,
                  version: version,
                  cookie: cookie,
                  status: status,
                  xfbml: xfbml,
                  language: language,
                  frictionlessRequests: frictionlessRequests,
                  wait: wait
                });

                facebookInstance = this.facebook;
              }

              _context.next = 3;
              return this.facebook.init();

            case 3:
              return _context.abrupt('return', this.facebook);

            case 4:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function init() {
      return _ref.apply(this, arguments);
    }

    return init;
  }();

  Facebook.prototype.render = function render() {
    return this.props.children;
  };

  return Facebook;
}(_react.Component), _class.propTypes = {
  appId: _propTypes2.default.string.isRequired,
  domain: _propTypes2.default.string,
  version: _propTypes2.default.string,
  cookie: _propTypes2.default.bool,
  status: _propTypes2.default.bool,
  xfbml: _propTypes2.default.bool,
  language: _propTypes2.default.string,
  frictionlessRequests: _propTypes2.default.bool,
  children: _propTypes2.default.node,
  wait: _propTypes2.default.bool
}, _class.childContextTypes = {
  facebook: _propTypes2.default.object.isRequired
}, _class.defaultProps = {
  version: 'v2.9',
  cookie: false,
  status: false,
  xfbml: false,
  language: 'en_US',
  frictionlessRequests: false,
  domain: 'connect.facebook.net',
  children: undefined,
  wait: false
}, _temp);
exports.default = Facebook;
//# sourceMappingURL=FacebookProvider.js.map

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() { return this })() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(515);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 515 */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(517), __esModule: true };

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(255);
__webpack_require__(256);
__webpack_require__(265);
__webpack_require__(527);
__webpack_require__(539);
__webpack_require__(540);
module.exports = __webpack_require__(37).Promise;


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(160);
var defined = __webpack_require__(161);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(164);
var descriptor = __webpack_require__(114);
var setToStringTag = __webpack_require__(117);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(62)(IteratorPrototype, __webpack_require__(33)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(63);
var anObject = __webpack_require__(46);
var getKeys = __webpack_require__(115);

module.exports = __webpack_require__(64) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(76);
var toLength = __webpack_require__(262);
var toAbsoluteIndex = __webpack_require__(522);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(160);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(65);
var toObject = __webpack_require__(264);
var IE_PROTO = __webpack_require__(165)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(525);
var step = __webpack_require__(526);
var Iterators = __webpack_require__(95);
var toIObject = __webpack_require__(76);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(257)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 525 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 526 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(92);
var global = __webpack_require__(31);
var ctx = __webpack_require__(93);
var classof = __webpack_require__(266);
var $export = __webpack_require__(53);
var isObject = __webpack_require__(54);
var aFunction = __webpack_require__(113);
var anInstance = __webpack_require__(528);
var forOf = __webpack_require__(529);
var speciesConstructor = __webpack_require__(267);
var task = __webpack_require__(268).set;
var microtask = __webpack_require__(534)();
var newPromiseCapabilityModule = __webpack_require__(168);
var perform = __webpack_require__(269);
var userAgent = __webpack_require__(535);
var promiseResolve = __webpack_require__(270);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(33)('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(536)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(117)($Promise, PROMISE);
__webpack_require__(537)(PROMISE);
Wrapper = __webpack_require__(37)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(538)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),
/* 528 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(93);
var call = __webpack_require__(530);
var isArrayIter = __webpack_require__(531);
var anObject = __webpack_require__(46);
var toLength = __webpack_require__(262);
var getIterFn = __webpack_require__(532);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(46);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(95);
var ITERATOR = __webpack_require__(33)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(266);
var ITERATOR = __webpack_require__(33)('iterator');
var Iterators = __webpack_require__(95);
module.exports = __webpack_require__(37).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 533 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(31);
var macrotask = __webpack_require__(268).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(96)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(31);
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(62);
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(31);
var core = __webpack_require__(37);
var dP = __webpack_require__(63);
var DESCRIPTORS = __webpack_require__(64);
var SPECIES = __webpack_require__(33)('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(33)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(53);
var core = __webpack_require__(37);
var global = __webpack_require__(31);
var speciesConstructor = __webpack_require__(267);
var promiseResolve = __webpack_require__(270);

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(53);
var newPromiseCapability = __webpack_require__(168);
var perform = __webpack_require__(269);

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(542), __esModule: true };

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(256);
__webpack_require__(265);
module.exports = __webpack_require__(169).f('iterator');


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(544), __esModule: true };

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(545);
__webpack_require__(255);
__webpack_require__(550);
__webpack_require__(551);
module.exports = __webpack_require__(37).Symbol;


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(31);
var has = __webpack_require__(65);
var DESCRIPTORS = __webpack_require__(64);
var $export = __webpack_require__(53);
var redefine = __webpack_require__(259);
var META = __webpack_require__(546).KEY;
var $fails = __webpack_require__(94);
var shared = __webpack_require__(166);
var setToStringTag = __webpack_require__(117);
var uid = __webpack_require__(116);
var wks = __webpack_require__(33);
var wksExt = __webpack_require__(169);
var wksDefine = __webpack_require__(170);
var enumKeys = __webpack_require__(547);
var isArray = __webpack_require__(548);
var anObject = __webpack_require__(46);
var isObject = __webpack_require__(54);
var toIObject = __webpack_require__(76);
var toPrimitive = __webpack_require__(163);
var createDesc = __webpack_require__(114);
var _create = __webpack_require__(164);
var gOPNExt = __webpack_require__(549);
var $GOPD = __webpack_require__(273);
var $DP = __webpack_require__(63);
var $keys = __webpack_require__(115);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(272).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(118).f = $propertyIsEnumerable;
  __webpack_require__(171).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(92)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(62)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(116)('meta');
var isObject = __webpack_require__(54);
var has = __webpack_require__(65);
var setDesc = __webpack_require__(63).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(94)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(115);
var gOPS = __webpack_require__(171);
var pIE = __webpack_require__(118);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(96);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(76);
var gOPN = __webpack_require__(272).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(170)('asyncIterator');


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(170)('observable');


/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(553), __esModule: true };

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(554);
module.exports = __webpack_require__(37).Object.setPrototypeOf;


/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(53);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(555).set });


/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(54);
var anObject = __webpack_require__(46);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(93)(Function.call, __webpack_require__(273).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(557), __esModule: true };

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(558);
var $Object = __webpack_require__(37).Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(53);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(164) });


/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = exports.Method = exports.LoginStatus = undefined;

var _regenerator = __webpack_require__(60);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(61);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _extends2 = __webpack_require__(77);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _debug = __webpack_require__(564);

var _debug2 = _interopRequireDefault(_debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var log = (0, _debug2.default)('react-facebook:facebook');

var LoginStatus = exports.LoginStatus = {
  CONNECTED: 'connected',
  NOT_AUTHORIZED: 'not_authorized'
};

var Method = exports.Method = {
  GET: 'get',
  POST: 'post',
  DELETE: 'delete'
};

var Facebook = function () {
  function Facebook() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck3.default)(this, Facebook);

    this.options = (0, _extends3.default)({
      domain: 'connect.facebook.net',
      version: 'v2.9',
      cookie: false,
      status: false,
      xfbml: false,
      language: 'en_US',
      frictionlessRequests: false
    }, options);

    if (!this.options.appId) {
      throw new Error('You need to set appId');
    }

    if (!this.options.wait) {
      this.init();
    }
  }

  Facebook.prototype.getAppId = function getAppId() {
    return this.options.appId;
  };

  Facebook.prototype.init = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var _this = this;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!this.loadingPromise) {
                _context.next = 2;
                break;
              }

              return _context.abrupt('return', this.loadingPromise);

            case 2:

              this.loadingPromise = new Promise(function (resolve) {
                var options = _this.options;


                window.fbAsyncInit = function () {
                  window.FB.init({
                    appId: options.appId,
                    version: options.version,
                    cookie: options.cookie,
                    status: options.status,
                    xfbml: options.xfbml,
                    frictionlessRequests: _this.frictionlessRequests
                  });

                  resolve(window.FB);
                };

                var fjs = document.getElementsByTagName('script')[0];
                if (!fjs) {
                  log('Script tag does not exists in the DOM');
                  return;
                }

                if (document.getElementById('facebook-jssdk')) {
                  return;
                }

                var js = document.createElement('script');
                js.id = 'facebook-jssdk';
                js.async = true;
                js.src = '//' + options.domain + '/' + options.language + '/sdk.js';

                fjs.parentNode.insertBefore(js, fjs);
              });

              return _context.abrupt('return', this.loadingPromise);

            case 4:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function init() {
      return _ref.apply(this, arguments);
    }

    return init;
  }();

  Facebook.prototype.process = function () {
    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(method) {
      var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      var after = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
      var fb;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return this.init();

            case 2:
              fb = _context2.sent;
              return _context2.abrupt('return', new Promise(function (resolve, reject) {
                fb[method].apply(fb, before.concat([function (response) {
                  if (!response || response.error) {
                    reject(new Error(response && response.error || 'Response is undefined'));
                    return;
                  }

                  resolve(response);
                }], after));
              }));

            case 4:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function process(_x2) {
      return _ref2.apply(this, arguments);
    }

    return process;
  }();

  Facebook.prototype.ui = function () {
    var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(options) {
      return _regenerator2.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              return _context3.abrupt('return', this.process('ui', [options]));

            case 1:
            case 'end':
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));

    function ui(_x5) {
      return _ref3.apply(this, arguments);
    }

    return ui;
  }();

  Facebook.prototype.api = function () {
    var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(path) {
      var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Method.GET;
      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return _regenerator2.default.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              return _context4.abrupt('return', this.process('api', [path, method, params]));

            case 1:
            case 'end':
              return _context4.stop();
          }
        }
      }, _callee4, this);
    }));

    function api(_x6) {
      return _ref4.apply(this, arguments);
    }

    return api;
  }();

  Facebook.prototype.login = function () {
    var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      return _regenerator2.default.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              return _context5.abrupt('return', this.process('login', [], [opts]));

            case 1:
            case 'end':
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));

    function login() {
      return _ref5.apply(this, arguments);
    }

    return login;
  }();

  Facebook.prototype.logout = function () {
    var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6() {
      return _regenerator2.default.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              return _context6.abrupt('return', this.process('logout'));

            case 1:
            case 'end':
              return _context6.stop();
          }
        }
      }, _callee6, this);
    }));

    function logout() {
      return _ref6.apply(this, arguments);
    }

    return logout;
  }();

  Facebook.prototype.getLoginStatus = function () {
    var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7() {
      return _regenerator2.default.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              return _context7.abrupt('return', this.process('getLoginStatus'));

            case 1:
            case 'end':
              return _context7.stop();
          }
        }
      }, _callee7, this);
    }));

    function getLoginStatus() {
      return _ref7.apply(this, arguments);
    }

    return getLoginStatus;
  }();

  Facebook.prototype.getAuthResponse = function () {
    var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8() {
      return _regenerator2.default.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              return _context8.abrupt('return', this.process('getAuthResponse'));

            case 1:
            case 'end':
              return _context8.stop();
          }
        }
      }, _callee8, this);
    }));

    function getAuthResponse() {
      return _ref8.apply(this, arguments);
    }

    return getAuthResponse;
  }();

  Facebook.prototype.getTokenDetail = function () {
    var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9() {
      var response;
      return _regenerator2.default.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return this.getLoginStatus();

            case 2:
              response = _context9.sent;

              if (!(response.status === LoginStatus.CONNECTED && response.authResponse)) {
                _context9.next = 5;
                break;
              }

              return _context9.abrupt('return', response.authResponse);

            case 5:
              throw new Error('Token is undefined');

            case 6:
            case 'end':
              return _context9.stop();
          }
        }
      }, _callee9, this);
    }));

    function getTokenDetail() {
      return _ref9.apply(this, arguments);
    }

    return getTokenDetail;
  }();

  Facebook.prototype.getProfile = function () {
    var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee10(params) {
      return _regenerator2.default.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              return _context10.abrupt('return', this.api('/me', Method.GET, params));

            case 1:
            case 'end':
              return _context10.stop();
          }
        }
      }, _callee10, this);
    }));

    function getProfile(_x10) {
      return _ref10.apply(this, arguments);
    }

    return getProfile;
  }();

  Facebook.prototype.getTokenDetailWithProfile = function () {
    var _ref11 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee11(params) {
      var tokenDetail, profile;
      return _regenerator2.default.wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              _context11.next = 2;
              return this.getTokenDetail();

            case 2:
              tokenDetail = _context11.sent;
              _context11.next = 5;
              return this.getProfile(params);

            case 5:
              profile = _context11.sent;
              return _context11.abrupt('return', {
                profile: profile,
                tokenDetail: tokenDetail
              });

            case 7:
            case 'end':
              return _context11.stop();
          }
        }
      }, _callee11, this);
    }));

    function getTokenDetailWithProfile(_x11) {
      return _ref11.apply(this, arguments);
    }

    return getTokenDetailWithProfile;
  }();

  Facebook.prototype.getToken = function () {
    var _ref12 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee12() {
      var authResponse;
      return _regenerator2.default.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              _context12.next = 2;
              return this.getTokenDetail();

            case 2:
              authResponse = _context12.sent;
              return _context12.abrupt('return', authResponse.accessToken);

            case 4:
            case 'end':
              return _context12.stop();
          }
        }
      }, _callee12, this);
    }));

    function getToken() {
      return _ref12.apply(this, arguments);
    }

    return getToken;
  }();

  Facebook.prototype.getUserId = function () {
    var _ref13 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee13() {
      var authResponse;
      return _regenerator2.default.wrap(function _callee13$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              _context13.next = 2;
              return this.getTokenDetail();

            case 2:
              authResponse = _context13.sent;
              return _context13.abrupt('return', authResponse.userID);

            case 4:
            case 'end':
              return _context13.stop();
          }
        }
      }, _callee13, this);
    }));

    function getUserId() {
      return _ref13.apply(this, arguments);
    }

    return getUserId;
  }();

  Facebook.prototype.sendInvite = function () {
    var _ref14 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee14(to, options) {
      return _regenerator2.default.wrap(function _callee14$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              return _context14.abrupt('return', this.ui((0, _extends3.default)({
                to: to,
                method: 'apprequests'
              }, options)));

            case 1:
            case 'end':
              return _context14.stop();
          }
        }
      }, _callee14, this);
    }));

    function sendInvite(_x12, _x13) {
      return _ref14.apply(this, arguments);
    }

    return sendInvite;
  }();

  Facebook.prototype.postAction = function () {
    var _ref15 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee15(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {
      var url;
      return _regenerator2.default.wrap(function _callee15$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              url = '/me/' + ogNamespace + ':' + ogAction + '?' + ogObject + '=' + encodeURIComponent(ogObjectUrl);


              if (noFeedStory === true) {
                url += '&no_feed_story=true';
              }

              return _context15.abrupt('return', this.api(url, Method.POST));

            case 3:
            case 'end':
              return _context15.stop();
          }
        }
      }, _callee15, this);
    }));

    function postAction(_x14, _x15, _x16, _x17, _x18) {
      return _ref15.apply(this, arguments);
    }

    return postAction;
  }();

  Facebook.prototype.getPermissions = function () {
    var _ref16 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee16() {
      var response;
      return _regenerator2.default.wrap(function _callee16$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this.api('/me/permissions');

            case 2:
              response = _context16.sent;
              return _context16.abrupt('return', response.data);

            case 4:
            case 'end':
              return _context16.stop();
          }
        }
      }, _callee16, this);
    }));

    function getPermissions() {
      return _ref16.apply(this, arguments);
    }

    return getPermissions;
  }();

  Facebook.prototype.hasPermissions = function () {
    var _ref17 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee17(permissions) {
      var usersPermissions, findedPermissions;
      return _regenerator2.default.wrap(function _callee17$(_context17) {
        while (1) {
          switch (_context17.prev = _context17.next) {
            case 0:
              _context17.next = 2;
              return this.getPermissions();

            case 2:
              usersPermissions = _context17.sent;
              findedPermissions = permissions.filter(function (p) {
                return !!usersPermissions.find(function (row) {
                  var permission = row.permission,
                      status = row.status;

                  return status === 'granted' && permission === p;
                });
              });
              return _context17.abrupt('return', findedPermissions.length === permissions.length);

            case 5:
            case 'end':
              return _context17.stop();
          }
        }
      }, _callee17, this);
    }));

    function hasPermissions(_x19) {
      return _ref17.apply(this, arguments);
    }

    return hasPermissions;
  }();

  Facebook.prototype.subscribe = function () {
    var _ref18 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee18(eventName, callback) {
      var fb;
      return _regenerator2.default.wrap(function _callee18$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              _context18.next = 2;
              return this.init();

            case 2:
              fb = _context18.sent;

              fb.Event.subscribe(eventName, callback);

            case 4:
            case 'end':
              return _context18.stop();
          }
        }
      }, _callee18, this);
    }));

    function subscribe(_x20, _x21) {
      return _ref18.apply(this, arguments);
    }

    return subscribe;
  }();

  Facebook.prototype.unsubscribe = function () {
    var _ref19 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee19(eventName, callback) {
      var fb;
      return _regenerator2.default.wrap(function _callee19$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              _context19.next = 2;
              return this.init();

            case 2:
              fb = _context19.sent;

              fb.Event.unsubscribe(eventName, callback);

            case 4:
            case 'end':
              return _context19.stop();
          }
        }
      }, _callee19, this);
    }));

    function unsubscribe(_x22, _x23) {
      return _ref19.apply(this, arguments);
    }

    return unsubscribe;
  }();

  Facebook.prototype.parse = function () {
    var _ref20 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee20(parentNode) {
      var fb;
      return _regenerator2.default.wrap(function _callee20$(_context20) {
        while (1) {
          switch (_context20.prev = _context20.next) {
            case 0:
              _context20.next = 2;
              return this.init();

            case 2:
              fb = _context20.sent;


              if (typeof parentNode === 'undefined') {
                fb.XFBML.parse();
              } else {
                fb.XFBML.parse(parentNode);
              }

            case 4:
            case 'end':
              return _context20.stop();
          }
        }
      }, _callee20, this);
    }));

    function parse(_x24) {
      return _ref20.apply(this, arguments);
    }

    return parse;
  }();

  Facebook.prototype.getRequests = function () {
    var _ref21 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee21() {
      return _regenerator2.default.wrap(function _callee21$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              return _context21.abrupt('return', this.api('/me/apprequests'));

            case 1:
            case 'end':
              return _context21.stop();
          }
        }
      }, _callee21, this);
    }));

    function getRequests() {
      return _ref21.apply(this, arguments);
    }

    return getRequests;
  }();

  Facebook.prototype.removeRequest = function () {
    var _ref22 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee22(requestID) {
      return _regenerator2.default.wrap(function _callee22$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              return _context22.abrupt('return', this.api(requestID, Method.DELETE));

            case 1:
            case 'end':
              return _context22.stop();
          }
        }
      }, _callee22, this);
    }));

    function removeRequest(_x25) {
      return _ref22.apply(this, arguments);
    }

    return removeRequest;
  }();

  Facebook.prototype.setAutoGrow = function () {
    var _ref23 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee23() {
      var fb;
      return _regenerator2.default.wrap(function _callee23$(_context23) {
        while (1) {
          switch (_context23.prev = _context23.next) {
            case 0:
              _context23.next = 2;
              return this.init();

            case 2:
              fb = _context23.sent;

              fb.Canvas.setAutoGrow();

            case 4:
            case 'end':
              return _context23.stop();
          }
        }
      }, _callee23, this);
    }));

    function setAutoGrow() {
      return _ref23.apply(this, arguments);
    }

    return setAutoGrow;
  }();

  Facebook.prototype.paySimple = function () {
    var _ref24 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee24(product) {
      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      return _regenerator2.default.wrap(function _callee24$(_context24) {
        while (1) {
          switch (_context24.prev = _context24.next) {
            case 0:
              return _context24.abrupt('return', this.ui({
                method: 'pay',
                action: 'purchaseitem',
                product: product,
                quantity: quantity
              }));

            case 1:
            case 'end':
              return _context24.stop();
          }
        }
      }, _callee24, this);
    }));

    function paySimple(_x26) {
      return _ref24.apply(this, arguments);
    }

    return paySimple;
  }();

  Facebook.prototype.pay = function () {
    var _ref25 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee25(product, options) {
      return _regenerator2.default.wrap(function _callee25$(_context25) {
        while (1) {
          switch (_context25.prev = _context25.next) {
            case 0:
              return _context25.abrupt('return', this.ui((0, _extends3.default)({
                method: 'pay',
                action: 'purchaseitem',
                product: product
              }, options)));

            case 1:
            case 'end':
              return _context25.stop();
          }
        }
      }, _callee25, this);
    }));

    function pay(_x28, _x29) {
      return _ref25.apply(this, arguments);
    }

    return pay;
  }();

  return Facebook;
}();

/*
  sendToFriends: function(options, callback) {
    if(!options) {
      options = {};
    }

    options.method = 'send';

    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.ui(options, function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.ui({
        method: 'stream.publish',
        message: message,
        attachment: {
          name: name,
          caption: caption,
          description: description,
          href: url,
          media:[{
            type: 'image',
            src:  imgUrl,
            href: url
          }]
        },
        action_links: [{
          text: 'Code',
          href: url
        }],
        user_prompt_message: message
      },
      function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  sendInviteForm: function(options, callback) {
    if(typeof options === 'function') {
      callback = options;
      options = {};
    }

    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      options.method = options.method || 'apprequests';


      FB.ui(options, function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  checkPageLike: function(pageID, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      fbApi.getUserID(function(err, userID) {
        if(err) {
          return callback(err);
        }

        var fqlQuery = 'SELECT uid FROM page_fan WHERE page_id = ' + pageID + ' and uid =  '+ userID;
        var query = FB.Data.query(fqlQuery);

        query.wait(function(rows) {
          if (rows.length === 1 && rows[0].uid === userID) {
            callback(null, true, query);
          }
          else {
            callback(null, false, query);
          }
        });
      });
    });
  },

  sendMessageToFriend: function (friendID, link, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.ui({
        to: friendID,
        method: 'send',
        link: link
      }, function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  _prepareUsers: function(data) {
    var users=[];

    for(var index in data) {
      var userData=data[index];

      var user = {
        provider_uid: 'facebook'+'_'+userData.uid,
        provider: 'facebook',
        id: userData.uid,
        name: userData.name,
        first_name: userData.first_name,
        last_name: userData.last_name,
        status: (userData.status!==null) ? userData.status : null,
        image: '//graph.facebook.com/'+userData.uid+'/picture?'
      };

      users.push(user);
    }

    return users;
  },

  getUserList: function(callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.api('fql', { q: 'SELECT uid, name, first_name, last_name, online_presence, status FROM user WHERE uid IN ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name' }, function (response)
      {
        var users = fbApi._prepareUsers(response.data);
        callback(null, users, response);
      });
    });
  },

  postFeed: function(options, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      options.method='feed';

      FB.ui(options, function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  //need publish_stream
  createAlbum: function(name, description, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.api('/me/albums', 'post', {
        name: name,
        description: description
      },function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  //need publish_stream
  addImageToAlbum: function(albumID, imageURL, message, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.api('/'+albumID+'/photos', 'post', {
        message: message,
        url: imageURL
      }, function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  //'user_photos'
  getAlbums: function(callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.api('/me/albums', function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  //'user_photos'
  getAlbumPhotos: function(albumID, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.api('/'+albumID+'/photos', function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  //'user_photos'
  getAlbumCoverPicture: function(albumID, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.api('/'+albumID+'/picture', function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  //'publish_stream'
  postPhoto: function(photoUrl, message, callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.api('/me/photos', 'post', {
        message: message,
        url: photoUrl
      },function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  },

  getPageInfo: function(callback) {
    this.afterLoad(function(err, fbApi) {
      if(err) {
        return callback(err);
      }

      FB.Canvas.getPageInfo(function(response) {
        fbApi._callCallbackByResponse(callback, response);
      });
    });
  }
*/


exports.default = Facebook;
//# sourceMappingURL=Facebook.js.map

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(561), __esModule: true };

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(562);
module.exports = __webpack_require__(37).Object.assign;


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(53);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(563) });


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(115);
var gOPS = __webpack_require__(171);
var pIE = __webpack_require__(118);
var toObject = __webpack_require__(264);
var IObject = __webpack_require__(261);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(94)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
/**
 * Colors.
 */

exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */
// eslint-disable-next-line complexity

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
    return true;
  } // Internet Explorer and Edge do not support colors.


  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  } // Is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}
/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */


function formatArgs(args) {
  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);

  if (!this.useColors) {
    return;
  }

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into

  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function (match) {
    if (match === '%%') {
      return;
    }

    index++;

    if (match === '%c') {
      // We only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });
  args.splice(lastC, 0, c);
}
/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */


function log() {
  var _console;

  // This hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return (typeof console === "undefined" ? "undefined" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);
}
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */


function save(namespaces) {
  try {
    if (namespaces) {
      exports.storage.setItem('debug', namespaces);
    } else {
      exports.storage.removeItem('debug');
    }
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */


function load() {
  var r;

  try {
    r = exports.storage.getItem('debug');
  } catch (error) {} // Swallow
  // XXX (@Qix-) should we be logging these?
  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = Object({"NODE_ENV":"production"}).DEBUG;
  }

  return r;
}
/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */


function localstorage() {
  try {
    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
    // The Browser also has localStorage in the global context.
    return localStorage;
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}

module.exports = __webpack_require__(565)(exports);
var formatters = module.exports.formatters;
/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
  try {
    return JSON.stringify(v);
  } catch (error) {
    return '[UnexpectedJSONParseError]: ' + error.message;
  }
};


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */
function setup(env) {
  createDebug.debug = createDebug;
  createDebug.default = createDebug;
  createDebug.coerce = coerce;
  createDebug.disable = disable;
  createDebug.enable = enable;
  createDebug.enabled = enabled;
  createDebug.humanize = __webpack_require__(566);
  Object.keys(env).forEach(function (key) {
    createDebug[key] = env[key];
  });
  /**
  * Active `debug` instances.
  */

  createDebug.instances = [];
  /**
  * The currently active debug mode names, and names to skip.
  */

  createDebug.names = [];
  createDebug.skips = [];
  /**
  * Map of special "%n" handling functions, for the debug "format" argument.
  *
  * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
  */

  createDebug.formatters = {};
  /**
  * Selects a color for a debug namespace
  * @param {String} namespace The namespace string for the for the debug instance to be colored
  * @return {Number|String} An ANSI color code for the given namespace
  * @api private
  */

  function selectColor(namespace) {
    var hash = 0;

    for (var i = 0; i < namespace.length; i++) {
      hash = (hash << 5) - hash + namespace.charCodeAt(i);
      hash |= 0; // Convert to 32bit integer
    }

    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
  }

  createDebug.selectColor = selectColor;
  /**
  * Create a debugger with the given `namespace`.
  *
  * @param {String} namespace
  * @return {Function}
  * @api public
  */

  function createDebug(namespace) {
    var prevTime;

    function debug() {
      // Disabled?
      if (!debug.enabled) {
        return;
      }

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var self = debug; // Set `diff` timestamp

      var curr = Number(new Date());
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;
      args[0] = createDebug.coerce(args[0]);

      if (typeof args[0] !== 'string') {
        // Anything else let's inspect with %O
        args.unshift('%O');
      } // Apply any `formatters` transformations


      var index = 0;
      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
        // If we encounter an escaped % then don't increase the array index
        if (match === '%%') {
          return match;
        }

        index++;
        var formatter = createDebug.formatters[format];

        if (typeof formatter === 'function') {
          var val = args[index];
          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

          args.splice(index, 1);
          index--;
        }

        return match;
      }); // Apply env-specific formatting (colors, etc.)

      createDebug.formatArgs.call(self, args);
      var logFn = self.log || createDebug.log;
      logFn.apply(self, args);
    }

    debug.namespace = namespace;
    debug.enabled = createDebug.enabled(namespace);
    debug.useColors = createDebug.useColors();
    debug.color = selectColor(namespace);
    debug.destroy = destroy;
    debug.extend = extend; // Debug.formatArgs = formatArgs;
    // debug.rawLog = rawLog;
    // env-specific initialization logic for debug instances

    if (typeof createDebug.init === 'function') {
      createDebug.init(debug);
    }

    createDebug.instances.push(debug);
    return debug;
  }

  function destroy() {
    var index = createDebug.instances.indexOf(this);

    if (index !== -1) {
      createDebug.instances.splice(index, 1);
      return true;
    }

    return false;
  }

  function extend(namespace, delimiter) {
    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
  }
  /**
  * Enables a debug mode by namespaces. This can include modes
  * separated by a colon and wildcards.
  *
  * @param {String} namespaces
  * @api public
  */


  function enable(namespaces) {
    createDebug.save(namespaces);
    createDebug.names = [];
    createDebug.skips = [];
    var i;
    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    var len = split.length;

    for (i = 0; i < len; i++) {
      if (!split[i]) {
        // ignore empty strings
        continue;
      }

      namespaces = split[i].replace(/\*/g, '.*?');

      if (namespaces[0] === '-') {
        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        createDebug.names.push(new RegExp('^' + namespaces + '$'));
      }
    }

    for (i = 0; i < createDebug.instances.length; i++) {
      var instance = createDebug.instances[i];
      instance.enabled = createDebug.enabled(instance.namespace);
    }
  }
  /**
  * Disable debug output.
  *
  * @api public
  */


  function disable() {
    createDebug.enable('');
  }
  /**
  * Returns true if the given mode name is enabled, false otherwise.
  *
  * @param {String} name
  * @return {Boolean}
  * @api public
  */


  function enabled(name) {
    if (name[name.length - 1] === '*') {
      return true;
    }

    var i;
    var len;

    for (i = 0, len = createDebug.skips.length; i < len; i++) {
      if (createDebug.skips[i].test(name)) {
        return false;
      }
    }

    for (i = 0, len = createDebug.names.length; i < len; i++) {
      if (createDebug.names[i].test(name)) {
        return true;
      }
    }

    return false;
  }
  /**
  * Coerce `val`.
  *
  * @param {Mixed} val
  * @return {Mixed}
  * @api private
  */


  function coerce(val) {
    if (val instanceof Error) {
      return val.stack || val.message;
    }

    return val;
  }

  createDebug.enable(createDebug.load());
  return createDebug;
}

module.exports = setup;



/***/ }),
/* 566 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = Like;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

var _getCurrentHref = __webpack_require__(78);

var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);

var _LikeSize = __webpack_require__(275);

var _LikeSize2 = _interopRequireDefault(_LikeSize);

var _LikeLayout = __webpack_require__(276);

var _LikeLayout2 = _interopRequireDefault(_LikeLayout);

var _ColorScheme = __webpack_require__(173);

var _ColorScheme2 = _interopRequireDefault(_ColorScheme);

var _LikeAction = __webpack_require__(277);

var _LikeAction2 = _interopRequireDefault(_LikeAction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Like(props) {
  var className = props.className,
      _props$href = props.href,
      href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
      layout = props.layout,
      colorScheme = props.colorScheme,
      action = props.action,
      showFaces = props.showFaces,
      share = props.share,
      children = props.children,
      width = props.width,
      size = props.size,
      kidDirectedSite = props.kidDirectedSite,
      referral = props.referral,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-like',
        'data-ref': referral,
        'data-href': href,
        'data-layout': layout,
        'data-colorscheme': colorScheme,
        'data-action': action,
        'data-show-faces': showFaces,
        'data-share': share,
        'data-width': width,
        'data-size': size,
        'data-kid-directed-site': kidDirectedSite
      },
      children
    )
  );
}

Like.propTypes = {
  className: _propTypes2.default.string,
  referral: _propTypes2.default.string,
  href: _propTypes2.default.string,
  layout: _propTypes2.default.string.isRequired,
  showFaces: _propTypes2.default.bool.isRequired,
  colorScheme: _propTypes2.default.string.isRequired,
  action: _propTypes2.default.string.isRequired,
  share: _propTypes2.default.bool.isRequired,
  children: _propTypes2.default.node,
  width: _propTypes2.default.oneOfType([_propTypes2.default.number.isRequired, _propTypes2.default.string.isRequired]),
  size: _propTypes2.default.string,
  kidDirectedSite: _propTypes2.default.bool.isRequired,
  onParse: _propTypes2.default.func
};

Like.defaultProps = {
  layout: _LikeLayout2.default.STANDARD,
  showFaces: false,
  colorScheme: _ColorScheme2.default.LIGHT,
  action: _LikeAction2.default.LIKE,
  share: false,
  size: _LikeSize2.default.SMALL,
  kidDirectedSite: false,
  children: undefined,
  className: undefined,
  href: undefined,
  referral: undefined,
  width: undefined,
  onParse: undefined
};
//# sourceMappingURL=Like.js.map

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(77);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(280);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

exports.default = ShareButton;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Share = __webpack_require__(278);

var _Share2 = _interopRequireDefault(_Share);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ShareButton(props) {
  var className = props.className,
      iconClassName = props.iconClassName,
      icon = props.icon,
      children = props.children,
      rest = (0, _objectWithoutProperties3.default)(props, ['className', 'iconClassName', 'icon', 'children']);


  return _react2.default.createElement(_Share2.default, (0, _extends3.default)({}, rest, {
    render: function render(_ref) {
      var isReady = _ref.isReady,
          onClick = _ref.onClick;
      return _react2.default.createElement(
        'button',
        {
          type: 'button',
          disabled: !isReady,
          className: className,
          onClick: onClick
        },
        !!icon && _react2.default.createElement('i', { className: iconClassName }),
        children
      );
    }
  }));
}

ShareButton.propTypes = (0, _extends3.default)({}, _Share2.default.propTypes, {
  className: _propTypes2.default.string,
  iconClassName: _propTypes2.default.string,
  icon: _propTypes2.default.bool
});

ShareButton.defaultProps = (0, _extends3.default)({}, _Share2.default.defaultProps, {
  className: 'btn btn-lg',
  iconClassName: 'fa fa-facebook pull-left',
  icon: true
});
//# sourceMappingURL=ShareButton.js.map

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = Page;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

var _getCurrentHref = __webpack_require__(78);

var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Page(props) {
  var className = props.className,
      style = props.style,
      _props$href = props.href,
      href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
      tabs = props.tabs,
      hideCover = props.hideCover,
      width = props.width,
      height = props.height,
      showFacepile = props.showFacepile,
      hideCTA = props.hideCTA,
      smallHeader = props.smallHeader,
      adaptContainerWidth = props.adaptContainerWidth,
      children = props.children,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-page',
        style: style,
        'data-tabs': tabs,
        'data-hide-cover': hideCover,
        'data-show-facepile': showFacepile,
        'data-hide-cta': hideCTA,
        'data-href': href,
        'data-small-header': smallHeader,
        'data-adapt-container-width': adaptContainerWidth,
        'data-height': height,
        'data-width': width
      },
      children
    )
  );
}

Page.propTypes = {
  className: _propTypes2.default.string,
  href: _propTypes2.default.string.isRequired,
  tabs: _propTypes2.default.string,
  hideCover: _propTypes2.default.bool,
  height: _propTypes2.default.oneOfType([_propTypes2.default.number.isRequired, _propTypes2.default.string.isRequired]),
  width: _propTypes2.default.oneOfType([_propTypes2.default.number.isRequired, _propTypes2.default.string.isRequired]),
  showFacepile: _propTypes2.default.bool,
  hideCTA: _propTypes2.default.bool,
  smallHeader: _propTypes2.default.bool,
  adaptContainerWidth: _propTypes2.default.bool,
  children: _propTypes2.default.node,
  onParse: _propTypes2.default.func
};

Page.defaultProps = {
  width: 340,
  height: 500,
  tabs: 'timeline',
  hideCover: false,
  showFacepile: true,
  hideCTA: false,
  smallHeader: false,
  adaptContainerWidth: true,
  children: undefined,
  className: undefined,
  onParse: undefined
};
//# sourceMappingURL=Page.js.map

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(77);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(280);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactSpinnerChildren = __webpack_require__(571);

var _reactSpinnerChildren2 = _interopRequireDefault(_reactSpinnerChildren);

var _Login = __webpack_require__(281);

var _Login2 = _interopRequireDefault(_Login);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LoginButton = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(LoginButton, _Component);

  function LoginButton() {
    (0, _classCallCheck3.default)(this, LoginButton);
    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
  }

  LoginButton.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        children = _props.children,
        buttonClassName = _props.buttonClassName,
        iconClassName = _props.iconClassName,
        icon = _props.icon,
        spinner = _props.spinner,
        spinnerClassName = _props.spinnerClassName,
        rest = (0, _objectWithoutProperties3.default)(_props, ['children', 'buttonClassName', 'iconClassName', 'icon', 'spinner', 'spinnerClassName']);


    return _react2.default.createElement(_Login2.default, (0, _extends3.default)({}, rest, {
      render: function render(_ref) {
        var isWorking = _ref.isWorking,
            isLoading = _ref.isLoading,
            onClick = _ref.onClick;
        return _react2.default.createElement(
          'button',
          {
            type: 'button',
            className: buttonClassName,
            onClick: onClick,
            disabled: isWorking || isLoading
          },
          !!icon && _react2.default.createElement('i', { className: iconClassName }),
          children,
          !!spinner && (isWorking || isLoading) && _react2.default.createElement(_reactSpinnerChildren2.default, {
            config: _this2.props.spinnerConfig,
            className: spinnerClassName
          })
        );
      }
    }));
  };

  return LoginButton;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _Login2.default.propTypes, {
  spinnerConfig: _propTypes2.default.object.isRequired,
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  buttonClassName: _propTypes2.default.string,
  iconClassName: _propTypes2.default.string,
  icon: _propTypes2.default.bool,
  spinnerClassName: _propTypes2.default.string,
  spinner: _propTypes2.default.bool
}), _class.defaultProps = (0, _extends3.default)({}, _Login2.default.defaultProps, {
  spinnerConfig: {},
  buttonClassName: 'btn btn-lg',
  iconClassName: 'fa fa-facebook pull-left',
  spinner: true,
  icon: true
}), _temp);
exports.default = LoginButton;
//# sourceMappingURL=LoginButton.js.map

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _spin = __webpack_require__(572);

var _spin2 = _interopRequireDefault(_spin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Spinner = function (_Component) {
  _inherits(Spinner, _Component);

  function Spinner() {
    _classCallCheck(this, Spinner);

    return _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).apply(this, arguments));
  }

  _createClass(Spinner, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.updateSpinner();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.updateSpinner();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.spinner) {
        this.spinner.stop();
        this.spinner = null;
      }
    }
  }, {
    key: 'updateSpinner',
    value: function updateSpinner() {
      var loaded = this.props.loaded;

      if (!loaded && !this.spinner) {
        this.spinner = new _spin2.default(this.props.config);
        this.spinner.spin(this.refs.loader);
      } else if (loaded && this.spinner) {
        this.spinner.stop();
        this.spinner = null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          loaded = _props.loaded,
          className = _props.className;


      if (loaded) {
        return this.props.children ? _react.Children.only(this.props.children) : null;
      }

      return _react2.default.createElement('div', { className: className, ref: 'loader' });
    }
  }]);

  return Spinner;
}(_react.Component);

Spinner.propTypes = {
  className: _propTypes2.default.string,
  config: _propTypes2.default.object.isRequired,
  loaded: _propTypes2.default.bool.isRequired,
  children: _propTypes2.default.node
};
Spinner.defaultProps = {
  config: {},
  loaded: false,
  className: 'loader'
};
exports.default = Spinner;

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Copyright (c) 2011-2014 Felix Gnass
 * Licensed under the MIT license
 * http://spin.js.org/
 *
 * Example:
    var opts = {
      lines: 12             // The number of lines to draw
    , length: 7             // The length of each line
    , width: 5              // The line thickness
    , radius: 10            // The radius of the inner circle
    , scale: 1.0            // Scales overall size of the spinner
    , corners: 1            // Roundness (0..1)
    , color: '#000'         // #rgb or #rrggbb
    , opacity: 1/4          // Opacity of the lines
    , rotate: 0             // Rotation offset
    , direction: 1          // 1: clockwise, -1: counterclockwise
    , speed: 1              // Rounds per second
    , trail: 100            // Afterglow percentage
    , fps: 20               // Frames per second when using setTimeout()
    , zIndex: 2e9           // Use a high z-index by default
    , className: 'spinner'  // CSS class to assign to the element
    , top: '50%'            // center vertically
    , left: '50%'           // center horizontally
    , shadow: false         // Whether to render a shadow
    , hwaccel: false        // Whether to use hardware acceleration (might be buggy)
    , position: 'absolute'  // Element positioning
    }
    var target = document.getElementById('foo')
    var spinner = new Spinner(opts).spin(target)
 */
;(function (root, factory) {

  /* CommonJS */
  if (typeof module == 'object' && module.exports) module.exports = factory()

  /* AMD module */
  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

  /* Browser global */
  else root.Spinner = factory()
}(this, function () {
  "use strict"

  var prefixes = ['webkit', 'Moz', 'ms', 'O'] /* Vendor prefixes */
    , animations = {} /* Animation rules keyed by their name */
    , useCssAnimations /* Whether to use CSS animations or setTimeout */
    , sheet /* A stylesheet to hold the @keyframe or VML rules. */

  /**
   * Utility function to create elements. If no tag name is given,
   * a DIV is created. Optionally properties can be passed.
   */
  function createEl (tag, prop) {
    var el = document.createElement(tag || 'div')
      , n

    for (n in prop) el[n] = prop[n]
    return el
  }

  /**
   * Appends children and returns the parent.
   */
  function ins (parent /* child1, child2, ...*/) {
    for (var i = 1, n = arguments.length; i < n; i++) {
      parent.appendChild(arguments[i])
    }

    return parent
  }

  /**
   * Creates an opacity keyframe animation rule and returns its name.
   * Since most mobile Webkits have timing issues with animation-delay,
   * we create separate rules for each line/segment.
   */
  function addAnimation (alpha, trail, i, lines) {
    var name = ['opacity', trail, ~~(alpha * 100), i, lines].join('-')
      , start = 0.01 + i/lines * 100
      , z = Math.max(1 - (1-alpha) / trail * (100-start), alpha)
      , prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase()
      , pre = prefix && '-' + prefix + '-' || ''

    if (!animations[name]) {
      sheet.insertRule(
        '@' + pre + 'keyframes ' + name + '{' +
        '0%{opacity:' + z + '}' +
        start + '%{opacity:' + alpha + '}' +
        (start+0.01) + '%{opacity:1}' +
        (start+trail) % 100 + '%{opacity:' + alpha + '}' +
        '100%{opacity:' + z + '}' +
        '}', sheet.cssRules.length)

      animations[name] = 1
    }

    return name
  }

  /**
   * Tries various vendor prefixes and returns the first supported property.
   */
  function vendor (el, prop) {
    var s = el.style
      , pp
      , i

    prop = prop.charAt(0).toUpperCase() + prop.slice(1)
    if (s[prop] !== undefined) return prop
    for (i = 0; i < prefixes.length; i++) {
      pp = prefixes[i]+prop
      if (s[pp] !== undefined) return pp
    }
  }

  /**
   * Sets multiple style properties at once.
   */
  function css (el, prop) {
    for (var n in prop) {
      el.style[vendor(el, n) || n] = prop[n]
    }

    return el
  }

  /**
   * Fills in default values.
   */
  function merge (obj) {
    for (var i = 1; i < arguments.length; i++) {
      var def = arguments[i]
      for (var n in def) {
        if (obj[n] === undefined) obj[n] = def[n]
      }
    }
    return obj
  }

  /**
   * Returns the line color from the given string or array.
   */
  function getColor (color, idx) {
    return typeof color == 'string' ? color : color[idx % color.length]
  }

  // Built-in defaults

  var defaults = {
    lines: 12             // The number of lines to draw
  , length: 7             // The length of each line
  , width: 5              // The line thickness
  , radius: 10            // The radius of the inner circle
  , scale: 1.0            // Scales overall size of the spinner
  , corners: 1            // Roundness (0..1)
  , color: '#000'         // #rgb or #rrggbb
  , opacity: 1/4          // Opacity of the lines
  , rotate: 0             // Rotation offset
  , direction: 1          // 1: clockwise, -1: counterclockwise
  , speed: 1              // Rounds per second
  , trail: 100            // Afterglow percentage
  , fps: 20               // Frames per second when using setTimeout()
  , zIndex: 2e9           // Use a high z-index by default
  , className: 'spinner'  // CSS class to assign to the element
  , top: '50%'            // center vertically
  , left: '50%'           // center horizontally
  , shadow: false         // Whether to render a shadow
  , hwaccel: false        // Whether to use hardware acceleration (might be buggy)
  , position: 'absolute'  // Element positioning
  }

  /** The constructor */
  function Spinner (o) {
    this.opts = merge(o || {}, Spinner.defaults, defaults)
  }

  // Global defaults that override the built-ins:
  Spinner.defaults = {}

  merge(Spinner.prototype, {
    /**
     * Adds the spinner to the given target element. If this instance is already
     * spinning, it is automatically removed from its previous target b calling
     * stop() internally.
     */
    spin: function (target) {
      this.stop()

      var self = this
        , o = self.opts
        , el = self.el = createEl(null, {className: o.className})

      css(el, {
        position: o.position
      , width: 0
      , zIndex: o.zIndex
      , left: o.left
      , top: o.top
      })

      if (target) {
        target.insertBefore(el, target.firstChild || null)
      }

      el.setAttribute('role', 'progressbar')
      self.lines(el, self.opts)

      if (!useCssAnimations) {
        // No CSS animation support, use setTimeout() instead
        var i = 0
          , start = (o.lines - 1) * (1 - o.direction) / 2
          , alpha
          , fps = o.fps
          , f = fps / o.speed
          , ostep = (1 - o.opacity) / (f * o.trail / 100)
          , astep = f / o.lines

        ;(function anim () {
          i++
          for (var j = 0; j < o.lines; j++) {
            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity)

            self.opacity(el, j * o.direction + start, alpha, o)
          }
          self.timeout = self.el && setTimeout(anim, ~~(1000 / fps))
        })()
      }
      return self
    }

    /**
     * Stops and removes the Spinner.
     */
  , stop: function () {
      var el = this.el
      if (el) {
        clearTimeout(this.timeout)
        if (el.parentNode) el.parentNode.removeChild(el)
        this.el = undefined
      }
      return this
    }

    /**
     * Internal method that draws the individual lines. Will be overwritten
     * in VML fallback mode below.
     */
  , lines: function (el, o) {
      var i = 0
        , start = (o.lines - 1) * (1 - o.direction) / 2
        , seg

      function fill (color, shadow) {
        return css(createEl(), {
          position: 'absolute'
        , width: o.scale * (o.length + o.width) + 'px'
        , height: o.scale * o.width + 'px'
        , background: color
        , boxShadow: shadow
        , transformOrigin: 'left'
        , transform: 'rotate(' + ~~(360/o.lines*i + o.rotate) + 'deg) translate(' + o.scale*o.radius + 'px' + ',0)'
        , borderRadius: (o.corners * o.scale * o.width >> 1) + 'px'
        })
      }

      for (; i < o.lines; i++) {
        seg = css(createEl(), {
          position: 'absolute'
        , top: 1 + ~(o.scale * o.width / 2) + 'px'
        , transform: o.hwaccel ? 'translate3d(0,0,0)' : ''
        , opacity: o.opacity
        , animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1 / o.speed + 's linear infinite'
        })

        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px #000'), {top: '2px'}))
        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')))
      }
      return el
    }

    /**
     * Internal method that adjusts the opacity of a single line.
     * Will be overwritten in VML fallback mode below.
     */
  , opacity: function (el, i, val) {
      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val
    }

  })


  function initVML () {

    /* Utility function to create a VML tag */
    function vml (tag, attr) {
      return createEl('<' + tag + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', attr)
    }

    // No CSS transforms but VML support, add a CSS rule for VML elements:
    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)')

    Spinner.prototype.lines = function (el, o) {
      var r = o.scale * (o.length + o.width)
        , s = o.scale * 2 * r

      function grp () {
        return css(
          vml('group', {
            coordsize: s + ' ' + s
          , coordorigin: -r + ' ' + -r
          })
        , { width: s, height: s }
        )
      }

      var margin = -(o.width + o.length) * o.scale * 2 + 'px'
        , g = css(grp(), {position: 'absolute', top: margin, left: margin})
        , i

      function seg (i, dx, filter) {
        ins(
          g
        , ins(
            css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx})
          , ins(
              css(
                vml('roundrect', {arcsize: o.corners})
              , { width: r
                , height: o.scale * o.width
                , left: o.scale * o.radius
                , top: -o.scale * o.width >> 1
                , filter: filter
                }
              )
            , vml('fill', {color: getColor(o.color, i), opacity: o.opacity})
            , vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change
            )
          )
        )
      }

      if (o.shadow)
        for (i = 1; i <= o.lines; i++) {
          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)')
        }

      for (i = 1; i <= o.lines; i++) seg(i)
      return ins(el, g)
    }

    Spinner.prototype.opacity = function (el, i, val, o) {
      var c = el.firstChild
      o = o.shadow && o.lines || 0
      if (c && i + o < c.childNodes.length) {
        c = c.childNodes[i + o]; c = c && c.firstChild; c = c && c.firstChild
        if (c) c.opacity = val
      }
    }
  }

  if (typeof document !== 'undefined') {
    sheet = (function () {
      var el = createEl('style', {type : 'text/css'})
      ins(document.getElementsByTagName('head')[0], el)
      return el.sheet || el.styleSheet
    }())

    var probe = css(createEl('group'), {behavior: 'url(#default#VML)'})

    if (!vendor(probe, 'transform') && probe.adj) initVML()
    else useCssAnimations = vendor(probe, 'animation')
  }

  return Spinner

}));


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = EmbeddedPost;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EmbeddedPost(props) {
  var className = props.className,
      href = props.href,
      width = props.width,
      showText = props.showText,
      children = props.children,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-post',
        'data-href': href,
        'data-width': width,
        'data-show-text': showText
      },
      children
    )
  );
}

EmbeddedPost.propTypes = {
  className: _propTypes2.default.string,
  href: _propTypes2.default.string.isRequired,
  width: _propTypes2.default.oneOfType([_propTypes2.default.number.isRequired, _propTypes2.default.string.isRequired]),
  showText: _propTypes2.default.bool.isRequired,
  children: _propTypes2.default.node,
  onParse: _propTypes2.default.func
};

EmbeddedPost.defaultProps = {
  href: 'http://www.facebook.com',
  width: 500, // 350 - 750
  showText: false,
  children: undefined,
  className: undefined,
  onParse: undefined
};
//# sourceMappingURL=EmbeddedPost.js.map

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = Comments;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

var _getCurrentHref = __webpack_require__(78);

var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);

var _ColorScheme = __webpack_require__(173);

var _ColorScheme2 = _interopRequireDefault(_ColorScheme);

var _CommentsOrderBy = __webpack_require__(282);

var _CommentsOrderBy2 = _interopRequireDefault(_CommentsOrderBy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Comments(props) {
  var className = props.className,
      colorScheme = props.colorScheme,
      _props$href = props.href,
      href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
      numPosts = props.numPosts,
      orderBy = props.orderBy,
      width = props.width,
      children = props.children,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-comments',
        'data-colorscheme': colorScheme,
        'data-numposts': numPosts,
        'data-href': href,
        'data-order-by': orderBy,
        'data-width': width,
        'data-skin': colorScheme
      },
      children
    )
  );
}

Comments.propTypes = {
  className: _propTypes2.default.string,
  href: _propTypes2.default.string,
  numPosts: _propTypes2.default.number.isRequired,
  orderBy: _propTypes2.default.string.isRequired,
  width: _propTypes2.default.oneOfType([_propTypes2.default.number.isRequired, _propTypes2.default.string.isRequired]),
  colorScheme: _propTypes2.default.string.isRequired,
  children: _propTypes2.default.node,
  onParse: _propTypes2.default.func
};

Comments.defaultProps = {
  numPosts: 10,
  orderBy: _CommentsOrderBy2.default.SOCIAL,
  width: 550,
  colorScheme: _ColorScheme2.default.LIGHT,
  children: undefined,
  className: undefined,
  href: undefined,
  onParse: undefined
};
//# sourceMappingURL=Comments.js.map

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = CommentsCount;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

var _getCurrentHref = __webpack_require__(78);

var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CommentsCount(props) {
  var className = props.className,
      _props$href = props.href,
      href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
      children = props.children,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'span',
      {
        className: 'fb-comments-count',
        'data-href': href
      },
      children
    )
  );
}

CommentsCount.propTypes = {
  className: _propTypes2.default.string,
  href: _propTypes2.default.string,
  children: _propTypes2.default.node,
  onParse: _propTypes2.default.func
};

CommentsCount.defaultProps = {
  className: undefined,
  href: undefined,
  children: undefined,
  onParse: undefined
};
//# sourceMappingURL=CommentsCount.js.map

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(77);

var _extends3 = _interopRequireDefault(_extends2);

var _regenerator = __webpack_require__(60);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(61);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(47);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(55);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(56);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getCurrentHref = __webpack_require__(78);

var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);

var _clearUndefinedProperties = __webpack_require__(279);

var _clearUndefinedProperties2 = _interopRequireDefault(_clearUndefinedProperties);

var _Process2 = __webpack_require__(174);

var _Process3 = _interopRequireDefault(_Process2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Feed = (_temp = _class = function (_Process) {
  (0, _inherits3.default)(Feed, _Process);

  function Feed() {
    (0, _classCallCheck3.default)(this, Feed);
    return (0, _possibleConstructorReturn3.default)(this, _Process.apply(this, arguments));
  }

  Feed.prototype.process = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(facebook) {
      var _props, _props$link, link, display, _props$appId, appId, redirectURI, from, to, picture, source, name, caption, description, ref;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _props = this.props, _props$link = _props.link, link = _props$link === undefined ? (0, _getCurrentHref2.default)() : _props$link, display = _props.display, _props$appId = _props.appId, appId = _props$appId === undefined ? facebook.getAppId() : _props$appId, redirectURI = _props.redirectURI, from = _props.from, to = _props.to, picture = _props.picture, source = _props.source, name = _props.name, caption = _props.caption, description = _props.description, ref = _props.ref;
              return _context.abrupt('return', facebook.ui((0, _clearUndefinedProperties2.default)({
                method: 'feed',
                link: link,
                display: display,
                app_id: appId,
                redirect_uri: redirectURI,
                from: from,
                to: to,
                picture: picture,
                source: source,
                name: name,
                caption: caption,
                description: description,
                ref: ref
              })));

            case 2:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function process(_x) {
      return _ref.apply(this, arguments);
    }

    return process;
  }();

  return Feed;
}(_Process3.default), _class.propTypes = (0, _extends3.default)({}, _Process3.default.propTypes, {
  appId: _propTypes2.default.string,
  redirectURI: _propTypes2.default.string,
  display: _propTypes2.default.string,
  from: _propTypes2.default.string,
  to: _propTypes2.default.string,
  link: _propTypes2.default.string,
  source: _propTypes2.default.string,
  picture: _propTypes2.default.string, // deprecated
  name: _propTypes2.default.string, // deprecated
  caption: _propTypes2.default.string, // deprecated
  description: _propTypes2.default.string, // deprecated
  ref: _propTypes2.default.string
}), _class.defaultProps = (0, _extends3.default)({}, _Process3.default.defaultProps, {
  link: undefined,
  display: undefined,
  appId: undefined,
  redirectURI: undefined
}), _temp);
exports.default = Feed;
//# sourceMappingURL=Feed.js.map

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = CustomChat;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CustomChat(props) {
  var className = props.className,
      dataRef = props.dataRef,
      minimized = props.minimized,
      children = props.children,
      pageId = props.pageId,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-customerchat',
        'data-page_id': pageId,
        'data-ref': dataRef,
        'data-minimized': minimized
      },
      children
    )
  );
}

CustomChat.propTypes = {
  className: _propTypes2.default.string,
  dataRef: _propTypes2.default.string,
  pageId: _propTypes2.default.string.isRequired,
  minimized: _propTypes2.default.bool,
  onParse: _propTypes2.default.func,
  children: _propTypes2.default.node
};

CustomChat.defaultProps = {
  minimized: true,
  children: undefined,
  className: undefined,
  dataRef: undefined,
  onParse: undefined
};
//# sourceMappingURL=CustomChat.js.map

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = MessageUs;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

var _MessengerSize = __webpack_require__(119);

var _MessengerSize2 = _interopRequireDefault(_MessengerSize);

var _MessengerColor = __webpack_require__(120);

var _MessengerColor2 = _interopRequireDefault(_MessengerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MessageUs(props) {
  var className = props.className,
      color = props.color,
      appId = props.appId,
      pageId = props.pageId,
      children = props.children,
      dataRef = props.dataRef,
      size = props.size,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-messengermessageus',
        messenger_app_id: appId,
        page_id: pageId,
        'data-color': color,
        'data-size': size,
        'data-ref': dataRef
      },
      children
    )
  );
}

MessageUs.propTypes = {
  className: _propTypes2.default.string,
  appId: _propTypes2.default.string.isRequired,
  pageId: _propTypes2.default.string.isRequired,
  color: _propTypes2.default.string,
  children: _propTypes2.default.node,
  size: _propTypes2.default.string,
  dataRef: _propTypes2.default.string,
  onParse: _propTypes2.default.func
};

MessageUs.defaultProps = {
  color: _MessengerColor2.default.BLUE,
  size: _MessengerSize2.default.STANDARD,
  dataRef: undefined,
  children: undefined,
  className: undefined,
  onParse: undefined
};
//# sourceMappingURL=MessageUs.js.map

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = MessengerCheckbox;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

var _MessengerSize = __webpack_require__(119);

var _MessengerSize2 = _interopRequireDefault(_MessengerSize);

var _MessengerColor = __webpack_require__(120);

var _MessengerColor2 = _interopRequireDefault(_MessengerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MessengerCheckbox(props) {
  var className = props.className,
      origin = props.origin,
      prechecked = props.prechecked,
      allowLogin = props.allowLogin,
      userRef = props.userRef,
      color = props.color,
      appId = props.appId,
      pageId = props.pageId,
      children = props.children,
      size = props.size,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-messenger-checkbox',
        messenger_app_id: appId,
        page_id: pageId,
        'data-color': color,
        'data-size': size,
        'data-origin': origin,
        user_ref: userRef,
        prechecked: prechecked,
        allow_login: allowLogin
      },
      children
    )
  );
}

MessengerCheckbox.propTypes = {
  className: _propTypes2.default.string,
  appId: _propTypes2.default.string.isRequired,
  pageId: _propTypes2.default.string.isRequired,
  color: _propTypes2.default.string,
  userRef: _propTypes2.default.string,
  origin: _propTypes2.default.string.isRequired,
  children: _propTypes2.default.node,
  size: _propTypes2.default.string,
  prechecked: _propTypes2.default.bool,
  allowLogin: _propTypes2.default.bool,
  onParse: _propTypes2.default.func
};

MessengerCheckbox.defaultProps = {
  color: _MessengerColor2.default.BLUE,
  size: _MessengerSize2.default.STANDARD,
  allowLogin: true,
  prechecked: false,
  userRef: undefined,
  children: undefined,
  className: undefined,
  onParse: undefined
};
//# sourceMappingURL=MessengerCheckbox.js.map

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = SendToMessenger;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Parser = __webpack_require__(41);

var _Parser2 = _interopRequireDefault(_Parser);

var _MessengerSize = __webpack_require__(119);

var _MessengerSize2 = _interopRequireDefault(_MessengerSize);

var _MessengerColor = __webpack_require__(120);

var _MessengerColor2 = _interopRequireDefault(_MessengerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SendToMessenger(props) {
  var className = props.className,
      color = props.color,
      appId = props.appId,
      pageId = props.pageId,
      children = props.children,
      dataRef = props.dataRef,
      size = props.size,
      onParse = props.onParse;


  return _react2.default.createElement(
    _Parser2.default,
    { className: className, onParse: onParse },
    _react2.default.createElement(
      'div',
      {
        className: 'fb-send-to-messenger',
        messenger_app_id: appId,
        page_id: pageId,
        'data-color': color,
        'data-size': size,
        'data-ref': dataRef
      },
      children
    )
  );
}

SendToMessenger.propTypes = {
  className: _propTypes2.default.string,
  appId: _propTypes2.default.string.isRequired,
  pageId: _propTypes2.default.string.isRequired,
  color: _propTypes2.default.string,
  children: _propTypes2.default.node,
  dataRef: _propTypes2.default.string,
  size: _propTypes2.default.string,
  onParse: _propTypes2.default.func
};

SendToMessenger.defaultProps = {
  color: _MessengerColor2.default.BLUE,
  size: _MessengerSize2.default.STANDARD,
  dataRef: undefined,
  children: undefined,
  className: undefined,
  onParse: undefined
};
//# sourceMappingURL=SendToMessenger.js.map

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _hallActions = __webpack_require__(21);

var _notifications = __webpack_require__(285);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _appConfig = __webpack_require__(4);

var _time = __webpack_require__(9);

var _socketClient = __webpack_require__(17);

var _loader = __webpack_require__(8);

var _availability = __webpack_require__(81);

var _availability2 = _interopRequireDefault(_availability);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// included in my-activity for recruiter
// add as form only in past session in my-activity
var ScheduledInterviewNew = function (_React$Component) {
  _inherits(ScheduledInterviewNew, _React$Component);

  function ScheduledInterviewNew(props) {
    _classCallCheck(this, ScheduledInterviewNew);

    var _this = _possibleConstructorReturn(this, (ScheduledInterviewNew.__proto__ || Object.getPrototypeOf(ScheduledInterviewNew)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();

    _this.state = {
      loaded: 0,
      company: [],
      student: [],
      loading: true,
      loadingSubmit: false,
      select_id: -1,
      select_timestamp: 0
    };
    return _this;
  }

  _createClass(ScheduledInterviewNew, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      this.loaded = 0;
      this.toLoad = 2;

      // load user
      var query = "query{ user(ID:" + this.props.student_id + ") \n            {ID first_name last_name img_url img_pos img_size} }";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.loaded++;
        _this2.setState(function () {
          return {
            student: res.data.data.user,
            loading: _this2.loaded < _this2.toLoad
          };
        });
      });

      // load company
      var query = "query{ company(ID:" + this.props.company_id + ") \n            {name} }";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.loaded++;
        _this2.setState(function () {
          return {
            company: res.data.data.company,
            loading: _this2.loaded < _this2.toLoad
          };
        });
      });
    }
  }, {
    key: "submitOnClick",
    value: function submitOnClick() {
      this.setState(function (prevState) {
        return { loadingSubmit: true };
      });

      this.createPrescreen();
    }
    // Create Scheduled Interview 1

  }, {
    key: "createPrescreen",
    value: function createPrescreen() {
      var _this3 = this;

      var d = {};
      d[_dbConfig.Prescreen.STUDENT_ID] = this.props.student_id;
      d[_dbConfig.Prescreen.COMPANY_ID] = this.props.company_id;
      d[_dbConfig.Prescreen.UPDATED_BY] = (0, _authActions.getAuthUser)().ID;

      // New SI Flow
      d[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM;
      //d[Prescreen.STATUS] = PrescreenEnum.STATUS_APPROVED;

      d[_dbConfig.Prescreen.SPECIAL_TYPE] = _dbConfig.PrescreenEnum.ST_NEW;
      d[_dbConfig.Prescreen.APPNMENT_TIME] = Number.parseInt(this.state.select_timestamp);

      var query = "mutation{ add_prescreen \n            (" + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + "){ID}\n        }";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        var psId = res.data.data.add_prescreen.ID;

        // 1. update availability
        _this3.setState(function () {
          _this3.updateAvailability(psId);
        });

        var notiParam = {};
        notiParam[_dbConfig.Prescreen.ID] = psId;
        notiParam[_dbConfig.Prescreen.APPNMENT_TIME] = d[_dbConfig.Prescreen.APPNMENT_TIME];
        (0, _notifications.addNotification)({
          user_id: _this3.props.student_id,
          text: "<b>" + _this3.state.company.name + "</b> has scheduled a private session with you",
          param: notiParam,
          type: _dbConfig.NotificationsEnum.TYPE_CREATE_PRIVATE_SESSION,
          img_entity: _dbConfig.NotificationsEnum.IMG_ENTITY_COMPANY,
          img_id: _this3.props.company_id
        });
      });
    }
  }, {
    key: "updateAvailability",
    value: function updateAvailability(psId) {
      var _this4 = this;

      var d = {};
      d[_dbConfig.Availability.ID] = Number.parseInt(this.state.select_id);
      d[_dbConfig.Availability.IS_BOOKED] = 1;
      d[_dbConfig.Availability.COMPANY_ID] = this.props.company_id;
      d[_dbConfig.Availability.PRESCREEN_ID] = psId;

      var query = "mutation{ edit_availability \n            (" + (0, _graphqlObj2arg2.default)(d, { noOuterBraces: true }) + "){ID}\n        }";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this4.setState(function (prevState) {
          return { loadingSubmit: false };
        });

        // close popup terus
        layoutActions.storeHideFocusCard();
        _this4.successAddHandler();
      });
    }
  }, {
    key: "successAddHandler",
    value: function successAddHandler() {
      var link = (0, _authActions.isRoleAdmin)() ? _appConfig.RootPath + "/app/manage-company/" + this.props.company_id + "/scheduled-interview" : _appConfig.RootPath + "/app/my-activity/scheduled-session";

      var mes = _react2.default.createElement(
        "div",
        null,
        "Successfully scheduled a call with",
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "b",
          null,
          this.state.student.first_name,
          " ",
          this.state.student.last_name
        ),
        _react2.default.createElement("br", null),
        "on ",
        _react2.default.createElement(
          "u",
          null,
          _time.Time.getString(this.state.select_timestamp)
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement("br", null)
      );

      layoutActions.successBlockLoader(mes);

      // after success add scheduled interview
      // emit to student only
      // emit to reload scheduled interview
      (0, _socketClient.emitHallActivity)(_hallActions.ActivityType.PRESCREEN, this.props.student_id);
    }
  }, {
    key: "onSelectTime",
    value: function onSelectTime(id, timestamp) {
      this.setState(function (prevState) {
        return { select_id: id, select_timestamp: timestamp };
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      var view = _react2.default.createElement(_loader.Loader, { size: "2", text: "Loading.." });
      if (!this.state.loading) {
        var student = this.state.student;
        view = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_profileCard2.default, {
            type: "student",
            title: student.first_name,
            subtitle: student.last_name,
            img_url: student.img_url,
            img_pos: student.img_pos,
            img_size: student.img_size,
            body: null
          }),
          _react2.default.createElement(_availability2.default, {
            user_id: this.props.student_id,
            select_id: this.state.select_id,
            book_only: true,
            onSelect: function onSelect(id, timestamp) {
              _this5.onSelectTime(id, timestamp);
            }
          }),
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "button",
            {
              onClick: function onClick() {
                _this5.submitOnClick();
              },
              disabled: this.state.select_id == -1 || this.state.loadingSubmit,
              className: "btn btn-success btn-lg"
            },
            this.state.loadingSubmit ? _react2.default.createElement("i", { className: "fa fa-spinner fa-pulse left" }) : null,
            "Schedule Call"
          )
        );
      }

      return _react2.default.createElement(
        "div",
        null,
        view
      );
    }
  }]);

  return ScheduledInterviewNew;
}(_react2.default.Component);

exports.default = ScheduledInterviewNew;


ScheduledInterviewNew.PropTypes = {
  company_id: _propTypes2.default.number.isRequired,
  student_id: _propTypes2.default.number.isRequired
};

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListRow = function (_React$Component) {
    _inherits(ListRow, _React$Component);

    function ListRow(props) {
        _classCallCheck(this, ListRow);

        return _possibleConstructorReturn(this, (ListRow.__proto__ || Object.getPrototypeOf(ListRow)).call(this, props));
    }

    _createClass(ListRow, [{
        key: 'componentWillMount',
        value: function componentWillMount() {}
    }, {
        key: 'render',
        value: function render() {
            var seemore = null;
            if (this.props.see_more_to) {
                seemore = _react2.default.createElement(
                    _reactRouterDom.NavLink,
                    { to: this.props.see_more_to },
                    this.props.see_more_text,
                    '  ',
                    _react2.default.createElement('i', { className: 'fa  fa-long-arrow-right' })
                );
            } else if (this.props.see_more_onclick) {
                seemore = _react2.default.createElement(
                    'a',
                    { onClick: this.props.see_more_onclick },
                    this.props.see_more_text,
                    '  ',
                    _react2.default.createElement('i', { className: 'fa  fa-long-arrow-right' })
                );
            }
            return _react2.default.createElement(
                'div',
                { className: 'list-row', style: { backgroundColor: this.props.backgroundColor } },
                _react2.default.createElement(
                    'div',
                    { className: 'lr-container' },
                    _react2.default.createElement(
                        'div',
                        { className: 'lr-title' },
                        this.props.title,
                        '  ',
                        _react2.default.createElement('i', { className: 'fa  fa-long-arrow-right' })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'lr-body' },
                        this.props.items
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'lr-footer' },
                        _react2.default.createElement(
                            'b',
                            null,
                            seemore
                        )
                    )
                )
            );
        }
    }]);

    return ListRow;
}(_react2.default.Component);

exports.default = ListRow;


ListRow.propsType = {
    backgroundColor: _propTypes2.default.string,
    items: _propTypes2.default.any,
    title: _propTypes2.default.string.isRequired,
    see_more_text: _propTypes2.default.string,
    see_more_to: _propTypes2.default.string,
    see_more_onclick: _propTypes2.default.func
};

ListRow.defaultProps = {};

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ActivitySingle = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _list = __webpack_require__(11);

var _time = __webpack_require__(9);

var _notification = __webpack_require__(123);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _activityApi = __webpack_require__(67);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _socketClient = __webpack_require__(17);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _scheduledInterview = __webpack_require__(28);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _chat = __webpack_require__(42);

var _apiHelper = __webpack_require__(3);

var _hallViewHelper = __webpack_require__(79);

var HallViewHelper = _interopRequireWildcard(_hallViewHelper);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //Faizul Here

// require('../../../css/border-card.scss');

var ActvityList = function (_React$Component) {
    _inherits(ActvityList, _React$Component);

    function ActvityList(props) {
        _classCallCheck(this, ActvityList);

        var _this = _possibleConstructorReturn(this, (ActvityList.__proto__ || Object.getPrototypeOf(ActvityList)).call(this, props));

        _this.openSIForm = _this.openSIForm.bind(_this);
        _this.cancelQueue = _this.cancelQueue.bind(_this);
        _this.cancelJoinGroupSession = _this.cancelJoinGroupSession.bind(_this);
        _this.updateSessionRequest = _this.updateSessionRequest.bind(_this);
        _this.acceptRejectPrescreen = _this.acceptRejectPrescreen.bind(_this);
        _this.confirmAcceptRejectPrescreen = _this.confirmAcceptRejectPrescreen.bind(_this);

        _this.authUser = (0, _authActions.getAuthUser)();
        _this.state = {
            time: Date.now()
        };
        _this.interval = null;

        // update every 30 secs
        _this.UPDATE_INTERVAL = 30 * 1000;
        return _this;
    }

    _createClass(ActvityList, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.interval = setInterval(function () {
                _this2.setState(function () {
                    return { time: Date.now() };
                });
            }, this.UPDATE_INTERVAL);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            clearInterval(this.interval);
        }
    }, {
        key: 'cancelJoinGroupSession',
        value: function cancelJoinGroupSession(e) {
            var _this3 = this;

            var company_name = e.currentTarget.dataset.company_name;
            var company_id = e.currentTarget.dataset.company_id;

            var id = e.currentTarget.id;
            var confirmCancel = function confirmCancel() {
                layoutActions.loadingBlockLoader("Canceling..");
                activityActions.cancelJoinGroupSession(id).then(function (res) {
                    hallAction.storeLoadActivity([hallAction.ActivityType.GROUP_SESSION_JOIN]);
                    layoutActions.storeHideBlockLoader();

                    (0, _socketClient.emitQueueStatus)(company_id, _this3.authUser.ID, "cancelJoinGroupSession");
                    (0, _socketClient.emitHallActivity)(hallAction.ActivityType.GROUP_SESSION_JOIN, null, company_id);
                }, function (err) {
                    layoutActions.errorBlockLoader(err);
                });
            };

            layoutActions.confirmBlockLoader('Canceling participation for group session with ' + company_name + '?', confirmCancel);
        }
    }, {
        key: 'getRemoveButton',
        value: function getRemoveButton(hasRemove, entity, entity_id) {
            var _this4 = this;

            if (!hasRemove) {
                return null;
            }

            var onClickRemove = function onClickRemove(e) {
                var entity = e.currentTarget.dataset.entity;
                var entity_id = e.currentTarget.dataset.entity_id;

                var ins = {};
                ins[_dbConfig.EntityRemoved.ENTITY] = entity;
                ins[_dbConfig.EntityRemoved.ENTITY_ID] = Number.parseInt(entity_id);
                ins[_dbConfig.EntityRemoved.USER_ID] = _this4.authUser.ID;
                var q = 'mutation { add_entity_removed (' + (0, _graphqlObj2arg2.default)(ins, { noOuterBraces: true }) + ')\n                { ID } }';

                var parentButton = e.currentTarget.parentNode;
                var parentPcBody = parentButton.parentNode;
                var parentCard = parentPcBody.parentNode;
                parentCard.className = parentCard.className += "profile-card-hidden";
                //console.log(parentCard);
                setTimeout(function () {
                    parentCard.hidden = true;
                }, 700);
                (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (data) {});
            };

            return _react2.default.createElement(
                'div',
                { onClick: function onClick(e) {
                        onClickRemove(e);
                    },
                    'data-entity': entity,
                    'data-entity_id': entity_id,
                    className: 'btn btn-link btn-delete-card' },
                _react2.default.createElement('i', { className: 'fa fa-times' })
            );
        }
    }, {
        key: 'cancelQueue',
        value: function cancelQueue(e) {
            var _this5 = this;

            var company_name = e.currentTarget.dataset.company_name;
            var company_id = e.currentTarget.dataset.company_id;

            var id = e.currentTarget.id;
            var confirmCancelQueue = function confirmCancelQueue() {
                layoutActions.loadingBlockLoader("Canceling Queue..");
                activityActions.cancelQueue(id).then(function (res) {
                    hallAction.storeLoadActivity([hallAction.ActivityType.QUEUE]);
                    layoutActions.storeHideBlockLoader();

                    (0, _socketClient.emitQueueStatus)(company_id, _this5.authUser.ID, "cancelQueue");
                    (0, _socketClient.emitHallActivity)(hallAction.ActivityType.QUEUE, null, company_id);
                }, function (err) {
                    layoutActions.errorBlockLoader(err);
                });
            };

            layoutActions.confirmBlockLoader('Canceling Queue for ' + company_name, confirmCancelQueue);
        }

        // open form,
        // once completed update to approve

    }, {
        key: 'openSIForm',
        value: function openSIForm(sr_id, student_id) {
            var _this6 = this;

            (0, _scheduledInterview.openSIAddForm)(student_id, this.authUser.rec_company, _dbConfig.PrescreenEnum.ST_INTV_REQUEST, function (d) {
                _this6.updateSessionRequest(sr_id, _dbConfig.SessionRequestEnum.STATUS_APPROVED);
            });
        }
    }, {
        key: 'updateSessionRequest',
        value: function updateSessionRequest(id, status) {
            layoutActions.loadingBlockLoader("Updating Session Request Status..");
            activityActions.updateSessionRequest(id, status).then(function (res) {

                var toRefresh = [hallAction.ActivityType.SESSION_REQUEST];
                if (status == _dbConfig.SessionRequestEnum.STATUS_APPROVED) {
                    toRefresh.push(hallAction.ActivityType.PRESCREEN);
                }

                hallAction.storeLoadActivity(toRefresh);
                layoutActions.storeHideBlockLoader();

                //emitQueueStatus(company_id, this.authUser.ID, "cancelQueue");

                var sid = (0, _authActions.isRoleStudent)() ? null : res.student_id;
                var cid = (0, _authActions.isRoleRec)() ? null : res.company_id;
                (0, _socketClient.emitHallActivity)(hallAction.ActivityType.SESSION_REQUEST, sid, cid);
            }, function (err) {
                layoutActions.errorBlockLoader(err);
            });
        }

        // for reject and cancel
        // trigger from card view button

    }, {
        key: 'confirmUpdateSessionRequest',
        value: function confirmUpdateSessionRequest(e, status) {
            var _this7 = this;

            var other_name = e.currentTarget.dataset.other_name;
            var other_id = e.currentTarget.dataset.other_id;
            var id = e.currentTarget.id;

            var confirmUpdate = function confirmUpdate() {
                _this7.updateSessionRequest(id, status);
            };

            // create confirm message
            var mes = "";
            if (status === _dbConfig.SessionRequestEnum.STATUS_CANCELED) {
                mes += "Canceling";
            }
            if (status === _dbConfig.SessionRequestEnum.STATUS_REJECTED) {
                mes += "Rejecting";
            }
            if (status === _dbConfig.SessionRequestEnum.STATUS_PENDING) {
                mes += "Canceling Rejection ";
            }

            mes += ' Interview Request for ' + other_name;

            layoutActions.confirmBlockLoader(mes, confirmUpdate);
        }
    }, {
        key: 'startVideoCallPreScreen',
        value: function startVideoCallPreScreen(e) {
            HallViewHelper.startVideoCall(e, {
                type: HallViewHelper.TYPE_PRIVATE_SESSION,
                user_id: this.authUser.ID,
                bindedSuccessHandler: function bindedSuccessHandler() {
                    hallAction.storeLoadActivity([hallAction.ActivityType.PRESCREEN]);
                }
            });
        }
    }, {
        key: 'createSession',
        value: function createSession(e) {
            var invalid = activityActions.invalidSession();

            if (invalid !== false) {
                layoutActions.errorBlockLoader(invalid);
                return false;
            }

            var host_id = (0, _authActions.getAuthUser)().ID;
            var participant_id = e.currentTarget.dataset.pid;
            var entity = e.currentTarget.dataset.entity;
            var entity_id = e.currentTarget.dataset.entity_id;

            layoutActions.loadingBlockLoader("Creating Session..");
            activityActions.createSession(host_id, participant_id, entity, entity_id).then(function (res) {

                var m = _react2.default.createElement(
                    'div',
                    null,
                    'Session Successfully Created',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        _reactRouterDom.NavLink,
                        {
                            onClick: function onClick() {
                                return layoutActions.storeHideBlockLoader();
                            },
                            to: _appConfig.RootPath + '/app/session/' + res.data.ID },
                        'Go To Session'
                    )
                );

                if (entity === hallAction.ActivityType.QUEUE) {
                    (0, _socketClient.emitQueueStatus)((0, _authActions.getAuthUser)().rec_company, participant_id, "cancelQueue");
                }

                (0, _socketClient.emitHallActivity)([hallAction.ActivityType.SESSION, entity], participant_id, null);

                layoutActions.successBlockLoader(m);
                hallAction.storeLoadActivity([hallAction.ActivityType.SESSION, entity]);
            }, function (err) {
                var m = "";
                switch (err.response.data) {
                    case _activityApi.ActivityAPIErr.HAS_SESSION:
                        m = "This student is currently engaged";
                        break;
                }

                layoutActions.errorBlockLoader(m);
            });
        }

        // ##########################
        // for prescreen

    }, {
        key: 'acceptRejectPrescreen',
        value: function acceptRejectPrescreen(id, user_id, status) {
            layoutActions.loadingBlockLoader("Updating Scheduled Call Status..");

            if (typeof id === "string") {
                id = Number.parseInt(id);
            }
            if (typeof user_id === "string") {
                user_id = Number.parseInt(user_id);
            }

            var upd = {};
            upd[_dbConfig.Prescreen.ID] = id;
            upd[_dbConfig.Prescreen.UPDATED_BY] = user_id;
            upd[_dbConfig.Prescreen.STATUS] = status;

            var query = 'mutation{edit_prescreen(' + (0, _graphqlObj2arg2.default)(upd, {
                noOuterBraces: true
            }) + ') {ID student_id company_id}}';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (data) {
                var res = data.data.data.edit_prescreen;
                var toRefresh = [hallAction.ActivityType.PRESCREEN];
                hallAction.storeLoadActivity(toRefresh);
                layoutActions.storeHideBlockLoader();

                //emitQueueStatus(company_id, this.authUser.ID, "cancelQueue");

                var sid = (0, _authActions.isRoleStudent)() ? null : res.student_id;
                var cid = (0, _authActions.isRoleRec)() ? null : res.company_id;
                (0, _socketClient.emitHallActivity)(hallAction.ActivityType.PRESCREEN, sid, cid);
            }, function (err) {
                layoutActions.errorBlockLoader(err);
            });
        }

        // for reject and cancel
        // trigger from card view button

    }, {
        key: 'confirmAcceptRejectPrescreen',
        value: function confirmAcceptRejectPrescreen(e, status) {
            var _this8 = this;

            var other_name = e.currentTarget.dataset.other_name;
            var id = e.currentTarget.id;
            var user_id = this.authUser.ID;

            var confirmUpdate = function confirmUpdate() {
                _this8.acceptRejectPrescreen(id, user_id, status);
            };

            // create confirm message
            var mes = "";
            if (status === _dbConfig.PrescreenEnum.STATUS_APPROVED) {
                mes += "Approving";
            }
            if (status === _dbConfig.PrescreenEnum.STATUS_REJECTED) {
                mes += "Rejecting";
            }

            mes += ' Scheduled Call with ' + other_name + ' ?';
            layoutActions.confirmBlockLoader(mes, confirmUpdate);
        }
    }, {
        key: 'getTimeStrNew',
        value: function getTimeStrNew(unixtime, showTimeOnly) {
            // debug
            //unixtime = (1552804854865/1000) + 500;

            var timeStr = _time.Time.getString(unixtime);

            if (showTimeOnly) {
                return timeStr;
            }

            var passedText = "Waiting For Recruiter";
            var happeningIn = _time.Time.getHapenningIn(unixtime, {
                passedText: (0, _authActions.isRoleStudent)() ? passedText : null,
                startCountMinute: 24 * 60 // 24 hours
            });

            if (happeningIn != null) {
                if (happeningIn != passedText) {
                    happeningIn = _react2.default.createElement(
                        'span',
                        null,
                        'Starting In ',
                        happeningIn
                    );
                }
                happeningIn = _react2.default.createElement(
                    'div',
                    { style: { marginBottom: "-6px", fontWeight: "bold" },
                        className: 'text-primary' },
                    happeningIn
                );
                return _react2.default.createElement(
                    'span',
                    null,
                    happeningIn,
                    _react2.default.createElement('br', null),
                    timeStr
                );
            } else {
                return timeStr;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this9 = this;

            var body = null;
            // console.log("ActivityList",this.props);
            // console.log("ActivityList",this.props);
            // console.log("ActivityList",this.props);
            if (this.props.fetching) {
                body = _react2.default.createElement(_loader.Loader, { isCenter: true, size: '2' });
            } else {

                body = this.props.list.map(function (d, i) {
                    var obj = (0, _authActions.isRoleRec)() ? d.student : d.company;

                    if (typeof obj === "undefined") {
                        return false;
                    }

                    if ((0, _authActions.isRoleRec)()) {
                        obj.name = obj.first_name + " " + obj.last_name;
                    }

                    // 1. title
                    var title = null;
                    if ((0, _authActions.isRoleRec)()) {
                        var params = { id: obj.ID };
                        title = _react2.default.createElement(_buttons.ButtonLink, { label: obj.first_name + " " + obj.last_name,
                            onClick: function onClick() {
                                return layoutActions.storeUpdateFocusCard(obj.first_name + " " + obj.last_name, _userPopup2.default, params);
                            } });
                    } else if ((0, _authActions.isRoleStudent)()) {
                        title = obj.name;
                    }

                    // 2. subtitle and body
                    var subtitle = null;
                    var badge = null;
                    var badge_tooltip = null;
                    var body = null;
                    var crtSession = null;
                    var custom_width = "150px";
                    var hasRemove = null;
                    var removeEntity = null;
                    var removeEntityId = null;

                    if ((0, _authActions.isRoleRec)()) {

                        //show online status for rec
                        badge = _this9.props.online_users[obj.ID] == 1 ? "" : null;
                        badge_tooltip = 'User Currently Online';

                        crtSession = _react2.default.createElement(
                            'div',
                            { 'data-pid': obj.ID, 'data-entity_id': d.ID, 'data-entity': _this9.props.type,
                                onClick: _this9.createSession.bind(_this9), className: 'btn btn-sm btn-primary' },
                            'Create Session'
                        );
                    }

                    switch (_this9.props.type) {
                        // #############################################################
                        // Active Session Card View

                        case hallAction.ActivityType.SESSION:
                            subtitle = '' + _time.Time.getAgo(d.created_at);
                            body = _react2.default.createElement(
                                _reactRouterDom.NavLink,
                                { to: _appConfig.RootPath + '/app/session/' + d.ID },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'btn btn-sm btn-success' },
                                    'Go To Session'
                                )
                            );
                            break;

                        case hallAction.ActivityType.QUEUE:
                            subtitle = '' + _time.Time.getAgo(d.created_at);

                            if (!(0, _authActions.isRoleRec)()) {
                                badge = '' + d.queue_num;
                                badge_tooltip = 'Your queue number';
                            }

                            body = (0, _authActions.isRoleRec)() ? crtSession : _react2.default.createElement(
                                'div',
                                { id: d.ID, 'data-company_id': obj.ID, 'data-company_name': obj.name, onClick: _this9.cancelQueue.bind(_this9),
                                    className: 'btn btn-sm btn-danger' },
                                'Cancel Queue'
                            );
                            break;

                        // #############################################################
                        // Panel Interview Card View

                        // case hallAction.ActivityType.ZOOM_INVITE:
                        //     subtitle = <span>Hosted by
                        //     <div className="break-all">
                        //             <Tooltip
                        //                 bottom={"13px"}
                        //                 left={"-22px"}
                        //                 width={"131px"}
                        //                 tooltip={d.recruiter.user_email}
                        //                 content={<b>{d.recruiter.first_name} {d.recruiter.last_name}</b>}>
                        //             </Tooltip>
                        //         </div>
                        //         <br></br>
                        //         {Time.getAgo(d.created_at)}
                        //     </span>;
                        //     body = <div>
                        //         <a onClick={() => joinVideoCall(d.join_url, d.session_id, () => {
                        //             hallAction.storeLoadActivity([hallAction.ActivityType.ZOOM_INVITE]);
                        //         })} className="btn btn-sm btn-blue">Join Interview</a>
                        //     </div>;

                        //     break;

                        // #############################################################
                        // Scheduled Session Card View

                        case hallAction.ActivityType.PRESCREEN:
                            var btnJoinVCall = null;
                            var btnStartVCall = null;
                            var btnEndedVCall = null;
                            var btnAcceptReject = null;

                            if (d.status == _dbConfig.PrescreenEnum.STATUS_REJECTED || d.status == _dbConfig.PrescreenEnum.STATUS_ENDED) {
                                subtitle = _this9.getTimeStrNew(d.appointment_time, true);
                            } else {
                                subtitle = _this9.getTimeStrNew(d.appointment_time, false);
                            }

                            //body = <div style={{ height: "30px" }}></div>;
                            var ps_type = d.special_type == null || d.special_type == "" ? _dbConfig.PrescreenEnum.ST_PRE_SCREEN : d.special_type;

                            if ((0, _scheduledInterview.isNormalSI)(ps_type)) {
                                ps_type = "Scheduled Session";
                            }

                            // label for special type
                            // var label_color_type = "";
                            // switch (ps_type) {
                            //     case PrescreenEnum.ST_NEXT_ROUND:
                            //         label_color_type = "success";
                            //         break;
                            //     case PrescreenEnum.ST_PRE_SCREEN:
                            //         label_color_type = "info";
                            //         break;
                            //     default:
                            //         label_color_type = "primary";
                            //         break;
                            // }
                            // let labelType = <div style={{ marginBottom: "7px" }}>
                            //     <label className={`label label-${label_color_type}`}>
                            //         {ps_type}
                            //     </label>
                            // </div>


                            // label for status
                            // New SI Flow
                            var label_color_status = "";
                            var textStatus = "";
                            switch (d.status) {
                                case _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM:
                                    // New Flow
                                    if ((0, _authActions.isRoleStudent)()) {
                                        btnAcceptReject = _react2.default.createElement(
                                            'div',
                                            null,
                                            _react2.default.createElement(
                                                'div',
                                                { id: d.ID, 'data-other_id': obj.ID, 'data-other_name': obj.name,
                                                    onClick: function onClick(e) {
                                                        _this9.confirmAcceptRejectPrescreen(e, _dbConfig.PrescreenEnum.STATUS_APPROVED);
                                                    },
                                                    className: 'btn btn-sm btn-success' },
                                                'Accept Interview'
                                            ),
                                            _react2.default.createElement(
                                                'div',
                                                { id: d.ID, 'data-other_id': obj.ID, 'data-other_name': obj.name,
                                                    onClick: function onClick(e) {
                                                        _this9.confirmAcceptRejectPrescreen(e, _dbConfig.PrescreenEnum.STATUS_REJECTED);
                                                    },
                                                    className: 'btn btn-sm btn-danger' },
                                                'Reject Interview'
                                            )
                                        );
                                    }
                                    if ((0, _authActions.isRoleRec)()) {
                                        label_color_status = "primary";
                                        textStatus = "Waiting Confirmation";
                                        crtSession = null;
                                    }
                                    break;
                                case _dbConfig.PrescreenEnum.STATUS_REJECTED:
                                    label_color_status = "danger";
                                    textStatus = "Interview Rejected";
                                    crtSession = null;
                                    hasRemove = true;
                                    removeEntity = _dbConfig.Prescreen.TABLE;
                                    removeEntityId = d.ID;
                                    break;
                                case _dbConfig.PrescreenEnum.STATUS_APPROVED:
                                    if ((0, _authActions.isRoleRec)()) {
                                        btnStartVCall = _react2.default.createElement(
                                            'div',
                                            { 'data-appointment_time': d.appointment_time,
                                                'data-participant_id': obj.ID, 'data-id': d.ID,
                                                onClick: _this9.startVideoCallPreScreen.bind(_this9),
                                                className: 'btn btn-sm btn-success' },
                                            'Start Video Call'
                                        );
                                        break;
                                    }

                                    label_color_status = "success";
                                    textStatus = "Accepted";
                                    break;
                                case _dbConfig.PrescreenEnum.STATUS_ENDED:
                                    btnEndedVCall = _react2.default.createElement(
                                        'div',
                                        { className: 'action btn btn-danger btn-sm',
                                            disabled: 'disabled' },
                                        'Ended'
                                    );
                                    crtSession = null;
                                    hasRemove = true;
                                    removeEntity = _dbConfig.Prescreen.TABLE;
                                    removeEntityId = d.ID;

                                    break;
                                case _dbConfig.PrescreenEnum.STATUS_STARTED:
                                    var isExpiredHandler = function isExpiredHandler() {
                                        var mes = _react2.default.createElement(
                                            'div',
                                            null,
                                            'Unable to join.',
                                            _react2.default.createElement('br', null),
                                            'This 1-1 session has ended.'
                                        );
                                        layoutActions.errorBlockLoader(mes);
                                        var updData = {};
                                        updData[_dbConfig.Prescreen.ID] = d.ID;
                                        updData[_dbConfig.Prescreen.IS_EXPIRED] = 1;
                                        updData[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_ENDED;
                                        updData[_dbConfig.Prescreen.UPDATED_BY] = _this9.authUser.ID;
                                        var q = 'mutation {edit_prescreen (' + (0, _graphqlObj2arg2.default)(updData, {
                                            noOuterBraces: true
                                        }) + '){ID}}';
                                        (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                                            hallAction.storeLoadActivity([hallAction.ActivityType.PRESCREEN]);
                                        });
                                    };
                                    var hasStart = false;
                                    if (!d.is_expired && d.join_url != "" && d.join_url != null) {
                                        hasStart = true;
                                        subtitle = "Video Call Has Started";
                                    } else {
                                        if (d.is_expired) {
                                            subtitle = _this9.getTimeStrNew(d.appointment_time, true);
                                        } else {
                                            subtitle = _this9.getTimeStrNew(d.appointment_time, false);
                                        }
                                    }
                                    if (hasStart && (0, _authActions.isRoleStudent)()) {
                                        // bukak join url
                                        btnJoinVCall = _react2.default.createElement(
                                            'a',
                                            { onClick: function onClick() {
                                                    return (0, _chat.joinVideoCall)(d.join_url, null, isExpiredHandler, null, d.ID);
                                                },
                                                className: 'btn btn-sm btn-blue' },
                                            'Join Video Call'
                                        );

                                        var openNotificationStart_PS = function openNotificationStart_PS() {
                                            // block loader to inform the video call has started
                                            // if time updated is less than bufferMin
                                            var bufferMin = 2;
                                            var diff = _time.Time.getUnixTimestampNow() - _time.Time.convertDBTimeToUnix(d.updated_at);
                                            if (diff <= bufferMin * 60) {
                                                var popupBody = _react2.default.createElement(
                                                    'div',
                                                    null,
                                                    _react2.default.createElement('br', null),
                                                    '1-1 session with',
                                                    _react2.default.createElement('br', null),
                                                    _react2.default.createElement(
                                                        'b',
                                                        null,
                                                        obj.name
                                                    ),
                                                    _react2.default.createElement('br', null),
                                                    'has started',
                                                    _react2.default.createElement('br', null),
                                                    _react2.default.createElement('br', null),
                                                    btnJoinVCall
                                                );
                                                var notiId = 'pre-screen-' + d.ID;
                                                (0, _notification.showNotification)(notiId, popupBody);
                                            }
                                        };
                                        openNotificationStart_PS();
                                    }
                                    if (hasStart && (0, _authActions.isRoleRec)()) {
                                        // bukak start url
                                        btnJoinVCall = _react2.default.createElement(
                                            'a',
                                            { onClick: function onClick() {
                                                    return (0, _chat.joinVideoCall)(d.join_url, null, isExpiredHandler, null, d.ID, d.start_url);
                                                },
                                                className: 'action btn btn-primary btn-sm' },
                                            'Started'
                                        );
                                    }

                                    break;
                            }
                            var labelStatus = _react2.default.createElement(
                                'div',
                                { style: { marginBottom: "7px" } },
                                _react2.default.createElement(
                                    'label',
                                    { className: 'label label-' + label_color_status },
                                    textStatus
                                )
                            );

                            body = _react2.default.createElement(
                                'div',
                                null,
                                (0, _authActions.isRoleRec)() ? (0, _userPopup.createUserDocLinkList)(obj.doc_links, obj.ID, true, true) : null,
                                btnStartVCall == null ? labelStatus : null,
                                (0, _authActions.isRoleRec)() ? btnStartVCall : null,
                                d.status == _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM ? btnAcceptReject : null,
                                d.status == _dbConfig.PrescreenEnum.STATUS_STARTED ? btnJoinVCall : null,
                                d.status == _dbConfig.PrescreenEnum.STATUS_ENDED ? btnEndedVCall : null
                            );
                            break;

                        // #############################################################
                        // Interview Request Card View
                        // case hallAction.ActivityType.SESSION_REQUEST:
                        //     subtitle = `${Time.getAgo(d.created_at)}`;

                        //     if (d.status === SessionRequestEnum.STATUS_PENDING) {
                        //         /*var pend = <div style={{ marginBottom: "10px" }}>
                        //             <label className={`label label-info`}>Pending</label>
                        //         </div>;*/
                        //         var pend = null;

                        //         if (isRoleRec()) {
                        //             body = <div>
                        //                 {createUserDocLinkList(obj.doc_links, obj.ID, true, true)}
                        //                 <div onClick={() => { this.openSIForm(d.ID, obj.ID) }}
                        //                     className="btn btn-sm btn-success">Schedule Session</div>

                        //                 <div id={d.ID} data-other_id={obj.ID} data-other_name={obj.name}
                        //                     onClick={(e) => { this.confirmUpdateSessionRequest(e, SessionRequestEnum.STATUS_REJECTED) }}
                        //                     className="btn btn-sm btn-danger">Reject Request</div>
                        //             </div>;

                        //         } else {
                        //             body = <div>{pend}
                        //                 <div id={d.ID} data-other_id={obj.ID} data-other_name={obj.name}
                        //                     onClick={(e) => { this.confirmUpdateSessionRequest(e, SessionRequestEnum.STATUS_CANCELED) }}
                        //                     className="btn btn-sm btn-primary">Cancel Request</div>
                        //             </div>;
                        //         }
                        //     }

                        //     // if rec view rejected in not shown
                        //     if (d.status === SessionRequestEnum.STATUS_REJECTED) {
                        //         var rej = <div style={{ marginBottom: "10px" }}>
                        //             <label className={`label label-danger`}>Rejected</label>
                        //         </div>;
                        //         body = <div>{rej}<small className="text-muted">Try again later</small></div>;
                        //         /*
                        //         body = <div>{rej}
                        //             {isRoleRec() ? <div id={d.ID} data-other_id={obj.ID} data-other_name={obj.name}
                        //                 onClick={(e) => { this.confirmUpdateSessionRequest(e, SessionRequestEnum.STATUS_PENDING) }}
                        //                 className="btn btn-sm btn-blue">Cancel Rejection</div> : null}
                        //         </div>
                        //         */
                        //     }
                        //     break;


                        // #############################################################
                        // group session Card View
                        case hallAction.ActivityType.GROUP_SESSION_JOIN:
                            if ((0, _authActions.isRoleStudent)()) {

                                if (d.title != null && d.title != "") {
                                    title = _react2.default.createElement(
                                        'small',
                                        null,
                                        d.title
                                    );
                                } else {
                                    title = _react2.default.createElement(
                                        'small',
                                        null,
                                        'Group Session with ',
                                        title
                                    );
                                }
                                title = _react2.default.createElement(
                                    'b',
                                    null,
                                    title
                                );

                                var hasStart = false;
                                if (!d.is_expired && d.join_url != "" && d.join_url != null) {
                                    hasStart = true;
                                    subtitle = "Video Call Has Started";
                                } else {
                                    if (d.is_canceled || d.is_expired) {
                                        subtitle = _this9.getTimeStrNew(d.start_time, true);
                                    } else {
                                        subtitle = _this9.getTimeStrNew(d.start_time, false);
                                    }
                                }

                                var _isExpiredHandler = function _isExpiredHandler() {
                                    var mes = _react2.default.createElement(
                                        'div',
                                        null,
                                        'Unable to join.',
                                        _react2.default.createElement('br', null),
                                        'This group session has ended.'
                                    );
                                    layoutActions.errorBlockLoader(mes);
                                    var q = 'mutation {edit_group_session(ID:' + d.ID + ', is_expired:1){ID}}';
                                    (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                                        hallAction.storeLoadActivity([hallAction.ActivityType.GROUP_SESSION_JOIN]);
                                    });
                                };

                                var btnJoin = _react2.default.createElement(
                                    'a',
                                    { onClick: function onClick() {
                                            return (0, _chat.joinVideoCall)(d.join_url, null, _isExpiredHandler, d.ID);
                                        },
                                        className: 'btn btn-sm btn-blue' },
                                    'Join Video Call'
                                );

                                var openNotificationStart_GS = function openNotificationStart_GS() {
                                    // block loader to inform the video call has started
                                    // if time updated is less than bufferMin
                                    var bufferMin = 2;
                                    var diff = _time.Time.getUnixTimestampNow() - _time.Time.convertDBTimeToUnix(d.updated_at);
                                    if (diff <= bufferMin * 60) {
                                        var popupBody = _react2.default.createElement(
                                            'div',
                                            null,
                                            _react2.default.createElement('br', null),
                                            'Group session with',
                                            _react2.default.createElement('br', null),
                                            _react2.default.createElement(
                                                'b',
                                                null,
                                                obj.name
                                            ),
                                            _react2.default.createElement('br', null),
                                            'has started',
                                            _react2.default.createElement('br', null),
                                            ' ',
                                            _react2.default.createElement('br', null),
                                            btnJoin
                                        );
                                        var notiId = 'group-session-' + d.ID;
                                        (0, _notification.showNotification)(notiId, popupBody);
                                    }
                                };
                                var isGsHasRemove = false;
                                if (d.is_canceled) {
                                    body = _react2.default.createElement(
                                        'button',
                                        { disabled: 'disabled', className: 'btn btn-sm btn-danger' },
                                        'Canceled'
                                    );
                                    isGsHasRemove = true;
                                } else if (d.is_expired) {
                                    body = _react2.default.createElement(
                                        'button',
                                        { disabled: 'disabled', className: 'btn btn-sm btn-danger' },
                                        'Ended'
                                    );
                                    isGsHasRemove = true;
                                } else {
                                    if (hasStart) {
                                        openNotificationStart_GS();
                                        body = _react2.default.createElement(
                                            'div',
                                            null,
                                            btnJoin
                                        );
                                    } else {
                                        body = _react2.default.createElement(
                                            'div',
                                            { id: d.join_id, 'data-company_id': obj.ID, 'data-company_name': obj.name,
                                                onClick: _this9.cancelJoinGroupSession.bind(_this9),
                                                className: 'btn btn-sm btn-primary' },
                                            'Cancel Session'
                                        );
                                    }
                                }

                                if (isGsHasRemove) {
                                    hasRemove = true;
                                    removeEntity = _dbConfig.GroupSessionJoin.TABLE;
                                    removeEntityId = d.join_id;
                                }
                            }

                            break;
                    }

                    body = _react2.default.createElement(
                        'div',
                        null,
                        _this9.getRemoveButton(hasRemove, removeEntity, removeEntityId),
                        body
                    );

                    var img_position = (0, _authActions.isRoleRec)() ? obj.img_pos : obj.img_position;
                    return _react2.default.createElement(_list.ProfileListItem, { className: '', title: title, list_type: 'card',
                        img_url: obj.img_url,
                        custom_width: custom_width,
                        img_pos: img_position,
                        img_size: obj.img_size,
                        img_dimension: '50px',
                        body: body,
                        badge: badge,
                        badge_tooltip: badge_tooltip,
                        subtitle: subtitle,
                        type: 'recruiter', key: i });
                });

                if (this.props.list.length === 0) {
                    body = _react2.default.createElement(
                        'div',
                        { className: 'text-muted' },
                        _react2.default.createElement(
                            'i',
                            null,
                            'Nothing to show here'
                        )
                    );
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'border-card bc-' + this.props.bc_type },
                _react2.default.createElement(
                    'h4',
                    { className: 'bc-title' },
                    _react2.default.createElement(
                        'span',
                        { className: 'bc-title-back' },
                        this.props.title
                    ),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        this.props.subtitle
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'bc-body' },
                    body
                )
            );
        }
    }]);

    return ActvityList;
}(_react2.default.Component);

ActvityList.propTypes = {
    type: _propTypes2.default.oneOf([hallAction.ActivityType.SESSION, hallAction.ActivityType.QUEUE, hallAction.ActivityType.PRESCREEN]).isRequired,
    title: _propTypes2.default.string.isRequired,
    subtitle: _propTypes2.default.string,
    bc_type: _propTypes2.default.string.isRequired,
    list: _propTypes2.default.array.isRequired,
    fetching: _propTypes2.default.bool.isRequired,
    online_users: _propTypes2.default.object.isRequired
};

ActvityList.defaultProps = {
    subtitle: null
};

// ##################################################################################################################
// ##################################################################################################################
// ##################################################################################################################

var ActivitySingle = exports.ActivitySingle = function (_React$Component2) {
    _inherits(ActivitySingle, _React$Component2);

    function ActivitySingle(props) {
        _classCallCheck(this, ActivitySingle);

        var _this10 = _possibleConstructorReturn(this, (ActivitySingle.__proto__ || Object.getPrototypeOf(ActivitySingle)).call(this, props));

        _this10.state = {
            loading: true,
            data: {}
        };
        return _this10;
    }

    _createClass(ActivitySingle, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.loadData();
        }
    }, {
        key: 'loadData',
        value: function loadData() {
            var _this11 = this;

            var entity = null;
            switch (this.props.type) {
                case hallAction.ActivityType.PRESCREEN:
                    entity = "prescreen";
                    break;
            }
            if (entity == null) {
                this.setState(function (prevState) {
                    return { loading: false };
                });
            } else {
                var q = ' query {' + entity + ' (ID:' + this.props.id + '){ ' + hallAction.getActivityQueryAttr(this.props.type) + ' } }';;
                (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
                    _this11.setState(function (prevState) {
                        return { data: res.data.data[entity], loading: false };
                    });
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var v = null;
            if (this.state.loading) {
                v = _react2.default.createElement(_loader.Loader, { size: '2' });
            } else {
                var list = [this.state.data];
                v = _react2.default.createElement(ActvityList, {
                    bc_type: 'vertical',
                    online_users: {},
                    fetching: false,
                    type: this.props.type,
                    title: null,
                    subtitle: null,
                    list: list });
            }
            return v;
        }
    }]);

    return ActivitySingle;
}(_react2.default.Component);

ActivitySingle.propTypes = {
    type: _propTypes2.default.string.isRequired,
    id: _propTypes2.default.number.isRequired

    // ##################################################################################################################
    // ##################################################################################################################
    // ##################################################################################################################


};var sec = "act-sec";

var ActivitySection = function (_React$Component3) {
    _inherits(ActivitySection, _React$Component3);

    function ActivitySection(props) {
        _classCallCheck(this, ActivitySection);

        var _this12 = _possibleConstructorReturn(this, (ActivitySection.__proto__ || Object.getPrototypeOf(ActivitySection)).call(this, props));

        _this12.refresh = _this12.refresh.bind(_this12);
        return _this12;
    }

    _createClass(ActivitySection, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.props.loadActivity();
        }
    }, {
        key: 'refresh',
        value: function refresh(type) {
            this.props.loadActivity(type);
        }
    }, {
        key: 'createTitleWithTooltip',
        value: function createTitleWithTooltip(title) {
            var tooltip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            return _react2.default.createElement(
                'span',
                null,
                title,
                tooltip != null ? _react2.default.createElement(_tooltip2.default, {
                    debug: false,
                    bottom: '22px',
                    content: _react2.default.createElement(
                        'small',
                        null,
                        " ",
                        _react2.default.createElement('i', { className: 'fa fa-question-circle' })
                    ),
                    tooltip: tooltip }) : null
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this13 = this;

            var d = this.props.activity;

            // title session
            // var title_s = this.createTitleWithTooltip(
            //     <a onClick={() => this.refresh(hallAction.ActivityType.SESSION)}>Active Session</a>,
            //     (isRoleStudent())
            //         ? "Active one-to-one sessions will be show here. Join/rejoin session whenever it is active"
            //         : "Create sesssion with student from the Scheduled Private Session.")

            // title Zoom invitation
            // var title_zi = (isRoleRec()) ? this.createTitleWithTooltip(
            //     <a onClick={() => this.refresh(hallAction.ActivityType.ZOOM_INVITE)}>Panel Interview Invitation</a>,
            //     null) : null;

            //title queue
            //var title_q = <a onClick={() => this.refresh(hallAction.ActivityType.QUEUE)}>Queuing</a>;

            //title interview request
            // var tt_sr = <ol>
            //     {(isRoleStudent())
            //         ? <li>Visit company booths below to request for interview</li>
            //         : <li>Students will send interview request during Career Fair</li>}
            //     {(d.session_requests && d.session_requests.length > 0)
            //         ? <li>Approved interview request will appear under Scheduled Session</li>
            //         : null}
            // </ol>;

            // var title_sr = this.createTitleWithTooltip(
            //     <a onClick={() => this.refresh(hallAction.ActivityType.SESSION_REQUEST)}>Session Request</a>
            //     , tt_sr)

            // title Scheduled Session
            /*
            var subtitle_p = (isRoleStudent())
                ? null
                : <a><i className="fa fa-plus left"></i>Add New</a>;
            */

            var subtitle_p = null;

            // EUR FIX
            // var tt_p = isRoleStudent() ? "Visit company booth below and learn how to land Scheduled Sessions"
            //     : "You can also schedule sessions with students through Forum, Resume Drop, Pre-Screen and Past Sessions";
            var tt_p = (0, _authActions.isRoleStudent)() ? "Upcoming one-to-one sessions will be shown here. Check your email for confirmation." : "You can schedule private sessions with students through Student Listing page";
            var title_p = this.createTitleWithTooltip(_react2.default.createElement(
                'a',
                { onClick: function onClick() {
                        return _this13.refresh(hallAction.ActivityType.PRESCREEN);
                    }
                },
                'Private Session'
            ), tt_p);

            //var tt_gs = "Visit company booth below and join group session with recruiter.";
            // EUR FIX
            var tt_gs = "Upcoming group session that you signed up for will be shown here.";
            var title_gs = this.createTitleWithTooltip(_react2.default.createElement(
                'a',
                { onClick: function onClick() {
                        return _this13.refresh(hallAction.ActivityType.GROUP_SESSION_JOIN);
                    } },
                'Group Session'
            ), tt_gs);
            var subtitle_gs = null;

            //var size_s = (isRoleRec()) ? "12" : "12";
            //var size_q = (isRoleRec()) ? "12" : "6";
            //var size_zi = (isRoleRec()) ? "12" : "12";
            //var size_sr = (isRoleRec()) ? "12" : "12";
            var size_p = (0, _authActions.isRoleRec)() ? "12" : "12";

            //horizontal
            // var s = <div className={`col-sm-${size_s} no-padding`}>
            //     <ActvityList
            //         bc_type="vertical"
            //         online_users={this.props.online_users}
            //         fetching={d.fetching.sessions}
            //         type={hallAction.ActivityType.SESSION}
            //         title={title_s} list={d.sessions}></ActvityList></div>;

            // zoom invitation
            // var zi = (isRoleRec()) ? <div className={`col-sm-${size_zi} no-padding`}>
            //     <ActvityList
            //         bc_type="vertical"
            //         online_users={this.props.online_users}
            //         fetching={d.fetching.zoom_invites}
            //         type={hallAction.ActivityType.ZOOM_INVITE}
            //         title={title_zi} list={d.zoom_invites}></ActvityList></div> : null;

            /*
            var q = <div className={`col-sm-${size_q} no-padding`}>
                                        <ActvityList online_users={this.props.online_users}
                                            fetching={d.fetching.queues}
                                            type={hallAction.ActivityType.QUEUE}
                                            title={title_q} list={d.queues}></ActvityList></div>;
            */

            // session request
            // var sr = <div className={`col-sm-${size_sr} no-padding`}>
            //     <ActvityList
            //         bc_type={`vertical`}
            //         online_users={this.props.online_users}
            //         fetching={d.fetching.session_requests}
            //         type={hallAction.ActivityType.SESSION_REQUEST}
            //         title={title_sr} list={d.session_requests}></ActvityList></div>;

            //Group Session
            var gs = _react2.default.createElement(
                'div',
                { className: 'col-sm-' + size_p + ' no-padding' },
                _react2.default.createElement(ActvityList, {
                    bc_type: 'vertical',
                    online_users: this.props.online_users,
                    fetching: d.fetching.group_session_joins,
                    type: hallAction.ActivityType.GROUP_SESSION_JOIN,
                    title: title_gs,
                    subtitle: subtitle_gs,
                    list: d.group_session_joins })
            );

            //Scheduled Session
            var p = _react2.default.createElement(
                'div',
                { className: 'col-sm-' + size_p + ' no-padding' },
                _react2.default.createElement(ActvityList, {
                    bc_type: 'vertical',
                    online_users: this.props.online_users,
                    fetching: d.fetching.prescreens,
                    type: hallAction.ActivityType.PRESCREEN,
                    title: title_p,
                    subtitle: subtitle_p,
                    list: d.prescreens })
            );

            //{zi}
            /*
            <div className="row">
                    <div className={`col-md-12 no-padding`}>
                        {p}
                    </div>
                    <div className={`col-md-12 no-padding`}>
                        {s}
                    </div>
                </div>
            */

            return (0, _authActions.isRoleRec)() ? _react2.default.createElement(
                'div',
                null,
                p
            ) : _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 no-padding' },
                    gs
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'col-md-6 no-padding' },
                    p
                )
            );
        }
    }]);

    return ActivitySection;
}(_react2.default.Component);

// TODO status online


function mapStateToProps(state, ownProps) {
    return {
        activity: state.hall.activity,
        online_users: state.user.online_users
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({
        loadActivity: hallAction.loadActivity
    }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ActivitySection);

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCompanyCSSClass = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _socketConfig = __webpack_require__(32);

var _socketClient = __webpack_require__(17);

var _authActions = __webpack_require__(2);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require('../../../css/company-sec-old.scss');

var getCompanyCSSClass = exports.getCompanyCSSClass = function getCompanyCSSClass(type) {
    var className = "";
    switch (type) {
        case _dbConfig.CompanyEnum.TYPE_SPECIAL:
            className = "blue";
            break;
        case _dbConfig.CompanyEnum.TYPE_PLATINUM:
            className = "blue";
            break;
        case _dbConfig.CompanyEnum.TYPE_GOLD:
            className = "gold";
            break;
        case _dbConfig.CompanyEnum.TYPE_SILVER:
            className = "silver";
            break;
        case _dbConfig.CompanyEnum.TYPE_BRONZE:
            className = "bronze";
            break;
    }

    return className;
};

var sec = "com-sec-old";

//real time with socket need to use redux    

var CompanyBooth = function (_React$Component) {
    _inherits(CompanyBooth, _React$Component);

    function CompanyBooth(props) {
        _classCallCheck(this, CompanyBooth);

        var _this = _possibleConstructorReturn(this, (CompanyBooth.__proto__ || Object.getPrototypeOf(CompanyBooth)).call(this, props));

        _this.getCount = _this.getCount.bind(_this);
        _this.getStatus = _this.getStatus.bind(_this);
        _this.ID = _this.props.company.ID;
        return _this;
    }

    // update by socket  


    _createClass(CompanyBooth, [{
        key: 'loadOnlineRec',
        value: function loadOnlineRec() {
            //socket.on("rec_online")  
            // check if ID is equal to this ID    
        }
    }, {
        key: 'getCount',
        value: function getCount() {
            var countItem = [
                //     {
                //     count: this.props.onlineRec,
                //     label: "Recruiters Online"
                // }
                /*, {
                    //count: (this.props.traffic !== null) ? this.props.traffic.active_queues_count : 0,
                    count: this.props.countQueue,
                    label: "Students Queueing"
                }*/
                /*, {
                    count: (this.props.traffic !== null) ? this.props.traffic.active_prescreens_count : 0,
                    label: "Students PreScreen"
                }*/
                // , {
                // count: this.props.company.vacancies_count,
                // //label: "Open Vacancy"
                // // EUR FIX
                // label: "Job Details"
                //    }
            ];

            countItem = countItem.map(function (d, i) {
                var style = {};
                if (d.count > 0) {
                    style = {
                        color: "green",
                        opacity: "1"
                    };
                }
                return _react2.default.createElement(
                    'li',
                    { key: i, style: style },
                    _react2.default.createElement(
                        'div',
                        { className: sec + '-count' },
                        d.count
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: sec + '-label' },
                        d.label
                    )
                );
            });

            var counts = _react2.default.createElement(
                'ul',
                { className: sec + '-status' },
                countItem
            );

            return counts;
        }
    }, {
        key: 'getStatus',
        value: function getStatus() {
            return null;

            var clr = "";
            var tt = "";
            var left = "";
            var statusLabel = this.props.company.status;
            switch (this.props.company.status) {
                case _dbConfig.CompanyEnum.STS_OPEN:
                    clr = "success";
                    tt = "Open for session request";
                    left = "51";
                    break;
                case _dbConfig.CompanyEnum.STS_CLOSED:
                    tt = "Recruiters are not available currently";
                    clr = "danger";
                    left = "45";
                    break;
                case _dbConfig.CompanyEnum.STS_PS:
                    tt = "Only attending prescreening sessions currently";
                    clr = "primary";
                    left = "24";
                    break;
                case _dbConfig.CompanyEnum.STS_RD:
                    tt = "Only open for resume drops currently";
                    clr = "info";
                    left = "17";
                    break;
                case _dbConfig.CompanyEnum.STS_GS:
                    tt = "Group session is currently open";
                    clr = "primary";
                    left = "17";
                    break;
            }

            var label = _react2.default.createElement(
                'div',
                { className: 'label label-' + clr },
                statusLabel
            );

            return _react2.default.createElement(_tooltip2.default, {
                content: label,
                tooltip: tt,
                bottom: '20px',
                left: '-' + left + 'px',
                width: '140px' });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var onClick = function onClick() {
                layoutActions.storeUpdateFocusCard(_this2.props.company.name, _companyPopup2.default, { isPreEvent: _this2.props.isPreEvent, id: _this2.props.company.ID });
            };

            var pcTitle = this.props.company.name;
            var pcBody = null;
            if (!this.props.isPreEvent) {
                pcBody = _react2.default.createElement(
                    'span',
                    null,
                    this.getCount(),
                    this.getStatus()
                );
            }

            var className = getCompanyCSSClass(this.props.company.type);

            return _react2.default.createElement(_profileCard2.default, { className: className, onClick: onClick, type: 'company',
                title: pcTitle,
                img_url: this.props.company.img_url, img_pos: this.props.company.img_position, img_size: this.props.company.img_size,
                body: pcBody });
        }
    }]);

    return CompanyBooth;
}(_react2.default.Component);

CompanyBooth.propTypes = {
    company: _propTypes2.default.object.isRequired,
    traffic: _propTypes2.default.object,
    onlineRec: _propTypes2.default.number.isRequired,
    countQueue: _propTypes2.default.number.isRequired,
    isPreEvent: _propTypes2.default.bool
};

CompanyBooth.defaultProps = {
    isPreEvent: false
};

var CompaniesSection = function (_React$Component2) {
    _inherits(CompaniesSection, _React$Component2);

    function CompaniesSection(props) {
        _classCallCheck(this, CompaniesSection);

        var _this3 = _possibleConstructorReturn(this, (CompaniesSection.__proto__ || Object.getPrototypeOf(CompaniesSection)).call(this, props));

        _this3.page = 1;

        _this3.refreshTraffic = _this3.refreshTraffic.bind(_this3);
        console.log("Hall", "HallPage");
        _this3.traffic = {};
        return _this3;
    }

    _createClass(CompaniesSection, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this4 = this;

            this.props.loadCompanies();

            //this.props.loadTraffic();

            (0, _socketClient.socketOn)(_socketConfig.S2C.ONLINE_COMPANY, function (data) {
                _this4.props.setNonAxios("onlineCompanies", data);
            });

            (0, _socketClient.socketOn)(_socketConfig.BOTH.QUEUE_STATUS, function (data) {
                _this4.props.setNonAxios("queueCompanies", data);
            });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {}
        //  layoutActions.storeUpdateFocusCard("tek Sapot", CompanyPopup, { isPreEvent: this.props.isPreEvent, id: 12 });

        // add socket on here

    }, {
        key: 'refreshTraffic',
        value: function refreshTraffic() {
            this.props.loadTraffic();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            // to see data structure
            //alert(JSON.stringify(this.props.queueCompanies));
            //alert(JSON.stringify(this.props.onlineCompanies));


            var companies = this.props.companies;
            var traffic = this.props.traffic;

            var loading = _react2.default.createElement(_loader.Loader, { size: '3', text: 'Loading Companies..' });

            var view = [];
            if (companies.fetching) {
                view = loading;
            } else {
                companies = companies.data.companies ? companies.data.companies : null;

                var comView = companies.map(function (d, i) {
                    // booth traffic and companies order by need to set the same in order for this to work
                    var trf = !traffic.fetching || traffic.data.companies ? traffic.data.companies[i] : null;

                    //this is from socket
                    var onlineRec = _this5.props.onlineCompanies[d.ID] ? Object.keys(_this5.props.onlineCompanies[d.ID]).length : 0;

                    var countQueue = _this5.props.queueCompanies[d.ID] ? _this5.props.queueCompanies[d.ID] : 0;

                    return _react2.default.createElement(CompanyBooth, { isPreEvent: _this5.props.isPreEvent, key: i, onlineRec: onlineRec,
                        countQueue: countQueue,
                        company: d,
                        traffic: trf });
                });

                //var btn = <a onClick={this.refreshTraffic}>Refresh Line</a>;

                view = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'div',
                        { className: sec },
                        comView
                    )
                );
            }

            return view;
        }
    }]);

    return CompaniesSection;
}(_react2.default.Component);

function mapStateToProps(state, ownProps) {
    return {
        traffic: state.hall.traffic,
        companies: state.hall.companies,
        onlineCompanies: state.hall.onlineCompanies,
        queueCompanies: state.hall.queueCompanies
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({
        loadTraffic: hallAction.loadTraffic,
        loadCompanies: hallAction.loadCompanies,
        setNonAxios: hallAction.setNonAxios
    }, dispatch);
}

CompaniesSection.propTypes = {
    isPreEvent: _propTypes2.default.bool
};

CompaniesSection.defaultProps = {
    isPreEvent: false
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CompaniesSection);

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _VolunteerScheduledIn;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _hallActions = __webpack_require__(21);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _appConfig = __webpack_require__(4);

var _time = __webpack_require__(9);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _users = __webpack_require__(27);

var _socketClient = __webpack_require__(17);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _userPopup = __webpack_require__(24);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// included in my-activity for recruiter
// add as form only in past session in my-activity
var VolunteerScheduledInterview = function (_React$Component) {
  _inherits(VolunteerScheduledInterview, _React$Component);

  function VolunteerScheduledInterview(props) {
    _classCallCheck(this, VolunteerScheduledInterview);

    var _this = _possibleConstructorReturn(this, (VolunteerScheduledInterview.__proto__ || Object.getPrototypeOf(VolunteerScheduledInterview)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.search = {};
    _this.state = {
      key: 0
    };
    return _this;
  }

  _createClass(VolunteerScheduledInterview, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      this.dataTitle = "Manage Scheduled Interview";

      this.successAddHandler = function (d) {
        //   if (this.props.formOnly) {
        //     var link = isRoleAdmin()
        //       ? `${RootPath}/app/manage-company/${d.company_id}/scheduled-interview`
        //       : `${RootPath}/app/my-activity/scheduled-session`;
        //     var mes = (
        //       <div>
        //         New Session Have Been Successfully Scheduled
        //         <br></br>
        //         <NavLink
        //           onClick={() => {
        //             layoutActions.storeHideBlockLoader();
        //           }}
        //           to={link}
        //         >
        //           Manage Scheduled Session
        //         </NavLink>
        //       </div>
        //     );
        //     if (this.props.isFormStudentListing) {
        //       mes = (
        //         <div>
        //           New private call has been successfully scheduled. View call at{" "}
        //           <NavLink
        //             onClick={() => {
        //               layoutActions.storeHideBlockLoader();
        //             }}
        //             to={`${RootPath}/app/`}
        //           >
        //             Home Page
        //           </NavLink>{" "}
        //           under My Activity section.
        //         </div>
        //       );
        //     }
        //     layoutActions.successBlockLoader(mes);
        //     if (this.props.successAddHandlerExternal) {
        //       this.props.successAddHandlerExternal(d);
        //     }
        // after success add scheduled interview
        // emit to student only
        // emit to reload scheduled interview
      };

      this.getButtonEndSession = function (d) {
        var buttonEndSession = null;
        if (d.status != _dbConfig.PrescreenEnum.STATUS_ENDED) {
          if (d.join_url || d.is_onsite_call == 1 && (0, _authActions.getCFObj)()[_dbConfig.CFSMeta.HALL_CFG_ONSITE_CALL_USE_GROUP] == 1) {
            buttonEndSession = _react2.default.createElement(
              "button",
              {
                className: "btn btn-danger btn-sm",
                "data-student": d.student.first_name + " " + d.student.last_name,
                "data-company": d.company.name,
                "data-company_id": d.company_id,
                "data-id": d.ID,
                onClick: function onClick(e) {
                  _this2.endSessionOnClick(e);
                }
              },
              "End Session"
            );
          }
        }

        return buttonEndSession;
      };

      this.endSessionOnClick = function (e) {
        var ID = e.currentTarget.dataset.id;
        var student = e.currentTarget.dataset.student;
        var company_id = e.currentTarget.dataset.company_id;
        var company = e.currentTarget.dataset.company;

        layoutActions.confirmBlockLoader(_react2.default.createElement(
          "div",
          null,
          "Ending video call session between ",
          _react2.default.createElement(
            "b",
            null,
            student
          ),
          " and",
          " ",
          _react2.default.createElement(
            "b",
            null,
            company
          ),
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "small",
            null,
            _react2.default.createElement(
              "i",
              null,
              "This action cannot be undone"
            )
          )
        ), function () {
          layoutActions.loadingBlockLoader("Ending Session.. Please Wait..");
          var pass_params = {
            ID: ID
          };
          (0, _apiHelper.getPHPNotificationApiAxios)("delete-daily-co-room", pass_params).then(function (res) {
            if (typeof res.data == "string" && res.data.indexOf("success") >= 0) {
              layoutActions.successBlockLoader("Successfully End Session");
              _this2.setState(function (prevState) {
                return { key: prevState.key + 1 };
              });

              (0, _socketClient.emitHallActivity)(_hallActions.ActivityType.PRESCREEN, null, company_id);
            } else {
              layoutActions.errorBlockLoader("Error Message : " + res.data);
            }
          });
        }, function () {});
      };
      //##########################################
      // render table
      this.renderRow = function (d) {
        var labelClass = "";
        var labelText = "";
        switch (d.status) {
          case _dbConfig.PrescreenEnum.STATUS_APPROVED:
            labelClass = "primary";
            labelText = "Approved";
            break;
          case _dbConfig.PrescreenEnum.STATUS_STARTED:
            labelClass = "success";
            labelText = "Started";
            break;
          case _dbConfig.PrescreenEnum.STATUS_ENDED:
            labelClass = "danger";
            labelText = "Ended";
            break;
        }
        var status = _react2.default.createElement(
          "label",
          { className: "label label-" + labelClass },
          labelText
        );

        var onsite_call = d[_dbConfig.Prescreen.IS_ONSITE_CALL] == "1" ? _react2.default.createElement(
          "label",
          { className: "label label-warning" },
          "On-site Call"
        ) : _react2.default.createElement(
          "label",
          { className: "label label-default" },
          "Virtual Call"
        );

        return [_react2.default.createElement(
          "td",
          null,
          d.ID
        ), _react2.default.createElement(
          "td",
          null,
          _this2.getButtonEndSession(d)
        ), _react2.default.createElement(
          "td",
          null,
          (0, _users.createUserTitle)(d.student, _this2.search.student),
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "i",
            null,
            d.student.university
          )
        ), _react2.default.createElement(
          "td",
          null,
          d.company.name
        ), _react2.default.createElement(
          "td",
          null,
          status
        ), _react2.default.createElement(
          "td",
          null,
          _time.Time.getString(d[_dbConfig.Prescreen.APPNMENT_TIME])
        ), _react2.default.createElement(
          "td",
          null,
          onsite_call
        ), _react2.default.createElement(
          "td",
          null,
          _time.Time.getString(d[_dbConfig.Prescreen.UPDATED_AT])
        ), _react2.default.createElement(
          "td",
          null,
          _react2.default.createElement(
            "div",
            { style: { width: "100px" } },
            d.join_url
          )
        )];
      };

      this.tableHeader = _react2.default.createElement(
        "thead",
        null,
        _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "td",
            null,
            "#"
          ),
          _react2.default.createElement(
            "th",
            null,
            "ID"
          ),
          _react2.default.createElement(
            "th",
            null,
            "End Session"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Student"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Company"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Status"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Appointment Time"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Is On-site Call?"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Last Updated"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Join Url"
          )
        )
      );

      //##########################################
      //  search
      this.searchParams = "";
      this.searchFormItem = [{
        label: "Find Student",
        name: "student",
        type: "text",
        placeholder: "Type student name or email"
      }];

      this.searchFormOnSubmit = function (d) {
        _this2.search = d;
        _this2.searchParams = "";
        if (d != null) {
          _this2.searchParams += d.student ? "student_name:\"" + d.student + "\"," : "";
          _this2.searchParams += d.student ? "student_email:\"" + d.student + "\"," : "";
          _this2.searchParams += d.status && d.status != "ALL" ? "status:\"" + d.status + "\"," : "";
        }
      };

      //##########################################
      //  loadData
      this.loadData = function (page, offset) {
        var query = "query{\n                  prescreens(" + _this2.searchParams + "\n                  , not_prescreen:1\n                  , page:" + page + "\n                  , offset:" + offset + "\n                  , order_by:\"appointment_time desc, status asc\"\n                  ) \n                  {\n                    ID\n                    company_id\n                    company{name}\n                    status\n                    special_type\n                    is_onsite_call\n                    appointment_time\n                    join_url\n                    updated_at\n                    student{\n                      ID university major minor doc_links{url label}\n                      first_name last_name user_email\n                    }\n                  }\n                }";
        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      // get actual data from loadData
      // can alter any data here too
      this.getDataFromRes = function (res) {
        var ps = res.data.data.prescreens;
        return ps;
      };

      //##########################################
      // form operation properties
      // hook before submit
      this.formWillSubmit = function (d, edit) {
        d[_dbConfig.Prescreen.UPDATED_BY] = (0, _authActions.getAuthUser)().ID;
        return d;
      };

      this.forceDiff = [];

      this.getEditFormDefault = function (ID) {
        var query = "query{prescreen(ID:" + ID + "){\n                  ID\n                  status\n                }}";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var data = res.data.data.prescreen;
          return data;
        });
      };

      this.newFormDefault = this.props.defaultFormItem;

      // ni utk create from student listing
      this.getFormItem = function (edit) {
        return _this2.getFormData(edit);
      };

      // create form add new default
      this.getFormItemAsync = function (edit) {
        var singleStudent = _this2.props.formOnly;
        var studentId = _this2.props.defaultFormItem[_dbConfig.Prescreen.STUDENT_ID];
        var query = "";
        if (typeof studentId !== "undefined") {
          query = "query{user(ID:" + _this2.props.defaultFormItem[_dbConfig.Prescreen.STUDENT_ID] + ")\n                      {ID\n                      first_name\n                      last_name}}";
        } else {
          // this not really needed
          query = "query{prescreen(ID:1){ID}}";
        }

        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var isNormal = false;
          var studentData = [];
          if (singleStudent) {
            var user = res.data.data.user;
            studentData = [{ key: user.ID, label: user.first_name + " " + user.last_name }];
          }

          if (_this2.props.company_id !== null) {
            return _this2.getFormData(edit, singleStudent, studentData, null);
          } else {
            var queryCompany = "query{\n                              companies{\n                                ID\n                                name\n                              }\n                            }";
            return (0, _apiHelper.getAxiosGraphQLQuery)(queryCompany).then(function (resCompany) {
              var com = resCompany.data.data.companies;
              var companyData = com.map(function (d, i) {
                return { key: d.ID, label: d.name };
              });
              return _this2.getFormData(edit, singleStudent, studentData, companyData);
            });
          }
        });
      };

      // kalau utk isFormStudentListing kita taknak load user or company info dulu
      if (this.props.isFormStudentListing === true) {
        this.getFormItemAsync = undefined;
      }
    }
  }, {
    key: "getFormData",
    value: function getFormData(edit) {
      var ret = [{ header: "Scheduled Session Form" }, {
        label: "Status",
        sublabel: "Update to Ended if student had finish video call with recruiter",
        name: _dbConfig.Prescreen.STATUS,
        type: "select",
        required: true,
        data: [_dbConfig.PrescreenEnum.STATUS_APPROVED, _dbConfig.PrescreenEnum.STATUS_ENDED]
      }];
      return ret;
    }
  }, {
    key: "render",
    value: function render() {
      var _React$createElement;

      return _react2.default.createElement(_generalForm2.default, (_React$createElement = {
        key: this.state.key,
        searchFormNonPopup: true,
        dataTitle: this.dataTitle,
        noMutation: true,
        actionFirst: true,
        canEdit: true,
        entity: "prescreen"
      }, _defineProperty(_React$createElement, "actionFirst", true), _defineProperty(_React$createElement, "entity_singular", "Scheduled Session"), _defineProperty(_React$createElement, "addButtonText", "Add New"), _defineProperty(_React$createElement, "noMutation", true), _defineProperty(_React$createElement, "canEdit", true), _defineProperty(_React$createElement, "dataOffset", 20), _defineProperty(_React$createElement, "searchFormItem", this.searchFormItem), _defineProperty(_React$createElement, "searchFormOnSubmit", this.searchFormOnSubmit), _defineProperty(_React$createElement, "forceDiff", this.forceDiff), _defineProperty(_React$createElement, "tableHeader", this.tableHeader), _defineProperty(_React$createElement, "newFormDefault", this.newFormDefault), _defineProperty(_React$createElement, "getEditFormDefault", this.getEditFormDefault), _defineProperty(_React$createElement, "getFormItem", this.getFormItem), _defineProperty(_React$createElement, "renderRow", this.renderRow), _defineProperty(_React$createElement, "getDataFromRes", this.getDataFromRes), _defineProperty(_React$createElement, "loadData", this.loadData), _defineProperty(_React$createElement, "successAddHandler", this.successAddHandler), _defineProperty(_React$createElement, "formWillSubmit", this.formWillSubmit), _defineProperty(_React$createElement, "formOnly", this.props.formOnly), _React$createElement));
    }
  }]);

  return VolunteerScheduledInterview;
}(_react2.default.Component);

exports.default = VolunteerScheduledInterview;


VolunteerScheduledInterview.PropTypes = {
  isFormStudentListing: _propTypes2.default.bool,
  isFormHidden: _propTypes2.default.func,
  company_id: _propTypes2.default.number.isRequired,
  prescreen_only: _propTypes2.default.bool,
  defaultFormItem: _propTypes2.default.object,
  successAddHandlerExternal: _propTypes2.default.func,
  formOnly: _propTypes2.default.bool // to create from past sessions list
};

VolunteerScheduledInterview.defaultProps = (_VolunteerScheduledIn = {
  isFormStudentListing: false,
  isFormHidden: function isFormHidden(name) {
    return false;
  },
  prescreen_only: false,
  successAddHandlerExternal: false
}, _defineProperty(_VolunteerScheduledIn, "prescreen_only", false), _defineProperty(_VolunteerScheduledIn, "formOnly", false), _defineProperty(_VolunteerScheduledIn, "defaultFormItem", {}), _VolunteerScheduledIn);

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _dbConfig = __webpack_require__(5);

var _authActions = __webpack_require__(2);

var _appConfig = __webpack_require__(4);

var _availability = __webpack_require__(81);

var _availability2 = _interopRequireDefault(_availability);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _login = __webpack_require__(157);

var _login2 = _interopRequireDefault(_login);

var _userConfig = __webpack_require__(294);

var _manageUserProfile = __webpack_require__(183);

var _manageUserProfile2 = _interopRequireDefault(_manageUserProfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import { Redirect, NavLink } from 'react-router-dom';

//import { Month, Year, Sponsor, MasState, Country } from '../../config/data-config';
//import { ButtonLink } from '../component/buttons.jsx';


var SignUpPage = function (_React$Component) {
  _inherits(SignUpPage, _React$Component);

  function SignUpPage(props) {
    _classCallCheck(this, SignUpPage);

    var _this = _possibleConstructorReturn(this, (SignUpPage.__proto__ || Object.getPrototypeOf(SignUpPage)).call(this, props));

    _this.formOnSubmit = _this.formOnSubmit.bind(_this);
    _this.manageUserProfileComplete = _this.manageUserProfileComplete.bind(_this);
    _this.userId = 0;
    _this.state = {
      completed: false,
      confirmed: false,
      error: null,
      disableSubmit: false,
      success: false,
      user: null,
      currentStep: 1
    };
    return _this;
  }

  _createClass(SignUpPage, [{
    key: "manageUserProfileComplete",
    value: function manageUserProfileComplete() {
      this.setState({ completed: true });
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      this.CF = (0, _authActions.getCF)();
      this.CFObj = (0, _authActions.getCFObj)();

      if (!this.CFObj.can_register) {
        return;
      }

      this.defaultValues = {};
      this.defaultValues[_dbConfig.User.CF] = this.CF;

      //this.formItems = getRegisterFormItem(1);
    }

    //return string if there is error

  }, {
    key: "filterForm",
    value: function filterForm(d) {
      if (this.state.currentStep == 1) {
        //check if both password is same
        // if (d[User.PASSWORD] !== d[`${User.PASSWORD}-confirm`]) {
        //     return "Password not same";
        // }

        // check if policy accepted
        if (typeof d["accept-policy"] === "undefined" || d["accept-policy"][0] != "accepted") {
          return "You must agree to terms and condition before continuing.";
        }
      }

      return 0;
    }
  }, {
    key: "formOnSubmit",
    value: function formOnSubmit(d) {
      var _this2 = this;

      console.log("sign up", d);
      var err = this.filterForm(d);

      if (err === 0) {
        (0, _form.toggleSubmit)(this, { error: null });
        if (typeof d[_dbConfig.UserMeta.MAJOR] !== "undefined") {
          d[_dbConfig.UserMeta.MAJOR] = JSON.stringify(d[_dbConfig.UserMeta.MAJOR]);
        }
        if (typeof d[_dbConfig.UserMeta.MINOR] !== "undefined") {
          d[_dbConfig.UserMeta.MINOR] = JSON.stringify(d[_dbConfig.UserMeta.MINOR]);
        }
        // if (update[UserMeta.CGPA] == "") {
        //     update[UserMeta.CGPA] = 0;
        // }

        if (this.state.currentStep == 1) {
          //prepare data for registration
          d[_dbConfig.User.LOGIN] = d[_dbConfig.User.EMAIL];
          // get default cf from
          d[_dbConfig.User.CF] = this.CF;
          d[_dbConfig.UserMeta.USER_STATUS] = _dbConfig.UserEnum.STATUS_NOT_ACT;

          // Step 1 - Basic Info go to registration
          // cf is set in this function
          (0, _authActions.register)(d).then(function (res) {
            _this2.userId = res.data[_dbConfig.User.ID];
            console.log(res.data);
            d[_dbConfig.User.ID] = res.data[_dbConfig.User.ID];
            // toggleSubmit(this, { user: d, success: true });
            _this2.setState(function (prevState) {
              var newState = {
                user: d,
                currentStep: prevState.currentStep + 1,
                error: null,
                disableSubmit: !prevState.disableSubmit,
                success: true
              };
              return newState;
            });
          }, function (err) {
            (0, _form.toggleSubmit)(_this2, { error: err.response.data });
          });
        }

        // update user
        if (this.state.currentStep > 1) {
          //prepare data for edit
          var update = d;
          d[_dbConfig.User.ID] = this.userId;
          var edit_query = "mutation{edit_user(" + (0, _graphqlObj2arg2.default)(update, {
            noOuterBraces: true
          }) + ") {ID}}";
          (0, _apiHelper.getAxiosGraphQLQuery)(edit_query).then(function (res) {
            _this2.setState(function (prevState) {
              var newState = {
                currentStep: prevState.currentStep + 1,
                error: null,
                disableSubmit: false,
                confirmed: true
              };
              return newState;
            });
          }, function (err) {
            (0, _form.toggleSubmit)(_this2, { error: err.response.data });
          });
        }
      } else {
        //console.log("Err", err);
        this.setState(function () {
          return { error: err };
        });
      }
    }
  }, {
    key: "onConfirmClick",
    value: function onConfirmClick() {
      this.setState(function (prevState) {
        return { confirmed: true };
      });
    }

    // getPostRegisterViewOld(user) {
    //     let content = null;
    //     let formItems = getRegisterFormItem(this.state.currentStep);
    //     let completeView = this.state.currentStep > TotalRegisterStep
    //         ?
    //         <div>
    //             <h3>Congratulation! You Have Completed Your Profile</h3>
    //             <LoginPage defaultLogin={user[User.EMAIL]} title={<h4>Login Now</h4>}></LoginPage>
    //         </div>
    //         :
    //         <div>
    //             <h3>Complete Your Profile - Step {this.state.currentStep} out of {TotalRegisterStep}</h3>
    //             <Form className="form-row"
    //                 items={formItems}
    //                 onSubmit={this.formOnSubmit}
    //                 defaultValues={{}}
    //                 submitText='Submit'
    //                 disableSubmit={this.state.disableSubmit}
    //                 error={this.state.error}>
    //             </Form>
    //         </div>

    //     content = <div>
    //         <h3>Welcome {user[UserMeta.FIRST_NAME]} !  <i className="fa fa-smile-o"></i></h3>
    //         Your account has been successfully created<br></br>
    //         Don't forget to <b>upload your resume</b> when you are logged in!<br></br>
    //         You can do it at <b>Upload Document</b>
    //         {/* Please check your email (<b>{user[User.EMAIL]}</b>) for the activation link.
    //             <br></br>If you did not received any email, contact us at <b>innovaseedssolutions@gmail.com</b>
    //             <br></br><small><i>** The email might take a few minutes to arrive **</i></small> */}
    //         {completeView}
    //     </div>
    //     return content;
    // }

  }, {
    key: "getPostRegisterView",
    value: function getPostRegisterView(user) {
      return _react2.default.createElement(
        "div",
        {
          style: {
            textAlign: "left",
            maxWidth: "900px",
            margin: "auto",
            padding: "10px"
          }
        },
        _react2.default.createElement(
          "h1",
          null,
          "Welcome ",
          user[_dbConfig.UserMeta.FIRST_NAME],
          " !",
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "small",
            null,
            "Let's complete your profile and get you noticed by recruiters!"
          )
        ),
        _react2.default.createElement("div", { style: { marginTop: "20vh" } }),
        _react2.default.createElement(_manageUserProfile2.default, {
          completeHandler: this.manageUserProfileComplete,
          user_id: user.ID
        })
      );
    }
  }, {
    key: "render",
    value: function render() {
      document.setTitle("Sign Up");

      if (!this.CFObj.can_register) {
        return _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "h3",
            null,
            "Registration for",
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "b",
              null,
              this.CFObj.title
            ),
            _react2.default.createElement("br", null),
            "is not open yet",
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "small",
              null,
              "Stay Tuned For More Info"
            )
          )
        );
      }

      var content = null;

      var user = this.state.user;

      // debug
      var DEBUG_NEW_SIGN_UP = false;
      var DEBUG_COMPLETED = false;
      var IS_DEBUG = DEBUG_NEW_SIGN_UP || DEBUG_COMPLETED;
      if (IS_DEBUG) {
        user = {
          ID: 886,
          first_name: "Wan Zul",
          user_email: "test.student@gmail.com"
        };
      }

      if (this.state.completed || DEBUG_COMPLETED) {
        return _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "h3",
            null,
            "Congratulation! You Have Completed Your Profile"
          ),
          _react2.default.createElement(_login2.default, {
            defaultLogin: user[_dbConfig.User.EMAIL],
            title: _react2.default.createElement(
              "h4",
              null,
              "Login Now"
            )
          })
        );
      }

      if (this.state.success || DEBUG_NEW_SIGN_UP) {
        window.scrollTo(0, 0);
        content = this.getPostRegisterView(user);
      } else {
        var formItems = (0, _userConfig.getRegisterFormItem)(1);
        content = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "h3",
            null,
            "Student Registration",
            _react2.default.createElement("br", null)
          ),
          _react2.default.createElement(_form2.default, {
            className: "form-row",
            items: formItems,
            onSubmit: this.formOnSubmit,
            defaultValues: this.defaultValues,
            submitText: "Sign Me Up !",
            disableSubmit: this.state.disableSubmit,
            error: this.state.error
          })
        );
      }

      return content;
    }
  }]);

  return SignUpPage;
}(_react2.default.Component);

exports.default = SignUpPage;

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

var _inputSuggestion = __webpack_require__(158);

var _inputSuggestion2 = _interopRequireDefault(_inputSuggestion);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputMulti = function (_React$Component) {
  _inherits(InputMulti, _React$Component);

  function InputMulti(props) {
    _classCallCheck(this, InputMulti);

    // // constant
    // this.START_FETCH_LEN = 2;

    // fn binding
    var _this = _possibleConstructorReturn(this, (InputMulti.__proto__ || Object.getPrototypeOf(InputMulti)).call(this, props));

    _this.inputOnChange = _this.inputOnChange.bind(_this);
    _this.continueOnClick = _this.continueOnClick.bind(_this);
    _this.finishDbRequest = _this.finishDbRequest.bind(_this);
    _this.onChooseSuggestion = _this.onChooseSuggestion.bind(_this);
    _this.onClickListItem = _this.onClickListItem.bind(_this);
    _this.insertDB = _this.insertDB.bind(_this);
    _this.authUser = (0, _authActions.getAuthUser)();

    // // state
    _this.state = {
      list_loading: false,
      show_is_required: false,
      hasSuggestion: false,
      list: [
        // {
        //   multi_id : num
        //   isSelected : true/false
        //   val : ""
        // }
      ]
    };
    return _this;
  }
  // updateRequiredWarning() {
  //   if (!this.hasSelectedItem()) {
  //     this.setState({
  //       show_is_required: this.props.is_required ? true : false
  //     });
  //   } else {
  //     this.setState({
  //       show_is_required: false
  //     });
  //   }
  // }


  _createClass(InputMulti, [{
    key: "isSelect",
    value: function isSelect() {
      return this.props.input_type == "select";
    }
  }, {
    key: "inputOnChange",
    value: function inputOnChange(e) {
      if (this.isSelect()) {
        var v = e.target.value;
        if (v != "" && v != null) {
          this.onChooseSuggestion(v);
        }
        e.target.value = "";
      }
    }
  }, {
    key: "hasSelectedItem",
    value: function hasSelectedItem() {
      var hasSelected = false;
      for (var i in this.state.list) {
        if (this.state.list[i].isSelected == true) {
          return true;
        }
      }
      return hasSelected;
    }
  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate(nextProps) {
      var props = this.props.suggestion_search_by_val;
      var next = nextProps.suggestion_search_by_val;

      if (Array.isArray(props)) {
        props = JSON.stringify(props);
      }

      if (Array.isArray(next)) {
        next = JSON.stringify(next);
      }

      if (props !== next) {
        // console.log(
        //   this.props.id,
        //   "UPDATEEEE",
        //   nextProps.suggestion_search_by_val
        // );
        this.setDefaultList(nextProps);
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      this.setDefaultList();
    }
  }, {
    key: "setDefaultList",
    value: function setDefaultList() {
      var _this2 = this;

      var customProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      this.setState({ list_loading: true });
      var props = customProps ? customProps : this.props;

      var refList = [];
      var multiList = [];
      var loaded = 0;
      var toLoad = this.props.discard_ref_from_default ? 1 : 2;

      var finish = function finish() {
        loaded++;
        if (loaded >= toLoad) {
          //this.updateRequiredWarning();
          // console.log("finish");

          var multiMap = {};
          multiList.map(function (d, i) {
            multiMap[d.val] = { ID: d.ID, val: d.val, inRef: false };
          });

          // console.log("refList", refList);
          // console.log("multiList", multiList);
          // console.log("multiMap", multiMap);

          var stateList = [];

          // add from ref
          for (var i in refList) {
            var r = refList[i];
            var rVal = r.val;
            var multi_id = null;
            if (typeof multiMap[rVal] !== "undefined") {
              multiMap[rVal].inRef = true;
              multi_id = multiMap[rVal].ID;
            }
            stateList.push({
              isSelected: multi_id != null ? true : false,
              val: rVal,
              multi_id: multi_id
            });
          }

          // add from multis
          for (var i in multiList) {
            var m = multiList[i];
            if (multiMap[m.val].inRef === true) {
              continue;
            }
            stateList.push({
              isSelected: true,
              val: m.val,
              multi_id: m.ID
            });
          }

          _this2.setState({
            list_loading: false,
            list: stateList,
            hasSuggestion: refList.length > 0
          });

          _this2.triggerDoneHandler();
        }
      };

      if (this.props.discard_ref_from_default === false) {
        // list of suggestion from ref
        var qRef = "query{\n        refs(\n          table_name :\"" + props.ref_table_name + "\"\n          entity:\"" + props.entity + "\"\n          entity_id:" + props.entity_id + "\n          order_by:\"" + (props.ref_order_by ? props.ref_order_by : "RAND ()") + "\"\n          page:1, offset:" + props.ref_offset + "\n          location_suggestion :\"" + props.location_suggestion + "\",\n          category :\"" + props.ref_category + "\",\n          search_by_ref :\"" + props.suggestion_search_by_ref + "\",\n          search_by_val : \"" + props.suggestion_search_by_val + "\"\n        ){\n          ID\n          val\n        }\n      }";
        (0, _apiHelper.graphql)(qRef).then(function (res) {
          var fetched = res.data.data.refs;
          refList = fetched;
          finish();
        });
      }

      // list of selected item in multi
      var qMulti = "query{\n      multis(\n        table_name :\"" + props.table_name + "\"\n        entity:\"" + props.entity + "\"\n        entity_id:" + props.entity_id + "\n      ){\n        ID val\n      }\n    }";
      (0, _apiHelper.graphql)(qMulti).then(function (res) {
        var fetched = res.data.data.multis;
        multiList = fetched;
        finish();
      });
    }
  }, {
    key: "triggerDoneHandler",
    value: function triggerDoneHandler() {
      this.props.doneHandler(this.props.id, {
        type: "multi",
        list: this.state.list,
        isEmptyAndRequired: this.isEmptyAndRequired()
      });
    }
  }, {
    key: "continueOnClick",
    value: function continueOnClick(e) {
      if (this.props.continueOnClick) {
        this.props.continueOnClick(e);
      }
    }
  }, {
    key: "deleteDB",
    value: function deleteDB(i, multi_id) {
      var _this3 = this;

      var del = {
        table_name: this.props.table_name,
        ID: multi_id
      };
      var q = "mutation{ delete_multi(" + (0, _graphqlObj2arg2.default)(del, {
        noOuterBraces: true
      }) + ") }";
      (0, _apiHelper.graphql)(q).then(function (res) {
        _this3.finishDbRequest(i, res.data.data);
      }).catch(function (err) {
        _this3.finishDbRequest(i, null, err);
      });
    }
  }, {
    key: "insertDB",
    value: function insertDB(v, i) {
      var _this4 = this;

      var index = i;
      console.log("insertDB 1", index);

      var ins = {
        table_name: this.props.table_name,
        entity: this.props.entity,
        entity_id: this.props.entity_id,
        val: v
      };
      var q = "mutation{add_multi(" + (0, _graphqlObj2arg2.default)(ins, { noOuterBraces: true }) + ") {\n      ID\n      entity\n      entity_id\n      val\n      created_at\n    }}";
      (0, _apiHelper.graphql)(q).then(function (res) {
        var d = res.data.data.add_multi;
        console.log("insertDB", index);
        _this4.finishDbRequest(index, d.ID, null, d.val);
      }).catch(function (err) {
        console.log("catch err", err);
        _this4.finishDbRequest(index, null, err);
      });
    }
  }, {
    key: "onChooseSuggestion",
    value: function onChooseSuggestion(v) {
      var index = -1;
      var iInList = this.indexOfValInList(v);
      if (iInList <= -1) {
        // kalau takde dlm list
        index = this.state.list.length;
        this.setState(function (pState) {
          var prevState = JSON.parse(JSON.stringify(pState));
          prevState.list.push({
            val: v,
            isSelected: false,
            loading: true
          });
          return { list: prevState.list };
        });
      } else {
        // kalau dah ada dlm list
        index = iInList;
        var isSelected = this.state.list[index].isSelected;
        if (isSelected) {
          index = this.state.list.length;
        }
      }
      this.insertDB(v, index);
    }
  }, {
    key: "indexOfValInList",
    value: function indexOfValInList(val) {
      for (var i in this.state.list) {
        var v = this.state.list[i].val;
        if (val == v) {
          return Number.parseInt(i);
        }
      }

      return -1;
    }
  }, {
    key: "finishDbRequest",
    value: function finishDbRequest(i) {
      var multi_id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      var err = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      var val = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

      console.log("finishDbRequest", i);
      var isDuplicate = false;
      try {
        isDuplicate = err.response.data.indexOf("ER_DUP_ENTRY") >= 0;
      } catch (err) {}

      // ada error tapi bukan error duplicate, kita return
      if (err != null && !isDuplicate) {
        return;
      }

      if (this.isSelect() && isDuplicate) {
        return;
      }

      var isInsert = !this.state.list[i].isSelected;
      var isDelete = this.state.list[i].isSelected;

      this.setState(function (pState) {
        var prevState = JSON.parse(JSON.stringify(pState));
        if (isDuplicate) {
          prevState.list.splice(i);
        } else if (isDelete) {
          prevState.list[i].isSelected = !prevState.list[i].isSelected;
          prevState.list[i].multi_id = null;
          prevState.list[i].loading = false;
        } else if (isInsert) {
          prevState.list[i].isSelected = !prevState.list[i].isSelected;
          prevState.list[i].multi_id = multi_id;
          prevState.list[i].loading = false;
        }
        return { list: prevState.list };
      });

      this.triggerDoneHandler();
      // this.updateRequiredWarning();
    }
  }, {
    key: "isEmptyAndRequired",
    value: function isEmptyAndRequired() {
      return this.props.is_required && !this.hasSelectedItem();
    }
  }, {
    key: "onClickListItem",
    value: function onClickListItem(e) {
      var v = e.currentTarget.dataset.v;
      var i = e.currentTarget.dataset.i;
      var multi_id = e.currentTarget.dataset.multi_id;

      var isLoading = this.state.list[i].loading;
      if (isLoading) {
        return;
      }

      var isInsert = !this.state.list[i].isSelected;
      var isDelete = this.state.list[i].isSelected;
      // let isInsert = true;
      // let isDelete = false;

      // set the item to loading
      this.setState(function (pState) {
        var prevState = JSON.parse(JSON.stringify(pState));
        prevState.list[i].loading = true;
        return { list: prevState.list };
      });

      // start update db here

      if (isInsert) {
        // console.log("insert")
        // kalau tak selected, insert
        this.insertDB(v, i);
      } else if (isDelete) {
        // console.log("delete")
        try {
          multi_id = Number.parseInt(multi_id);
          if (multi_id != null && multi_id > 0 && typeof multi_id !== "undefined") {
            this.deleteDB(i, multi_id);
          }
        } catch (err) {
          console.log(err);
        }
      }
    }
  }, {
    key: "getListTitle",
    value: function getListTitle() {
      if (this.state.list.length <= 0 || !this.state.hasSuggestion) {
        return null;
      } else {
        return this.props.list_title;
      }
    }
  }, {
    key: "getListView",
    value: function getListView() {
      var _this5 = this;

      if (this.state.list_loading) {
        return _react2.default.createElement(
          "div",
          null,
          "Loading.... ",
          _react2.default.createElement("i", { className: "fa fa-spinner fa-pulse" }),
          ";"
        );
      }

      if (this.state.list.length <= 0) {
        return null;
      } else {
        var v = this.state.list.map(function (d, i) {
          var icon = null;
          if (d.loading) {
            icon = _react2.default.createElement("i", { className: "fa fa-spinner fa-pulse" });
          } else {
            icon = _react2.default.createElement("i", { className: "fa fa-" + (!d.isSelected ? "plus" : "times") });
          }
          return _react2.default.createElement(
            "li",
            {
              onClick: _this5.onClickListItem,
              "data-multi_id": d.multi_id,
              "data-v": d.val,
              "data-i": i,
              className: "" + (d.isSelected ? "selected" : "")
            },
            d.val,
            " ",
            icon
          );
        });
        v = _react2.default.createElement(
          "ul",
          null,
          v
        );
        return v;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var continueBtn = null;
      if (!this.props.hideContinueButton) {
        continueBtn = [_react2.default.createElement("br", null), _react2.default.createElement(
          "button",
          {
            "data-index": this.props.index,
            className: "btn btn-success btn-lg",
            onClick: this.continueOnClick
          },
          "Continue"
        )];
      }

      var inputSuggestion = null;
      if (!this.props.hideInputSuggestion) {
        inputSuggestion = _react2.default.createElement(
          "div",
          { className: "mi-input" },
          _react2.default.createElement(_inputSuggestion2.default, {
            input_type: this.props.input_type,
            onChoose: this.onChooseSuggestion,
            input_onChange: this.inputOnChange,
            table_name: this.props.ref_table_name,
            input_placeholder: this.props.input_placeholder
          })
        );
      }

      return _react2.default.createElement(
        "div",
        { id: this.props.id, className: "input-multi" },
        _react2.default.createElement(
          "div",
          { className: "mi-label input-label" },
          this.props.label,
          this.props.is_required ? " *" : ""
        ),
        this.props.sublabel ? _react2.default.createElement(
          "div",
          { className: "mi-sublabel input-sublabel" },
          this.props.sublabel
        ) : null,
        inputSuggestion,
        _react2.default.createElement(
          "div",
          { className: "mi-list-title" },
          this.getListTitle()
        ),
        _react2.default.createElement(
          "div",
          { className: "mi-list" },
          this.getListView()
        ),
        _react2.default.createElement(
          "div",
          { className: "mi-footer" },
          continueBtn
        )
      );
    }
  }]);

  return InputMulti;
}(_react2.default.Component);

exports.default = InputMulti;


InputMulti.propTypes = {
  input_type: _propTypes2.default.string,
  index: _propTypes2.default.number,
  is_required: _propTypes2.default.bool,
  id: _propTypes2.default.string,
  doneHandler: _propTypes2.default.func,
  continueOnClick: _propTypes2.default.func,
  table_name: _propTypes2.default.string,
  ref_table_name: _propTypes2.default.string,
  ref_order_by: _propTypes2.default.string,
  input_placeholder: _propTypes2.default.string,
  entity: _propTypes2.default.string,
  entity_id: _propTypes2.default.number,
  ref_offset: _propTypes2.default.number,
  label: _propTypes2.default.string,
  sublabel: _propTypes2.default.string,
  list_title: _propTypes2.default.string,
  location_suggestion: _propTypes2.default.string,
  ref_category: _propTypes2.default.string,
  suggestion_search_by_ref: _propTypes2.default.string,
  suggestion_search_by_val: _propTypes2.default.string,
  discard_ref_from_default: _propTypes2.default.bool,
  hideContinueButton: _propTypes2.default.bool,
  hideInputSuggestion: _propTypes2.default.bool
};

InputMulti.defaultProps = {
  ref_offset: 10,
  discard_ref_from_default: false,
  ref_category: "",
  suggestion_search_by_ref: "",
  suggestion_search_by_val: "",
  hideInputSuggestion: false,
  hideContinueButton: false,
  doneHandler: function doneHandler() {
    console.log("default doneHandler");
  }
};

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

var _inputSuggestion = __webpack_require__(158);

var _inputSuggestion2 = _interopRequireDefault(_inputSuggestion);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InputSingle = function (_React$Component) {
  _inherits(InputSingle, _React$Component);

  function InputSingle(props) {
    _classCallCheck(this, InputSingle);

    // fn binding
    var _this = _possibleConstructorReturn(this, (InputSingle.__proto__ || Object.getPrototypeOf(InputSingle)).call(this, props));

    _this.finishDbRequest = _this.finishDbRequest.bind(_this);
    _this.continueOnClick = _this.continueOnClick.bind(_this);
    _this.inputOnBlur = _this.inputOnBlur.bind(_this);
    _this.inputOnChange = _this.inputOnChange.bind(_this);
    _this.inputOnFocus = _this.inputOnFocus.bind(_this);
    _this.onChooseSuggestion = _this.onChooseSuggestion.bind(_this);
    _this.insertDB = _this.insertDB.bind(_this);
    _this.authUser = (0, _authActions.getAuthUser)();

    // init state
    _this.state = {
      lastSendTimestamp: null,
      ID: null,
      dbVal: null,
      val: null,
      loading: false,
      done_update: false,
      show_is_required: false,
      lastUpdate: null
    };
    return _this;
  }

  _createClass(InputSingle, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.setDefaultValue();
    }
  }, {
    key: "updateRequiredWarning",
    value: function updateRequiredWarning(v) {
      if (this.isValueEmpty(v)) {
        this.setState({
          loading: false,
          done_update: false,
          show_is_required: this.props.is_required ? true : false
        });
      } else {
        this.setState({
          loading: false,
          done_update: false,
          show_is_required: false
        });
      }
    }
  }, {
    key: "getStateAfterDbRequest",
    value: function getStateAfterDbRequest(d) {
      var ID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      var ret = {
        dbVal: d.val,
        loading: false,
        show_is_required: this.isEmptyAndRequired(d.val),
        done_update: !this.isValueEmpty() ? true : false
      };
      if (ID !== null) {
        ret.ID = ID;
      }
      return ret;
    }
  }, {
    key: "continueOnClick",
    value: function continueOnClick(e) {
      if (this.props.continueOnClick) {
        this.props.continueOnClick(e);
      }
    }
  }, {
    key: "setDefaultValue",
    value: function setDefaultValue() {
      var _this2 = this;

      this.loading();
      var inq = {
        entity: this.props.entity,
        entity_id: this.props.entity_id,
        key_input: this.props.key_input
      };

      var q = "query{single(" + (0, _graphqlObj2arg2.default)(inq, { noOuterBraces: true }) + ") {\n        ID val\n      }}";

      (0, _apiHelper.graphql)(q).then(function (res) {
        var d = res.data.data.single;
        var v = null;
        // console.log("d", d);
        if (d) {
          _this2.setState({ ID: d.ID, dbVal: d.val, val: d.val, loading: false });
          v = d.val;
        } else {
          _this2.setState({ loading: false });
        }

        //this.updateRequiredWarning(v);
        _this2.triggerDoneHandler(v);
      }).catch(function (err) {
        console.log("catch err", err);
      });
    }
  }, {
    key: "loading",
    value: function loading() {
      this.setState({ loading: true, done_update: false });
    }
  }, {
    key: "setLastSendTimestamp",
    value: function setLastSendTimestamp() {
      var toSet = Date.now();
      this.lastSendTimestamp = toSet;
      console.log("setLastSendTimestamp", this.lastSendTimestamp);

      return toSet;
    }
  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate(nextProps) {
      var props = this.props.ref_filter_val;
      var next = nextProps.ref_filter_val;

      if (Array.isArray(props)) {
        props = JSON.stringify(props);
      }

      if (Array.isArray(next)) {
        next = JSON.stringify(next);
      }

      if (props !== next) {
        this.setState({ lastUpdate: Date.now() });
      }
    }
  }, {
    key: "sendDataToDb",
    value: function sendDataToDb(v) {
      var _this3 = this;

      var doSend = function doSend() {
        console.log("sendDataToDb", v);

        if (_this3.state.dbVal === v) {
          return;
        }

        if (_this3.isValueEmpty()) {
          v = "";
        }

        _this3.loading();
        if (_this3.state.ID) {
          _this3.updateDB(_this3.state.ID, v);
        } else {
          _this3.insertDB(v);
        }
      };

      if (this.lastSendTimestamp == null) {
        var set = this.setLastSendTimestamp();
        setTimeout(function () {
          if (set == _this3.lastSendTimestamp) {
            doSend();
          }
        }, 200);
      } else {
        this.setLastSendTimestamp();
        doSend();
      }
    }
  }, {
    key: "triggerDoneHandler",
    value: function triggerDoneHandler(v) {
      this.props.doneHandler(this.props.id, {
        isEmptyAndRequired: this.isEmptyAndRequired(v),
        type: "single",
        val: v
      });
    }
  }, {
    key: "finishDbRequest",
    value: function finishDbRequest(v) {
      this.triggerDoneHandler(v);
    }
  }, {
    key: "updateDB",
    value: function updateDB(ID, v) {
      var _this4 = this;

      console.log("updateDB", ID, v);
      var upd = {
        ID: ID,
        val: v
      };

      var q = "mutation{edit_single(" + (0, _graphqlObj2arg2.default)(upd, { noOuterBraces: true }) + ") {\n      ID val\n    }}";

      (0, _apiHelper.graphql)(q).then(function (res) {
        _this4.setState(function (prevState) {
          var d = res.data.data.edit_single;
          return _this4.getStateAfterDbRequest(d);
        });
        _this4.finishDbRequest(v);
      }).catch(function (err) {
        console.log("catch err", err);
      });
    }
  }, {
    key: "insertDB",
    value: function insertDB(v) {
      var _this5 = this;

      console.log("insertDB", v);

      var ins = {
        key_input: this.props.key_input,
        entity: this.props.entity,
        entity_id: this.props.entity_id,
        val: v
      };

      var q = "mutation{add_single(" + (0, _graphqlObj2arg2.default)(ins, { noOuterBraces: true }) + ") {\n      ID val\n    }}";

      (0, _apiHelper.graphql)(q).then(function (res) {
        _this5.setState(function (prevState) {
          var d = res.data.data.add_single;
          return _this5.getStateAfterDbRequest(d, d.ID);
        });
        _this5.finishDbRequest(v);
      }).catch(function (err) {
        console.log("catch err", err);
      });
    }
  }, {
    key: "onChooseSuggestion",
    value: function onChooseSuggestion(v) {
      this.setState({ val: v });
      console.log("onChooseSuggestion", v);
      this.sendDataToDb(v);
    }
  }, {
    key: "inputOnBlur",
    value: function inputOnBlur(e) {
      var v = e.target.value;
      console.log("inputOnBlur", v);
      this.sendDataToDb(v);
    }
  }, {
    key: "inputOnFocus",
    value: function inputOnFocus(e) {}
  }, {
    key: "inputOnChange",
    value: function inputOnChange(e) {
      var v = e.target.value;
      this.setState({ val: v });
      console.log("v", v);
      this.updateRequiredWarning(v);
    }
    // setIconTrue(key) {
    //   let ori = {
    //     loading: false,
    //     done_update: false,
    //     show_is_required: false
    //   };

    //   if (typeof ori[key] !== "undefined") {
    //     ori[key] = true;
    //   }

    //   return true;
    // }

  }, {
    key: "isValueEmpty",
    value: function isValueEmpty(val) {
      if (typeof val === "undefined") {
        val = this.state.val;
      }
      return val == "" || val == null || typeof val === "undefined";
    }
  }, {
    key: "isEmptyAndRequired",
    value: function isEmptyAndRequired(v) {
      return this.isValueEmpty(v) && this.props.is_required;
    }
  }, {
    key: "render",
    value: function render() {
      var continueBtn = null;
      if (!this.props.hideContinueButton) {
        continueBtn = continueBtn = [_react2.default.createElement("br", null), _react2.default.createElement(
          "button",
          {
            "data-index": this.props.index,
            className: "btn btn-success btn-lg",
            onClick: this.continueOnClick
          },
          "Continue"
        )];
      }

      var className = "input-single";
      if (this.props.isChildren) {
        className += " input-children";
      }

      return _react2.default.createElement(
        "div",
        { id: this.props.id, className: className },
        _react2.default.createElement(
          "div",
          { className: "si-label input-label" },
          this.props.label,
          this.props.is_required && !this.props.isChildren ? " *" : ""
        ),
        this.props.sublabel ? _react2.default.createElement(
          "div",
          { className: "si-sublabel input-sublabel" },
          this.props.sublabel
        ) : null,
        _react2.default.createElement(
          "div",
          { className: "si-input" },
          _react2.default.createElement(_inputSuggestion2.default, {
            order_by: this.props.ref_order_by,
            use_id_as_value: this.props.select_use_id_as_value,
            input_type: this.props.input_type,
            icon_loading: this.state.loading,
            icon_done: this.state.done_update,
            icon_is_required: this.state.show_is_required,
            input_onChange: this.inputOnChange,
            input_onBlur: this.inputOnBlur,
            input_onFocus: this.inputOnFocus,
            input_val: this.state.val,
            input_placeholder: this.props.input_placeholder,
            onChoose: this.onChooseSuggestion,
            table_name: this.props.ref_table_name,
            filter_column: this.props.ref_filter_column,
            filter_val: this.props.ref_filter_val,
            filter_find_id: this.props.ref_filter_find_id
          })
        ),
        _react2.default.createElement(
          "div",
          { className: "si-footer" },
          this.props.children,
          continueBtn
        )
      );
    }
  }]);

  return InputSingle;
}(_react2.default.Component);

exports.default = InputSingle;


InputSingle.propTypes = {
  select_use_id_as_value: _propTypes2.default.bool,
  children: _propTypes2.default.array,
  index: _propTypes2.default.number,
  id: _propTypes2.default.string,
  input_type: _propTypes2.default.string,
  doneHandler: _propTypes2.default.func,
  continueOnClick: _propTypes2.default.func,
  is_required: _propTypes2.default.bool,
  ref_table_name: _propTypes2.default.string,
  ref_order_by: _propTypes2.default.string,
  key_val: _propTypes2.default.string,
  input_placeholder: _propTypes2.default.string,
  entity: _propTypes2.default.string,
  entity_id: _propTypes2.default.number,
  label: _propTypes2.default.string,
  sublabel: _propTypes2.default.string,
  hideContinueButton: _propTypes2.default.bool,
  isChildren: _propTypes2.default.bool,
  ref_filter_column: _propTypes2.default.string,
  ref_filter_val: _propTypes2.default.string,
  ref_filter_find_id: _propTypes2.default.bool
};

InputSingle.defaulProps = {
  ref_filter_column: "",
  ref_filter_val: "",
  ref_filter_find_id: false,
  select_use_id_as_value: false,
  isChildren: false,
  hideContinueButton: false,
  doneHandler: function doneHandler() {
    console.log("default doneHandler");
  }
};

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AboutPage = function (_React$Component) {
    _inherits(AboutPage, _React$Component);

    function AboutPage() {
        _classCallCheck(this, AboutPage);

        return _possibleConstructorReturn(this, (AboutPage.__proto__ || Object.getPrototypeOf(AboutPage)).apply(this, arguments));
    }

    _createClass(AboutPage, [{
        key: "render",
        value: function render() {
            document.setTitle("About");
            return _react2.default.createElement(
                "div",
                null,
                "About Page SOME"
            );
        }
    }]);

    return AboutPage;
}(_react2.default.Component);

exports.default = AboutPage;

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _buttons = __webpack_require__(15);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _time = __webpack_require__(9);

var _users = __webpack_require__(27);

var _companiesAdmin = __webpack_require__(82);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//importing for list


var RecruitersPage = function (_React$Component) {
    _inherits(RecruitersPage, _React$Component);

    function RecruitersPage(props) {
        _classCallCheck(this, RecruitersPage);

        return _possibleConstructorReturn(this, (RecruitersPage.__proto__ || Object.getPrototypeOf(RecruitersPage)).call(this, props));
    }

    _createClass(RecruitersPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            this.offset = 10;
            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'ID'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Student'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Company'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Position'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Registered At'
                    )
                )
            );

            //##########################################
            //  search
            this.searchParams = "";
            this.search = {};
            this.searchFormItem = [{ header: "Enter Your Search Query" }, {
                label: "Find Recruiter",
                name: "search_user",
                type: "text",
                placeholder: "Type student name or email"
            }];

            this.searchFormOnSubmit = function (d) {
                _this2.search = d;
                _this2.searchParams = "";
                if (d != null) {
                    _this2.searchParams += d.search_user ? 'search_user:"' + d.search_user + '",' : "";
                }
            };

            this.loadData = function (page, offset) {
                return (0, _apiHelper.getAxiosGraphQLQuery)('\n            query{\n            users(' + _this2.searchParams + ' role:"recruiter", page:' + page + ', offset:' + offset + ', order_by:"updated_at desc"){\n                ID\n                user_email\n                first_name\n                rec_company\n                last_name\n                company{ID name}\n                rec_position \n                user_registered\n            }\n        }');
            };

            this.renderRow = function (d, i) {
                var row = [];
                var dismiss = ["user_email", "last_name", "rec_company"];

                for (var key in d) {
                    if (dismiss.indexOf(key) >= 0) {
                        continue;
                    }
                    if (key == "first_name") {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            (0, _users.createUserTitle)(d, _this2.search.search_user)
                        ));
                    } else if (key == "user_registered") {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            _time.Time.getString(d.user_registered)
                        ));
                    } else if (key == "company") {
                        if (d.rec_company == -1) {
                            row.push(_react2.default.createElement(
                                'td',
                                null,
                                _react2.default.createElement(
                                    'span',
                                    { className: 'text-muted' },
                                    'Not Specified'
                                )
                            ));
                        } else {
                            row.push(_react2.default.createElement(
                                'td',
                                null,
                                (0, _companiesAdmin.createCompanyTitle)(d.company)
                            ));
                        }
                    } else {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            d[key]
                        ));
                    }
                }
                return row;
            };

            this.getDataFromRes = function (res) {
                return res.data.data.users;
            };

            // props for edit
            // create form add new default
            this.getFormItemAsync = function (edit) {
                var query = 'query{\n                companies{\n                  ID name\n                }\n              }';

                return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    var companies = res.data.data.companies.map(function (d, i) {
                        return { key: d.ID, label: d.name };
                    });

                    var ret = [{ header: "Recruiter Form" }];
                    //for create only
                    ret.push.apply(ret, [{
                        name: _dbConfig.User.ID,
                        type: "number",
                        required: true,
                        hidden: true,
                        disabled: true
                    }, {
                        label: "Select Company For This Recruiter",
                        name: _dbConfig.UserMeta.REC_COMPANY,
                        type: "select",
                        required: true,
                        data: Array.apply(undefined, [{ key: -1, label: "No Company" }].concat(_toConsumableArray(companies)))
                    }]);

                    return ret;
                });
            };

            this.getEditFormDefault = function (ID) {
                var query = 'query{user(ID:' + ID + '){\n                ID rec_company\n            }}';

                return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    var user = res.data.data.user;
                    return user;
                });
            };
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Recruiters");
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    'Recruiterss'
                ),
                _react2.default.createElement(_generalForm2.default, {
                    dataTitle: this.dataTitle,
                    noMutation: true,
                    canEdit: true,
                    dataOffset: 20,
                    getFormItemAsync: this.getFormItemAsync,
                    getEditFormDefault: this.getEditFormDefault,
                    entity_singular: 'Recruiter',
                    entity: 'user',
                    searchFormItem: this.searchFormItem,
                    searchFormOnSubmit: this.searchFormOnSubmit,
                    tableHeader: this.tableHeader,
                    renderRow: this.renderRow,
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData
                })
            );
        }
    }]);

    return RecruitersPage;
}(_react2.default.Component);

exports.default = RecruitersPage;

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

var _authConfig = __webpack_require__(75);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import {AuthAPIErr} from "../../server/api/auth-api";


var ActAccountPage = function (_React$Component) {
	_inherits(ActAccountPage, _React$Component);

	function ActAccountPage(props) {
		_classCallCheck(this, ActAccountPage);

		var _this = _possibleConstructorReturn(this, (ActAccountPage.__proto__ || Object.getPrototypeOf(ActAccountPage)).call(this, props));

		_this.state = {
			loading: true,
			error: null,
			success: false
		};

		return _this;
	}

	_createClass(ActAccountPage, [{
		key: "componentWillMount",
		value: function componentWillMount() {
			var _this2 = this;

			var key = this.props.match.params.key;
			var user_id = this.props.match.params.user_id;

			(0, _authActions.activateAccount)(key, user_id).then(function (res) {
				_this2.setState(function () {
					return {
						loading: false,
						success: res.data.user_email
					};
				});
			}, function (err) {

				var error = err.response.data;
				var contact = "Please contact us to request for a new activation link.";
				switch (error) {
					case _authConfig.AuthAPIErr.INVALID_ACTIVATION:
						error = _react2.default.createElement(
							"div",
							null,
							"Invalid activation link.",
							_react2.default.createElement("br", null),
							contact
						);
						break;
				}

				_this2.setState(function () {
					return {
						loading: false,
						error: error
					};
				});
			});
		}
	}, {
		key: "render",
		value: function render() {
			document.setTitle("Activate Account");
			var view = null;
			if (this.state.loading) {
				view = _react2.default.createElement(_loader.Loader, { size: "2", text: "Activating Your Account" });
			} else {

				if (!this.state.success) {
					view = _react2.default.createElement(
						"div",
						null,
						this.state.error
					);
				} else {
					view = _react2.default.createElement(
						"div",
						null,
						"Your account has been successfully activated.",
						_react2.default.createElement("br", null),
						"Please ",
						_react2.default.createElement(
							_reactRouterDom.NavLink,
							{ to: _appConfig.RootPath + "/auth/login" },
							"login "
						),
						"using email ",
						_react2.default.createElement(
							"b",
							null,
							this.state.success
						)
					);
				}
			}
			return _react2.default.createElement(
				"div",
				null,
				_react2.default.createElement(
					"h3",
					null,
					"Account Activation"
				),
				view
			);
		}
	}]);

	return ActAccountPage;
}(_react2.default.Component);

exports.default = ActAccountPage;

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _authActions = __webpack_require__(2);

var _loader = __webpack_require__(8);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _subNav = __webpack_require__(127);

var _subNav2 = _interopRequireDefault(_subNav);

var _list = __webpack_require__(11);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _confirmPopup = __webpack_require__(122);

var _confirmPopup2 = _interopRequireDefault(_confirmPopup);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _docLinkForm = __webpack_require__(177);

var _docLinkForm2 = _interopRequireDefault(_docLinkForm);

var _passwordReset = __webpack_require__(297);

var _passwordReset2 = _interopRequireDefault(_passwordReset);

var _availability = __webpack_require__(81);

var _availability2 = _interopRequireDefault(_availability);

var _userConfig = __webpack_require__(294);

var _logout = __webpack_require__(296);

var _logout2 = _interopRequireDefault(_logout);

var _manageUserProfile = __webpack_require__(183);

var _manageUserProfile2 = _interopRequireDefault(_manageUserProfile);

var _uploaderVideo = __webpack_require__(299);

var _uploaderVideo2 = _interopRequireDefault(_uploaderVideo);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//import { Redirect, NavLink } from 'react-router-dom';

//import { Month, Year, Sponsor, MasState, Country } from '../../config/data-config';
//import { ButtonLink } from '../component/buttons.jsx';

//import { store } from '../redux/store';

//import { SimpleListItem } from '../component/list';


var StudentVideoResume = function (_React$Component) {
  _inherits(StudentVideoResume, _React$Component);

  function StudentVideoResume(props) {
    _classCallCheck(this, StudentVideoResume);

    var _this = _possibleConstructorReturn(this, (StudentVideoResume.__proto__ || Object.getPrototypeOf(StudentVideoResume)).call(this, props));

    _this.userId = (0, _authActions.getAuthUser)().ID;
    _this.state = {
      loading: false,
      video_resume: null
    };
    return _this;
  }

  _createClass(StudentVideoResume, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.loadData();
    }
  }, {
    key: "loadData",
    value: function loadData() {
      var _this2 = this;

      this.setState({ loading: true });
      var q = "\n        query{ video(entity:\"user\", entity_id:" + this.userId + ", meta_key:\"resume\"){\n          ID \n          url\n        } \n      }\n    ";

      (0, _apiHelper.graphql)(q).then(function (res) {
        _this2.setState({ loading: false, video_resume: res.data.data.video });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var v = null;
      if (this.state.loading) {
        v = _react2.default.createElement(_loader.Loader, null);
      } else {
        v = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "div",
            { style: { margin: "auto", width: "400px" } },
            this.state.video_resume && this.state.video_resume.url ? [(0, _userPopup.createVideoDropbox)(this.state.video_resume.url), _react2.default.createElement("br", null), _react2.default.createElement("br", null), _react2.default.createElement("br", null)] : null
          ),
          _react2.default.createElement(_uploaderVideo2.default, {
            name: "video-resume",
            label: "Upload New Video",
            entity: "user",
            entity_id: this.userId,
            meta_key: _dbConfig.VideoEnum.RESUME
          })
        );
      }

      return _react2.default.createElement(
        "div",
        { className: "text-center" },
        _react2.default.createElement(
          "h2",
          null,
          "Video Resume"
        ),
        v
      );
    }
  }]);

  return StudentVideoResume;
}(_react2.default.Component);

var StudentDocLink = function (_React$Component2) {
  _inherits(StudentDocLink, _React$Component2);

  function StudentDocLink() {
    _classCallCheck(this, StudentDocLink);

    return _possibleConstructorReturn(this, (StudentDocLink.__proto__ || Object.getPrototypeOf(StudentDocLink)).apply(this, arguments));
  }

  _createClass(StudentDocLink, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(_docLinkForm2.default, { entity: "user", id: (0, _authActions.getAuthUser)().ID });
    }
  }]);

  return StudentDocLink;
}(_react2.default.Component);

var Skills = function (_React$Component3) {
  _inherits(Skills, _React$Component3);

  function Skills(props) {
    _classCallCheck(this, Skills);

    var _this4 = _possibleConstructorReturn(this, (Skills.__proto__ || Object.getPrototypeOf(Skills)).call(this, props));

    _this4.formOnSubmit = _this4.formOnSubmit.bind(_this4);
    _this4.state = {
      error: null,
      disableSubmit: false,
      success: null,
      loading: true,
      skills: [],
      loadingDelete: false
    };
    return _this4;
  }

  _createClass(Skills, [{
    key: "loadSkills",
    value: function loadSkills() {
      var _this5 = this;

      var query = "query{user(ID:" + (0, _authActions.getAuthUser)().ID + "){skills{ID label}}}";
      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this5.setState(function (prevState) {
          return { skills: res.data.data.user.skills, loading: false };
        });
      });
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      this.loadSkills();
      this.formItems = [{
        name: _dbConfig.Skill.LABEL,
        type: "text",
        placeholder: "Web Development",
        required: true
      }];
    }
  }, {
    key: "formOnSubmit",
    value: function formOnSubmit(d) {
      var _this6 = this;

      var ins = {
        user_id: (0, _authActions.getAuthUser)().ID,
        label: d.label
      };
      (0, _form.toggleSubmit)(this, { error: null, success: null });
      var edit_query = "mutation{add_skill(" + (0, _graphqlObj2arg2.default)(ins, {
        noOuterBraces: true
      }) + ") {ID label}}";
      (0, _apiHelper.getAxiosGraphQLQuery)(edit_query).then(function (res) {
        var prevSkill = _this6.state.skills;
        prevSkill.unshift(res.data.data.add_skill);
        (0, _form.toggleSubmit)(_this6, {
          error: null,
          skill: prevSkill,
          success: "Successfully Added New Skill"
        });
      }, function (err) {
        (0, _form.toggleSubmit)(_this6, { error: err.response.data });
      });
    }
  }, {
    key: "onOperationSuccess",
    value: function onOperationSuccess() {
      layoutActions.storeHideFocusCard();
      this.loadSkills();
    }
  }, {
    key: "deletePopup",
    value: function deletePopup(e) {
      var _this7 = this;

      var id = e.currentTarget.id;
      var onYes = function onYes() {
        var del_query = "mutation{delete_skill(ID:" + id + ")}";
        layoutActions.storeUpdateProps({ loading: true });
        (0, _apiHelper.getAxiosGraphQLQuery)(del_query).then(function (res) {
          _this7.onOperationSuccess();
        }, function (err) {
          alert(err.response.data);
        });
      };
      var value = e.currentTarget.attributes.getNamedItem("label").value;
      layoutActions.storeUpdateFocusCard("Confirm Delete Item", _confirmPopup2.default, { title: "Continue delete skill '" + value + "'?", onYes: onYes }, "small");
    }
  }, {
    key: "render",
    value: function render() {
      var _this8 = this;

      var view = null;
      var skills = this.state.loading ? _react2.default.createElement(_loader.Loader, { size: "2", text: "Loading skills.." }) : _react2.default.createElement(
        "div",
        { className: "text-muted" },
        "Nothing To Show Here"
      );
      if (!this.state.loading && this.state.skills.length > 0) {
        var skillItems = this.state.skills.map(function (d, i) {
          return _react2.default.createElement(
            "span",
            null,
            d.label + " ",
            _react2.default.createElement(
              "span",
              {
                className: "badge",
                id: d.ID,
                label: d.label,
                onClick: _this8.deletePopup.bind(_this8)
              },
              "X"
            )
          );
        });
        skills = _react2.default.createElement(_list.CustomList, { className: "label", items: skillItems });
      }

      var form = _react2.default.createElement(_form2.default, {
        className: "form-row",
        items: this.formItems,
        onSubmit: this.formOnSubmit,
        submitText: "Add Skill",
        disableSubmit: this.state.disableSubmit,
        error: this.state.error,
        emptyOnSuccess: true,
        success: this.state.success
      });
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h3",
          null,
          "Add New Skill"
        ),
        form,
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "h3",
          null,
          "My Skills"
        ),
        _react2.default.createElement(
          "div",
          null,
          skills
        )
      );
    }
  }]);

  return Skills;
}(_react2.default.Component);

var EditProfile = function (_React$Component4) {
  _inherits(EditProfile, _React$Component4);

  function EditProfile(props) {
    _classCallCheck(this, EditProfile);

    var _this9 = _possibleConstructorReturn(this, (EditProfile.__proto__ || Object.getPrototypeOf(EditProfile)).call(this, props));

    _this9.formOnSubmit = _this9.formOnSubmit.bind(_this9);
    _this9.state = {
      error: null,
      disableSubmit: false,
      init: true,
      user: null,
      success: null
    };
    return _this9;
  }

  _createClass(EditProfile, [{
    key: "loadUser",
    value: function loadUser(id, role) {
      var extra = "";

      if (role === _dbConfig.UserEnum.ROLE_STUDENT) {
        extra = "user_status\n            university\n            phone_number\n            graduation_month\n            graduation_year\n            available_month\n            available_year\n            sponsor\n            gender\n            cgpa\n            degree_level\n            study_field\n            major\n            minor\n            mas_state\n            mas_postcode\n            relocate\n            study_place\n            looking_for";
      } else if (role === _dbConfig.UserEnum.ROLE_RECRUITER) {
        extra = "rec_position rec_company";
      }

      var query = "query {\n            user(ID:" + id + ") {\n              ID\n              user_email\n              user_pass\n              first_name\n              last_name\n              description\n              role\n              img_url\n              img_pos\n              img_size\n              " + extra + "\n            }}";

      return (0, _apiHelper.getAxiosGraphQLQuery)(query);
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this10 = this;

      this.authUser = (0, _authActions.getAuthUser)();
      this.loadUser(this.authUser.ID, this.authUser.role).then(function (res) {
        _this10.setState(function () {
          var user = res.data.data.user;
          return { user: user, init: false };
        });
      });
      this.formItems = (0, _userConfig.getEditProfileFormItem)(this.authUser.role);
    }

    //return string if there is error

  }, {
    key: "filterForm",
    value: function filterForm(d) {
      return 0;
    }
  }, {
    key: "formOnSubmit",
    value: function formOnSubmit(d) {
      var _this11 = this;

      var err = this.filterForm(d);
      if (err === 0) {
        (0, _form.toggleSubmit)(this, { error: null, success: null });
        //prepare data for edit
        d[_dbConfig.UserMeta.MAJOR] = JSON.stringify(d[_dbConfig.UserMeta.MAJOR]);
        d[_dbConfig.UserMeta.MINOR] = JSON.stringify(d[_dbConfig.UserMeta.MINOR]);
        var update = (0, _form.checkDiff)(this, this.state.user, d);
        if (update === false) {
          return;
        }
        update[_dbConfig.User.ID] = this.authUser[_dbConfig.User.ID];

        var edit_query = "mutation{edit_user(" + (0, _graphqlObj2arg2.default)(update, {
          noOuterBraces: true
        }) + ") {ID}}";
        // console.log(edit_query);
        (0, _apiHelper.getAxiosGraphQLQuery)(edit_query).then(function (res) {
          // console.log(res.data);
          (0, _authActions.updateAuthUser)(d);
          (0, _form.toggleSubmit)(_this11, {
            user: d,
            error: null,
            success: "Your Change Has Been Saved!"
          });
        }, function (err) {
          (0, _form.toggleSubmit)(_this11, { error: err.response.data });
        });
      } else {
        //console.log("Err", err);
        this.setState(function () {
          return { error: err };
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var content = null;
      if (this.state.init) {
        content = _react2.default.createElement(_loader.Loader, { size: "2", text: "Loading User Information" });
      } else {
        content = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_profileCard2.default, {
            type: "student",
            id: this.authUser.ID,
            className: "edit-profile",
            add_img_ops: true,
            title: _react2.default.createElement(
              "b",
              null,
              this.authUser.user_email
            ),
            subtitle: _react2.default.createElement(
              "i",
              null,
              this.authUser.role.capitalize()
            ),
            img_url: this.authUser.img_url,
            img_pos: this.authUser.img_pos,
            img_size: this.authUser.img_size
          }),
          _react2.default.createElement("br", null),
          _react2.default.createElement("br", null),
          _react2.default.createElement("br", null),
          _react2.default.createElement(_manageUserProfile2.default, {
            user_id: this.authUser.ID,
            isEdit: true,
            completeHandler: function completeHandler() {
              layoutActions.successBlockLoader("Profile Successfully Updated");
            }
          })
        );
      }

      return _react2.default.createElement(
        "div",
        { className: "text-left" },
        _react2.default.createElement(
          "h1",
          null,
          "Edit Profile"
        ),
        content
      );
    }
  }]);

  return EditProfile;
}(_react2.default.Component);

// For Recruiter ------------------------------------------------------/

var EditProfilePage = function (_React$Component5) {
  _inherits(EditProfilePage, _React$Component5);

  function EditProfilePage() {
    _classCallCheck(this, EditProfilePage);

    return _possibleConstructorReturn(this, (EditProfilePage.__proto__ || Object.getPrototypeOf(EditProfilePage)).apply(this, arguments));
  }

  _createClass(EditProfilePage, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.item = {
        profile: {
          label: "My Profile",
          component: EditProfile,
          icon: "user"
        }
      };

      var authUser = (0, _authActions.getAuthUser)();

      if ((0, _authActions.isRoleStudent)()) {
        this.item["doc-link"] = {
          label: "Upload Document",
          component: StudentDocLink,
          routeOnly: true,
          icon: "file-text"
        };

        this.item["video-resume"] = {
          label: "Upload Video Resume",
          component: StudentVideoResume,
          routeOnly: true,
          icon: "youtube-play"
        };
        // this.item["skills"] = {
        //   label: "Add Skills",
        //   component: Skills,
        //   icon: "star"
        // };
        this.item["availability"] = {
          label: "Manage Availability",
          component: _availability2.default,
          props: {
            user_id: authUser.ID,
            set_only: true
          },
          routeOnly: true,
          icon: "clock-o"
        };
      }

      this.item["password-reset"] = {
        label: "Change Password",
        component: _passwordReset2.default,
        icon: "lock"
      };

      this.item["view"] = {
        label: "View Profile",
        onClick: function onClick() {
          layoutActions.storeUpdateFocusCard("My Profile", _userPopup2.default, {
            id: authUser.ID,
            role: authUser.role
          });
        },
        component: null,
        icon: "eye"
      };

      this.item["logout"] = {
        label: "Logout",
        component: _logout2.default,
        icon: "sign-out"
      };
    }
  }, {
    key: "render",
    value: function render() {
      var defaultItem = this.props.match.params.current;

      var title = this.item[this.props.match.params.current].label;
      document.setTitle(title);
      return _react2.default.createElement(_subNav2.default, {
        route: "edit-profile",
        items: this.item,
        defaultItem: defaultItem
      });
    }
  }]);

  return EditProfilePage;
}(_react2.default.Component);

exports.default = EditProfilePage;

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _authActions = __webpack_require__(2);

var _loader = __webpack_require__(8);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _profileCardImg = __webpack_require__(90);

var _subNav = __webpack_require__(127);

var _subNav2 = _interopRequireDefault(_subNav);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _vacancyPopup = __webpack_require__(121);

var _vacancyPopup2 = _interopRequireDefault(_vacancyPopup);

var _store = __webpack_require__(34);

var _docLinkForm = __webpack_require__(177);

var _docLinkForm2 = _interopRequireDefault(_docLinkForm);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _appConfig = __webpack_require__(4);

var _time = __webpack_require__(9);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _restricted = __webpack_require__(298);

var _restricted2 = _interopRequireDefault(_restricted);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _session = __webpack_require__(300);

var _resumeDrop = __webpack_require__(301);

var _studentListing = __webpack_require__(302);

var _scheduledInterview = __webpack_require__(28);

var _company = __webpack_require__(98);

var _company2 = _interopRequireDefault(_company);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PageUrl = _appConfig.RootPath + "/app/manage-company/vacancy";

var VacancySubPage = function (_React$Component) {
  _inherits(VacancySubPage, _React$Component);

  function VacancySubPage(props) {
    _classCallCheck(this, VacancySubPage);

    var _this = _possibleConstructorReturn(this, (VacancySubPage.__proto__ || Object.getPrototypeOf(VacancySubPage)).call(this, props));

    var authUser = (0, _authActions.getAuthUser)();
    _this.company_id = _this.props.company_id;
    _this.user_id = authUser.ID;
    return _this;
  }

  _createClass(VacancySubPage, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      //##########################################
      // List data properties
      this.renderRow = function (d) {
        var title = _react2.default.createElement(
          "a",
          {
            onClick: function onClick() {
              return layoutActions.storeUpdateFocusCard(d.title, _vacancyPopup2.default, {
                id: d.ID
              });
            }
          },
          d.title
        );

        return [_react2.default.createElement(
          "td",
          null,
          d.ID
        ), _react2.default.createElement(
          "td",
          null,
          _react2.default.createElement(
            "b",
            null,
            title
          )
        ), _react2.default.createElement(
          "td",
          null,
          d.type
        ), _react2.default.createElement(
          "td",
          null,
          d.location
        ), _react2.default.createElement(
          "td",
          null,
          _time.Time.getString(d.updated_at)
        )];
      };

      this.tableHeader = _react2.default.createElement(
        "thead",
        null,
        _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "th",
            null,
            "ID"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Title"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Type"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Location"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Last Updated"
          )
        )
      );

      this.loadData = function (page, offset) {
        var param = {
          company_id: _this2.company_id,
          page: page,
          offset: offset,
          order_by: _dbConfig.Vacancy.UPDATED_AT + " desc"
        };

        var query = "query{vacancies(" + (0, _graphqlObj2arg2.default)(param, { noOuterBraces: true }) + ")\n            {ID title location type updated_at}}";
        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      // get actual data from loadData
      // can alter any data here too
      this.getDataFromRes = function (res) {
        return res.data.data.vacancies;
      };

      //##########################################
      // form operation properties

      // if ever needed
      // hook before submit
      this.formWillSubmit = function (d, edit) {
        return d;
      };

      this.getEditFormDefault = function (ID) {
        var query = "query{\n                vacancy(ID:" + ID + ") {\n                  ID\n                  title\n                  location\n                  description\n                  requirement\n                  type\n                  application_url\n                  location\n                }\n              }";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var vacan = res.data.data.vacancy;
          return vacan;
        });
      };

      // create form add new default
      this.newFormDefault = {};
      this.newFormDefault[_dbConfig.Vacancy.COMPANY_ID] = this.company_id;
      this.newFormDefault[_dbConfig.Vacancy.CREATED_BY] = this.user_id;

      this.getFormItem = function (edit) {
        return [{ header: "Job Post Form" }, {
          label: "Title",
          name: _dbConfig.Vacancy.TITLE,
          type: "text",
          placeholder: "Software Developer",
          required: true
        }, {
          label: "Company Id",
          name: _dbConfig.Vacancy.COMPANY_ID,
          type: "number",
          disabled: true,
          hidden: true,
          required: !edit
        }, {
          label: "Created By",
          name: _dbConfig.Vacancy.CREATED_BY,
          type: "number",
          disabled: true,
          hidden: true,
          required: !edit
        }, {
          label: "Type",
          name: _dbConfig.Vacancy.TYPE,
          type: "select",
          required: true,
          data: [_dbConfig.VacancyEnum.TYPE_FULL_TIME, _dbConfig.VacancyEnum.TYPE_PART_TIME, _dbConfig.VacancyEnum.TYPE_INTERN]
        }, {
          label: "Application Url",
          name: _dbConfig.Vacancy.APPLICATION_URL,
          type: "text"
        }, {
          label: "Location",
          name: "location",
          type: "input_suggestion",
          table_name: "location",
          required: true
        }, {
          label: "Description",
          name: _dbConfig.Vacancy.DESCRIPTION,
          type: "textarea",
          placeholder: "Tell more about the Job Post"
        }, {
          label: "Requirement",
          name: _dbConfig.Vacancy.REQUIREMENT,
          type: "textarea"
        }];
      };
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(_generalForm2.default, {
        dataTitle: "Job Posts",
        entity: "vacancy",
        entity_singular: "Job Post",
        addButtonText: "Add New Job Post",
        dataOffset: 10,
        tableHeader: this.tableHeader,
        newFormDefault: this.newFormDefault,
        getEditFormDefault: this.getEditFormDefault,
        getFormItem: this.getFormItem,
        renderRow: this.renderRow,
        getDataFromRes: this.getDataFromRes,
        loadData: this.loadData,
        formWillSubmit: this.formWillSubmit
      });
    }
  }]);

  return VacancySubPage;
}(_react2.default.Component);

VacancySubPage.PropTypes = {
  company_id: _propTypes2.default.number.isRequired
};

//###################################################################################################
//###################################################################################################

var CompanyDocLink = function (_React$Component2) {
  _inherits(CompanyDocLink, _React$Component2);

  function CompanyDocLink() {
    _classCallCheck(this, CompanyDocLink);

    return _possibleConstructorReturn(this, (CompanyDocLink.__proto__ || Object.getPrototypeOf(CompanyDocLink)).apply(this, arguments));
  }

  _createClass(CompanyDocLink, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(_docLinkForm2.default, { entity: "company", id: this.props.company_id });
    }
  }]);

  return CompanyDocLink;
}(_react2.default.Component);

CompanyDocLink.PropTypes = {
  company_id: _propTypes2.default.number.isRequired
};

//###################################################################################################
//###################################################################################################

var AboutSubPage = function (_React$Component3) {
  _inherits(AboutSubPage, _React$Component3);

  function AboutSubPage(props) {
    _classCallCheck(this, AboutSubPage);

    var _this4 = _possibleConstructorReturn(this, (AboutSubPage.__proto__ || Object.getPrototypeOf(AboutSubPage)).call(this, props));

    _this4.formOnSubmit = _this4.formOnSubmit.bind(_this4);
    _this4.state = {
      error: null,
      disableSubmit: false,
      init: true,
      data: null,
      success: null
    };
    return _this4;
  }

  _createClass(AboutSubPage, [{
    key: "getDataPriv",
    value: function getDataPriv() {
      var dataPriv = [{ key: "0", label: "No Privilege" }, {
        key: _dbConfig.CompanyEnum.PRIV.ACCESS_ALL_STUDENT,
        label: "Access ALL Student Resume"
      }, {
        key: _dbConfig.CompanyEnum.PRIV.ACCESS_RS_PRE_EVENT,
        label: "Access Resume Drop BEFORE Event"
      }, {
        key: _dbConfig.CompanyEnum.PRIV.ACCESS_RS_DURING_EVENT,
        label: "Access Resume Drop DURING Event"
      }, {
        key: _dbConfig.CompanyEnum.PRIV.SCHEDULE_PRIVATE_SESSION,
        label: "Schedule 1-1 Session"
      }];

      var allKeys = dataPriv.map(function (d, i) {
        return d.key;
      });
      for (var i in _dbConfig.CompanyEnum.PRIV) {
        if (allKeys.indexOf(_dbConfig.CompanyEnum.PRIV[i]) <= -1) {
          dataPriv.push({
            key: _dbConfig.CompanyEnum.PRIV[i],
            label: _dbConfig.CompanyEnum.PRIV[i]
          });
        }
      }

      return dataPriv;
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this5 = this,
          _formItems2;

      this.company_id = this.props.company_id;

      var query = "query {\n            company(ID:" + this.company_id + ") {\n              ID\n              name\n              cf\n              type\n              tagline\n              description\n              more_info\n              img_url\n              img_position\n              img_size\n              banner_url\n              banner_position\n              banner_size\n              priviledge\n              status\n              message_drop_resume\n              group_url\n              rec_privacy\n              accept_prescreen\n              sponsor_only\n          }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this5.setState(function () {
          var com = res.data.data.company;
          com[_dbConfig.Company.PRIVILEDGE] = _dbConfig.CompanyEnum.parsePrivs(com[_dbConfig.Company.PRIVILEDGE]);
          return { data: res.data.data.company, init: false };
        });
      });

      this.formItems = [];

      // for admin
      if ((0, _authActions.isRoleAdmin)() || (0, _authActions.isRoleOrganizer)()) {
        var _formItems;

        var dataCF = (0, _form.getDataCareerFair)();
        dataCF.push({ key: "NONE", label: "No Career Fair" });

        (_formItems = this.formItems).push.apply(_formItems, [{ header: "Admin Only" }, {
          label: "Name",
          name: _dbConfig.Company.NAME,
          type: "text",
          placeholder: "Company Name",
          required: true
        }, {
          label: "Priviledge",
          name: _dbConfig.Company.PRIVILEDGE,
          type: "checkbox",
          data: this.getDataPriv()
        }, {
          label: "Type",
          name: _dbConfig.Company.TYPE,
          type: "select",
          data: [{
            key: _dbConfig.CompanyEnum.TYPE_NORMAL,
            label: _dbConfig.CompanyEnum.getTypeStr(_dbConfig.CompanyEnum.TYPE_NORMAL)
          }, {
            key: _dbConfig.CompanyEnum.TYPE_GOLD,
            label: _dbConfig.CompanyEnum.getTypeStr(_dbConfig.CompanyEnum.TYPE_GOLD)
          }, {
            key: _dbConfig.CompanyEnum.TYPE_SILVER,
            label: _dbConfig.CompanyEnum.getTypeStr(_dbConfig.CompanyEnum.TYPE_SILVER)
          }, {
            key: _dbConfig.CompanyEnum.TYPE_BRONZE,
            label: _dbConfig.CompanyEnum.getTypeStr(_dbConfig.CompanyEnum.TYPE_BRONZE)
          }, {
            key: _dbConfig.CompanyEnum.TYPE_PLATINUM,
            label: _dbConfig.CompanyEnum.getTypeStr(_dbConfig.CompanyEnum.TYPE_PLATINUM)
          }, {
            key: _dbConfig.CompanyEnum.TYPE_SPECIAL,
            label: _dbConfig.CompanyEnum.getTypeStr(_dbConfig.CompanyEnum.TYPE_SPECIAL)
          }],
          required: true
        }, {
          label: "Career Fair",
          name: _dbConfig.Company.CF,
          type: "checkbox",
          data: dataCF
        }, {
          label: "Status",
          name: _dbConfig.Company.STATUS,
          type: "select",
          data: [_dbConfig.CompanyEnum.STS_OPEN, _dbConfig.CompanyEnum.STS_CLOSED, _dbConfig.CompanyEnum.STS_PS, _dbConfig.CompanyEnum.STS_RD, _dbConfig.CompanyEnum.STS_GS],
          required: true
        }, {
          label: "Group Session Url",
          sublabel: "Please make sure status has been set to '" + _dbConfig.CompanyEnum.STS_GS + "'",
          name: _dbConfig.Company.GROUP_URL,
          type: "text",
          placeholder: "Enter Zoom Url Here"
        }, {
          label: "Is Sponsor Only?",
          sublabel: "Sponsor only company will have NO booth in job fair",
          name: _dbConfig.Company.SPONSOR_ONLY,
          type: "radio",
          required: true,
          data: [{ key: 1, label: "Yes" }, { key: 0, label: "No" }]
        }, {
          label: "Accept Prescreen?",
          name: _dbConfig.Company.ACCEPT_PRESCREEN,
          type: "radio",
          required: true,
          data: [{ key: 1, label: "Yes" }, { key: 0, label: "No" }]
        }]);
      }

      (_formItems2 = this.formItems).push.apply(_formItems2, [{ header: "Basic Information" }, {
        label: "Tagline",
        name: _dbConfig.Company.TAGLINE,
        type: "text",
        placeholder: "Company Tagline"
      }, {
        label: "Description",
        name: _dbConfig.Company.DESCRIPTION,
        type: "textarea",
        rows: 6,
        placeholder: "Tell more about your company"
      }, {
        label: "Additional Information",
        name: _dbConfig.Company.MORE_INFO,
        type: "textarea",
        rows: 6,
        placeholder: "Anything you might want the student to know about the company. Upcoming events, benefits. culture, etc."
      }, { header: "Advanced Settings" }, {
        label: "Custom Message After Drop Resume",
        name: _dbConfig.Company.MESSAGE_DROP_RESUME,
        type: "textarea",
        rows: 6,
        placeholder: "Write down custom message for students after they drop their resume"
      }, {
        label: "Recruiter Information",
        name: _dbConfig.Company.REC_PRIVACY,
        type: "radio",
        required: true,
        data: [{ key: _dbConfig.CompanyEnum.REC_PRIVACY_PUBLIC, label: "Public" }, { key: _dbConfig.CompanyEnum.REC_PRIVACY_PRIVATE, label: "Private" }]
      }]);
    }

    //return string if there is error

  }, {
    key: "filterForm",
    value: function filterForm(d) {
      return 0;
    }
  }, {
    key: "formOnSubmit",
    value: function formOnSubmit(d) {
      var _this6 = this;

      var err = this.filterForm(d);
      if (err === 0) {
        (0, _form.toggleSubmit)(this, { error: null, success: null });
        var update = (0, _form.checkDiff)(this, this.state.data, d, [], [_dbConfig.Company.PRIVILEDGE]);
        if (update === false) {
          return;
        }

        // fix priviledge
        update[_dbConfig.Company.PRIVILEDGE] = JSON.stringify(update[_dbConfig.Company.PRIVILEDGE]);

        update[_dbConfig.Company.ID] = this.company_id;
        if (typeof update[_dbConfig.Company.TYPE] !== "undefined") {
          update[_dbConfig.Company.TYPE] = Number.parseInt(update[_dbConfig.Company.TYPE]);
        }

        var edit_query = "mutation{edit_company(" + (0, _graphqlObj2arg2.default)(update, {
          noOuterBraces: true
        }) + ") {ID}}";
        (0, _apiHelper.getAxiosGraphQLQuery)(edit_query).then(function (res) {
          var newData = Object.assign(_this6.state.data, d);
          (0, _form.toggleSubmit)(_this6, {
            data: newData,
            error: null,
            success: "Your Change Has Been Saved!"
          });
        }, function (err) {
          (0, _form.toggleSubmit)(_this6, { error: err.response.data });
        });
      } else {
        //console.log("Err", err);
        this.setState(function () {
          return { error: err };
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var content = null;
      if (this.state.init) {
        content = _react2.default.createElement(_loader.Loader, { size: "2", text: "Loading Company Information" });
      } else {
        content = _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(_profileCard2.default, {
            type: "banner",
            customStyleParent: { margin: "auto" },
            custom_width: _profileCardImg.BANNER_WIDTH + "px",
            id: this.state.data.ID,
            add_img_ops: true,
            img_url: this.state.data.banner_url,
            img_pos: this.state.data.banner_position,
            img_size: this.state.data.banner_size
          }),
          _react2.default.createElement(
            "div",
            { style: { marginTop: "-90px" } },
            _react2.default.createElement(_profileCard2.default, {
              type: "company",
              img_dimension: "130px",
              id: this.state.data.ID,
              add_img_ops: true,
              title: _react2.default.createElement(
                "h3",
                null,
                this.state.data.name
              ),
              subtitle: "",
              img_url: this.state.data.img_url,
              img_pos: this.state.data.img_position,
              img_size: this.state.data.img_size
            }),
            _react2.default.createElement(_form2.default, {
              className: "form-row",
              items: this.formItems,
              onSubmit: this.formOnSubmit,
              submitText: "Save Changes",
              defaultValues: this.state.data,
              disableSubmit: this.state.disableSubmit,
              error: this.state.error,
              success: this.state.success
            })
          )
        );
      }

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h3",
          null,
          "Edit Company"
        ),
        content
      );
    }
  }]);

  return AboutSubPage;
}(_react2.default.Component);

AboutSubPage.PropTypes = {
  company_id: _propTypes2.default.number.isRequired
};

// For Recruiter ------------------------------------------------------/

var ManageCompanyPage = function (_React$Component4) {
  _inherits(ManageCompanyPage, _React$Component4);

  function ManageCompanyPage() {
    _classCallCheck(this, ManageCompanyPage);

    return _possibleConstructorReturn(this, (ManageCompanyPage.__proto__ || Object.getPrototypeOf(ManageCompanyPage)).apply(this, arguments));
  }

  _createClass(ManageCompanyPage, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.key = 1;
    }
  }, {
    key: "getSubNavItem",
    value: function getSubNavItem() {
      var _this8 = this;

      this.sub_page = this.props.match.params.current ? this.props.match.params.current : "about";
      this.company_id = Number.parseInt(this.props.match.params.id);
      var item = {
        about: {
          label: "Edit Company",
          component: AboutSubPage,
          props: { company_id: this.company_id },
          icon: "building"
        },
        vacancy: {
          label: "Job Opportunities",
          component: VacancySubPage,
          props: { company_id: this.company_id },
          routeOnly: (0, _authActions.isRoleRec)(),
          icon: "star"
        },
        "doc-link": {
          label: "Document & Link",
          component: CompanyDocLink,
          props: { company_id: this.company_id },
          icon: "file-text"
        },
        view: {
          label: "View Company",
          onClick: function onClick() {
            _this8.props.history.push(_appConfig.AppPath + "/company/" + _this8.company_id);
            // layoutActions.storeUpdateFocusCard("My Company", CompanyPopup, {
            //     id: this.company_id
            // });
          },
          component: null,
          icon: "eye"
        }
      };

      if ((0, _authActions.isRoleAdmin)()) {
        item["student-listing"] = {
          label: "Student Listing",
          component: _studentListing.StudentListing,
          props: {
            title: "Student Listing",
            company_id: this.company_id
          },
          icon: "users"
        };
        //.. kita tak payah guna ni sebab kita boleh guna priviledge ACCESS_ALL_STUDENT untuk contol kat page student listing
        item["all-student"] = {
          label: "All Student",
          component: _studentListing.StudentListing,
          props: {
            title: "All Student",
            company_id: this.company_id,
            isAllStudent: true
          },
          icon: "address-book-o"
        };
        item["session"] = {
          label: "Past Sessions",
          component: _session.SessionsList,
          props: {
            company_id: this.company_id,
            student_id: this.student_id,
            isRec: true
          },
          icon: "comments"
        };
        item["resume-drop"] = {
          label: "Resume Drop",
          component: _resumeDrop.ResumeDrop,
          props: {
            company_id: this.company_id,
            student_id: this.student_id,
            isRec: true
          },
          icon: "download"
        };
        item["pre-screen"] = {
          label: "Pre-Screen",
          component: _scheduledInterview.ScheduledInterview,
          props: { company_id: this.company_id, prescreen_only: true },
          icon: "filter"
        };
        item["scheduled-interview"] = {
          label: "Scheduled Interview",
          component: _scheduledInterview.ScheduledInterview,
          props: { company_id: this.company_id },
          icon: "clock-o"
        };
      }

      var title = item[this.sub_page].label;
      document.setTitle(title);

      return item;
    }
  }, {
    key: "render",
    value: function render() {
      if (this.company_id !== this.props.match.params.id) {
        this.key++;
      }

      // updated prop in here
      var item = this.getSubNavItem();

      if (!(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)() && this.company_id != (0, _authActions.getAuthUser)().rec_company) {
        return _react2.default.createElement(_restricted2.default, {
          title: "Restricted Page",
          message: "You Are Not Allowed Here"
        });
      }

      return _react2.default.createElement(
        "div",
        { key: this.key },
        _react2.default.createElement(_subNav2.default, {
          route: "manage-company/" + this.company_id,
          items: item,
          defaultItem: this.sub_page
        })
      );
    }
  }]);

  return ManageCompanyPage;
}(_react2.default.Component);

exports.default = ManageCompanyPage;

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _authActions = __webpack_require__(2);

var _subNav = __webpack_require__(127);

var _subNav2 = _interopRequireDefault(_subNav);

var _session = __webpack_require__(300);

var _resumeDrop = __webpack_require__(301);

var _studentListing = __webpack_require__(302);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _scheduledInterview = __webpack_require__(28);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ActivityPage = function (_React$Component) {
    _inherits(ActivityPage, _React$Component);

    function ActivityPage() {
        _classCallCheck(this, ActivityPage);

        return _possibleConstructorReturn(this, (ActivityPage.__proto__ || Object.getPrototypeOf(ActivityPage)).apply(this, arguments));
    }

    _createClass(ActivityPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {

            if ((0, _authActions.isRoleRec)()) {
                this.company_id = (0, _authActions.getAuthUser)().rec_company;
            }

            if ((0, _authActions.isRoleStudent)()) {
                this.student_id = (0, _authActions.getAuthUser)().ID;
            }

            this.key = 1;
        }
    }, {
        key: 'getSubNavItem',
        value: function getSubNavItem() {
            this.sub_page = this.props.match.params.current ? this.props.match.params.current : "session";

            var item = {};

            if ((0, _authActions.isRoleRec)()) {
                item["student-listing"] = {
                    label: "Student Listing",
                    component: _studentListing.StudentListing,
                    // props: { company_id: this.company_id },
                    props: {
                        title: "Student Listing",
                        company_id: this.company_id
                    },
                    icon: "users"
                    // item["all-student"] = {
                    //     label: "All Student",
                    //     component: StudentListing,
                    //     props: { company_id: this.company_id, isAllStudent: true },
                    //     icon: "address-book-o",
                    // }
                };
            }

            item["session"] = {
                label: "Past Sessions",
                component: _session.SessionsList,
                props: { company_id: this.company_id, student_id: this.student_id, isRec: (0, _authActions.isRoleRec)() },
                icon: "comments"
            };

            if ((0, _authActions.isRoleStudent)()) {
                item["resume-drop"] = {
                    label: "Resume Drop",
                    component: _resumeDrop.ResumeDrop,
                    props: { company_id: this.company_id, student_id: this.student_id, isRec: (0, _authActions.isRoleRec)() },
                    icon: "download"
                };
            }

            if ((0, _authActions.isRoleRec)()) {
                /*
                item["pre-screen"] = {
                    label: "Pre-Screen",
                    component: ScheduledInterview,
                    props: { company_id: this.company_id, prescreen_only: true },
                    icon: "filter"
                };
                  item["scheduled-session"] = {
                    label: "Scheduled Session",
                    component: ScheduledInterview,
                    props: { company_id: this.company_id },
                    icon: "clock-o"
                };
                */

            }

            var title = item[this.sub_page].label;
            document.setTitle(title);

            return item;
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.company_id !== this.props.match.params.id) {
                this.key++;
            }

            // updated prop in here
            var item = this.getSubNavItem();

            return _react2.default.createElement(
                'div',
                { key: this.key },
                _react2.default.createElement(_subNav2.default, { route: 'my-activity', items: item, defaultItem: this.sub_page })
            );
        }
    }]);

    return ActivityPage;
}(_react2.default.Component);

exports.default = ActivityPage;

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _loader = __webpack_require__(8);

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// http://localhost:8080/auth/external-action/acceptInterview/%7B%22studentId%22:136,%22interviewId%22:392,%22companyName%22:%22Shell%22,%22studentName%22:%22Wan%20Zulsarhan%22%7D

var Config = {
  Type: {
    ACCEPT_INTERVIEW: "acceptInterview",
    REJECT_INTERVIEW: "rejectInterview"
  },
  Param: {
    STUDENT_ID: "studentId",
    INTERVIEW_ID: "interviewId",
    COMPANY_NAME: "companyName",
    STUDENT_NAME: "studentName"
  }
};

var ExternalAction = function (_React$Component) {
  _inherits(ExternalAction, _React$Component);

  function ExternalAction(props) {
    _classCallCheck(this, ExternalAction);

    var _this = _possibleConstructorReturn(this, (ExternalAction.__proto__ || Object.getPrototypeOf(ExternalAction)).call(this, props));

    _this.doAction = _this.doAction.bind(_this);
    console.log("Aasjdjajdjs");
    _this.type = null;
    _this.param = null;
    _this.error = null;
    _this.title = null;
    _this.viewDone = null;

    _this.state = {
      data: null,
      loading: true
    };
    return _this;
  }

  _createClass(ExternalAction, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      if (this.props.match) {
        this.type = this.props.match.params.type;
        this.param = this.props.match.params.param;
      }

      try {
        this.param = JSON.parse(this.param);
      } catch (err) {
        this.error = "Unable to parse parameter (" + this.param + ")";
      }

      console.log("type", this.type);
      console.log("param", this.param);
      console.log("error", this.error);

      // if(this.error != null){
      //   return;
      // }

      this.doAction();
    }
  }, {
    key: "doAction",
    value: function doAction() {
      var _this2 = this;

      console.log("Start do action");
      this.textLoading = "";
      var query = null;
      if (this.type == Config.Type.ACCEPT_INTERVIEW || this.type == Config.Type.REJECT_INTERVIEW) {
        var upd = {};
        upd[_dbConfig.Prescreen.ID] = this.param[Config.Param.INTERVIEW_ID];
        upd[_dbConfig.Prescreen.UPDATED_BY] = this.param[Config.Param.STUDENT_ID];
        upd[_dbConfig.Prescreen.STATUS] = this.type == Config.Type.ACCEPT_INTERVIEW ? _dbConfig.PrescreenEnum.STATUS_APPROVED : _dbConfig.PrescreenEnum.STATUS_REJECTED;

        // view generation
        this.title = _react2.default.createElement(
          "h4",
          null,
          "Hi ",
          this.param[Config.Param.STUDENT_NAME],
          " !"
        );

        var companyDetail = " interview with " + this.param[Config.Param.COMPANY_NAME];

        this.textLoading = this.type == Config.Type.ACCEPT_INTERVIEW ? "Accepting" : "Rejecting";
        this.textLoading += companyDetail;

        this.viewDone = "Successfully ";
        this.viewDone += this.type == Config.Type.ACCEPT_INTERVIEW ? "accepted" : "rejected";
        this.viewDone += companyDetail;

        query = "mutation{edit_prescreen(" + (0, _graphqlObj2arg2.default)(upd, {
          noOuterBraces: true
        }) + ") {ID}}";
      }

      console.log("query", query);
      // return;
      if (query !== null) {
        (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          _this2.setState(function () {
            return { loading: false };
          });
        });
      } else {
        console.log("query is null");
        this.setState(function () {
          return { loading: false };
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var view = _react2.default.createElement("div", null);

      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { size: "3", text: this.textLoading });
      } else {
        view = this.viewDone;
      }

      return _react2.default.createElement(
        "div",
        { style: { padding: "15px" } },
        this.title,
        view
      );
    }
  }]);

  return ExternalAction;
}(_react2.default.Component);

exports.default = ExternalAction;

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

var _apiHelper = __webpack_require__(3);

var _dbConfig = __webpack_require__(5);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _confirmPopup = __webpack_require__(122);

var _confirmPopup2 = _interopRequireDefault(_confirmPopup);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _time = __webpack_require__(9);

var _chat = __webpack_require__(42);

var _chat2 = _interopRequireDefault(_chat);

var _sessionNotes = __webpack_require__(597);

var _sessionNotes2 = _interopRequireDefault(_sessionNotes);

var _sessionRatings = __webpack_require__(598);

var _sessionRatings2 = _interopRequireDefault(_sessionRatings);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _socketClient = __webpack_require__(17);

var _socketConfig = __webpack_require__(32);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SessionPage = function (_React$Component) {
    _inherits(SessionPage, _React$Component);

    function SessionPage(props) {
        _classCallCheck(this, SessionPage);

        var _this = _possibleConstructorReturn(this, (SessionPage.__proto__ || Object.getPrototypeOf(SessionPage)).call(this, props));

        _this.getChat = _this.getChat.bind(_this);
        _this.getMainView = _this.getMainView.bind(_this);
        _this.endSession = _this.endSession.bind(_this);
        _this.canDoMultiple = _this.canDoMultiple.bind(_this);

        _this.hasEmitOpen = false;
        _this.sessionLocation = _this.props.history.location;
        _this.state = {
            data: null,
            loading: true
        };
        _this.ID = _this.props.match.params.id;
        _this.user_id = (0, _authActions.getAuthUser)().ID;

        _this.isRec = (0, _authActions.isRoleRec)();
        return _this;
    }

    _createClass(SessionPage, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (this.isRec) {
                this.right_bar = document.getElementById("right_bar");
                this.right_bar.className += " small ";
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            // TODO
            // this.unregisterLeaveHook();
            console.log("componentWillUnmount");
            this.endSession(this.state.data);
            if (this.isRec) {
                this.right_bar.className = "";
            }
        }

        // routerWillLeave(nextLocation){
        //     console.log("routerWillLeave", nextLocation);
        //     return false;
        // }

    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            // this.unregisterLeaveHook = this.props.router.setRouteLeaveHook(this.props.route,
            //     this.routerWillLeave.bind(this))

            (0, _socketClient.socketOn)(_socketConfig.BOTH.CHAT_OPEN_CLOSE, function (data) {
                if (data.action == "close") {
                    var status = (0, _authActions.isRoleRec)() ? _dbConfig.SessionEnum.STATUS_LEFT : _dbConfig.SessionEnum.STATUS_EXPIRED;
                    _this2.setState(function (prevState) {
                        prevState.data.status = status;
                        return { data: prevState.data };
                    });
                }
            });

            var query = 'query{session(ID:' + this.ID + ') {\n            ID host_id participant_id company_id status\n            company{name}\n            recruiter{ID first_name last_name img_url img_pos img_size}\n            student{ID first_name last_name img_url img_pos img_size}\n            updated_at created_at started_at ended_at }}';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                _this2.setState(function () {
                    var session = res.data.data.session;

                    if (session != null) {
                        if (_this2.user_id == session.host_id) {
                            _this2.isRec = true;
                        } else {
                            _this2.isRec = false;
                        }
                    }

                    return { data: session, loading: false };
                });
            });
        }
    }, {
        key: 'isAllowedHere',
        value: function isAllowedHere() {
            return this.user_id == 1 || this.state.data.host_id == this.user_id || this.state.data.participant_id == this.user_id;
        }
    }, {
        key: 'updateStartedAt',
        value: function updateStartedAt(session_id) {
            var started_at = _time.Time.getUnixTimestampNow();
            var query = 'mutation{edit_session(ID:' + session_id + ',started_at:' + started_at + '){ID}}';
            (0, _apiHelper.getAxiosGraphQLQuery)(query);
        }
    }, {
        key: 'emitChatOpenClose',
        value: function emitChatOpenClose(action, session) {
            var from_name = this.isRec ? 'Recruiter from ' + session.company.name : this.self_data.first_name + ' ' + this.self_data.last_name;

            if (action == "open") {
                if (!this.hasEmitOpen && session.status == _dbConfig.SessionEnum.STATUS_ACTIVE && session.started_at == null) {

                    (0, _socketClient.emitChatOpenClose)(action, from_name, this.other_id, session.ID);

                    // if student and started_at is null then need to update
                    if (!this.isRec) {
                        this.updateStartedAt(session.ID);
                    }

                    this.hasEmitOpen = true;
                }
            }

            if (action == "close") {
                (0, _socketClient.emitChatOpenClose)(action, from_name, this.other_id, session.ID);
            }
        }
    }, {
        key: 'canDoMultiple',
        value: function canDoMultiple() {
            // 
            var can_do_multiple = false;
            if (this.isRec && (0, _authActions.getCompany)().can_do_multiple) {
                can_do_multiple = true;
            }

            if ((0, _authActions.getAuthUser)().rec_company == 12) {
                can_do_multiple = true;
            }

            return can_do_multiple;

            // console.log("can_do_multiple", can_do_multiple);
            // console.log("can_do_multiple", getCompany());
            // console.log("can_do_multiple", can_do_multiple);
        }
    }, {
        key: 'getChat',
        value: function getChat(data) {
            this.self_id = null;
            this.other_id = null;
            this.other_data = null;
            this.self_data = null;
            var disableChat = data.status == _dbConfig.SessionEnum.STATUS_EXPIRED || data.status == _dbConfig.SessionEnum.STATUS_LEFT;

            if (this.isRec) {
                this.self_id = data.host_id;
                this.other_id = data.participant_id;
                this.other_data = data.student;
                this.self_data = data.recruiter;
            }
            //default is student
            else {
                    this.self_id = data.participant_id;
                    this.other_id = data.host_id;
                    this.other_data = data.recruiter;
                    this.self_data = data.student;
                }

            //emit open chat if dont already have
            this.emitChatOpenClose("open", data);

            return _react2.default.createElement(_chat2.default, {
                can_do_multiple: this.canDoMultiple(),
                session_id: data.ID,
                self_id: this.self_id,
                isRec: this.isRec,
                disableChat: disableChat,
                other_id: this.other_id,
                other_data: this.other_data });
        }
    }, {
        key: 'endSession',
        value: function endSession(data) {
            var _this3 = this;

            if (data.status != _dbConfig.SessionEnum.STATUS_ACTIVE) {
                return;
            }

            var onYes = function onYes() {
                layoutActions.loadingBlockLoader("Please Wait..");
                var update = {
                    ID: _this3.state.data.ID,
                    status: _this3.isRec ? _dbConfig.SessionEnum.STATUS_EXPIRED : _dbConfig.SessionEnum.STATUS_LEFT,
                    ended_at: _time.Time.getUnixTimestampNow()
                };
                var query = 'mutation{edit_session(' + (0, _graphqlObj2arg2.default)(update, { noOuterBraces: true }) + ')\n            {status ended_at ID}}';
                (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {

                    _this3.emitChatOpenClose("close", data);
                    _this3.setState(function (prevState) {
                        var newData = Object.assign(prevState.data, res.data.data.edit_session);
                        return { data: newData };
                    });
                });
            };

            var onNo = function onNo() {
                if (_this3.props.history.location != _this3.sessionLocation) {
                    _this3.props.history.push(_this3.sessionLocation);
                }
            };

            var title = 'Confirm ' + (this.isRec ? "End" : "Leave") + ' Session?';

            title = _react2.default.createElement(
                'div',
                null,
                title,
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                    'small',
                    null,
                    'You will no longer able to receive or send message'
                )
            );
            layoutActions.confirmBlockLoader(title, onYes, onNo);
        }
    }, {
        key: 'getSessionHeader',
        value: function getSessionHeader(data) {
            var _this4 = this;

            var title = null;
            if (this.isRec) {
                var label = data.student.first_name + " " + data.student.last_name;
                title = _react2.default.createElement(
                    'a',
                    { onClick: function onClick() {
                            return layoutActions.storeUpdateFocusCard(label, _userPopup2.default, { id: data.student.ID });
                        } },
                    label
                );
            } else {
                var label = data.company.name;
                title = label;
                // title = <a onClick={() => layoutActions.storeUpdateFocusCard(label, CompanyPopup, { id: data.company_id })}>
                //     {label}
                // </a>
            }

            var status = "";
            if (data.status == _dbConfig.SessionEnum.STATUS_EXPIRED) {
                status = "Session was ended by recruiter";
                if (data.ended_at != null) {
                    status += ' on ' + _time.Time.getString(data.ended_at);
                }
            } else if (data.status == _dbConfig.SessionEnum.STATUS_LEFT) {
                status = "Session was left by student";
                if (data.ended_at != null) {
                    status += ' on ' + _time.Time.getString(data.ended_at);
                }
            } else {
                status = "Session Active";
                if (data.started_at != null) {
                    status += ' - Started on ' + _time.Time.getString(data.started_at);
                } else if (data.created_at != null) {
                    status += ' - Created on ' + _time.Time.getString(data.created_at);
                }
            }

            var endBtn = data.status == _dbConfig.SessionEnum.STATUS_EXPIRED || data.status == _dbConfig.SessionEnum.STATUS_LEFT ? null : _react2.default.createElement(
                'span',
                { style: { margin: "0px 7px" } },
                _react2.default.createElement(
                    'a',
                    { className: 'btn btn-danger btn-sm', onClick: function onClick() {
                            _this4.endSession(data);
                        } },
                    this.isRec ? "End" : "Leave",
                    ' Session'
                )
            );

            return _react2.default.createElement(
                'div',
                { style: { borderBottom: "#777 1px solid", marginBottom: "20px", paddingBottom: "10px" } },
                _react2.default.createElement(
                    'h3',
                    { className: 'text-left', style: { margin: "0" } },
                    'Session #',
                    data.ID,
                    ' - ',
                    _react2.default.createElement(
                        'b',
                        null,
                        title
                    ),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        status,
                        endBtn
                    )
                )
            );
        }
    }, {
        key: 'getMainView',
        value: function getMainView(session) {
            var chat = this.getChat(session);
            var view = [];

            // ########################
            // for rec
            if (this.isRec) {

                view.push(_react2.default.createElement(
                    'div',
                    { style: { border: "#286090 solid 1px", marginBottom: "20px" },
                        className: 'col-md-3 no-padding' },
                    _react2.default.createElement(_userPopup2.default, { id: session.participant_id, isSessionPage: true })
                ));

                view.push(_react2.default.createElement(
                    'div',
                    { className: 'col-md-6 no-padding-medium' },
                    chat
                ));

                // session sessionNoteRating
                var sessionNoteRating = _react2.default.createElement(
                    'div',
                    { className: 'note_card',
                        style: {
                            padding: "10px 14px"
                        } },
                    _react2.default.createElement(_sessionRatings2.default, { rec_id: session.host_id,
                        student_id: session.participant_id,
                        session_id: session.ID }),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(_sessionNotes2.default, { rec_id: session.host_id,
                        student_id: session.participant_id,
                        session_id: session.ID })
                );
                view.push(_react2.default.createElement(
                    'div',
                    { className: 'col-md-3 no-padding' },
                    sessionNoteRating
                ));
            }

            // ########################
            // for student
            else {
                    //chat
                    view.push(_react2.default.createElement(
                        'div',
                        { className: 'col-md-6 no-padding padding-right' },
                        chat
                    ));

                    // company profile
                    if (session.company_id != null && session.company_id > 0) {
                        view.push(_react2.default.createElement(
                            'div',
                            { className: 'col-md-6 no-padding padding-left' },
                            _react2.default.createElement(
                                'div',
                                { style: {
                                        padding: "0 14px",
                                        border: "#6f7e95 solid 1px"
                                    } },
                                _react2.default.createElement(_companyPopup2.default, { displayOnly: true, canToggle: true, id: session.company_id })
                            )
                        ));
                    }
                }

            return view;
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Session");
            var view = null;
            var session = this.state.data;

            if (this.state.loading) {
                view = _react2.default.createElement(_loader.Loader, { text: 'Loading session..', size: '3' });
            } else if (session == null) {
                view = _react2.default.createElement(
                    'div',
                    { className: 'text-muted' },
                    'Session ID Invalid'
                );
            } else if (!this.isAllowedHere()) {
                view = _react2.default.createElement(
                    'div',
                    { className: 'text-muted' },
                    'Sorry. You Are Not Allowed Here.',
                    _react2.default.createElement('br', null),
                    'Only host and participant are allowed to view this session.'
                );
            } else {
                view = _react2.default.createElement(
                    'div',
                    { className: 'container-fluid no-padding' },
                    _react2.default.createElement(
                        'div',
                        { className: 'col-md-12 no-padding' },
                        this.getSessionHeader(session)
                    ),
                    this.getMainView(session)
                );
            }

            return _react2.default.createElement(
                'div',
                null,
                view
            );
        }
    }]);

    return SessionPage;
}(_react2.default.Component);

exports.default = SessionPage;

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _time = __webpack_require__(9);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _dbConfig = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../../../css/session-note.scss");

var SessionNotesSection = function (_React$Component) {
    _inherits(SessionNotesSection, _React$Component);

    function SessionNotesSection(props) {
        _classCallCheck(this, SessionNotesSection);

        return _possibleConstructorReturn(this, (SessionNotesSection.__proto__ || Object.getPrototypeOf(SessionNotesSection)).call(this, props));
    }

    _createClass(SessionNotesSection, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            //##########################################
            // List data properties
            this.renderRow = function (d) {

                return [_react2.default.createElement(
                    'td',
                    null,
                    _react2.default.createElement(
                        'p',
                        null,
                        d.note
                    ),
                    _react2.default.createElement(
                        'small',
                        { className: 'text-muted' },
                        _time.Time.getString(d.updated_at)
                    )
                )];
            };

            this.tableHeader = null;

            this.loadData = function (page, offset) {
                var param = {
                    session_id: _this2.props.session_id,
                    page: page,
                    offset: offset
                };

                var query = 'query{session_notes(' + (0, _graphqlObj2arg2.default)(param, { noOuterBraces: true }) + ')\n            {ID updated_at note}}';
                return (0, _apiHelper.getAxiosGraphQLQuery)(query);
            };

            // get actual data from loadData
            // can alter any data here too
            this.getDataFromRes = function (res) {
                return res.data.data.session_notes;
            };

            //##########################################
            // form operation properties

            // if ever needed
            // hook before submit
            this.formWillSubmit = function (d, edit) {
                return d;
            };

            this.getEditFormDefault = function (ID) {
                var query = 'query{\n                session_note(ID:' + ID + ') {\n                  ID\n                  note\n                }\n              }';

                return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                    var data = res.data.data.session_note;
                    return data;
                });
            };

            // create form add new default
            this.newFormDefault = {};
            this.newFormDefault[_dbConfig.SessionNotes.SESSION_ID] = this.props.session_id;
            this.newFormDefault[_dbConfig.SessionNotes.REC_ID] = this.props.rec_id;
            this.newFormDefault[_dbConfig.SessionNotes.STUDENT_ID] = this.props.student_id;

            this.getFormItem = function (edit) {
                var ret = [{
                    label: "Note",
                    name: _dbConfig.SessionNotes.NOTE,
                    type: "textarea",
                    hideLabel: !edit,
                    placeholder: "Add note about this student",
                    required: true
                }, {
                    label: "Session ID",
                    name: _dbConfig.SessionNotes.SESSION_ID,
                    type: "number",
                    disabled: true,
                    hidden: true,
                    required: !edit
                }, {
                    label: "Rec ID",
                    name: _dbConfig.SessionNotes.REC_ID,
                    type: "number",
                    disabled: true,
                    hidden: true,
                    required: !edit
                }, {
                    label: "Student ID",
                    name: _dbConfig.SessionNotes.STUDENT_ID,
                    type: "number",
                    disabled: true,
                    hidden: true,
                    required: !edit
                }];

                if (edit) {
                    ret.unshift({ header: 'Edit Note' });
                }

                return ret;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_generalForm2.default, {
                dataTitle: null,
                addButtonText: 'Add New Note For This Student',
                entity: 'session_note',
                entity_singular: 'Note',
                btnColorClass: 'warning',
                dataOffset: 3,
                showAddForm: true,
                tableHeader: this.tableHeader,
                newFormDefault: this.newFormDefault,
                getEditFormDefault: this.getEditFormDefault,
                getFormItem: this.getFormItem,
                renderRow: this.renderRow,
                getDataFromRes: this.getDataFromRes,
                loadData: this.loadData,
                formWillSubmit: this.formWillSubmit
            });
        }
    }]);

    return SessionNotesSection;
}(_react2.default.Component);

exports.default = SessionNotesSection;


SessionNotesSection.PropTypes = {
    session_id: _propTypes2.default.number.isRequired,
    rec_id: _propTypes2.default.number.isRequired,
    student_id: _propTypes2.default.number.isRequired
};

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _loader = __webpack_require__(8);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _dbConfig = __webpack_require__(5);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../../../css/session-note.scss");

var SessionRatingsSection = function (_React$Component) {
    _inherits(SessionRatingsSection, _React$Component);

    function SessionRatingsSection(props) {
        _classCallCheck(this, SessionRatingsSection);

        var _this = _possibleConstructorReturn(this, (SessionRatingsSection.__proto__ || Object.getPrototypeOf(SessionRatingsSection)).call(this, props));

        _this.getItemView = _this.getItemView.bind(_this);
        _this.loadData = _this.loadData.bind(_this);
        _this.onClickStar = _this.onClickStar.bind(_this);

        _this.LIMIT_STAR = 5;
        _this.DEFAULT_ID = -1;

        var initData = {};
        _dbConfig.SessionRatingEnum.categories.map(function (cat, i) {
            initData[cat] = { rating: 0, ID: _this.DEFAULT_ID };
        });

        _this.state = {
            loading: true,
            data: initData
        };
        return _this;
    }

    _createClass(SessionRatingsSection, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.loadData();
        }
    }, {
        key: 'loadData',
        value: function loadData() {
            var _this2 = this;

            var query = 'query{session_ratings(session_id:' + this.props.session_id + ') {ID category rating} }';
            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                var data = res.data.data.session_ratings;
                _this2.setState(function (prevState) {
                    data.map(function (d, i) {
                        prevState.data[d.category] = { rating: d.rating, ID: d.ID };
                    });
                    return { data: prevState.data, loading: false };
                });
            });
        }
    }, {
        key: 'onClickStar',
        value: function onClickStar(category, ID, star) {
            var _this3 = this;

            layoutActions.loadingBlockLoader("Please Wait..");
            var query = 'query{session_ratings(session_id:' + this.props.session_id + ') {ID category rating} }';

            var query = null;
            var key = null;

            if (ID == this.DEFAULT_ID) {
                var ins = {};
                ins[_dbConfig.SessionRating.SESSION_ID] = this.props.session_id;
                ins[_dbConfig.SessionRating.REC_ID] = this.props.rec_id;
                ins[_dbConfig.SessionRating.STUDENT_ID] = this.props.student_id;
                ins[_dbConfig.SessionRating.CATEGORY] = category;
                ins[_dbConfig.SessionRating.RATING] = star;

                query = 'mutation{add_session_rating(' + (0, _graphqlObj2arg2.default)(ins, { noOuterBraces: true }) + ')\n                    {ID category rating}}';
                key = "add_session_rating";
            }
            // update
            else {
                    var upd = {};
                    upd[_dbConfig.SessionRating.ID] = ID;
                    upd[_dbConfig.SessionRating.RATING] = star;
                    query = 'mutation{edit_session_rating(' + (0, _graphqlObj2arg2.default)(upd, { noOuterBraces: true }) + ')\n                    {ID category rating}}';

                    key = "edit_session_rating";
                }

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                layoutActions.storeHideBlockLoader();
                var d = res.data.data[key];
                _this3.setState(function (prevState) {
                    prevState.data[d.category] = { rating: d.rating, ID: d.ID };
                    return { data: prevState.data };
                });
            });
        }
    }, {
        key: 'getItemView',
        value: function getItemView(d, category) {
            // if not exist in config then dont show
            if (_dbConfig.SessionRatingEnum.categories.indexOf(category) <= -1) {
                return null;
            }

            var stars = [];
            for (var i = 1; i <= this.LIMIT_STAR; i++) {
                var className = "fa fa-star";
                if (i <= d.rating) {
                    className += " starred";
                }
                stars.push(_react2.default.createElement('i', { 'data-star': i, 'data-category': category, 'data-ID': d.ID,
                    onClick: this.onClickStar.bind(null, category, d.ID, i),
                    className: className }));
            }
            return _react2.default.createElement(
                'div',
                { style: { marginBottom: "5px" } },
                _react2.default.createElement(
                    'div',
                    { className: 'text-center' },
                    _react2.default.createElement(
                        'small',
                        null,
                        category
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'star_rating_dummy' },
                    stars
                )
            );

            // return <tr>
            //     <td className="text-right">
            //         <small>{category}</small>
            //     </td>
            //     <td>
            //         <div className="star_rating_dummy">
            //             {stars}
            //         </div>
            //     </td>
            // </tr>
        }
    }, {
        key: 'render',
        value: function render() {
            var view = _react2.default.createElement(_loader.Loader, { size: '2' });

            if (!this.state.loading) {
                view = [];
                for (var category in this.state.data) {
                    var d = this.state.data[category];
                    view.push(this.getItemView(d, category));
                }
            }

            return _react2.default.createElement(
                'div',
                { className: 'star_rating' },
                _react2.default.createElement(
                    'div',
                    { style: { marginBottom: "10px" } },
                    _react2.default.createElement(
                        'b',
                        null,
                        'Rate This Student'
                    )
                ),
                _react2.default.createElement(
                    'table',
                    { style: { margin: "auto" } },
                    view
                )
            );
        }
    }]);

    return SessionRatingsSection;
}(_react2.default.Component);

exports.default = SessionRatingsSection;


SessionRatingsSection.PropTypes = {
    session_id: _propTypes2.default.number.isRequired,
    rec_id: _propTypes2.default.number.isRequired,
    student_id: _propTypes2.default.number.isRequired
};

/*
 jQuery(document).ready(function () {
 var star_rating = jQuery(".star_rating");
 var star = star_rating.find(".fa-star");
 
 star.click(function () {
 star.removeClass("starred");
 
 var dom = jQuery(this);
 var num = Number(dom.attr("id"));
 
 for (var i = 1; i <= num; i++) {
 star_rating.find("#" + i).addClass("starred");
 }
 
 var params = {};
 params["action"] = "wzs21_update_db";
 params["table"] = "sessions";
 params["ID"] = "83";
 params["rating"] = num;
 
 jQuery.ajax({
 url: ajaxurl,
 type: "POST",
 data: params,
 success: function (res) {
 res = JSON.parse(res);
 console.log(res);
 if (res.status === "Success") {
 //var title = "Thank you for your feedback";
 //var body = "Your response successfully recorded";
 //popup.openPopup(title, body);
 } else {
 failResponse();
 }
 },
 error: function (err) {
 failResponse();
 }
 });
 
 function failResponse() {
 var title = "Something went wrong";
 var body = "Your response failed to be submitted.<br>Please try again later";
 popup.openPopup(title, body, true);
 }
 
 });
 });
 */

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ContactUsPage = exports.FaqPage = exports.AllowCookiePage = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _staticPage = __webpack_require__(600);

var _staticPage2 = _interopRequireDefault(_staticPage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AllowCookiePage = exports.AllowCookiePage = function (_React$Component) {
    _inherits(AllowCookiePage, _React$Component);

    function AllowCookiePage() {
        _classCallCheck(this, AllowCookiePage);

        return _possibleConstructorReturn(this, (AllowCookiePage.__proto__ || Object.getPrototypeOf(AllowCookiePage)).apply(this, arguments));
    }

    _createClass(AllowCookiePage, [{
        key: 'render',
        value: function render() {
            document.setTitle("Enabling Cookies In Your Browser");
            return _react2.default.createElement(_staticPage2.default, { filename: 'allow-cookie.html', version: '1' });
        }
    }]);

    return AllowCookiePage;
}(_react2.default.Component);

var FaqPage = exports.FaqPage = function (_React$Component2) {
    _inherits(FaqPage, _React$Component2);

    function FaqPage() {
        _classCallCheck(this, FaqPage);

        return _possibleConstructorReturn(this, (FaqPage.__proto__ || Object.getPrototypeOf(FaqPage)).apply(this, arguments));
    }

    _createClass(FaqPage, [{
        key: 'render',
        value: function render() {
            document.setTitle("Frequently Asked Question");
            return _react2.default.createElement(_staticPage2.default, { filename: 'faq.html', version: '1' });
        }
    }]);

    return FaqPage;
}(_react2.default.Component);

var ContactUsPage = exports.ContactUsPage = function (_React$Component3) {
    _inherits(ContactUsPage, _React$Component3);

    function ContactUsPage() {
        _classCallCheck(this, ContactUsPage);

        return _possibleConstructorReturn(this, (ContactUsPage.__proto__ || Object.getPrototypeOf(ContactUsPage)).apply(this, arguments));
    }

    _createClass(ContactUsPage, [{
        key: 'render',
        value: function render() {
            document.setTitle("Contact Us");
            return _react2.default.createElement(_staticPage2.default, { filename: 'contact-us.html', version: '1' });
        }
    }]);

    return ContactUsPage;
}(_react2.default.Component);

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StaticPage = function (_React$Component) {
    _inherits(StaticPage, _React$Component);

    function StaticPage(props) {
        _classCallCheck(this, StaticPage);

        var _this = _possibleConstructorReturn(this, (StaticPage.__proto__ || Object.getPrototypeOf(StaticPage)).call(this, props));

        _this.state = {
            loading: true,
            content: null
        };
        return _this;
    }

    _createClass(StaticPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            (0, _apiHelper.getStaticAxios)(this.props.filename, this.props.version).then(function (res) {
                _this2.setState(function () {
                    return { loading: false, content: res };
                });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var view = null;

            if (this.state.loading) {
                view = _react2.default.createElement(_loader.Loader, { size: '3', text: 'Loading Page..' });
            } else {
                console.log(_appConfig.ImageUrl);
                var content = this.state.content.replaceAll("{ImageUrl}", _appConfig.ImageUrl);
                view = _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: content } });
            }

            return _react2.default.createElement(
                'div',
                null,
                view
            );
        }
    }]);

    return StaticPage;
}(_react2.default.Component);

exports.default = StaticPage;


StaticPage.propTypes = {
    filename: _propTypes2.default.string.isRequired,
    version: _propTypes2.default.string
};

StaticPage.defaultProps = {
    version: null
};

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CompanyChatStarter = exports.StudentChatStarter = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _chat = __webpack_require__(42);

var _chat2 = _interopRequireDefault(_chat);

var _appConfig = __webpack_require__(4);

var _authActions = __webpack_require__(2);

var _reactRouterDom = __webpack_require__(7);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _companies = __webpack_require__(91);

var _companies2 = _interopRequireDefault(_companies);

var _users = __webpack_require__(27);

var _profileCard = __webpack_require__(13);

var _time = __webpack_require__(9);

var _socketConfig = __webpack_require__(32);

var _socketClient = __webpack_require__(17);

var _emptyState = __webpack_require__(602);

var _emptyState2 = _interopRequireDefault(_emptyState);

var _companiesAdmin = __webpack_require__(82);

var _userActions = __webpack_require__(51);

var _reactRedux = __webpack_require__(25);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // import { SupportSession, LogEnum } from "../../config/db-config";
// import { addLog } from "../redux/actions/other-actions.js";

var StudentChatStarter = exports.StudentChatStarter = function (_React$Component) {
  _inherits(StudentChatStarter, _React$Component);

  function StudentChatStarter(props) {
    _classCallCheck(this, StudentChatStarter);

    var _this = _possibleConstructorReturn(this, (StudentChatStarter.__proto__ || Object.getPrototypeOf(StudentChatStarter)).call(this, props));

    if (_this.props.match) {
      _this.ID = _this.props.match.params.id;
    } else {
      _this.ID = _this.props.id;
    }

    _this.getChatBox = _this.getChatBox.bind(_this);
    _this.state = {
      user: false,
      loading: true
    };

    _this.self_company_id = (0, _authActions.getAuthUser)().rec_company;
    return _this;
  }

  _createClass(StudentChatStarter, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      var query = "query{ user(ID:" + this.ID + ") {  \n        ID first_name last_name img_url img_size img_pos\n    }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this2.setState(function () {
          var user = res.data.data.user;
          return { user: user, loading: false };
        });
      });
    }
  }, {
    key: "getChatBox",
    value: function getChatBox() {
      if (this.state.loading) {
        return _react2.default.createElement(
          "div",
          { style: { padding: "10px" } },
          _react2.default.createElement(_loader.Loader, { text: "Initializing chat with student" })
        );
      } else {
        var view = [];
        view.push(_react2.default.createElement(
          "div",
          { className: "col-sm-6 " },
          _react2.default.createElement(_chat2.default, {
            is_company_chat: true,
            is_company_self: true,
            is_company_other: false,
            session_id: null,
            disableChat: false,
            other_id: Number.parseInt(this.ID),
            other_data: this.state.user,
            self_id: this.self_company_id
          })
        ));

        view.push(_react2.default.createElement(
          "div",
          { className: "col-sm-6 text-left" },
          _react2.default.createElement(
            "h4",
            null,
            "While you're waiting..."
          ),
          _react2.default.createElement(
            "ul",
            { style: { paddingLeft: "40px" }, className: "normal text-muted" },
            _react2.default.createElement(
              "li",
              null,
              "You can start other conversation with different student at",
              " ",
              _react2.default.createElement(
                _reactRouterDom.NavLink,
                {
                  target: "_blank"
                  // to={`${RootPath}/app/my-activity/student-listing`}
                  , to: _appConfig.RootPath + "/app/browse-student"
                },
                "Student Listing"
              ),
              " ",
              "page"
            ),
            _react2.default.createElement(
              "li",
              null,
              "This conversation will be saved in",
              " ",
              _react2.default.createElement(
                _reactRouterDom.NavLink,
                { target: "_blank", to: _appConfig.RootPath + "/app/my-inbox" },
                "your inbox."
              )
            )
          )
        ));

        return view;
      }
    }
  }, {
    key: "render",
    value: function render() {
      document.setTitle("Chat With " + this.state.user.first_name);
      return _react2.default.createElement(
        "div",
        { className: "company-chat-student" },
        this.getChatBox()
      );
    }
  }]);

  return StudentChatStarter;
}(_react2.default.Component);

// require("../css/forum.scss");
// require("../css/support-chat.scss");
// require("../css/company-chat.scss");

// Link from


var CompanyChatStarter = exports.CompanyChatStarter = function (_React$Component2) {
  _inherits(CompanyChatStarter, _React$Component2);

  function CompanyChatStarter(props) {
    _classCallCheck(this, CompanyChatStarter);

    var _this3 = _possibleConstructorReturn(this, (CompanyChatStarter.__proto__ || Object.getPrototypeOf(CompanyChatStarter)).call(this, props));

    if (_this3.props.match) {
      _this3.ID = _this3.props.match.params.id;
    } else {
      _this3.ID = _this3.props.id;
    }

    _this3.getChatBox = _this3.getChatBox.bind(_this3);
    _this3.state = {
      company: false,
      loading: true
    };

    _this3.self_id = (0, _authActions.getAuthUser)().ID;
    return _this3;
  }

  _createClass(CompanyChatStarter, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this4 = this;

      var query = "query{ company(ID:" + this.ID + ") {  \n        ID name img_url img_size img_position\n    }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this4.setState(function () {
          var company = res.data.data.company;
          company.first_name = company.name;
          return { company: company, loading: false };
        });
      });
    }
  }, {
    key: "getChatBox",
    value: function getChatBox() {
      if (this.state.loading) {
        return _react2.default.createElement(
          "div",
          { style: { padding: "10px" } },
          _react2.default.createElement(_loader.Loader, { text: "Initializing chat with recruiter" })
        );
      } else {
        var view = [];
        view.push(_react2.default.createElement(
          "div",
          { className: "col-sm-6 " },
          _react2.default.createElement(_chat2.default, {
            is_company_chat: true,
            is_company_self: false,
            is_company_other: true,
            session_id: null,
            disableChat: false,
            other_id: Number.parseInt(this.ID),
            other_data: this.state.company,
            self_id: this.self_id
          })
        ));

        view.push(_react2.default.createElement(
          "div",
          { className: "col-sm-6 text-left" },
          _react2.default.createElement(
            "h4",
            null,
            "While you're waiting..."
          ),
          _react2.default.createElement(
            "ul",
            { style: { paddingLeft: "40px" }, className: "normal text-muted" },
            _react2.default.createElement(
              "li",
              null,
              "Remember to research about",
              " ",
              _react2.default.createElement(
                _reactRouterDom.NavLink,
                {
                  target: "_blank",
                  to: _appConfig.RootPath + "/app/company/" + this.ID
                },
                this.state.company.first_name
              )
            ),
            _react2.default.createElement(
              "li",
              null,
              "Waiting time may vary, so be patient with response time."
            ),
            _react2.default.createElement(
              "li",
              null,
              "This conversation will be saved in",
              " ",
              _react2.default.createElement(
                _reactRouterDom.NavLink,
                { target: "_blank", to: _appConfig.RootPath + "/app/my-inbox" },
                "your inbox."
              )
            )
          )
        ));

        return view;
      }
    }
  }, {
    key: "render",
    value: function render() {
      document.setTitle("Chat With " + this.state.company.first_name);
      return _react2.default.createElement(
        "div",
        { className: "company-chat-student" },
        this.getChatBox()
      );
    }
  }]);

  return CompanyChatStarter;
}(_react2.default.Component);

// page for support to see all the chat list with users
// has to create another table for list of chats with support

// only limit to one support account
// to prevent from real time conflict

var CompanyChatInbox = function (_React$Component3) {
  _inherits(CompanyChatInbox, _React$Component3);

  function CompanyChatInbox(props) {
    _classCallCheck(this, CompanyChatInbox);

    var _this5 = _possibleConstructorReturn(this, (CompanyChatInbox.__proto__ || Object.getPrototypeOf(CompanyChatInbox)).call(this, props));

    _this5.authUser = (0, _authActions.getAuthUser)();
    _this5.getChatBox = _this5.getChatBox.bind(_this5);
    _this5.getChatList = _this5.getChatList.bind(_this5);
    _this5.changeChat = _this5.changeChat.bind(_this5);
    _this5.loadChatList = _this5.loadChatList.bind(_this5);

    _this5.isChangeChat = false;
    _this5.chatListBody = null;

    _this5.authUser = (0, _authActions.getAuthUser)();
    if ((0, _authActions.isRoleStudent)()) {
      _this5.userId = _this5.authUser.ID;
    } else if ((0, _authActions.isRoleRec)()) {
      _this5.companyId = _this5.authUser.rec_company;
    }

    _this5.state = {
      loading: true,
      sessions: [],
      current_user: null,
      newChat: []
    };
    return _this5;
  }

  _createClass(CompanyChatInbox, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this6 = this;

      this.loadChatList();

      (0, _socketClient.socketOn)(_socketConfig.BOTH.CHAT_MESSAGE, function (data) {
        var keyId = _this6.getKey(data.from_id);

        // if not exist?
        // list of newChat
        if (typeof _this6.state.sessions[keyId] === "undefined") {
          // this.setState(prevState => {
          //   var newChat = prevState.newChat;
          //   if (newChat.indexOf(data.from_id) <= -1) {
          //     newChat.push(data.from_id);
          //   }
          //   return { newChat: newChat };
          // });
          _this6.loadChatList();
          return;
        }

        // update last_message and last message time
        // set is new to true
        _this6.setState(function (prevState) {
          var obj = prevState.sessions[keyId];

          // if (this.state.current_user != keyId) {
          //   obj.isNew = true;
          // }

          obj.last_message = data.message;
          obj.last_message_time = data.created_at;
          if (prevState.current_user != keyId) {
            if (!obj.total_unread) {
              obj.total_unread = 0;
            }
            obj.total_unread++;
            obj.isNew = true;
          }

          prevState.sessions[keyId] = obj;

          return { sessions: prevState.sessions };
        });
      });
    }
  }, {
    key: "getEntityObj",
    value: function getEntityObj(data) {
      var entity = {};
      if (data.support_id == _appConfig.SupportUserID) {
        entity = {
          _type: "user",
          ID: data.support.ID,
          first_name: data.support.first_name,
          last_name: data.support.last_name,
          img_url: data.support.img_url,
          img_pos: data.support.img_pos,
          img_size: data.support.img_size
        };
      } else if ((0, _authActions.isRoleRec)()) {
        entity = {
          _type: "user",
          ID: data.user.ID,
          first_name: data.user.first_name,
          last_name: data.user.last_name,
          img_url: data.user.img_url,
          img_pos: data.user.img_pos,
          img_size: data.user.img_size
        };
      } else if ((0, _authActions.isRoleStudent)()) {
        entity = {
          _type: "company",
          ID: data.company.ID,
          first_name: data.company.name,
          name: data.company.name, // needed to create company title link
          last_name: "",
          img_url: data.company.img_url,
          img_pos: data.company.img_pos,
          img_size: data.company.img_size
        };
      }

      return _extends({}, data, {
        entity: entity
      });
    }
  }, {
    key: "loadChatList",
    value: function loadChatList() {
      var _this7 = this;

      var param = "";
      var field = "";
      var fieldUser = "user { ID first_name last_name img_url img_pos img_size}";
      var fieldSupport = "support { ID first_name last_name img_url img_pos img_size}";
      var fieldCompany = "company { ID name img_url img_pos img_size}";

      if ((0, _authActions.isRoleStudent)()) {
        param = "user_id:" + this.userId;
        field = fieldUser + " " + fieldCompany;
      } else if ((0, _authActions.isRoleRec)()) {
        param = "support_id:" + this.companyId;
        field = "" + fieldUser;
      }

      var query = "query{ support_sessions(" + param + ") {  \n            ID\n            user_id\n            support_id\n            created_at\n            last_message_time\n            last_message\n            total_unread\n            " + field + " " + fieldSupport + "\n          }}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
        _this7.setState(function (prevState) {
          var sessions = res.data.data.support_sessions;
          var data = {};
          var current = null;

          for (var i in sessions) {
            var d = sessions[i];
            d = _this7.getEntityObj(d);
            var uid = d.entity.ID;

            // init to the first one in list
            // taknak initialize
            if (i == 0 && false) {
              current = _this7.getKey(uid);
            }
            // to restrain order
            data[_this7.getKey(uid)] = d;
          }

          // if loaded from chat socket trigger
          if (prevState.current_user !== 0) {
            current = prevState.current_user;
          }

          return {
            sessions: data,
            loading: false,
            current_user: current,
            newChat: []
          };
        });
      });
    }
  }, {
    key: "getKey",
    value: function getKey(user_id) {
      return "chat:" + user_id;
    }
  }, {
    key: "getChatBox",
    value: function getChatBox() {
      var s = this.state.sessions[this.state.current_user];
      if (typeof s !== "undefined") {
        var other_data = s.entity;
        var other_id = s.entity.ID;
        var self_id = (0, _authActions.isRoleRec)() ? this.companyId : this.userId;
        var is_company_self = (0, _authActions.isRoleRec)();
        var is_company_other = (0, _authActions.isRoleStudent)();

        // CompanyChatForRec
        return _react2.default.createElement(
          "div",
          { key: this.state.current_user },
          _react2.default.createElement(_chat2.default, {
            is_hide_header: true,
            is_company_chat: other_id != _appConfig.SupportUserID,
            is_company_self: is_company_self,
            is_company_other: is_company_other,
            session_id: null,
            disableChat: false,
            other_id: other_id,
            other_data: other_data,
            self_id: self_id
          })
        );
      } else {
        return _react2.default.createElement(
          "div",
          { className: "chat-box-empty" },
          "Select Chat From Inbox"
        );
      }

      //return <div className="text-muted">Nothing To Show Here</div>;
    }
  }, {
    key: "changeChat",
    value: function changeChat(user_id) {
      this.isChangeChat = true;
      var keyId = this.getKey(user_id);
      this.setState(function (prevState) {
        prevState.sessions[keyId].isNew = false;
        prevState.sessions[keyId].total_unread = 0;
        return { current_user: keyId, sessions: prevState.sessions };
      });
    }
  }, {
    key: "getCurrentChatObj",
    value: function getCurrentChatObj() {
      if (this.state.current_user === null) {
        return null;
      }

      return this.state.sessions[this.state.current_user];
    }
  }, {
    key: "getEntityKey",
    value: function getEntityKey(d) {
      var dataTemp = this.getEntityObj(d);
      return this.getKey(dataTemp.entity.ID);
    }
  }, {
    key: "getOrderArr",
    value: function getOrderArr() {
      var toRet = [];
      var objectOrder = {};
      for (var key in this.state.sessions) {
        var d = this.state.sessions[key];
        var orderKey = "order" + _time.Time.convertDBTimeToUnix(d.last_message_time) + "::" + d.support_id;

        objectOrder[orderKey] = d;
      }

      var keys = Object.keys(objectOrder);
      keys.sort();

      // sort desc
      for (var i = keys.length - 1; i >= 0; i--) {
        var _d = objectOrder[keys[i]];
        var chatKey = this.getEntityKey(_d);
        toRet.push(chatKey);
      }

      return toRet;
    }
  }, {
    key: "getImageIcon",
    value: function getImageIcon(d) {
      var isOnline = false;
      if (d.entity._type == "company") {
        isOnline = (0, _userActions.isCompanyOnline)(this.props.online_companies, d.entity.ID);
      } else {
        isOnline = this.props.online_users[d.entity.ID] == 1;
      }

      // console.log("this.props.online_users",this.props.online_users);
      // console.log("this.props.online_companies",this.props.online_companies);
      // console.log("isOnline",isOnline,d.entity);

      var imgView = (0, _profileCard.createImageElement)(d.entity.img_url, d.entity.img_pos, d.entity.img_size, "45px", "frm-image", undefined, undefined, isOnline);

      return imgView;
    }
  }, {
    key: "getChatList",
    value: function getChatList() {
      var _this8 = this;

      var view = [];

      // order by last message time
      var orderArr = this.getOrderArr();

      //for (var i in this.state.sessions) {
      for (var i in orderArr) {
        var key = orderArr[i];
        var d = this.state.sessions[key];
        var title = d.entity._type == "user" ? (0, _users.createUserTitle)(d.entity) : (0, _companiesAdmin.createCompanyTitle)(d.entity);

        // let isOnline = false;
        // if (d.entity._type == "company") {
        //   isOnline = isCompanyOnline(this.props.online_companies, d.entity.ID);
        // } else {
        //   isOnline = this.props.online_users[d.entity.ID] == 1;
        // }

        // // console.log("this.props.online_users",this.props.online_users);
        // // console.log("this.props.online_companies",this.props.online_companies);
        // // console.log("isOnline",isOnline,d.entity);

        // var imgView = createImageElement(
        //   d.entity.img_url,
        //   d.entity.img_pos,
        //   d.entity.img_size,
        //   "45px",
        //   "frm-image",
        //   undefined,
        //   undefined,
        //   isOnline
        // );

        var imgView = this.getImageIcon(d);

        var isCurrent = this.state.current_user === key;
        var isNew = typeof d.isNew !== "undefined" ? d.isNew : false;
        if (d.total_unread > 0) {
          isNew = true;
        }
        var body = d.last_message != null ? d.last_message : _react2.default.createElement(
          "small",
          { className: "text-muted" },
          _react2.default.createElement(
            "i",
            null,
            "Nothing To Show Here"
          )
        );

        var countUnread = d.total_unread <= 0 ? null : _react2.default.createElement(
          "div",
          { className: "frm-count" },
          d.total_unread
        );

        view.push(_react2.default.createElement(
          "div",
          {
            key: key,
            id: d.entity.ID,
            className: "forum chat-list " + (isCurrent ? "selected" : ""),
            onClick: function onClick(ev) {
              _this8.changeChat(ev.currentTarget.id);
            }
          },
          countUnread,
          imgView,
          _react2.default.createElement(
            "div",
            { className: "frm-body" },
            _react2.default.createElement(
              "div",
              { className: "frm-title" },
              title
            ),
            _react2.default.createElement(
              "p",
              { className: "frm-content " + (isNew ? "fc-blue" : "") },
              body
            ),
            _react2.default.createElement(
              "div",
              { className: "frm-timestamp" },
              _time.Time.getString(d.last_message_time)
            )
          )
        ));
      }

      return view;
    }
  }, {
    key: "getEmptyState",
    value: function getEmptyState() {
      var view = null;
      // Empty State For Company Chat
      var emptyStateBody = [_react2.default.createElement(
        "div",
        { className: "text-muted" },
        "It looks like you have nothing in your inbox."
      )];

      if ((0, _authActions.isRoleStudent)()) {
        emptyStateBody.push(_react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            "div",
            { className: "text-muted" },
            "Start a chat with one of the companies below."
          ),
          _react2.default.createElement("br", null),
          _react2.default.createElement("br", null),
          _react2.default.createElement(_companies2.default, this.props)
        ));
      } else if ((0, _authActions.isRoleRec)()) {
        emptyStateBody.push(_react2.default.createElement(
          "div",
          { className: "text-muted" },
          "Come back again another time."
        ));
      }
      view = _react2.default.createElement(_emptyState2.default, { body: emptyStateBody });

      return view;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!this.isChangeChat && this.chatListBody != null) {
        this.chatListBody.scrollTop = 0;
      }

      this.isChangeChat = false;
    }
  }, {
    key: "render",
    value: function render() {
      var _this9 = this;

      document.setTitle("Inbox");
      var view = null;

      if (this.state.loading) {
        view = _react2.default.createElement(_loader.Loader, { text: "Loading Chat List" });
      } else {
        view = [];
        var newBtn = this.state.newChat.length == 0 ? null : _react2.default.createElement(
          "b",
          null,
          _react2.default.createElement(
            "a",
            { onClick: this.loadChatList },
            this.state.newChat.length,
            " New Chat"
          )
        );

        if (Object.keys(this.state.sessions).length <= 0) {
          view = this.getEmptyState();
        } else {
          var titleRight = null;
          try {
            var d = this.getCurrentChatObj();
            var imgIcon = this.getImageIcon(d);
            titleRight = [imgIcon, _react2.default.createElement(
              "div",
              { className: "flex-center" },
              d.entity.first_name + " " + d.entity.last_name
            )];
          } catch (err) {}

          view.push(_react2.default.createElement(
            "div",
            { className: "col-sm-12" },
            _react2.default.createElement(
              "div",
              { id: "chat-list" },
              _react2.default.createElement(
                "div",
                { className: "cl-header" },
                _react2.default.createElement(
                  "div",
                  { className: "clh-title" },
                  _react2.default.createElement(
                    "div",
                    { className: "clh-title-left" },
                    "Inbox"
                  ),
                  _react2.default.createElement(
                    "div",
                    { className: "clh-title-right" },
                    titleRight
                  )
                ),
                newBtn
              ),
              _react2.default.createElement(
                "div",
                { className: "cl-parent-body" },
                _react2.default.createElement(
                  "div",
                  { className: "cl-body", ref: function ref(v) {
                      return _this9.chatListBody = v;
                    } },
                  this.getChatList()
                ),
                _react2.default.createElement(
                  "div",
                  { className: "cl-chat" },
                  this.getChatBox()
                )
              )
            )
          ));

          // view.push(
          //   <div className="col-sm-6">
          //     <div id="chat-list">
          //       <div className="cl-header">
          //         <div className="clh-title">
          //           Inbox
          //         </div>
          //         {newBtn}
          //       </div>
          //       <div className="cl-body" ref={(v) => this.chatListBody = v} >
          //         {this.getChatList()}
          //       </div>
          //     </div>
          //   </div>
          // );
          // view.push(<div className="col-sm-6 ">{this.getChatBox()}</div>);
        }
      }

      return _react2.default.createElement(
        "div",
        { className: "company-chat-inbox" },
        view
      );
    }
  }]);

  return CompanyChatInbox;
}(_react2.default.Component);

function mapStateToProps(state, ownProps) {
  return {
    online_users: state.user.online_users,
    online_companies: state.user.online_companies
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, null)(CompanyChatInbox);

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageSection = __webpack_require__(52);

var _pageSection2 = _interopRequireDefault(_pageSection);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/action-box.scss");


// Ask a Question style instagram
var EmptyState = function (_Component) {
  _inherits(EmptyState, _Component);

  function EmptyState(props) {
    _classCallCheck(this, EmptyState);

    var _this = _possibleConstructorReturn(this, (EmptyState.__proto__ || Object.getPrototypeOf(EmptyState)).call(this, props));

    _this.state = {};

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.cfObj = (0, _authActions.getCFObj)();
    return _this;
  }

  _createClass(EmptyState, [{
    key: "componentWillMount",
    value: function componentWillMount() {}
  }, {
    key: "render",
    value: function render() {
      var img = _react2.default.createElement("img", { className: "img img-responsive", style: { height: "100px", margin: "auto" },
        src: _appConfig.ImageUrl + "/logo-only.png" });
      var title = _react2.default.createElement(
        "h3",
        { style: { marginTop: "5px" } },
        "Hi ",
        this.authUser.first_name,
        "!"
      );

      return _react2.default.createElement(
        "div",
        { className: "empty-state" },
        img,
        title,
        this.props.body
      );
    }
  }]);

  return EmptyState;
}(_react.Component);

exports.default = EmptyState;


EmptyState.propTypes = {
  body: _propTypes2.default.string

};

EmptyState.defaultProps = {};

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _time = __webpack_require__(9);

var _util = __webpack_require__(45);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/time-converter.scss");

var TimeConverterPage = function (_React$Component) {
  _inherits(TimeConverterPage, _React$Component);

  function TimeConverterPage() {
    _classCallCheck(this, TimeConverterPage);

    return _possibleConstructorReturn(this, (TimeConverterPage.__proto__ || Object.getPrototypeOf(TimeConverterPage)).apply(this, arguments));
  }

  _createClass(TimeConverterPage, [{
    key: "componentWillMount",
    value: function componentWillMount() {}
  }, {
    key: "getBlock",
    value: function getBlock(_ref) {
      var date = _ref.date,
          time = _ref.time,
          day = _ref.day,
          timezone = _ref.timezone,
          tcClass = _ref.tcClass;

      return _react2.default.createElement(
        "div",
        { className: "tc-block tc-block-" + tcClass },
        _react2.default.createElement(
          "div",
          { className: "tcb-timezone" },
          timezone
        ),
        _react2.default.createElement(
          "div",
          { className: "tcb-day" },
          day
        ),
        _react2.default.createElement(
          "div",
          { className: "tcb-date" },
          date
        ),
        _react2.default.createElement(
          "div",
          { className: "tcb-time" },
          time
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      var unix = (0, _util._GET)("unix");
      // let title = _GET("title");

      var v = null;
      if (unix == null) {
        v = _react2.default.createElement(
          "div",
          null,
          "Nothing To Show Here"
        );
      } else {
        unix = Number.parseInt(unix);
        var timeTitle = _time.Time.getHappeningAgo(unix, {
          happeningHandler: function happeningHandler(txt) {
            return txt + " to go";
          },
          agoHandler: function agoHandler(txt) {
            return "" + txt;
          }
        });

        v = _react2.default.createElement(
          "div",
          { className: "time-converter" },
          _react2.default.createElement(
            "h4",
            { className: "tc-title" },
            timeTitle
          ),
          _react2.default.createElement(
            "div",
            { className: "block-container" },
            this.getBlock({
              date: _time.Time.getDate(unix),
              time: _time.Time.getStringShort(unix),
              day: _time.Time.getDateDayStrFull(unix),
              timezone: "Your Local Time",
              tcClass: "left"
            }),
            this.getBlock({
              date: _time.Time.getDateMas(unix),
              time: _time.Time.getStringShortMas(unix),
              day: _time.Time.getDateDayStrMasFull(unix),
              timezone: "Malaysia Time",
              tcClass: "right"
            })
          )
        );
      }

      return v;
    }
  }]);

  return TimeConverterPage;
}(_react2.default.Component);

exports.default = TimeConverterPage;

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _authActions = __webpack_require__(2);

var _form = __webpack_require__(19);

var _form2 = _interopRequireDefault(_form);

var _authConfig = __webpack_require__(75);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import { AuthAPIErr } from '../../server/api/auth-api';


var PasswordForgotPage = function (_React$Component) {
    _inherits(PasswordForgotPage, _React$Component);

    function PasswordForgotPage(props) {
        _classCallCheck(this, PasswordForgotPage);

        var _this = _possibleConstructorReturn(this, (PasswordForgotPage.__proto__ || Object.getPrototypeOf(PasswordForgotPage)).call(this, props));

        _this.formOnSubmit = _this.formOnSubmit.bind(_this);
        _this.state = {
            error: null,
            disableSubmit: false,
            success: null
        };
        return _this;
    }

    _createClass(PasswordForgotPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.formItem = [{
                name: "user_email",
                type: "email",
                placeholder: "Please Enter Your Login Email",
                required: true
            }];

            this.defaultValues = {
                user_email: this.props.match.params.email
            };
        }
    }, {
        key: 'formOnSubmit',
        value: function formOnSubmit(d) {
            var _this2 = this;

            (0, _form.toggleSubmit)(this, { error: null });

            (0, _authActions.passwordResetRequest)(d.user_email).then(function (res) {
                var successMes = _react2.default.createElement(
                    'span',
                    null,
                    'A link to reset your password has been sent to',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'b',
                        null,
                        d.user_email
                    ),
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        '**It may take a few minutes to arrive**'
                    )
                );
                (0, _form.toggleSubmit)(_this2, { error: null, success: successMes });
            }, function (err) {
                var errorMes = "Something went wrong. Please try again";
                if (err.response.data == _authConfig.AuthAPIErr.INVALID_EMAIL) {
                    errorMes = _react2.default.createElement(
                        'span',
                        null,
                        'There is no account registered with email ',
                        _react2.default.createElement(
                            'b',
                            null,
                            d.user_email
                        ),
                        _react2.default.createElement('br', null),
                        _react2.default.createElement(
                            _reactRouterDom.NavLink,
                            { to: _appConfig.RootPath + '/auth/sign-up' },
                            'Register Now'
                        )
                    );
                }
                (0, _form.toggleSubmit)(_this2, { error: errorMes, success: null });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle("Request Password Reset");

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    'Request Password Reset',
                    _react2.default.createElement('br', null),
                    _react2.default.createElement(
                        'small',
                        null,
                        'We will email a link to reset your password'
                    )
                ),
                _react2.default.createElement(_form2.default, { className: 'form-row',
                    items: this.formItem,
                    disableSubmit: this.state.disableSubmit,
                    submitText: 'Submit',
                    defaultValues: this.defaultValues,
                    onSubmit: this.formOnSubmit,
                    success: this.state.success,
                    emptyOnSuccess: true,
                    error: this.state.error })
            );
        }
    }]);

    return PasswordForgotPage;
}(_react2.default.Component);

exports.default = PasswordForgotPage;

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Overview = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _socketConfig = __webpack_require__(32);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _companyPopup = __webpack_require__(36);

var _companyPopup2 = _interopRequireDefault(_companyPopup);

var _socketClient = __webpack_require__(17);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _loader = __webpack_require__(8);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _authActions = __webpack_require__(2);

var _profileCard = __webpack_require__(13);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/overview.scss");

var Overview = exports.Overview = function (_React$Component) {
    _inherits(Overview, _React$Component);

    function Overview(props) {
        _classCallCheck(this, Overview);

        var _this = _possibleConstructorReturn(this, (Overview.__proto__ || Object.getPrototypeOf(Overview)).call(this, props));

        _this.refresh = _this.refresh.bind(_this);

        _this.renderHallDetail = _this.renderHallDetail.bind(_this);
        _this.renderAllOnline = _this.renderAllOnline.bind(_this);
        _this.isUserOnline = _this.isUserOnline.bind(_this);
        _this.isCompanyOnline = _this.isCompanyOnline.bind(_this);
        _this.createLegends = _this.createLegends.bind(_this);
        _this.state = {
            loading: true,
            online_company: {},
            data: [],
            online_clients: []

            // queue_detail: {},
            // queue: {},
            // sessions: [],
            // requests: [],
        };

        _this.color = {
            online: "#449d44",
            you: "#f74940"
        };

        _this.CF = (0, _authActions.getCF)();
        return _this;
    }

    _createClass(Overview, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            this.FOR_REC = (0, _authActions.isRoleRec)();
            this.FOR_STUDENT = (0, _authActions.isRoleStudent)();

            this.LEGENDS = this.createLegends();

            (0, _socketClient.socketOn)(_socketConfig.BOTH.STATE, function (data) {
                _this2.setState(function (prevState) {
                    for (var i in data) {
                        prevState[i] = data[i];
                    }

                    prevState.loading = false;
                    return prevState;
                });
            });
        }
    }, {
        key: 'createLegends',
        value: function createLegends() {

            var shape = _react2.default.createElement(
                'div',
                { className: 'legends hall-activity' },
                _react2.default.createElement(
                    'div',
                    { className: 'legend-item' },
                    this.createIconEmpty("cornered"),
                    'Active Session'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'legend-item' },
                    this.createIconEmpty("square"),
                    'Scheduled Session'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'legend-item' },
                    this.createIconEmpty("circle"),
                    'Session Request'
                )
            );
            var color = _react2.default.createElement(
                'div',
                { className: 'legends hall-activity' },
                _react2.default.createElement(
                    'div',
                    { className: 'legend-item' },
                    this.createIconEmpty("circle", this.color.online),
                    'Online'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'legend-item' },
                    this.createIconEmpty("circle"),
                    'Offline'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'legend-item' },
                    this.createIconEmpty("circle", this.color.you),
                    'You'
                )
            );

            return _react2.default.createElement(
                'div',
                { className: 'table-responsive' },
                _react2.default.createElement(
                    'table',
                    { className: 'table-fit table table-bordered table-condensed' },
                    _react2.default.createElement(
                        'tbody',
                        null,
                        _react2.default.createElement(
                            'tr',
                            null,
                            _react2.default.createElement(
                                'td',
                                null,
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    'Shape Indicator'
                                )
                            ),
                            _react2.default.createElement(
                                'td',
                                null,
                                shape
                            )
                        ),
                        _react2.default.createElement(
                            'tr',
                            null,
                            _react2.default.createElement(
                                'td',
                                null,
                                _react2.default.createElement(
                                    'b',
                                    null,
                                    'Color Indicator'
                                )
                            ),
                            _react2.default.createElement(
                                'td',
                                null,
                                color
                            )
                        )
                    )
                )
            );
        }
    }, {
        key: 'refresh',
        value: function refresh() {
            var _this3 = this;

            this.setState(function () {
                return { loading: true };
            });

            this.lastUpdated = _time.Time.getStringShort(_time.Time.getUnixTimestampNow(), true);

            var query = 'query{ \n              companies(order_by:"type" cf:"' + this.CF + '"){\n              ID type name img_url img_size img_position\n              active_sessions{\n                participant_id\n                created_at\n              }\n              active_prescreens {\n                student_id\n                special_type\n                appointment_time\n              }\n              pending_requests{\n                status\n                student_id\n                created_at\n            }}}';

            (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
                _this3.setState(function (prevState) {
                    return { data: res.data.data.companies };
                });
            });

            (0, _socketClient.emitState)(["online_company", "online_clients"]);
        }

        /*
        refreshOLD() {
            this.setState(() => {
                return { loading: true };
            })
              this.lastUpdated = Time.getStringShort(Time.getUnixTimestampNow(), true);
              //load session
            var query = `query{
                sessions(status:"Active") {
                  host_id
                  participant_id
                  company_id
                  created_at
                }
               }`;
              getAxiosGraphQLQuery(query).then((res) => {
                this.setState((prevState) => {
                    return { sessions: res.data.data.sessions };
                })
            });
              //load request
            var query = `query{session_requests(order_by:"created_at asc", status:"Pending"){
                ID company_id
                student_id
                created_at }}`;
              getAxiosGraphQLQuery(query).then((res) => {
                this.setState((prevState) => {
                    return { requests: res.data.data.session_requests };
                })
            });
              //emitState();
        }
        */

    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.refresh();
        }
    }, {
        key: 'createIconEmpty',
        value: function createIconEmpty(shape) {
            var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            var style = { backgroundColor: color };
            var className = shape;
            return _react2.default.createElement(
                'div',
                { style: style, className: 'icon ' + className + ' small' },
                _react2.default.createElement('div', null)
            );
        }
    }, {
        key: 'createIcon',
        value: function createIcon(id, type) {
            var shape = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
            var tooltip = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            var noClick = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var style = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};

            var className = shape + " ";
            var label = id;

            if (type == "company") {
                if (this.isCompanyOnline(id)) {
                    className += " active ";
                }
                var onClick = function onClick(e) {
                    var id = e.currentTarget.dataset.entity_id;
                    id = Number.parseInt(id);
                    layoutActions.storeUpdateFocusCard("Company " + id, _companyPopup2.default, { id: id, displayOnly: true });
                };
            }

            if (type == "user") {

                if (id == (0, _authActions.getAuthUser)().ID) {
                    style["backgroundColor"] = this.color.you;
                    style["fontSize"] = "75%";
                    label = _react2.default.createElement(
                        'b',
                        null,
                        'YOU'
                    );
                }

                if (this.isUserOnline(id)) {
                    className += " active";
                }

                var onClick = function onClick(e) {
                    var id = e.currentTarget.dataset.entity_id;
                    layoutActions.storeUpdateFocusCard("User " + id, _userPopup2.default, { id: id });
                };
            }

            if (noClick) {
                onClick = null;
            }

            return _react2.default.createElement(
                'div',
                { style: style,
                    title: tooltip, className: 'icon ' + className + ' ' + (noClick ? "" : "clickable"),
                    'data-entity_id': id, onClick: onClick },
                _react2.default.createElement(
                    'div',
                    null,
                    shape == "company" ? null : label
                )
            );
        }
    }, {
        key: 'renderAllOnline',
        value: function renderAllOnline() {
            var vs = [];

            for (var id in this.state.online_clients) {
                vs.push(this.createIcon(id, "user", "circle"));
            }

            if (vs.length == 0) {
                return null;
            }

            return _react2.default.createElement(
                'div',
                { style: { flexWrap: "wrap" }, className: 'hall-activity' },
                vs
            );
        }
    }, {
        key: 'createIconCompany',
        value: function createIconCompany(comData) {
            var style = (0, _profileCard.getStyleImageObj)("company", comData.img_url, comData.img_size, comData.img_position, "40px");
            style.backgroundRepeat = "no-repeat";
            style.backgroundColor = "white";
            var v = this.createIcon(comData.ID, "company", "company", null, false, style);
            return v;
        }
    }, {
        key: 'renderHallDetail',
        value: function renderHallDetail() {
            var _this4 = this;

            var vs = [];
            for (var i in this.state.data) {
                var d = this.state.data[i];
                var com_id = d.ID;

                // set if student clickable 
                var noClick = false;
                if (this.FOR_REC) {
                    noClick = true;
                    // for limited rec, only under queue can be seen
                    if (com_id == (0, _authActions.getAuthUser)().rec_company) {
                        noClick = false;
                    }
                }

                if (this.FOR_STUDENT) {
                    noClick = true;
                }

                // company
                var com = _react2.default.createElement(_tooltip2.default, {
                    bottom: '45px',
                    left: '-26px',
                    width: '99px',
                    content: this.createIconCompany(d),
                    tooltip: d.name });

                // active sessions
                var sessions = d.active_sessions.map(function (d, i) {
                    var c = _this4.createIcon(d.participant_id, "user", "cornered", null, noClick);

                    return _react2.default.createElement(_tooltip2.default, {
                        bottom: '33px',
                        left: '-54px',
                        width: '144px',
                        content: c,
                        tooltip: _react2.default.createElement(
                            'span',
                            null,
                            _react2.default.createElement(
                                'small',
                                null,
                                'Active Session'
                            ),
                            _react2.default.createElement('br', null),
                            _time.Time.getAgo(d.created_at)
                        ) });
                });

                // scheduled sessions
                var si = d.active_prescreens.map(function (d, i) {
                    var c = _this4.createIcon(d.student_id, "user", "", null, noClick);

                    var si_tt = _this4.FOR_STUDENT ? _react2.default.createElement(
                        'span',
                        null,
                        _react2.default.createElement(
                            'small',
                            null,
                            'Scheduled Session'
                        ),
                        _react2.default.createElement('br', null),
                        _time.Time.getString(d.appointment_time)
                    ) : _react2.default.createElement(
                        'span',
                        null,
                        _react2.default.createElement(
                            'small',
                            null,
                            'Created From ',
                            d.special_type
                        ),
                        _react2.default.createElement('br', null),
                        _time.Time.getString(d.appointment_time)
                    );

                    return _react2.default.createElement(_tooltip2.default, {
                        bottom: '33px',
                        left: '-54px',
                        width: '144px',
                        content: c,
                        tooltip: si_tt });
                });

                // pending session request
                var sr = d.pending_requests.map(function (d, i) {
                    var c = _this4.createIcon(d.student_id, "user", "circle", null, noClick);

                    return _react2.default.createElement(_tooltip2.default, {
                        bottom: '33px',
                        left: '-54px',
                        width: '144px',
                        content: c,
                        tooltip: _react2.default.createElement(
                            'span',
                            null,
                            _react2.default.createElement(
                                'small',
                                null,
                                'Session Request'
                            ),
                            _react2.default.createElement('br', null),
                            _time.Time.getAgo(d.created_at)
                        ) });
                });

                vs.push(_react2.default.createElement(
                    'div',
                    { className: 'icon-container' },
                    com,
                    sessions,
                    si,
                    sr
                ));
            }

            return _react2.default.createElement(
                'div',
                null,
                this.LEGENDS,
                _react2.default.createElement(
                    'div',
                    { className: 'hall-activity' },
                    vs
                )
            );
        }
    }, {
        key: 'isUserOnline',
        value: function isUserOnline(id) {
            return typeof this.state.online_clients[id] !== "undefined";
        }
    }, {
        key: 'isCompanyOnline',
        value: function isCompanyOnline(id) {
            if (typeof this.state.online_company[id] === "undefined") {
                return false;
            }

            if (Object.keys(this.state.online_company[id]).length <= 0) {
                return false;
            }

            return true;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            document.setTitle("Monitor");
            var hall = this.renderHallDetail();

            var onlines = this.FOR_REC || this.FOR_STUDENT ? null : this.renderAllOnline();

            var refreshBtn = this.state.loading ? _react2.default.createElement(_loader.Loader, { size: '3', text: 'Fetching latest update..' }) : _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'a',
                    { className: 'btn btn-sm btn-blue', onClick: function onClick() {
                            return _this5.refresh();
                        } },
                    _react2.default.createElement('i', { className: 'fa fa-refresh left' }),
                    'Refresh ',
                    _react2.default.createElement(
                        'small',
                        null,
                        '( Last Updated ',
                        this.lastUpdated,
                        ' )'
                    )
                )
            );

            var warning = (0, _socketClient.isSocketOkay)() ? null : _react2.default.createElement(
                'div',
                { className: 'alert alert-info', role: 'info' },
                'Connecting to real time server.. Please wait..'
            );

            var onlineView = this.FOR_REC || this.FOR_STUDENT ? null : _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h2',
                    null,
                    'Online Users'
                ),
                onlines == null ? _react2.default.createElement(
                    'span',
                    { className: 'text-muted' },
                    'Nothing To Show Here'
                ) : onlines
            );

            return _react2.default.createElement(
                'div',
                null,
                warning,
                _react2.default.createElement(
                    'h2',
                    null,
                    'Career Fair Overview'
                ),
                refreshBtn,
                hall,
                onlineView
            );
        }
    }]);

    return Overview;
}(_react2.default.Component);

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _subNav = __webpack_require__(127);

var _subNav2 = _interopRequireDefault(_subNav);

var _list = __webpack_require__(11);

var _feedback = __webpack_require__(57);

var _qsPopup = __webpack_require__(304);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//importing for list


// create sub page
var MetaType = {
    "sub": "Email Subscriber",
    "org_en": "Organization Enquiries",
    "com_en": "Company Enquiries"
};

var MetaSubPage = function (_React$Component) {
    _inherits(MetaSubPage, _React$Component);

    function MetaSubPage(props) {
        _classCallCheck(this, MetaSubPage);

        var _this = _possibleConstructorReturn(this, (MetaSubPage.__proto__ || Object.getPrototypeOf(MetaSubPage)).call(this, props));

        console.log(_this.props);
        return _this;
    }

    _createClass(MetaSubPage, [{
        key: 'isEncodedUri',
        value: function isEncodedUri() {
            var ENCODE = ["org_en", "com_en"];
            return ENCODE.indexOf(this.props.type) >= 0;
        }
    }, {
        key: 'printPrettyJSON',
        value: function printPrettyJSON(json) {
            if (typeof json == "string") {
                json = JSON.parse(json);
            }

            var items = [];
            for (var k in json) {
                items.push({
                    label: k,
                    icon: "",
                    value: json[k]
                });
            }

            return _react2.default.createElement(_list.CustomList, { className: 'icon', items: items });
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            this.offset = 10;
            this.tableHeader = _react2.default.createElement(
                'thead',
                null,
                _react2.default.createElement(
                    'tr',
                    null,
                    _react2.default.createElement(
                        'th',
                        null,
                        'Value'
                    ),
                    _react2.default.createElement(
                        'th',
                        null,
                        'Submitted At'
                    )
                )
            );

            this.loadData = function (page, offset) {
                var fields = "";
                switch (_this2.props.type) {
                    case 'sub':
                        fields = 'meta_key:"subscriber"';
                        break;
                    case 'org_en':
                        fields = 'meta_key:"enquiries",meta_value:"org_name"';
                        break;
                    case 'com_en':
                        fields = 'meta_key:"enquiries",meta_value:"comp_name"';
                        break;
                }

                return (0, _apiHelper.getAxiosGraphQLQuery)('\n                query{metas(' + fields + ' page:' + page + ', offset:' + offset + '){\n                meta_value\n                created_at}}');
            };

            this.renderRow = function (d, i) {
                var row = [];
                for (var key in d) {
                    if (key == "created_at") {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            _time.Time.getString(d[key])
                        ));
                    } else if (key == "meta_value" && _this2.isEncodedUri()) {
                        var view = decodeURI(d[key]);
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            _this2.printPrettyJSON(view)
                        ));
                    } else {
                        row.push(_react2.default.createElement(
                            'td',
                            null,
                            d[key]
                        ));
                    }
                }
                return row;
            };

            this.getDataFromRes = function (res) {
                return res.data.data.metas;
            };
        }
    }, {
        key: 'render',
        value: function render() {
            document.setTitle(this.props.title);
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'h3',
                    null,
                    this.props.title
                ),
                _react2.default.createElement(_generalForm2.default, {
                    dataTitle: this.dataTitle,
                    noMutation: true,
                    dataOffset: this.isEncodedUri() ? 5 : 20,
                    tableHeader: this.tableHeader,
                    renderRow: this.renderRow,
                    getDataFromRes: this.getDataFromRes,
                    loadData: this.loadData
                })
            );
        }
    }]);

    return MetaSubPage;
}(_react2.default.Component);

MetaSubPage.propTypes = {
    type: _react.PropTypes.oneOf(["sub", "org_en", "com_en"]).isRequired,
    title: _react.PropTypes.string.isRequired
};

// create sub page here

var AnalyticPage = function (_React$Component2) {
    _inherits(AnalyticPage, _React$Component2);

    function AnalyticPage() {
        _classCallCheck(this, AnalyticPage);

        return _possibleConstructorReturn(this, (AnalyticPage.__proto__ || Object.getPrototypeOf(AnalyticPage)).apply(this, arguments));
    }

    _createClass(AnalyticPage, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.item = {
                "subscriber": {
                    label: "Subscriber",
                    component: MetaSubPage,
                    props: { type: "sub", title: "Subscriber" },
                    icon: "envelope"
                },
                "organization-enquiries": {
                    label: "Organization Enquiries",
                    component: MetaSubPage,
                    props: { type: "org_en", title: "Organization Enquiries" },
                    icon: "users"
                },
                "company-enquiries": {
                    label: "Company Enquiries",
                    component: MetaSubPage,
                    props: { type: "com_en", title: "Company Enquiries" },
                    icon: "building"
                },
                "qs-popup": {
                    label: "User Answers",
                    component: _qsPopup.QsPopupList,
                    icon: "file-text-o"
                },
                "manage-qs-popup": {
                    label: "Manage Question Popup",
                    component: _qsPopup.ManageQsPopup,
                    icon: "edit"
                },
                "feedback": {
                    label: "Feedback",
                    component: _feedback.FeedbackList,
                    icon: "file-text-o"
                },
                "manage-feedback": {
                    label: "Manage Feedback",
                    component: _feedback.ManageFeedback,
                    icon: "edit"
                }

            };
        }
    }, {
        key: 'render',
        value: function render() {
            var title = this.item[this.props.match.params.current].label;
            document.setTitle(title);
            return _react2.default.createElement(_subNav2.default, { route: 'analytics', items: this.item, defaultItem: this.props.match.params.current });
        }
    }]);

    return AnalyticPage;
}(_react2.default.Component);

exports.default = AnalyticPage;

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _companies = __webpack_require__(91);

var _companies2 = _interopRequireDefault(_companies);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListCompanies = function (_React$Component) {
  _inherits(ListCompanies, _React$Component);

  function ListCompanies(props) {
    _classCallCheck(this, ListCompanies);

    return _possibleConstructorReturn(this, (ListCompanies.__proto__ || Object.getPrototypeOf(ListCompanies)).call(this, props));
  }

  _createClass(ListCompanies, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h1",
          null,
          "Company Profiles"
        ),
        _react2.default.createElement(_companies2.default, this.props)
      );
    }
  }]);

  return ListCompanies;
}(_react2.default.Component);

exports.default = ListCompanies;


ListCompanies.propTypes = {
  isPreEvent: _propTypes2.default.bool
};

ListCompanies.defaultProps = {
  isPreEvent: false
};

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _auditorium = __webpack_require__(182);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListEventsWebinars = function (_React$Component) {
  _inherits(ListEventsWebinars, _React$Component);

  function ListEventsWebinars(props) {
    _classCallCheck(this, ListEventsWebinars);

    return _possibleConstructorReturn(this, (ListEventsWebinars.__proto__ || Object.getPrototypeOf(ListEventsWebinars)).call(this, props));
  }

  _createClass(ListEventsWebinars, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { className: "hall-page" },
        _react2.default.createElement(
          "h1",
          null,
          "Events & Webinars"
        ),
        _react2.default.createElement(_auditorium.WebinarHall, { noBorderCard: true })
      );
    }
  }]);

  return ListEventsWebinars;
}(_react2.default.Component);

exports.default = ListEventsWebinars;


ListEventsWebinars.propTypes = {};

ListEventsWebinars.defaultProps = {};

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _company = __webpack_require__(98);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListJobPosts = function (_React$Component) {
  _inherits(ListJobPosts, _React$Component);

  function ListJobPosts(props) {
    _classCallCheck(this, ListJobPosts);

    return _possibleConstructorReturn(this, (ListJobPosts.__proto__ || Object.getPrototypeOf(ListJobPosts)).call(this, props));
  }

  _createClass(ListJobPosts, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h1",
          null,
          "Job Posts"
        ),
        _react2.default.createElement(_company.VacancyList, { offset: 9, filterByCf: true, isListAll: true, listClass: "flex-wrap-center text-left" })
      );
    }
  }]);

  return ListJobPosts;
}(_react2.default.Component);

exports.default = ListJobPosts;


ListJobPosts.propTypes = {
  isPreEvent: _propTypes2.default.bool
};

ListJobPosts.defaultProps = {
  isPreEvent: false
};

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _dbConfig = __webpack_require__(5);

var _apiHelper = __webpack_require__(3);

var _time = __webpack_require__(9);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import PropTypes from "prop-types";
// import { AppPath } from "../../config/app-config";
// import List, { ProfileListWide } from "../component/list";
// import { NavLink } from "react-router-dom";
// import { InterestedButton } from "../component/interested";
// import ProfileCard from "../component/profile-card.jsx";
// import obj2arg from "graphql-obj2arg";
// import { getDataCareerFair } from "../component/form";
// import { socketOn, emitLiveFeed } from "../socket/socket-client";
// import { BOTH } from "../../config/socket-config";
// import * as layoutActions from "../redux/actions/layout-actions";
// import CompanyPopup from "./partial/popup/company-popup";
// import { Loader } from "../component/loader";
// import ToogleTimezone from "../component/toggle-timezone";


var EventManagement = function (_React$Component) {
  _inherits(EventManagement, _React$Component);

  function EventManagement(props) {
    _classCallCheck(this, EventManagement);

    var _this = _possibleConstructorReturn(this, (EventManagement.__proto__ || Object.getPrototypeOf(EventManagement)).call(this, props));

    _this.authUser = (0, _authActions.getAuthUser)();
    _this.company_id = _this.props.company_id;
    return _this;
  }

  _createClass(EventManagement, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.successAddHandler = function (d) {};

      //##########################################
      // List data properties
      this.renderRow = function (d) {
        return [_react2.default.createElement(
          "td",
          null,
          d.ID
        ), _react2.default.createElement(
          "td",
          null,
          _react2.default.createElement(
            "b",
            null,
            d.title
          ),
          _react2.default.createElement(
            "small",
            null,
            _react2.default.createElement(
              "ul",
              { className: "normal" },
              _react2.default.createElement(
                "li",
                null,
                "with ",
                d.company.name
              )
            )
          )
        ), _react2.default.createElement(
          "td",
          null,
          _react2.default.createElement(
            "small",
            null,
            _react2.default.createElement(
              "ul",
              { className: "normal" },
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Type"
                ),
                " : ",
                d.type
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Start"
                ),
                " : ",
                _time.Time.getString(d.start_time)
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "End"
                ),
                " : ",
                _time.Time.getString(d.end_time)
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Location"
                ),
                " : ",
                d.location
              ),
              _react2.default.createElement(
                "li",
                null,
                _react2.default.createElement(
                  "b",
                  null,
                  "Description"
                ),
                " : ",
                d.description
              )
            )
          )
        )];
      };

      this.tableHeader = _react2.default.createElement(
        "thead",
        null,
        _react2.default.createElement(
          "tr",
          null,
          _react2.default.createElement(
            "th",
            null,
            "ID"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Event"
          ),
          _react2.default.createElement(
            "th",
            null,
            "Details"
          )
        )
      );

      this.loadData = function (page, offset) {
        var query = "query{\n                events(page:" + page + ",offset:" + offset + ") {\n                  ID \n                  company_id\n                  company{ID name img_url img_position img_size}\n                  type\n                  title\n                  location\n                  description\n                  start_time\n                  end_time\n                }\n              }";
        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      // get actual data from loadData
      // can alter any data here too
      this.getDataFromRes = function (res) {
        return res.data.data.events;
      };

      //##########################################
      // form operation properties

      // if ever needed
      // hook before submit
      this.formWillSubmit = function (d, edit) {
        //udpated by
        if (edit) {
          d[_dbConfig.Event.UPDATED_BY] = (0, _authActions.getAuthUser)().ID;
        }

        // convert to number
        if (typeof d.company_id !== "undefined") {
          d[_dbConfig.Event.COMPANY_ID] = Number.parseInt(d[_dbConfig.Event.COMPANY_ID]);
        }

        // date time handling
        if (d[_dbConfig.Event.START_TIME + "_DATE"]) ;
        d[_dbConfig.Event.START_TIME] = _time.Time.getUnixFromDateTimeInput(d[_dbConfig.Event.START_TIME + "_DATE"], d[_dbConfig.Event.START_TIME + "_TIME"]);

        delete d[_dbConfig.Event.START_TIME + "_DATE"];
        delete d[_dbConfig.Event.START_TIME + "_TIME"];

        d[_dbConfig.Event.END_TIME] = _time.Time.getUnixFromDateTimeInput(d[_dbConfig.Event.END_TIME + "_DATE"], d[_dbConfig.Event.END_TIME + "_TIME"]);

        delete d[_dbConfig.Event.END_TIME + "_DATE"];
        delete d[_dbConfig.Event.END_TIME + "_TIME"];

        if (d[_dbConfig.Event.END_TIME] < d[_dbConfig.Event.START_TIME]) {
          return "'End Time' cannot be less than 'Start Time'";
        }

        return d;
      };

      // date time need to be forced diff
      this.forceDiff = [_dbConfig.Event.LOCATION, _dbConfig.Event.DESCRIPTION, _dbConfig.Event.START_TIME + "_DATE", _dbConfig.Event.START_TIME + "_TIME", _dbConfig.Event.END_TIME + "_DATE", _dbConfig.Event.END_TIME + "_TIME"];
      this.acceptEmpty = [_dbConfig.Event.DESCRIPTION, _dbConfig.Event.LOCATION];

      this.getEditFormDefault = function (ID) {
        var query = "query{event(ID:" + ID + ")\n            {ID company_id type title description location start_time end_time}}";
        return (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (res) {
          var data = res.data.data.event;
          console.log(data);
          // setup time
          var start = _time.Time.getInputFromUnix(data.start_time);
          data[_dbConfig.Event.START_TIME + "_DATE"] = start.date;
          data[_dbConfig.Event.START_TIME + "_TIME"] = start.time;

          var end = _time.Time.getInputFromUnix(data.end_time);
          data[_dbConfig.Event.END_TIME + "_DATE"] = end.date;
          data[_dbConfig.Event.END_TIME + "_TIME"] = end.time;

          return data;
        });
      };

      // create form add new default
      this.newFormDefault = {};
      this.newFormDefault[_dbConfig.Event.CREATED_BY] = this.authUser.ID;

      this.getFormItemAsync = function (edit) {
        return (0, _apiHelper.getAxiosGraphQLQuery)("query{companies(include_sponsor:1){ID name cf}}").then(function (res) {
          var companies = res.data.data.companies;
          var ret = [{ header: "Event Form" }];

          ret.push.apply(ret, [{
            label: "Type",
            name: _dbConfig.Event.TYPE,
            type: "select",
            required: true,
            data: ["", _dbConfig.EventEnum.TYPE_PHYSICAL, _dbConfig.EventEnum.TYPE_VIRTUAL]
          }, {
            label: "Company",
            name: _dbConfig.Event.COMPANY_ID,
            type: "select",
            required: true,
            data: companies.map(function (d, i) {
              return { key: d.ID, label: d.name };
            })
          }, {
            label: "Title",
            name: _dbConfig.Event.TITLE,
            type: "text",
            placeholder: "",
            required: true
          }, { header: "Event Details" }, {
            label: "Start Date",
            sublabel: "Please enter your local time",
            name: _dbConfig.Event.START_TIME + "_DATE",
            type: "date",
            placeholder: "",
            required: true
          }, {
            label: "Start Time",
            sublabel: "Please enter your local time",
            name: _dbConfig.Event.START_TIME + "_TIME",
            type: "time",
            placeholder: "",
            required: true
          }, {
            label: "End Date",
            sublabel: "Please enter your local time",
            name: _dbConfig.Event.END_TIME + "_DATE",
            type: "date",
            placeholder: "",
            required: true
          }, {
            label: "End Time",
            sublabel: "Please enter your local time",
            name: _dbConfig.Event.END_TIME + "_TIME",
            type: "time",
            placeholder: "",
            required: true
          }, {
            label: "Location",
            name: _dbConfig.Event.LOCATION,
            type: "text",
            placeholder: ""
          }, {
            label: "Description",
            name: _dbConfig.Event.DESCRIPTION,
            type: "textarea",
            placeholder: ""
          }, {
            label: "Created By",
            name: _dbConfig.Event.CREATED_BY,
            type: "number",
            disabled: true,
            hidden: true,
            required: !edit
          }]);
          return ret;
        });
      };
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(_generalForm2.default, {
        dataTitle: "Event Management",
        entity: "event",
        entity_singular: "Event",
        addButtonText: "Add New Event",
        dataOffset: 10,
        acceptEmpty: this.acceptEmpty,
        forceDiff: this.forceDiff,
        tableHeader: this.tableHeader,
        newFormDefault: this.newFormDefault,
        getEditFormDefault: this.getEditFormDefault,
        getFormItemAsync: this.getFormItemAsync,
        renderRow: this.renderRow,
        getDataFromRes: this.getDataFromRes,
        loadData: this.loadData,
        successAddHandler: this.successAddHandler,
        formWillSubmit: this.formWillSubmit
      });
    }
  }]);

  return EventManagement;
}(_react2.default.Component);

exports.default = EventManagement;

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _eventList = __webpack_require__(292);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListEvent = function (_React$Component) {
  _inherits(ListEvent, _React$Component);

  function ListEvent(props) {
    _classCallCheck(this, ListEvent);

    return _possibleConstructorReturn(this, (ListEvent.__proto__ || Object.getPrototypeOf(ListEvent)).call(this, props));
  }

  _createClass(ListEvent, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h1",
          null,
          "Events"
        ),
        _react2.default.createElement(_eventList.EventList, { listClass: "flex-wrap-center text-left" })
      );
    }
  }]);

  return ListEvent;
}(_react2.default.Component);

exports.default = ListEvent;


ListEvent.propTypes = {};

ListEvent.defaultProps = {};

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _activity = __webpack_require__(176);

var _activity2 = _interopRequireDefault(_activity);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListInterviews = function (_React$Component) {
  _inherits(ListInterviews, _React$Component);

  function ListInterviews(props) {
    _classCallCheck(this, ListInterviews);

    return _possibleConstructorReturn(this, (ListInterviews.__proto__ || Object.getPrototypeOf(ListInterviews)).call(this, props));
  }

  _createClass(ListInterviews, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "h1",
          null,
          "My Interviews"
        ),
        _react2.default.createElement(_activity2.default, null)
      );
    }
  }]);

  return ListInterviews;
}(_react2.default.Component);

exports.default = ListInterviews;


ListInterviews.propTypes = {};

ListInterviews.defaultProps = {};

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BrowseStudent = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _browseStudentFilter = __webpack_require__(614);

var _browseStudentList = __webpack_require__(615);

var _apiHelper = __webpack_require__(3);

var _authActions = __webpack_require__(2);

var _loader = __webpack_require__(8);

var _util = __webpack_require__(45);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BrowseStudent = exports.BrowseStudent = function (_React$Component) {
  _inherits(BrowseStudent, _React$Component);

  function BrowseStudent(props) {
    _classCallCheck(this, BrowseStudent);

    var _this = _possibleConstructorReturn(this, (BrowseStudent.__proto__ || Object.getPrototypeOf(BrowseStudent)).call(this, props));

    _this.onChangeFilter = _this.onChangeFilter.bind(_this);

    _this.isRec = (0, _authActions.isRoleRec)();
    _this.company_id = null;
    _this.company_cf = [];
    var currentCf = (0, _authActions.getCF)();

    if (_this.isRec) {
      _this.company_id = (0, _authActions.getAuthUser)().rec_company;
      _this.company_cf = (0, _authActions.getAuthUser)().company.cf;
      if (!Array.isArray(_this.company_cf)) {
        _this.company_cf = [];
      }
      var testIndex = _this.company_cf.indexOf("TEST");
      if (testIndex >= 0) {
        _this.company_cf.splice(testIndex, 1);
      }
    }

    _this.defaultFilterState = null;
    _this.defaultFilterState = {
      cf: _this.company_cf.indexOf(currentCf) >= 0 ? [currentCf] : _this.company_cf
    };

    if ((0, _util._GET)("interested_only") == "1" || _this.props.match.path.indexOf("interested-student") >= 0) {
      _this.defaultFilterState["interested_only"] = ["1"];
    }

    var disabledFilter = null;
    disabledFilter = {
      cf: function cf(v) {
        if (_this.isRec) {
          // disabled kalau takde dlm list company_cf
          var toDisabled = _this.company_cf.indexOf(v) <= -1;
          return toDisabled;
        } else {
          return false;
        }
      }
    };

    _this.state = {
      filterStr: (0, _browseStudentFilter.createFilterStr)(_this.defaultFilterState, _this.company_cf),
      filterState: _this.defaultFilterState,
      disabledFilter: disabledFilter,
      loading: false,
      privs: [],
      companyName: ""
    };
    return _this;
  }

  _createClass(BrowseStudent, [{
    key: "onChangeFilter",
    value: function onChangeFilter(filterState) {
      var _this2 = this;

      this.setState(function () {
        return { filterStr: (0, _browseStudentFilter.createFilterStr)(filterState, _this2.company_cf), filterState: filterState };
      });
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      this.loadPriv();
    }
  }, {
    key: "loadPriv",
    value: function loadPriv() {
      var _this3 = this;

      if (this.isRec) {
        this.setState({ loading: true });
        var q = "query {company(ID:" + this.company_id + ") { priviledge name } }";
        (0, _apiHelper.graphql)(q).then(function (res) {
          var privs = res.data.data.company.priviledge;
          _this3.privs = privs;
          _this3.setState(function (prevState) {
            var companyName = res.data.data.company.name;
            if (privs == null) {
              privs = "";
            }
            // console.log("[StudentListing]", privs);
            return {
              loading: false,
              privs: privs,
              companyName: companyName
            };
          });
        });
      }
    }
  }, {
    key: "getQueryParam",
    value: function getQueryParam(_ref) {
      var page = _ref.page,
          offset = _ref.offset,
          filterStr = _ref.filterStr,
          isRec = _ref.isRec,
          company_id = _ref.company_id;

      var toRet = "";
      if (isRec) {
        toRet = "company_id : " + company_id;
      }

      if (filterStr) {
        if (toRet != "") {
          toRet += ", ";
        }
        toRet += "" + filterStr;
      }

      if (page && offset) {
        if (toRet != "") {
          toRet += ", ";
        }
        toRet += ", page: " + page + ", offset:" + offset;
      }

      if (toRet.trim() == "") {
        return "";
      } else {
        return "(" + toRet + ")";
      }
    }
  }, {
    key: "render",
    value: function render() {
      document.setTitle("Browse Student");

      var v = null;
      if (this.state.loading) {
        v = _react2.default.createElement(_loader.Loader, null);
      } else {

        v = _react2.default.createElement(
          "div",
          { className: "container-fluid" },
          _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "div",
              { className: "col-lg-4" },
              _react2.default.createElement(_browseStudentFilter.BrowseStudentFilter, {
                filterStr: this.state.filterStr,
                isRec: this.isRec,
                disabledFilter: this.state.disabledFilter,
                filterState: this.state.filterState,
                defaultFilterState: this.defaultFilterState,
                getQueryParam: this.getQueryParam,
                onChange: this.onChangeFilter })
            ),
            _react2.default.createElement(
              "div",
              { className: "col-lg-8" },
              _react2.default.createElement(_browseStudentList.BrowseStudentList, {
                company_id: this.company_id,
                isRec: this.isRec,
                privs: this.state.privs,
                company_cf: this.company_cf,
                disabledFilter: this.state.disabledFilter,
                filterState: this.state.filterState,
                getQueryParam: this.getQueryParam,
                filterStr: this.state.filterStr })
            )
          )
        );
      }

      return _react2.default.createElement(
        "div",
        { className: "browse-student" },
        v
      );
    }
  }]);

  return BrowseStudent;
}(_react2.default.Component);

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BrowseStudentFilter = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.createFilterStr = createFilterStr;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _apiHelper = __webpack_require__(3);

var _loader = __webpack_require__(8);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function createFilterStr(filterObj, validCf) {
    validCf = Array.isArray(validCf) ? validCf : [];

    var r = "";
    var filterExist = {};
    for (var k in filterObj) {

        var combineVal = "";
        for (var i in filterObj[k]) {
            var v = filterObj[k][i];
            if (v != "" && v != null) {
                combineVal += v + "::";
                filterExist[k] = true;
            }
        }
        // buang :: yg last
        combineVal = combineVal.substr(0, combineVal.length - 2);

        if (combineVal != "") {
            r += " " + k + ":\"" + combineVal + "\",";
        }
    }
    // buang , yg last
    r = r.substr(0, r.length - 1);

    // add required filter (cf, event)
    // even user tak pilih pun kita kena filter jugak
    // sbb kalau tak dia akan dpt view semua
    if (filterExist.cf !== true) {
        var cfFilter = "";
        for (var i in validCf) {
            if (validCf[i] != "") {
                cfFilter += validCf[i] + "::";
            }
        }
        cfFilter = cfFilter.substr(0, cfFilter.length - 2);
        if (cfFilter != "") {
            r += " cf:\"" + cfFilter + "\"";
        }
    }

    console.log("filterExist", filterExist);
    console.log("createFilterStr", filterObj, r);
    return r;
}

var BrowseStudentFilter = exports.BrowseStudentFilter = function (_React$Component) {
    _inherits(BrowseStudentFilter, _React$Component);

    function BrowseStudentFilter(props) {
        _classCallCheck(this, BrowseStudentFilter);

        var _this = _possibleConstructorReturn(this, (BrowseStudentFilter.__proto__ || Object.getPrototypeOf(BrowseStudentFilter)).call(this, props));

        _this.onSearch = _this.onSearch.bind(_this);
        _this.onResetFilter = _this.onResetFilter.bind(_this);

        _this.orderFilter = ["interested_only", "favourited_only", "cf", "country_study", "university", "field_study", "looking_for_position", "working_availability_from", "working_availability_to", "graduation_from", "graduation_to", "interested_job_location", "where_in_malaysia", "skill"];

        _this.customClass = {
            "working_availability_from": "no-border",
            "graduation_from": "no-border"
        };

        _this.state = {
            key: 1,
            loading: false,
            filters: _extends({}, _this.getDateStateObj("working_availability", "from", "Working Availability From"), _this.getDateStateObj("working_availability", "to", "Working Availability To"), _this.getDateStateObj("graduation", "from", "Graduation Date From"), _this.getDateStateObj("graduation", "to", "Graduation Date To")),
            dataset_year: [],
            dataset_month: []
        };

        _this.initFilterState();
        return _this;
    }

    _createClass(BrowseStudentFilter, [{
        key: "initFilterState",
        value: function initFilterState() {
            console.log("defaultFilterState", this.props.defaultFilterState);
            if (this.props.defaultFilterState) {
                this.filterState = JSON.parse(JSON.stringify(this.props.defaultFilterState));
            } else {
                this.filterState = {};
            }
        }
    }, {
        key: "getExtraFilter",
        value: function getExtraFilter() {
            return {
                favourited_only: {
                    isRecOnly: true,
                    title: "",
                    filters: [{
                        val: "1",
                        label: _react2.default.createElement(
                            "div",
                            null,
                            "Show ",
                            _react2.default.createElement(
                                "b",
                                null,
                                "shortlisted students"
                            ),
                            " only",
                            _react2.default.createElement(_tooltip2.default, {
                                bottom: "13px",
                                left: "-88px",
                                width: "200px",
                                alignCenter: true,
                                debug: false,
                                content: _react2.default.createElement("i", { style: { marginLeft: "7px" }, className: "fa fa-question-circle" }),
                                tooltip: _react2.default.createElement(
                                    "div",
                                    { style: { padding: "0px 5px" }, className: "text-left" },
                                    _react2.default.createElement(
                                        "small",
                                        null,
                                        "Click on heart sign to shortlist students"
                                    )
                                )
                            })
                        ),
                        total: null
                    }]
                },
                interested_only: {
                    isRecOnly: true,
                    title: "",
                    filters: [{
                        val: "1",
                        label: _react2.default.createElement(
                            "div",
                            null,
                            "Show ",
                            _react2.default.createElement(
                                "b",
                                null,
                                "interested students"
                            ),
                            " only",
                            _react2.default.createElement(_tooltip2.default, {
                                bottom: "13px",
                                left: "-90px",
                                width: "200px",
                                alignCenter: true,
                                debug: false,
                                content: _react2.default.createElement("i", { style: { marginLeft: "7px" }, className: "fa fa-question-circle" }),
                                tooltip: _react2.default.createElement(
                                    "div",
                                    { style: { padding: "0px 5px" }, className: "text-left" },
                                    _react2.default.createElement(
                                        "small",
                                        null,
                                        "Students that :",
                                        _react2.default.createElement(
                                            "ol",
                                            null,
                                            _react2.default.createElement(
                                                "li",
                                                null,
                                                "Liked your company profile"
                                            ),
                                            _react2.default.createElement(
                                                "li",
                                                null,
                                                "Liked your job posts "
                                            ),
                                            _react2.default.createElement(
                                                "li",
                                                null,
                                                "RSVP'ed for your events "
                                            )
                                        )
                                    )
                                )
                            })
                        ),
                        total: null
                    }]
                }
            };
        }
    }, {
        key: "getQueryParam",
        value: function getQueryParam(page, offset) {
            return this.props.getQueryParam({
                page: page,
                offset: offset,
                filterStr: this.props.filterStr,
                isRec: this.props.isRec,
                company_id: this.props.company_id
            });
        }

        //${this.getQueryParam()}

    }, {
        key: "loadFilter",
        value: function loadFilter() {
            var _this2 = this;

            this.setState({ loading: true });
            var q = "query{\n            browse_student_filter {\n              _key\n              _val\n              _total\n              _val_label\n            } \n          }\n        ";

            (0, _apiHelper.graphql)(q).then(function (res) {
                _this2.loaded++;

                var filter = res.data.data.browse_student_filter;

                var filterObj = {};
                for (var i in filter) {
                    var f = filter[i];
                    var k = f._key;
                    if (!filterObj[k]) {
                        filterObj[k] = {
                            title: _this2.getTitleFromKey(k),
                            filters: []
                        };
                    }
                    filterObj[k].filters.push({
                        val: f._val,
                        label: f._val_label ? f._val_label : f._val,
                        total: f._total
                    });
                }

                _this2.setState(function (prevState) {
                    filterObj = _extends({}, _this2.getExtraFilter(), filterObj, prevState.filters);
                    console.log(filterObj);
                    return { filters: filterObj, loading: _this2.isStillLoading() };
                });
            });
        }
    }, {
        key: "getDefault",
        value: function getDefault(type, key, val) {
            try {
                if (type == "select") {
                    var r = this.props.defaultFilterState[key][0];
                    if (r) {
                        return r;
                    } else {
                        return "";
                    }
                } else if (type == "checkbox") {
                    var _r = this.props.defaultFilterState[key].indexOf(val) >= 0;
                    // console.log(type, key, val, r);
                    if (_r == true) {
                        return true;
                    } else {
                        return false;
                    }
                }
            } catch (err) {
                return null;
            }
        }
    }, {
        key: "addFilter",
        value: function addFilter(key, val) {
            var isSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            console.log("addFilter", key, val);
            if (!this.filterState[key]) {
                this.filterState[key] = [];
            }

            if (isSelect) {
                this.filterState[key] = [val];
            } else {
                if (this.filterState[key].indexOf(val) <= -1) {
                    this.filterState[key].push(val);
                }
            }

            console.log(this.filterState);
        }
    }, {
        key: "removeFilter",
        value: function removeFilter(key, val) {
            var isSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            console.log("removeFilter", key, val);

            if (this.filterState[key]) {
                if (isSelect || this.filterState[key].indexOf(val) >= 0) {
                    this.filterState[key].splice(this.filterState[key].indexOf(val), 1);
                }
            }

            console.log(this.filterState);
        }
    }, {
        key: "componentWillMount",
        value: function componentWillMount() {
            this.toLoad = 3;
            this.loaded = 0;
            this.loadFilter();
            this.loadDataset("month");
            this.loadDataset("year");
        }
    }, {
        key: "isStillLoading",
        value: function isStillLoading() {
            return !(this.loaded >= this.toLoad);
        }
    }, {
        key: "loadDataset",
        value: function loadDataset(k) {
            var _this3 = this;

            var q = "query{ \n              refs(\n                table_name :\"" + k + "\", order_by : \"ID asc\"\n              ) {\n                ID val table_name\n              }\n            }";
            (0, _apiHelper.graphql)(q).then(function (res) {
                _this3.loaded++;
                console.log(k, res.data.data);

                var ret = {};
                ret["dataset_" + k] = res.data.data.refs;
                ret.loading = _this3.isStillLoading();
                _this3.setState(ret);
            });
        }
    }, {
        key: "getTitleFromKey",
        value: function getTitleFromKey(key) {
            return {
                cf: "Career Fair",
                university: "University",
                country_study: "Country Of Study",
                field_study: "Field Of Study",
                interested_job_location: "Preferred Job Location",
                where_in_malaysia: "City/State In Malaysia",
                looking_for_position: "Looking For",
                skill: "Skills"
            }[key];
        }
    }, {
        key: "getDateStateObj",
        value: function getDateStateObj(key, toOrFrom, title) {
            var r = {};
            r[key + "_" + toOrFrom] = {
                title: title,
                isSelect: true,
                children: [{
                    name: key + "_month_" + toOrFrom,
                    dataset: "month"
                }, {
                    name: key + "_year_" + toOrFrom,
                    dataset: "year"
                }]
            };

            return r;
        }
    }, {
        key: "_section",
        value: function _section(body) {
            var extraClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

            return _react2.default.createElement(
                "div",
                { className: "bsf-section " + extraClass },
                body
            );
        }
    }, {
        key: "_title",
        value: function _title(body) {
            return _react2.default.createElement(
                "div",
                { className: "bsf-title" },
                body
            );
        }
    }, {
        key: "header",
        value: function header() {
            var v = _react2.default.createElement(
                "div",
                null,
                _react2.default.createElement(
                    "div",
                    { style: { fontWeight: "bold", fontSize: "15px" } },
                    "Filter"
                )
            );
            return this._section(v);
        }
    }, {
        key: "getSelectOptions",
        value: function getSelectOptions(dataset) {
            var data = this.state["dataset_" + dataset];
            if (data.length <= 0) {
                return null;
            } else {
                var _dataset = [""].concat(_toConsumableArray(data));
                return _dataset.map(function (d, i) {
                    var value = d.val;
                    var label = d.val;
                    return _react2.default.createElement(
                        "option",
                        { key: i, value: value },
                        label
                    );
                });
            }
        }
    }, {
        key: "filterSelect",
        value: function filterSelect(k, keyFilter) {
            var _this4 = this;

            var valItems = [];
            for (var i in keyFilter.children) {
                var ch = keyFilter.children[i];
                var sel = _react2.default.createElement(
                    "select",
                    {
                        className: "select-style-1",
                        style: { marginRight: "10px" },
                        name: ch.name,
                        onChange: function onChange(e) {
                            var name = e.currentTarget.name;
                            var val = e.currentTarget.value;
                            console.log("SELECT HANDLER", name, val);
                            var isSelect = true;
                            if (!val) {
                                _this4.removeFilter(name, val, isSelect);
                            } else {
                                _this4.addFilter(name, val, isSelect);
                            }
                        },

                        value: null,
                        defaultValue: this.getDefault("select", ch.name)
                    },
                    this.getSelectOptions(ch.dataset)
                );

                valItems.push(sel);
            }

            return _react2.default.createElement(
                "div",
                null,
                this._title(keyFilter.title),
                valItems
            );
        }
    }, {
        key: "isFilterDisabled",
        value: function isFilterDisabled(key, val) {
            var toRet = false;
            try {
                if (Array.isArray(this.props.disabledFilter[key])) {
                    if (this.props.disabledFilter[key].indexOf(val) >= 0) {
                        toRet = true;
                    }
                } else {
                    // kalau bukan array kita assume dia function
                    return this.props.disabledFilter[key](val);
                }
            } catch (err) {}

            // console.log("isFilterDisabled", key, val, toRet);
            return toRet;
        }
    }, {
        key: "getTotal",
        value: function getTotal(k, f) {
            if (k == "cf") {
                return "";
            }
            return f.total ? "(" + f.total + ")" : "";
        }
    }, {
        key: "filterCheckbox",
        value: function filterCheckbox(k, keyFilter) {
            var _this5 = this;

            var isStateShowMore = this.state[k + "show_more"] === true;
            var limitShowLess = 5;
            var exceptionShowLess = ["cf"];

            var valItems = [];
            for (var i in keyFilter.filters) {

                var f = keyFilter.filters[i];
                var className = "checkbox-style-1";
                if (this.isFilterDisabled(k, f.val)) {
                    className += " disabled";
                }

                if (exceptionShowLess.indexOf(k) <= -1) {
                    if (!isStateShowMore) {
                        if (i >= limitShowLess) {
                            className += " hidden";
                        }
                    }
                }

                valItems.push(_react2.default.createElement(
                    "div",
                    { className: className },
                    _react2.default.createElement(
                        "label",
                        { className: "cb1-container small green" },
                        f.label,
                        " ",
                        this.getTotal(k, f),
                        _react2.default.createElement("input", {
                            disabled: this.isFilterDisabled(k, f.val),
                            className: "bsf-input",
                            type: "checkbox",
                            "data-key": k,
                            "data-val": f.val,
                            defaultChecked: this.getDefault("checkbox", k, f.val)
                            // checked={}
                            , onChange: function onChange(e) {
                                var key = e.currentTarget.dataset.key;
                                var val = e.currentTarget.dataset.val;
                                var checked = e.currentTarget.checked;
                                console.log("CHECKBOX HANDLER", key, val, checked);

                                if (!checked) {
                                    _this5.removeFilter(key, val);
                                } else {
                                    _this5.addFilter(key, val);
                                }
                            } }),
                        _react2.default.createElement("span", { className: "cb1-checkmark" })
                    )
                ));
            }

            // show more / show less
            var showMoreToggle = null;
            if (exceptionShowLess.indexOf(k) <= -1) {
                if (keyFilter.filters.length > limitShowLess) {
                    showMoreToggle = _react2.default.createElement(
                        "a",
                        { className: "btn-link", onClick: function onClick() {
                                _this5.setState(function (prevState) {
                                    var v = prevState[k + "show_more"] == true ? false : true;
                                    var ret = {};
                                    ret[k + "show_more"] = v;
                                    return ret;
                                });
                            } },
                        _react2.default.createElement("br", null),
                        isStateShowMore ? "Show Less" : "Show More " + keyFilter.title
                    );
                }
            }

            return _react2.default.createElement(
                "div",
                null,
                this._title(keyFilter.title),
                valItems,
                showMoreToggle
            );
        }
    }, {
        key: "filters",
        value: function filters() {
            var toRet = [];

            for (var i in this.orderFilter) {
                var k = this.orderFilter[i];
                var keyFilter = this.state.filters[k];
                if (keyFilter.isRecOnly && !this.props.isRec) {
                    continue;
                }
                var v = null;
                if (keyFilter.isSelect) {
                    v = this.filterSelect(k, keyFilter);
                } else {
                    v = this.filterCheckbox(k, keyFilter);
                }

                v = this._section(v, this.customClass[k]);
                toRet.push(v);
            }
            return toRet;
        }
    }, {
        key: "onSearch",
        value: function onSearch() {
            //  this.loadFilter();
            this.props.onChange(this.filterState);
        }
    }, {
        key: "onResetFilter",
        value: function onResetFilter() {

            this.initFilterState();
            this.props.onChange(this.filterState);
            this.setState(function (prevState) {
                return { key: prevState.key + 1 };
            });
        }
    }, {
        key: "render",
        value: function render() {
            var v = null;
            if (this.state.loading) {
                v = _react2.default.createElement(
                    "div",
                    { style: { fontSize: "14px", textAlign: "center", padding: "20px" } },
                    _react2.default.createElement(_loader.Loader, { text: "Loading Filter" })
                );
            } else {
                var btnAction = _react2.default.createElement(
                    "div",
                    { className: "text-left" },
                    _react2.default.createElement(
                        "button",
                        { style: { marginRight: "10px", paddingRight: "20px", paddingLeft: "20px" },
                            className: "btn btn-success btn-sm", onClick: this.onSearch },
                        "Search"
                    ),
                    _react2.default.createElement(
                        "button",
                        { className: "btn btn-default btn-sm", onClick: this.onResetFilter },
                        "Reset Filter"
                    )
                );
                btnAction = this._section(btnAction);

                v = _react2.default.createElement(
                    "div",
                    { key: this.state.key },
                    this.header(),
                    btnAction,
                    this.filters(),
                    btnAction
                );
            }
            return _react2.default.createElement(
                "div",
                { className: "browse-student-filter" },
                v
            );
        }
    }]);

    return BrowseStudentFilter;
}(_react2.default.Component);

BrowseStudentFilter.propTypes = {
    filterStr: _react.PropTypes.string,
    onChange: _react.PropTypes.func,
    filterState: _react.PropTypes.obj,
    defaultFilterState: _react.PropTypes.obj,
    disabledFilter: _react.PropTypes.obj,
    getQueryParam: _react.PropTypes.func
};

BrowseStudentFilter.defaultProps = {
    filterStr: null,
    filterState: {},
    defaultFilterState: {},
    disabledFilter: {}
};

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BrowseStudentList = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _list = __webpack_require__(11);

var _list2 = _interopRequireDefault(_list);

var _apiHelper = __webpack_require__(3);

var _browseStudentCard = __webpack_require__(616);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BrowseStudentList = exports.BrowseStudentList = function (_React$Component) {
    _inherits(BrowseStudentList, _React$Component);

    function BrowseStudentList(props) {
        _classCallCheck(this, BrowseStudentList);

        var _this = _possibleConstructorReturn(this, (BrowseStudentList.__proto__ || Object.getPrototypeOf(BrowseStudentList)).call(this, props));

        _this.state = {
            key: 1
        };

        _this.offset = 10;
        _this.renderList = _this.renderList.bind(_this);
        _this.loadCount = _this.loadCount.bind(_this);
        _this.getCountFromRes = _this.getCountFromRes.bind(_this);
        _this.getDataFromRes = _this.getDataFromRes.bind(_this);
        _this.loadData = _this.loadData.bind(_this);

        return _this;
    }

    _createClass(BrowseStudentList, [{
        key: "componentWillUpdate",
        value: function componentWillUpdate(oldProps) {
            if (oldProps.filterStr != this.props.filterStr) {
                this.setState(function (prevState) {
                    return { key: prevState.key + 1 };
                });
            }
        }
    }, {
        key: "renderList",
        value: function renderList(d, i) {
            return _react2.default.createElement(
                "div",
                null,
                _react2.default.createElement(_browseStudentCard.BrowseStudentCard, {
                    company_id: this.props.company_id,
                    privs: this.props.privs,
                    isRec: this.props.isRec,
                    data: d,
                    index: i,
                    search: ""
                })
            );
        }
    }, {
        key: "getQueryParam",
        value: function getQueryParam(page, offset) {
            return this.props.getQueryParam({
                page: page,
                offset: offset,
                filterStr: this.props.filterStr,
                isRec: this.props.isRec,
                company_id: this.props.company_id
            });
        }
    }, {
        key: "loadCount",
        value: function loadCount() {
            var query = "query{\n                browse_student_count " + this.getQueryParam() + " \n            }";
            return (0, _apiHelper.graphql)(query);
        }
    }, {
        key: "getCountFromRes",
        value: function getCountFromRes(res) {
            return res.data.data.browse_student_count;
        }
    }, {
        key: "loadData",
        value: function loadData(page, offset) {
            var query = "query{\n            browse_student " + this.getQueryParam(page, offset) + " \n            {\n                student_id\n                student{\n                    student_listing_interested{ID is_interested}\n                    prescreens_for_student_listing{status appointment_time}\n                    university country_study available_month available_year\n                    ID first_name last_name user_email description \n                    doc_links {type label url} field_study{val} looking_for_position{val}\n          }}} ";

            return (0, _apiHelper.graphql)(query);
        }
    }, {
        key: "getDataFromRes",
        value: function getDataFromRes(res) {
            return res.data.data.browse_student;
        }
    }, {
        key: "getFilterDescription",
        value: function getFilterDescription() {
            return null;
            var cfList = [];
            var cfs = this.props.filterState.cf;

            if (!Array.isArray(cfs) || cfs.length <= 0) {
                if (!this.props.isRec) {
                    cfs.push("All Career Fair");
                } else {
                    cfs = this.props.company_cf;
                }
            }

            if (Array.isArray(cfs)) {
                for (var i in cfs) {
                    var title = (0, _authActions.getCfTitle)(cfs[i]);
                    if (title == null) {
                        title = cfs[i];
                    }

                    cfList.push(_react2.default.createElement(
                        "li",
                        null,
                        title
                    ));
                }
            }

            return _react2.default.createElement(
                "div",
                { style: { fontWeight: "10px", textAlign: "center" },
                    className: "text-muted" },
                _react2.default.createElement(
                    "i",
                    null,
                    "Showing students from"
                ),
                _react2.default.createElement(
                    "ul",
                    null,
                    cfList
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            var v = null;
            v = _react2.default.createElement(_list2.default, {
                key: this.state.key,
                type: "list",
                loadCount: this.loadCount,
                getCountFromRes: this.getCountFromRes,
                getDataFromRes: this.getDataFromRes,
                loadData: this.loadData,
                offset: this.offset,
                renderList: this.renderList
            });

            return _react2.default.createElement(
                "div",
                { className: "browse-student-list" },
                _react2.default.createElement(
                    "h1",
                    null,
                    "Student Listing"
                ),
                this.getFilterDescription(),
                v
            );
        }
    }]);

    return BrowseStudentList;
}(_react2.default.Component);

BrowseStudentList.propTypes = {
    filterStr: _react.PropTypes.string,
    filterState: _react.PropTypes.object,
    disabledFilter: _react.PropTypes.object,
    privs: _react.PropTypes.object,
    company_id: _react.PropTypes.number,
    isRec: _react.PropTypes.bool,
    getQueryParam: _react.PropTypes.func
};

BrowseStudentList.defaultProps = {
    filterStr: null,
    filterState: {},
    disabledFilter: {}
};

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BrowseStudentCard = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _generalForm = __webpack_require__(23);

var _generalForm2 = _interopRequireDefault(_generalForm);

var _interested = __webpack_require__(66);

var _buttons = __webpack_require__(15);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _authActions = __webpack_require__(2);

var _list = __webpack_require__(11);

var _time = __webpack_require__(9);

var _users = __webpack_require__(27);

var _scheduledInterview = __webpack_require__(28);

var _userPopup = __webpack_require__(24);

var _appConfig = __webpack_require__(4);

var _dbConfig = __webpack_require__(5);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BrowseStudentCard = exports.BrowseStudentCard = function (_React$Component) {
    _inherits(BrowseStudentCard, _React$Component);

    function BrowseStudentCard(props) {
        _classCallCheck(this, BrowseStudentCard);

        var _this = _possibleConstructorReturn(this, (BrowseStudentCard.__proto__ || Object.getPrototypeOf(BrowseStudentCard)).call(this, props));

        _this.openSIForm = _this.openSIForm.bind(_this);
        _this.toggleShowMore = _this.toggleShowMore.bind(_this);
        _this.state = {
            isShowMore: false
        };
        return _this;
    }

    _createClass(BrowseStudentCard, [{
        key: "openSIForm",
        value: function openSIForm(student_id) {
            (0, _scheduledInterview.openSIFormAnytime)(student_id, this.props.company_id);
        }
    }, {
        key: "toggleShowMore",
        value: function toggleShowMore() {
            this.setState(function (prevState) {
                return {
                    isShowMore: !prevState.isShowMore
                };
            });
        }
    }, {
        key: "notSpecifiedView",
        value: function notSpecifiedView(entity) {
            return _react2.default.createElement(
                "div",
                { className: "text-muted" },
                _react2.default.createElement(
                    "i",
                    null,
                    entity,
                    " Not Specifed"
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var i = this.props.index;
            var d = this.props.data;
            var search = this.props.search;

            var title = (0, _users.createUserTitle)(d.student, search.search_student, true, undefined, { companyPrivs: this.props.privs, company_id: this.props.company_id });

            // create uni view
            var uniView = this.notSpecifiedView("University");
            if (d.student.university != null && d.student.university != "") {
                uniView = _react2.default.createElement(
                    "b",
                    null,
                    d.student.university
                );
            }

            var placeView = null;
            if (d.student.country_study != null && d.student.country_study != "") {
                placeView = _react2.default.createElement(
                    "small",
                    null,
                    ", ",
                    d.student.country_study
                );
            }

            var fieldStudyView = this.notSpecifiedView("Major");
            var field_study = d.student.field_study;
            if (Array.isArray(field_study)) {
                fieldStudyView = field_study.map(function (d, i) {
                    if (i % 2 == 0) {
                        return _react2.default.createElement(
                            "span",
                            null,
                            d.val
                        );
                    } else {
                        return _react2.default.createElement(
                            "span",
                            null,
                            ", ",
                            d.val
                        );
                    }
                });

                if (field_study.length > 0) {
                    fieldStudyView = _react2.default.createElement(
                        "i",
                        null,
                        _react2.default.createElement("br", null),
                        fieldStudyView
                    );
                }
            }

            var labelView = null;
            var lookingForView = [];
            var hasLookFor = Array.isArray(d.student.looking_for_position) && d.student.looking_for_position.length >= 0;
            if (hasLookFor) {
                for (var i in d.student.looking_for_position) {
                    var lfp = d.student.looking_for_position[i];
                    lfp = lfp.val;
                    var labelType = "";
                    switch (lfp) {
                        case _dbConfig.UserEnum.LOOK_FOR_FULL_TIME:
                            labelType = "success";
                            break;
                        case _dbConfig.UserEnum.LOOK_FOR_PART_TIME:
                            labelType = "danger";
                            break;
                        case _dbConfig.UserEnum.LOOK_FOR_INTERN:
                            labelType = "warning";
                            break;
                    }

                    lookingForView.push(_react2.default.createElement(_tooltip2.default, {
                        bottom: "19px",
                        left: "-19px",
                        width: "114px",
                        alignCenter: true,
                        content: _react2.default.createElement(
                            "label",
                            {
                                style: { marginRight: "5px" },
                                className: "label label-" + labelType
                            },
                            lfp
                        ),
                        tooltip: null
                    }));
                }

                labelView = _react2.default.createElement(
                    "div",
                    { style: { fontSize: "16px", margin: "6px 0px" } },
                    lookingForView
                );
            }

            var scheduledView = null;
            if (d.student.prescreens_for_student_listing && d.student.prescreens_for_student_listing.length > 0) {
                // find index yang tak DONE lagi
                var baIndex = 0;
                for (var ba in d.student.prescreens_for_student_listing) {
                    baIndex = ba;
                    var _tempObj = d.student.prescreens_for_student_listing[ba];
                    var _psStatus = _tempObj.status != null ? _tempObj.status : null;
                    if (_psStatus != null && _psStatus != _dbConfig.PrescreenEnum.STATUS_DONE) {
                        break;
                    }
                }

                // find yang tak DONE lagi
                var tempObj = d.student.prescreens_for_student_listing[baIndex];
                var psStatus = tempObj.status != null ? tempObj.status : null;
                scheduledView = _react2.default.createElement(
                    "div",
                    { style: { marginBottom: "8px", marginTop: "0px" } },
                    _react2.default.createElement(
                        "label",
                        { className: "label label-success label-custom" },
                        psStatus == _dbConfig.PrescreenEnum.STATUS_STARTED ? "Session Created on " : "Scheduled Interview on ",
                        _react2.default.createElement(
                            "b",
                            null,
                            _time.Time.getString(tempObj.appointment_time)
                        )
                    )
                );
            }

            var studentInfo = _react2.default.createElement(
                "div",
                { style: { lineHeight: "17px" } },
                scheduledView,
                labelView,
                uniView,
                placeView,
                fieldStudyView
            );

            var styleToggler = { marginLeft: "-12px", marginBottom: "-10px" };
            var description = null;
            if (d.student.description !== null && d.student.description != "") {
                if (!this.state.isShowMore) {
                    description = _react2.default.createElement(
                        "div",
                        { style: styleToggler },
                        _react2.default.createElement(
                            "a",
                            { onClick: this.toggleShowMore, className: "btn btn-link" },
                            "See More About This Student ..."
                        )
                    );
                } else {
                    description = _react2.default.createElement(
                        "p",
                        { style: { marginTop: "7px" } },
                        _react2.default.createElement(
                            "b",
                            null,
                            _react2.default.createElement(
                                "u",
                                null,
                                "About ",
                                d.student.first_name
                            )
                        ),
                        _react2.default.createElement("br", null),
                        _react2.default.createElement(
                            "small",
                            null,
                            d.student.description
                        ),
                        _react2.default.createElement("br", null),
                        _react2.default.createElement(
                            "div",
                            { style: styleToggler },
                            _react2.default.createElement(
                                "a",
                                { onClick: this.toggleShowMore, className: "btn btn-link" },
                                "See Less"
                            )
                        )
                    );
                }
            }

            var details = _react2.default.createElement(
                "div",
                null,
                studentInfo,
                _react2.default.createElement(
                    "div",
                    { style: { marginTop: "8px" } },
                    (0, _userPopup.createUserDocLinkList)(d.student.doc_links, d.student_id, false, false, false, true)
                ),
                description
            );

            // action Start Chat
            var action_disabled = !this.props.isRec;
            var isNavLink = true;

            var canSchedule = _dbConfig.CompanyEnum.hasPriv(this.props.privs, _dbConfig.CompanyEnum.PRIV.SCHEDULE_PRIVATE_SESSION);
            var action_handler = [function () {}, function () {
                console.log("Schedule Call");
                if (canSchedule) {
                    (0, _scheduledInterview.openSIFormAnytime)(d.student_id, _this2.props.company_id);
                } else {
                    // EUR FIX
                    // See Availability
                    layoutActions.errorBlockLoader("Opps.. It seems that you don't have privilege to schedule private session yet");
                }
            }];
            var action_color = ["blue", "success"];
            var action_text = [_react2.default.createElement(
                "small",
                null,
                _react2.default.createElement("i", { className: "fa fa-comment left" }),
                "Start Chat"
            ), _react2.default.createElement(
                "small",
                null,
                _react2.default.createElement("i", { className: "fa fa-video-camera left" }),
                "Schedule Call"
            )];
            var action_to = [_appConfig.RootPath + "/app/student-chat/" + d.student.ID, null];

            // like button
            var likeButton = !this.props.isRec ? null : _react2.default.createElement(_interested.InterestedButton, {
                tooltipObj: {
                    left: "-36px",
                    bottom: "26px",
                    width: "97px",
                    tooltip: "Shortlist student",
                    debug: false
                },
                isBottom: true,
                customUserId: this.props.company_id,
                isModeCount: false,
                isModeAction: true,
                isNonClickable: (0, _authActions.isRoleAdmin)(),
                ID: d.student.student_listing_interested.ID,
                is_interested: d.student.student_listing_interested.is_interested,
                entity: "student_listing",
                entity_id: d.student.ID
            });

            var item = _react2.default.createElement(_list.ProfileListWide, {
                action_disabled: action_disabled,
                rootContent: likeButton,
                is_no_image: true,
                title: title,
                body: details,
                isNavLink: isNavLink,
                action_color: action_color,
                action_to: action_to,
                action_text: action_text,
                action_handler: action_handler,
                type: "student",
                key: i
            });

            return item;
        }
    }]);

    return BrowseStudentCard;
}(_react2.default.Component);

BrowseStudentCard.propTypes = {
    company_id: _react.PropTypes.number,
    data: _react.PropTypes.object,
    index: _react.PropTypes.number,
    isRec: _react.PropTypes.bool,
    search: _react.PropTypes.object,
    privs: _react.PropTypes.object
};

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hallRecruiterEvent = __webpack_require__(618);

var _hallRecruiterEvent2 = _interopRequireDefault(_hallRecruiterEvent);

var _hallRecruiterInterview = __webpack_require__(619);

var _hallRecruiterInterview2 = _interopRequireDefault(_hallRecruiterInterview);

var _hallRecruiterJobPosts = __webpack_require__(620);

var _hallRecruiterJobPosts2 = _interopRequireDefault(_hallRecruiterJobPosts);

var _authActions = __webpack_require__(2);

var _generalHelper = __webpack_require__(126);

var _dashboard = __webpack_require__(184);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/hall.scss");

var HallRecruiterPage = function (_React$Component) {
  _inherits(HallRecruiterPage, _React$Component);

  function HallRecruiterPage(props) {
    _classCallCheck(this, HallRecruiterPage);

    var _this = _possibleConstructorReturn(this, (HallRecruiterPage.__proto__ || Object.getPrototypeOf(HallRecruiterPage)).call(this, props));

    _this.CFDetail = (0, _authActions.getCFObj)();
    _this.title = _this.CFDetail.title;
    _this.authUser = (0, _authActions.getAuthUser)();
    _this.company_id = _this.authUser.rec_company;
    _this.state = {};
    return _this;
  }

  // componentWillMount() {
  //   setBodyFullWidth();
  // }

  // componentWillUnmount() {
  //   unsetBodyFullWidth();
  // }

  _createClass(HallRecruiterPage, [{
    key: "render",
    value: function render() {
      document.setTitle("Recruiter Home Page");
      var v = null;
      v = _react2.default.createElement(
        "div",
        { className: "hall-page" },
        _react2.default.createElement(
          "h2",
          null,
          "Recruiter Home Page"
        ),
        _react2.default.createElement(
          "div",
          { className: "flex-center-start" },
          _react2.default.createElement(_hallRecruiterInterview2.default, null),
          _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(_hallRecruiterJobPosts2.default, { company_id: this.company_id }),
            _react2.default.createElement(_hallRecruiterEvent2.default, { company_id: this.company_id })
          )
        )
      );

      return v;
    }
  }]);

  return HallRecruiterPage;
}(_react2.default.Component);

exports.default = HallRecruiterPage;


HallRecruiterPage.propTypes = {
  isPreEvent: _propTypes2.default.bool
};

HallRecruiterPage.defaultProps = {
  isPreEvent: false
};

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _list = __webpack_require__(11);

var _time = __webpack_require__(9);

var _notification = __webpack_require__(123);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _activityApi = __webpack_require__(67);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _socketClient = __webpack_require__(17);

var _userActions = __webpack_require__(51);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _scheduledInterview = __webpack_require__(28);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _chat = __webpack_require__(42);

var _apiHelper = __webpack_require__(3);

var _hallViewHelper = __webpack_require__(79);

var HallViewHelper = _interopRequireWildcard(_hallViewHelper);

var _toggleTimezone = __webpack_require__(80);

var _toggleTimezone2 = _interopRequireDefault(_toggleTimezone);

var _liveSession = __webpack_require__(97);

var _otherActions = __webpack_require__(30);

var _listBoard = __webpack_require__(185);

var _listBoard2 = _interopRequireDefault(_listBoard);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //Faizul Here

// require("../../../css/border-card.scss");


var EventList = function (_React$Component) {
  _inherits(EventList, _React$Component);

  function EventList(props) {
    _classCallCheck(this, EventList);

    var _this = _possibleConstructorReturn(this, (EventList.__proto__ || Object.getPrototypeOf(EventList)).call(this, props));

    _this.LIMIT_SHOW_LESS = 2;
    _this.authUser = (0, _authActions.getAuthUser)();
    _this.state = {
      time: Date.now()
    };
    return _this;
  }

  _createClass(EventList, [{
    key: "isShowItem",
    value: function isShowItem(i) {
      if (!this.props.isShowMore) {
        if (i >= this.LIMIT_SHOW_LESS) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "populateList",
    value: function populateList() {
      var toRet = [];
      for (var i in this.props.list) {
        var d = this.props.list[i];
        if (!this.isShowItem(i)) {
          continue;
        }
        toRet.push(this.renderItem(d, i));
      }
      return toRet;
    }
  }, {
    key: "renderItem",
    value: function renderItem(d, i) {
      var v = null;
      if (d._type == "cf") {
        var dateStr = _time.Time.getPeriodString(d.start, d.end);
        v = _react2.default.createElement(
          "div",
          { className: "lb-list-item text-left", style: { padding: "10px 15px" } },
          _react2.default.createElement(
            "div",
            { style: { color: "#484848" } },
            _react2.default.createElement(
              "b",
              null,
              d.title
            )
          ),
          _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              "small",
              { className: "text-muted" },
              _react2.default.createElement("i", { className: "fa fa-calendar left" }),
              dateStr
            ),
            _react2.default.createElement("br", null),
            _react2.default.createElement(
              "small",
              { className: "text-muted" },
              _react2.default.createElement("i", { className: "fa fa-clock-o left" }),
              d.time_str_mas ? d.time_str_mas : d.time_str
            )
          )
        );
      } else {
        _react2.default.createElement(
          "div",
          null,
          JSON.stringify(d)
        );
      }

      return v;
    }
  }, {
    key: "render",
    value: function render() {
      var body = null;
      if (this.props.fetching) {
        body = _react2.default.createElement(_loader.Loader, { isCenter: true, size: "2" });
      } else {
        body = this.populateList();
        if (this.props.list.length === 0) {
          body = _react2.default.createElement(
            "div",
            { className: "text-muted", style: { padding: "15px 5px" } },
            _react2.default.createElement(
              "i",
              null,
              "Nothing to show here"
            )
          );
        }
      }

      var btnToggleShowMore = null;
      if (this.props.list.length > this.LIMIT_SHOW_LESS) {
        btnToggleShowMore = _react2.default.createElement(
          "div",
          {
            className: "lb-list-item text-left",
            style: { padding: '5px 20px' } },
          _react2.default.createElement(
            "a",
            { className: "btn-link", onClick: this.props.toggleShowMore },
            _react2.default.createElement(
              "small",
              null,
              _react2.default.createElement(
                "b",
                null,
                this.props.isShowMore ? _react2.default.createElement(
                  "span",
                  null,
                  _react2.default.createElement("i", { className: "fa fa-minus left" }),
                  "Show Less"
                ) : _react2.default.createElement(
                  "span",
                  null,
                  _react2.default.createElement("i", { className: "fa fa-plus left" }),
                  "Show More"
                )
              )
            )
          )
        );
      }

      return _react2.default.createElement(
        "div",
        { style: {
            paddingBottom: "10px 0px",
            borderBottom: "20px solid #f5f5f5"
          } },
        _react2.default.createElement(
          "div",
          { className: "text-left lb-subtitle" },
          _react2.default.createElement("i", { className: "fa left fa-" + this.props.icon }),
          this.props.title,
          " (",
          this.props.list.length,
          ")"
        ),
        body,
        btnToggleShowMore
      );
    }
  }]);

  return EventList;
}(_react2.default.Component);

EventList.propTypes = {};

EventList.defaultProps = {};

// ##################################################################################################################
// ##################################################################################################################
// ##################################################################################################################

var HallRecruiterEvent = function (_React$Component2) {
  _inherits(HallRecruiterEvent, _React$Component2);

  function HallRecruiterEvent(props) {
    _classCallCheck(this, HallRecruiterEvent);

    var _this2 = _possibleConstructorReturn(this, (HallRecruiterEvent.__proto__ || Object.getPrototypeOf(HallRecruiterEvent)).call(this, props));

    _this2.refresh = _this2.refresh.bind(_this2);
    _this2.state = {
      loading: true,
      data: []
    };
    return _this2;
  }

  _createClass(HallRecruiterEvent, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.refresh();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {}
  }, {
    key: "refresh",
    value: function refresh() {
      var _this3 = this;

      this.setState({ loading: true });
      var q = "query{cfs(is_load:1){\n      ID\n      name\n      title\n      time_str\n      time_str_mas\n      start\n      end\n    }}";
      (0, _apiHelper.graphql)(q).then(function (res) {
        _this3.setState({ data: res.data.data.cfs, loading: false });
      });
    }
  }, {
    key: "toggleShowMore",
    value: function toggleShowMore(key) {
      this.setState(function (prevState) {
        var k = "is_show_more_" + key;
        var toRet = {};
        toRet[k] = prevState[k] ? false : true;
        return toRet;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      // 3. list
      var listMyEvent = [];
      var listOtherEvent = [];
      for (var i in this.state.data) {
        var newObj = this.state.data[i];
        newObj._type = "cf";
        listMyEvent.push(newObj);
        listOtherEvent.push(newObj);
      }

      // 5. view
      var list = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(EventList, {
          toggleShowMore: function toggleShowMore() {
            _this4.toggleShowMore("my_events");
          },
          isShowMore: this.state["is_show_more_my_events"],
          title: "My Events",
          icon: "star",
          fetching: this.state.loading,
          list: listMyEvent
        }),
        _react2.default.createElement(EventList, {
          toggleShowMore: function toggleShowMore() {
            _this4.toggleShowMore("other_events");
          },
          isShowMore: this.state["is_show_more_other_events"],
          title: "Other Events",
          icon: "clock-o",
          fetching: this.state.loading,
          list: listOtherEvent
        })
      );

      var v = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_listBoard2.default, {
          action_icon: "plus",
          action_text: "Schedule New Interview",
          action_to: "browse-student",
          icon: "calendar",
          title: _react2.default.createElement(
            "a",
            { onClick: this.refresh, className: "btn-link text-bold" },
            "Events"
          ),
          customList: list
        })
      );

      return _react2.default.createElement(
        "div",
        null,
        v
      );
    }
  }]);

  return HallRecruiterEvent;
}(_react2.default.Component);

HallRecruiterEvent.defaultProps = {};

HallRecruiterEvent.propTypes = {};

// TODO status online
function mapStateToProps(state, ownProps) {
  return _extends({}, ownProps, {
    activity: state.hall.activity,
    online_users: state.user.online_users,
    online_companies: state.user.online_companies
  });
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)({
    loadActivity: hallAction.loadActivity
  }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(HallRecruiterEvent);

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _loader = __webpack_require__(8);

var _graphqlObj2arg = __webpack_require__(12);

var _graphqlObj2arg2 = _interopRequireDefault(_graphqlObj2arg);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _dbConfig = __webpack_require__(5);

var _buttons = __webpack_require__(15);

var _list = __webpack_require__(11);

var _time = __webpack_require__(9);

var _notification = __webpack_require__(123);

var _appConfig = __webpack_require__(4);

var _reactRouterDom = __webpack_require__(7);

var _authActions = __webpack_require__(2);

var _activityApi = __webpack_require__(67);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _socketClient = __webpack_require__(17);

var _userActions = __webpack_require__(51);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _activityActions = __webpack_require__(48);

var activityActions = _interopRequireWildcard(_activityActions);

var _hallActions = __webpack_require__(21);

var hallAction = _interopRequireWildcard(_hallActions);

var _scheduledInterview = __webpack_require__(28);

var _tooltip = __webpack_require__(22);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _chat = __webpack_require__(42);

var _apiHelper = __webpack_require__(3);

var _hallViewHelper = __webpack_require__(79);

var HallViewHelper = _interopRequireWildcard(_hallViewHelper);

var _toggleTimezone = __webpack_require__(80);

var _toggleTimezone2 = _interopRequireDefault(_toggleTimezone);

var _liveSession = __webpack_require__(97);

var _otherActions = __webpack_require__(30);

var _listBoard = __webpack_require__(185);

var _listBoard2 = _interopRequireDefault(_listBoard);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //Faizul Here

// require("../../../css/border-card.scss");

var InterviewList = function (_React$Component) {
  _inherits(InterviewList, _React$Component);

  function InterviewList(props) {
    _classCallCheck(this, InterviewList);

    var _this = _possibleConstructorReturn(this, (InterviewList.__proto__ || Object.getPrototypeOf(InterviewList)).call(this, props));

    _this.updatePrescreen = _this.updatePrescreen.bind(_this);
    _this.confirmUpdatePrescreen = _this.confirmUpdatePrescreen.bind(_this);
    _this.LIMIT_SHOW_LESS = 2;
    _this.authUser = (0, _authActions.getAuthUser)();
    _this.state = {
      time: Date.now()
    };
    _this.interval = null;
    // this.UPDATE_INTERVAL = 30 * 1000;
    return _this;
  }

  _createClass(InterviewList, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // this.interval = setInterval(() => {
      //   this.setState(() => {
      //     return { time: Date.now() };
      //   });
      // }, this.UPDATE_INTERVAL);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // clearInterval(this.interval);
    }
  }, {
    key: "getRemoveButton",
    value: function getRemoveButton(entity, entity_id) {
      var _this2 = this;

      var onClickRemove = function onClickRemove(e) {
        var entity = e.currentTarget.dataset.entity;
        var entity_id = e.currentTarget.dataset.entity_id;

        var ins = {};
        ins[_dbConfig.EntityRemoved.ENTITY] = entity;
        ins[_dbConfig.EntityRemoved.ENTITY_ID] = Number.parseInt(entity_id);
        ins[_dbConfig.EntityRemoved.USER_ID] = _this2.authUser.ID;
        var q = "mutation { add_entity_removed (" + (0, _graphqlObj2arg2.default)(ins, {
          noOuterBraces: true
        }) + ")\n                { ID } }";

        var parentButton = e.currentTarget.parentNode;
        var parentPcBody = parentButton.parentNode;
        var parentCard = parentPcBody.parentNode;
        parentCard.className = parentCard.className += "profile-card-hidden";
        //console.log(parentCard);
        setTimeout(function () {
          parentCard.hidden = true;
        }, 700);
        (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (data) {});
      };

      return _react2.default.createElement(
        "button",
        {
          onClick: function onClick(e) {
            onClickRemove(e);
          },
          "data-entity": entity,
          "data-entity_id": entity_id,
          className: "btn btn-sm btn-default"
        },
        "Remove Card"
      );
    }
  }, {
    key: "startVideoCallPreScreen",
    value: function startVideoCallPreScreen(e) {
      HallViewHelper.startVideoCall(e, {
        type: HallViewHelper.TYPE_PRIVATE_SESSION,
        user_id: this.authUser.ID,
        bindedSuccessHandler: function bindedSuccessHandler() {
          hallAction.storeLoadActivity([hallAction.ActivityType.PRESCREEN]);
        }
      });
    }
  }, {
    key: "updatePrescreen",
    value: function updatePrescreen(id, user_id, status) {
      layoutActions.loadingBlockLoader("Updating Scheduled Call Status..");

      if (typeof id === "string") {
        id = Number.parseInt(id);
      }
      if (typeof user_id === "string") {
        user_id = Number.parseInt(user_id);
      }

      var upd = {};
      upd[_dbConfig.Prescreen.ID] = id;
      upd[_dbConfig.Prescreen.UPDATED_BY] = user_id;
      upd[_dbConfig.Prescreen.STATUS] = status;

      var query = "mutation{edit_prescreen(" + (0, _graphqlObj2arg2.default)(upd, {
        noOuterBraces: true
      }) + ") {ID student_id company_id}}";

      (0, _apiHelper.getAxiosGraphQLQuery)(query).then(function (data) {
        var res = data.data.data.edit_prescreen;
        var toRefresh = [hallAction.ActivityType.PRESCREEN];
        hallAction.storeLoadActivity(toRefresh);
        layoutActions.storeHideBlockLoader();

        var sid = (0, _authActions.isRoleStudent)() ? null : res.student_id;
        var cid = (0, _authActions.isRoleRec)() ? null : res.company_id;
        (0, _socketClient.emitHallActivity)(hallAction.ActivityType.PRESCREEN, sid, cid);
      }, function (err) {
        layoutActions.errorBlockLoader(err);
      });
    }

    // for reject and cancel
    // trigger from card view button

  }, {
    key: "confirmUpdatePrescreen",
    value: function confirmUpdatePrescreen(e, status) {
      var _this3 = this;

      var other_name = e.currentTarget.dataset.other_name;
      var id = e.currentTarget.id;
      var user_id = this.authUser.ID;

      var confirmUpdate = function confirmUpdate() {
        _this3.updatePrescreen(id, user_id, status);
      };

      // create confirm message
      var mes = "";
      if (status === _dbConfig.PrescreenEnum.STATUS_ENDED) {
        mes += "Ending";
      }
      if (status === _dbConfig.PrescreenEnum.STATUS_APPROVED) {
        mes += "Approving";
      }
      if (status === _dbConfig.PrescreenEnum.STATUS_REJECTED) {
        mes += "Rejecting";
      }

      mes += " Scheduled Call with " + other_name + " ?";
      layoutActions.confirmBlockLoader(mes, confirmUpdate);
    }
  }, {
    key: "getTimeStrNew",
    value: function getTimeStrNew(unixtime, showTimeOnly, customText) {
      // debug
      //unixtime = (1552804854865/1000) + 500;
      var className = "time-container";
      if (unixtime === undefined && showTimeOnly === undefined && customText !== undefined) {
        return _react2.default.createElement(
          "div",
          { className: className },
          customText
        );
      }

      var include_timezone = true;
      var timeStr = _time.Time.getString(unixtime, include_timezone);
      timeStr = _react2.default.createElement(
        "span",
        null,
        _react2.default.createElement("i", { className: "fa fa-clock-o left" }),
        timeStr
      );
      if (showTimeOnly) {
        return _react2.default.createElement(
          "div",
          null,
          timeStr
        );
      }

      var passedText = "Waiting For Recruiter";
      var happeningIn = _time.Time.getHapenningIn(unixtime, {
        passedText: (0, _authActions.isRoleStudent)() ? passedText : null,
        startCountMinute: 24 * 60 // 24 hours
      });

      if (happeningIn != null) {
        if (happeningIn != passedText) {
          happeningIn = _react2.default.createElement(
            "span",
            null,
            "Starting In ",
            happeningIn
          );
        }
        happeningIn = _react2.default.createElement(
          "div",
          {
            style: { marginBottom: "-6px", fontWeight: "bold" },
            className: "text-primary"
          },
          happeningIn
        );
        return _react2.default.createElement(
          "span",
          null,
          happeningIn,
          _react2.default.createElement("br", null),
          timeStr
        );
      } else {
        return timeStr;
      }
    }

    // addRemoveButton(body, hasRemove, removeEntity, removeEntityId) {
    //   body = [
    //     this.getRemoveButton(hasRemove, removeEntity, removeEntityId),
    //     body
    //   ]

    //   return body;
    // }

    // return action n subtitle

  }, {
    key: "renderHelper",
    value: function renderHelper(d, obj) {
      var _this4 = this;

      var action = null;
      var rejoinLink = null;
      var status = null;
      var time = null;
      var status_text = null;
      var removeEntity = null;
      var removeEntityId = null;

      var btnJoinVCall = null;
      var btnStartVCall = null;
      var btnRemoveVCall = null;
      var btnEndVCall = null;
      var btnAcceptReject = null;

      if (d.status == _dbConfig.PrescreenEnum.STATUS_REJECTED || d.status == _dbConfig.PrescreenEnum.STATUS_ENDED) {
        time = this.getTimeStrNew(d.appointment_time, true);
      } else {
        time = this.getTimeStrNew(d.appointment_time, false);
      }

      //body = <div style={{ height: "30px" }}></div>;
      var ps_type = d.special_type == null || d.special_type == "" ? _dbConfig.PrescreenEnum.ST_PRE_SCREEN : d.special_type;

      if ((0, _scheduledInterview.isNormalSI)(ps_type)) {
        ps_type = "Scheduled Session";
      }

      switch (d.status) {
        case _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM:
          // New Flow
          if ((0, _authActions.isRoleStudent)()) {
            btnAcceptReject = _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement(
                "div",
                {
                  id: d.ID,
                  "data-other_id": obj.ID,
                  "data-other_name": obj.name,
                  onClick: function onClick(e) {
                    _this4.confirmUpdatePrescreen(e, _dbConfig.PrescreenEnum.STATUS_APPROVED);
                  },
                  className: "btn btn-sm btn-success"
                },
                "Accept Interview"
              ),
              _react2.default.createElement(
                "div",
                {
                  id: d.ID,
                  "data-other_id": obj.ID,
                  "data-other_name": obj.name,
                  onClick: function onClick(e) {
                    _this4.confirmUpdatePrescreen(e, _dbConfig.PrescreenEnum.STATUS_REJECTED);
                  },
                  className: "btn btn-sm btn-danger"
                },
                "Reject Interview"
              )
            );
          }
          if ((0, _authActions.isRoleRec)()) {
            status_text = "Waiting confirmation from student";
            //crtSession = null;
          }
          break;
        case _dbConfig.PrescreenEnum.STATUS_REJECTED:
          status_text = "Interview rejected";
          //crtSession = null;
          removeEntity = _dbConfig.Prescreen.TABLE;
          removeEntityId = d.ID;
          btnRemoveVCall = this.getRemoveButton(removeEntity, removeEntityId);
          break;
        case _dbConfig.PrescreenEnum.STATUS_APPROVED:
          if ((0, _authActions.isRoleRec)()) {
            if (d.is_onsite_call == 1 && (0, _authActions.getCFObj)()[_dbConfig.CFSMeta.HALL_CFG_ONSITE_CALL_USE_GROUP] == 1) {
              btnStartVCall = _react2.default.createElement(
                "div",
                {
                  "data-appointment_time": d.appointment_time,
                  "data-participant_id": obj.ID,
                  "data-id": d.ID,
                  "data-company_id": d.company_id,
                  onClick: function onClick(e) {
                    var eD = e.currentTarget.dataset;
                    (0, _liveSession.openLiveSession)(eD.company_id);
                    (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_CONNECT_WITH_ONSITE, eD);
                  },
                  className: "btn btn-sm btn-success"
                },
                "Connect With On-site"
              );
            } else {
              btnStartVCall = _react2.default.createElement(
                "div",
                {
                  "data-appointment_time": d.appointment_time,
                  "data-participant_id": obj.ID,
                  "data-id": d.ID,
                  onClick: this.startVideoCallPreScreen.bind(this),
                  className: "btn btn-sm btn-success"
                },
                "Start Video Call"
              );
            }
            break;
          }

          status_text = "Accepted";
          break;
        case _dbConfig.PrescreenEnum.STATUS_ENDED:
          // btnRemoveVCall = (
          //   <div className="action btn btn-danger btn-sm" disabled="disabled">
          //     Ended
          //   </div>
          // );

          removeEntity = _dbConfig.Prescreen.TABLE;
          removeEntityId = d.ID;
          btnRemoveVCall = this.getRemoveButton(removeEntity, removeEntityId);

          break;
        case _dbConfig.PrescreenEnum.STATUS_STARTED:
          var isExpiredHandler = function isExpiredHandler() {
            var mes = _react2.default.createElement(
              "div",
              null,
              "Unable to join.",
              _react2.default.createElement("br", null),
              "This 1-1 session has ended."
            );
            layoutActions.errorBlockLoader(mes);
            var updData = {};
            updData[_dbConfig.Prescreen.ID] = d.ID;
            updData[_dbConfig.Prescreen.IS_EXPIRED] = 1;
            updData[_dbConfig.Prescreen.STATUS] = _dbConfig.PrescreenEnum.STATUS_ENDED;
            updData[_dbConfig.Prescreen.UPDATED_BY] = _this4.authUser.ID;
            var q = "mutation {edit_prescreen (" + (0, _graphqlObj2arg2.default)(updData, {
              noOuterBraces: true
            }) + "){ID}}";
            (0, _apiHelper.getAxiosGraphQLQuery)(q).then(function (res) {
              hallAction.storeLoadActivity([hallAction.ActivityType.PRESCREEN]);
            });
          };
          var hasStart = false;
          if (!d.is_expired && d.join_url != "" && d.join_url != null) {
            hasStart = true;
            status_text = "You have start the call";
          } else {
            if (d.is_expired) {
              time = this.getTimeStrNew(d.appointment_time, true);
            } else {
              time = this.getTimeStrNew(d.appointment_time, false);
            }
          }
          if (hasStart && (0, _authActions.isRoleStudent)()) {
            // bukak join url
            btnJoinVCall = _react2.default.createElement(
              "a",
              {
                onClick: function onClick() {
                  return (0, _chat.joinVideoCall)(d.join_url, null, isExpiredHandler, null, d.ID);
                },
                className: "btn btn-sm btn-blue"
              },
              "Join Video Call"
            );

            var openNotificationStart_PS = function openNotificationStart_PS() {
              // block loader to inform the video call has started
              // if time updated is less than bufferMin
              var bufferMin = 2;
              var diff = _time.Time.getUnixTimestampNow() - _time.Time.convertDBTimeToUnix(d.updated_at);
              if (diff <= bufferMin * 60) {
                var popupBody = _react2.default.createElement(
                  "div",
                  null,
                  _react2.default.createElement("br", null),
                  "1-1 session with",
                  _react2.default.createElement("br", null),
                  _react2.default.createElement(
                    "b",
                    null,
                    obj.name
                  ),
                  _react2.default.createElement("br", null),
                  "has started",
                  _react2.default.createElement("br", null),
                  _react2.default.createElement("br", null),
                  btnJoinVCall
                );
                var notiId = "pre-screen-" + d.ID;
                (0, _notification.showNotification)(notiId, popupBody);
              }
            };
            openNotificationStart_PS();
          }
          if (hasStart && (0, _authActions.isRoleRec)()) {
            // bukak start url
            rejoinLink = _react2.default.createElement(
              "div",
              null,
              _react2.default.createElement(
                "a",
                {
                  onClick: function onClick() {
                    return (0, _chat.joinVideoCall)(d.join_url, null, isExpiredHandler, null, d.ID, d.start_url);
                  },
                  className: "action btn-link"
                },
                "Click Here To Rejoin Video Call"
              )
            );

            btnEndVCall = _react2.default.createElement(
              "div",
              {
                id: d.ID,
                "data-other_id": obj.ID,
                "data-other_name": obj.name,
                onClick: function onClick(e) {
                  _this4.confirmUpdatePrescreen(e, _dbConfig.PrescreenEnum.STATUS_ENDED);
                },
                className: "btn btn-sm btn-danger"
              },
              "End Video Call"
            );
          }

          break;
      }

      // finalize action
      action = [btnStartVCall, btnEndVCall, d.status == _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM ? btnAcceptReject : null, d.status == _dbConfig.PrescreenEnum.STATUS_STARTED ? btnJoinVCall : null, d.status == _dbConfig.PrescreenEnum.STATUS_ENDED || _dbConfig.PrescreenEnum.STATUS_REJECTED ? btnRemoveVCall : null];

      // finalize status
      status = status_text == null ? null : _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement("i", { className: "fa fa-info-circle left" }),
        status_text
      );

      return {
        time: time,
        action: action,
        status: status,
        rejoinLink: rejoinLink
      };
    }
  }, {
    key: "populateList",
    value: function populateList() {
      var _this5 = this;

      return this.props.list.map(function (d, i) {
        if (!_this5.props.isShowMore) {
          if (i >= _this5.LIMIT_SHOW_LESS) {
            return null;
          }
        }

        var action = null;
        var obj = d.student;
        if (typeof obj === "undefined") {
          return false;
        }
        obj.name = obj.first_name + " " + obj.last_name;

        // 1. name
        var title = _react2.default.createElement(_buttons.ButtonLink, {
          label: _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              "b",
              null,
              obj.first_name
            ),
            " ",
            obj.last_name
          ),
          onClick: function onClick() {
            return layoutActions.storeUpdateFocusCard(obj.first_name + " " + obj.last_name, _userPopup2.default, { id: obj.ID });
          }
        });

        var objRenderHelper = _this5.renderHelper(d, obj);
        var action = objRenderHelper.action;
        var time = objRenderHelper.time;
        var status = objRenderHelper.status;
        var rejoinLink = objRenderHelper.rejoinLink;

        // var img_position = isRoleRec() ? obj.img_pos : obj.img_position;
        var isOnlineCard = false;
        if ((0, _authActions.isRoleRec)()) {
          isOnlineCard = (0, _userActions.isUserOnline)(_this5.props.online_users, obj.ID);
        }
        if ((0, _authActions.isRoleStudent)()) {
          isOnlineCard = (0, _userActions.isCompanyOnline)(_this5.props.online_companies, obj.ID);
        }

        return _react2.default.createElement(
          "li",
          {
            className: "lb-list-item text-left" },
          _react2.default.createElement(
            "div",
            { className: "flex-start" },
            _react2.default.createElement(
              "div",
              { className: "flex-grow-2", style: { padding: "10px 17px" } },
              _react2.default.createElement(
                "div",
                null,
                title
              ),
              _react2.default.createElement(
                "div",
                { className: "text-muted" },
                _react2.default.createElement(
                  "small",
                  null,
                  time
                )
              ),
              status ? _react2.default.createElement(
                "div",
                { className: "text-muted" },
                _react2.default.createElement(
                  "small",
                  null,
                  status
                )
              ) : null,
              rejoinLink ? _react2.default.createElement(
                "div",
                { className: "text-muted", style: { marginTop: "5px" } },
                _react2.default.createElement(
                  "small",
                  null,
                  rejoinLink
                )
              ) : null
            ),
            _react2.default.createElement(
              "div",
              { className: "flex-grow-1 flex-self-center" },
              action
            )
          )
        );

        // return (<li>
        //   <ProfileListItem
        //     isOnline={isOnlineCard}
        //     className=""
        //     //header={labelType}
        //     title={title}
        //     list_type="card"
        //     img_url={obj.img_url}
        //     custom_width={custom_width}
        //     img_pos={img_position}
        //     img_size={obj.img_size}
        //     img_dimension="50px"
        //     body={body}
        //     badge={badge}
        //     badge_tooltip={badge_tooltip}
        //     subtitle={subtitle}
        //     type="recruiter"
        //     key={i}
        //   />
        //   );
        // </li>
      });
    }
  }, {
    key: "render",
    value: function render() {
      var body = null;
      if (this.props.fetching) {
        body = _react2.default.createElement(_loader.Loader, { isCenter: true, size: "2" });
      } else {
        body = this.populateList();
        if (this.props.list.length === 0) {
          body = _react2.default.createElement(
            "div",
            { className: "text-muted", style: { padding: "15px 5px" } },
            _react2.default.createElement(
              "i",
              null,
              "Nothing to show here"
            )
          );
        }
      }

      var btnToggleShowMore = null;
      if (this.props.list.length > this.LIMIT_SHOW_LESS) {
        btnToggleShowMore = _react2.default.createElement(
          "div",
          {
            className: "lb-list-item text-left",
            style: { padding: '5px 20px' } },
          _react2.default.createElement(
            "a",
            { className: "btn-link", onClick: this.props.toggleShowMore },
            _react2.default.createElement(
              "small",
              null,
              _react2.default.createElement(
                "b",
                null,
                this.props.isShowMore ? _react2.default.createElement(
                  "span",
                  null,
                  _react2.default.createElement("i", { className: "fa fa-minus left" }),
                  "Show Less"
                ) : _react2.default.createElement(
                  "span",
                  null,
                  _react2.default.createElement("i", { className: "fa fa-plus left" }),
                  "Show More"
                )
              )
            )
          )
        );
      }

      return _react2.default.createElement(
        "div",
        { style: {
            paddingBottom: "10px 0px",
            borderBottom: "20px solid #f5f5f5"
          } },
        _react2.default.createElement(
          "div",
          { className: "text-left lb-subtitle" },
          _react2.default.createElement("i", { className: "fa left fa-" + this.props.icon }),
          this.props.title,
          " (",
          this.props.list.length,
          ")"
        ),
        body,
        btnToggleShowMore
      );
    }
  }]);

  return InterviewList;
}(_react2.default.Component);

InterviewList.propTypes = {};

InterviewList.defaultProps = {};

// ##################################################################################################################
// ##################################################################################################################
// ##################################################################################################################

var sec = "act-sec";

var HallRecruiterInterview = function (_React$Component2) {
  _inherits(HallRecruiterInterview, _React$Component2);

  function HallRecruiterInterview(props) {
    _classCallCheck(this, HallRecruiterInterview);

    var _this6 = _possibleConstructorReturn(this, (HallRecruiterInterview.__proto__ || Object.getPrototypeOf(HallRecruiterInterview)).call(this, props));

    _this6.refresh = _this6.refresh.bind(_this6);

    _this6.state = {};
    return _this6;
  }

  _createClass(HallRecruiterInterview, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.props.loadActivity();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {}
  }, {
    key: "refresh",
    value: function refresh() {
      this.props.loadActivity(hallAction.ActivityType.PRESCREEN);
    }
  }, {
    key: "toggleShowMore",
    value: function toggleShowMore(key) {

      this.setState(function (prevState) {
        var k = "is_show_more_" + key;
        var toRet = {};
        toRet[k] = prevState[k] ? false : true;
        return toRet;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this7 = this;

      var d = this.props.activity;

      // 3. list
      var listActive = [];
      var listPending = [];
      var listEnded = [];
      for (var i in d.prescreens) {

        var newObj = d.prescreens[i];
        newObj._type = hallAction.ActivityType.PRESCREEN;

        switch (newObj.status) {
          case _dbConfig.PrescreenEnum.STATUS_WAIT_CONFIRM:
            listPending.push(newObj);
            break;
          case _dbConfig.PrescreenEnum.STATUS_ENDED:
            listEnded.push(newObj);
            break;
          case _dbConfig.PrescreenEnum.STATUS_REJECTED:
            listEnded.push(newObj);
            break;
          default:
            listActive.push(newObj);
            break;
        }
      }

      // 4. fetching
      var fetching = d.fetching.prescreens;

      // 5. view
      var list = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(InterviewList, {
          toggleShowMore: function toggleShowMore() {
            _this7.toggleShowMore("active");
          },
          isShowMore: this.state["is_show_more_active"],
          title: "Active Interviews",
          icon: "star",
          online_users: this.props.online_users,
          online_companies: this.props.online_companies,
          fetching: fetching,
          list: listActive
        }),
        _react2.default.createElement(InterviewList, {
          toggleShowMore: function toggleShowMore() {
            _this7.toggleShowMore("pending");
          },
          isShowMore: this.state["is_show_more_pending"],
          title: "Pending Interviews",
          icon: "clock-o",
          online_users: this.props.online_users,
          online_companies: this.props.online_companies,
          fetching: fetching,
          list: listPending
        }),
        _react2.default.createElement(InterviewList, {
          toggleShowMore: function toggleShowMore() {
            _this7.toggleShowMore("ended");
          },
          isShowMore: this.state["is_show_more_ended"],
          title: "Ended / Rejected Interviews",
          icon: "check-circle",
          online_users: this.props.online_users,
          online_companies: this.props.online_companies,
          fetching: fetching,
          list: listEnded
        })
      );

      var v = _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_listBoard2.default, {
          action_icon: "plus",
          action_text: "Schedule New Interview",
          action_to: "browse-student",
          icon: "users",
          title: _react2.default.createElement(
            "a",
            { onClick: this.refresh, className: "btn-link text-bold" },
            "My Interviews"
          ),
          customList: list
        })
      );

      return _react2.default.createElement(
        "div",
        null,
        v
      );
    }
  }]);

  return HallRecruiterInterview;
}(_react2.default.Component);

HallRecruiterInterview.defaultProps = {};

HallRecruiterInterview.propTypes = {};

// TODO status online
function mapStateToProps(state, ownProps) {
  return _extends({}, ownProps, {
    activity: state.hall.activity,
    online_users: state.user.online_users,
    online_companies: state.user.online_companies
  });
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)({
    loadActivity: hallAction.loadActivity
  }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(HallRecruiterInterview);

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _profileCard = __webpack_require__(13);

var _authActions = __webpack_require__(2);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _apiHelper = __webpack_require__(3);

var _listBoard = __webpack_require__(185);

var _listBoard2 = _interopRequireDefault(_listBoard);

var _vacancyPopup = __webpack_require__(121);

var _vacancyPopup2 = _interopRequireDefault(_vacancyPopup);

var _interested = __webpack_require__(66);

var _card = __webpack_require__(291);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //Faizul Here

var HallRecruiterJobPosts = function (_React$Component) {
  _inherits(HallRecruiterJobPosts, _React$Component);

  function HallRecruiterJobPosts(props) {
    _classCallCheck(this, HallRecruiterJobPosts);

    var _this = _possibleConstructorReturn(this, (HallRecruiterJobPosts.__proto__ || Object.getPrototypeOf(HallRecruiterJobPosts)).call(this, props));

    _this.loadData = _this.loadData.bind(_this);
    _this.renderList = _this.renderList.bind(_this);
    _this.getDataFromRes = _this.getDataFromRes.bind(_this);
    _this.onClickCard = _this.onClickCard.bind(_this);
    _this.authUser = (0, _authActions.getAuthUser)();
    _this.offset = 2;
    return _this;
  }

  _createClass(HallRecruiterJobPosts, [{
    key: "loadData",
    value: function loadData(page, offset) {
      // description
      // company{ img_url, img_position, img_size }
      return (0, _apiHelper.getAxiosGraphQLQuery)("\n        query{vacancies(" + this.getMainQueryParam(page, offset) + "){\n                ID\n                title\n                type\n                location \n                interested{ID is_interested}\n        }}");
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      this.getMainQueryParam = function (page, offset) {
        var company_id_param = '';
        if (_this2.props.company_id) {
          company_id_param = "company_id:" + _this2.props.company_id + ",";
        }
        var paging_param = "";
        if (page && offset) {
          paging_param = "page:" + page + ", offset:" + offset;
        }

        // let cf_param = "";
        // if (this.props.isListAll) {
        //   if (this.props.filterByCf) {
        //     cf_param = `cf:"${getCF()}",`
        //   }
        // }
        // ${cf_param}


        return "\n        " + company_id_param + "\n        user_id:" + _this2.authUser.ID + ",  \n        " + paging_param;
      };

      this.loadCount = function () {
        var query = "query{\n        vacancies_count(" + _this2.getMainQueryParam() + ")\n       }";

        return (0, _apiHelper.getAxiosGraphQLQuery)(query);
      };

      this.getCountFromRes = function (res) {
        return res.data.data.vacancies_count;
      };
    }
  }, {
    key: "onClickCard",
    value: function onClickCard(d) {
      layoutActions.storeUpdateFocusCard(d.title, _vacancyPopup2.default, {
        id: d.ID,
        isRecThisCompany: this.isRecThisCompany()
      });
    }
  }, {
    key: "isRecThisCompany",
    value: function isRecThisCompany() {
      return (0, _authActions.isRoleRec)() && this.authUser.rec_company == this.props.company_id || (0, _authActions.isRoleAdmin)();
    }
  }, {
    key: "renderList",
    value: function renderList(d, i) {
      var _this3 = this;

      // let com = d.company;
      // let img = createImageElement(
      //   com.img_url,
      //   com.img_position,
      //   com.img_size,
      //   "50px",
      //   "",
      //   PCType.COMPANY
      // );

      var isModeCount = this.isRecThisCompany();
      var isModeAction = (0, _authActions.isRoleStudent)();

      var interestedBtn = _react2.default.createElement(_interested.InterestedButton, {
        isModeCount: isModeCount,
        isModeAction: isModeAction,
        ID: d.interested.ID,
        is_interested: d.interested.is_interested,
        entity: "vacancies",
        entity_id: d.ID,
        tooltipObj: {
          arrowPosition: "right",
          left: "-110px",
          bottom: "-2px",
          width: "97px",
          tooltip: "Show Interest",
          debug: false
        }
      });

      var body = _react2.default.createElement(
        "div",
        { className: "vacancy-card-recruiter" },
        interestedBtn,
        _react2.default.createElement(
          "div",
          {
            className: "title btn-link",
            onClick: function onClick() {
              _this3.onClickCard(d);
            }
          },
          d.title
        ),
        _react2.default.createElement(
          "div",
          { className: "location" },
          d.location
        ),
        _react2.default.createElement(
          "div",
          { className: "type" },
          d.type ? d.type + " Job" : null
        )
      );

      return body;
    }
  }, {
    key: "getDataFromRes",
    value: function getDataFromRes(res) {
      return res.data.data.vacancies;
    }
  }, {
    key: "render",
    value: function render() {

      // kalau list semua
      var countParam = {
        loadCount: this.loadCount,
        getCountFromRes: this.getCountFromRes
      };

      return _react2.default.createElement(_listBoard2.default, _extends({}, countParam, {
        // hideLoadMore={this.props.limitLoad ? true : false}
        action_icon: "plus",
        action_text: "Add New Job Post",
        action_to: "manage-company/" + this.props.company_id + "/vacancy",
        title: "Job Posts",
        icon: "suitcase",
        appendText: "Load More",
        loadData: this.loadData,
        getDataFromRes: this.getDataFromRes,
        renderList: this.renderList,
        offset: this.offset

        // isHidePagingTop={this.props.isListAll ? false : true}
        // type="list"
        // listClass={this.props.listClass}
        // pageClass="text-right"
        // getDataFromRes={this.getDataFromRes}
        // loadData={this.loadData}
        // hideLoadMore={this.props.limitLoad ? true : false}
        // offset={this.props.limitLoad ? this.props.limitLoad : this.props.offset}
        // renderList={this.renderList}
      }));
    }
  }]);

  return HallRecruiterJobPosts;
}(_react2.default.Component);

exports.default = HallRecruiterJobPosts;

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _appConfig = __webpack_require__(4);

var _authActions = __webpack_require__(2);

var _buttons = __webpack_require__(15);

var _profileCard = __webpack_require__(13);

var _reactRouterDom = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HeaderLayout = function (_React$Component) {
  _inherits(HeaderLayout, _React$Component);

  function HeaderLayout(props) {
    _classCallCheck(this, HeaderLayout);

    return _possibleConstructorReturn(this, (HeaderLayout.__proto__ || Object.getPrototypeOf(HeaderLayout)).call(this, props));
  }

  _createClass(HeaderLayout, [{
    key: "render",
    value: function render() {
      var authUser = (0, _authActions.getAuthUser)();
      var userIcon = (0, _authActions.isAuthorized)() ? _react2.default.createElement(
        _reactRouterDom.NavLink,
        { to: _appConfig.RootPath + "/app/edit-profile/profile" },
        (0, _profileCard.createImageElement)(authUser.img_url, authUser.img_pos, authUser.img_size, "40px", "with-border hover-shadow")
      ) : null;

      return _react2.default.createElement(
        "header",
        { className: _appConfig.HeaderClass },
        _react2.default.createElement(
          "div",
          { className: "img" },
          _react2.default.createElement(
            "a",
            { target: "_blank", href: _appConfig.AppConfig.HeaderIconUrl },
            _react2.default.createElement("img", { src: _appConfig.ImgConfig.AppIcon })
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "title" },
          _react2.default.createElement(
            "b",
            null,
            (0, _authActions.getCFObj)().title
          ),
          _react2.default.createElement("br", null),
          _react2.default.createElement(
            "small",
            null,
            _appConfig.AppConfig.Desc
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "menu" },
          this.props.menuList
        ),
        _react2.default.createElement(
          "div",
          { className: "menu-small" },
          _react2.default.createElement(_buttons.ButtonIcon, { size: "lg", icon: "bars" }),
          this.props.menuList
        ),
        userIcon
      );
    }
  }]);

  return HeaderLayout;
}(_react2.default.Component);

exports.default = HeaderLayout;

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _appConfig = __webpack_require__(4);

var _buttons = __webpack_require__(15);

var _authActions = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import {openNewTab} from '../lib/util';

// require("../css/footer.scss");

var FixedImg = function (_React$Component) {
  _inherits(FixedImg, _React$Component);

  function FixedImg() {
    _classCallCheck(this, FixedImg);

    return _possibleConstructorReturn(this, (FixedImg.__proto__ || Object.getPrototypeOf(FixedImg)).apply(this, arguments));
  }

  _createClass(FixedImg, [{
    key: "render",
    value: function render() {
      var style = {
        backgroundImage: "url(" + this.props.url + ")",
        width: this.props.width + "px",
        height: this.props.height + "px",
        backgroundSize: "cover",
        margin: "auto"
      };

      return _react2.default.createElement("div", { style: style });
    }
  }]);

  return FixedImg;
}(_react2.default.Component);

var Footer = function (_React$Component2) {
  _inherits(Footer, _React$Component2);

  function Footer(props) {
    _classCallCheck(this, Footer);

    return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).call(this, props));
  }

  _createClass(Footer, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var OrgConfig = (0, _authActions.getCFOrg)();
      // if (typeof OrgConfig !== "object") {
      //   OrgConfig = { Organizer: [], Collaborator: [] };
      // }

      // var list = [
      //   {
      //     title: "ORGANIZED BY",
      //     items: OrgConfig.Organizer
      //   },
      //   {
      //     title: "IN COLLABORATION WITH",
      //     items: OrgConfig.Collaborator
      //   }
      // ];

      var list = OrgConfig.map(function (d, i) {
        return {
          title: d.label.toUpperCase(),
          items: d.data
        };
      });

      this.orgs = list.map(function (d, i) {
        var items = d.items.map(function (d, i) {
          return _react2.default.createElement(
            "li",
            { key: i },
            _react2.default.createElement(
              "a",
              { style: { color: "white" }, target: "_blank", href: d.url },
              d.name,
              " ",
              d.shortname ? "(" + d.shortname + ")" : null
            )
          );
        });

        return _react2.default.createElement(
          "div",
          { key: i, className: "orgs col-sm-4" },
          items.length > 0 ? _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              "h3",
              { className: "title" },
              d.title
            ),
            _react2.default.createElement(
              "ul",
              null,
              items
            )
          ) : null
        );
      });

      var date = new Date();
      var year = date.getYear() + 1900;
      var btn_size = "25px";
      this.brand = _react2.default.createElement(
        "div",
        { className: "brand" },
        _react2.default.createElement(
          "h3",
          { className: "title" },
          "SEEDS JOB FAIR",
          _react2.default.createElement("br", null),
          "powered by"
        ),
        _react2.default.createElement(FixedImg, {
          url: _appConfig.ImgConfig.IsIconInverse,
          height: "66",
          width: "145"
        }),
        _react2.default.createElement(
          "div",
          { className: "social" },
          _react2.default.createElement(_buttons.ButtonIcon, {
            href: _appConfig.AppConfig.FbUrl,
            target: "_blank",
            theme: "dark",
            icon: "facebook-square",
            size: btn_size
          }),
          _react2.default.createElement(_buttons.ButtonIcon, {
            href: _appConfig.AppConfig.WwwUrl,
            target: "_blank",
            theme: "dark",
            icon: "globe",
            size: btn_size
          })
        ),
        _react2.default.createElement(
          "div",
          { className: "copyright" },
          "\xA9 ",
          year,
          ", Innovaseeds Solutions",
          _react2.default.createElement("br", null),
          "All Rights Reserved"
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "footer",
        { className: _appConfig.FooterClass },
        _react2.default.createElement(
          "div",
          { className: "container-fluid" },
          this.orgs,
          _react2.default.createElement(
            "div",
            { className: "col-sm-4" },
            this.brand
          )
        )
      );
    }
  }]);

  return Footer;
}(_react2.default.Component);

exports.default = Footer;

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(7);

var _profileCard = __webpack_require__(13);

var _profileCard2 = _interopRequireDefault(_profileCard);

var _authActions = __webpack_require__(2);

var _util = __webpack_require__(45);

var _profileCardImg = __webpack_require__(90);

var _appConfig = __webpack_require__(4);

var _store = __webpack_require__(34);

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LeftBarLayout = function (_React$Component) {
    _inherits(LeftBarLayout, _React$Component);

    function LeftBarLayout(props) {
        _classCallCheck(this, LeftBarLayout);

        var _this = _possibleConstructorReturn(this, (LeftBarLayout.__proto__ || Object.getPrototypeOf(LeftBarLayout)).call(this, props));

        console.log("root path");
        console.log(_appConfig.RootPath);
        _this.state = {
            isMdWin: (0, _util.getWindowWidth)() <= 680
        };
        return _this;
    }

    _createClass(LeftBarLayout, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _this2 = this;

            window.addEventListener('resize', function (event) {
                if ((0, _util.getWindowWidth)() <= 680) {
                    if (!_this2.state.isMdWin) {
                        _this2.setState(function () {
                            return { isMdWin: true };
                        });
                    }
                } else {
                    if (_this2.state.isMdWin) {
                        _this2.setState(function () {
                            return { isMdWin: false };
                        });
                    }
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            console.log("Render Left Bar");
            var isAuth = (0, _authActions.isAuthorized)();
            var authUser = Object.assign({}, (0, _authActions.getAuthUser)());
            if (this.state.isMdWin && typeof authUser["img_pos"] !== "undefined" && authUser["img_pos"] !== null) {
                if (authUser["img_pos"].indexOf("px") > -1) {
                    authUser["img_pos"] = (0, _profileCardImg.getPositionStr)(25, authUser["img_pos"], "px", true);
                }
            }
            //<br></br>
            //<NavLink to={`${RootPath}/app/edit-profile/profile`} >Edit Profile</NavLink>
            var profile = "";
            if (isAuth) {
                var pcBody = _react2.default.createElement(
                    'small',
                    null,
                    _react2.default.createElement(
                        'a',
                        null,
                        'Edit Profile'
                    )
                );

                //var pcBody = <small>
                //    <i className="text-muted">{authUser.role.capitalize()}</i>
                //</small>;

                profile = _react2.default.createElement(
                    'div',
                    { className: 'left_bar_profile' },
                    _react2.default.createElement(
                        _reactRouterDom.NavLink,
                        { to: _appConfig.RootPath + '/app/edit-profile/profile' },
                        _react2.default.createElement(_profileCard2.default, { type: 'student', theme: 'dark',
                            title: authUser.first_name, subtitle: authUser.last_name,
                            img_url: authUser.img_url, img_pos: authUser.img_pos, img_size: authUser.img_size,
                            body: pcBody })
                    )
                );
            } else {
                profile = _react2.default.createElement('br', null);
            }

            var nav = _react2.default.createElement(
                'div',
                { className: 'left_bar_nav' },
                this.props.menuList
            );

            return _react2.default.createElement(
                'left_bar',
                null,
                profile,
                nav
            );
        }
    }]);

    return LeftBarLayout;
}(_react2.default.Component);

exports.default = LeftBarLayout;

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _appConfig = __webpack_require__(4);

var _sponsorList = __webpack_require__(112);

var _sponsorList2 = _interopRequireDefault(_sponsorList);

var _dashboard = __webpack_require__(184);

var _authActions = __webpack_require__(2);

var _otherActions = __webpack_require__(30);

var _dbConfig = __webpack_require__(5);

var _adsConfig = __webpack_require__(625);

var _qsPopup = __webpack_require__(304);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               import FacebookProvider, { Page, ShareButton } from 'react-facebook';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               <FacebookProvider appId={AppConfig.FbAppId}>
age href="https://www.facebook.com/innovaseedssolutions" tabs="timeline" />
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               </FacebookProvider>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */

// require("../css/ads.scss");

var RightBarLayout = function (_React$Component) {
    _inherits(RightBarLayout, _React$Component);

    function RightBarLayout(props) {
        _classCallCheck(this, RightBarLayout);

        var _this = _possibleConstructorReturn(this, (RightBarLayout.__proto__ || Object.getPrototypeOf(RightBarLayout)).call(this, props));

        _this.CF = (0, _authActions.getCF)();
        _this.CFObj = (0, _authActions.getCFObj)();
        return _this;
    }

    _createClass(RightBarLayout, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.dashboard = this.getDashboard();
            this.sponsor = this.getSponsor();
            this.event_page = this.getEventPage();
            this.ads = this.getAds();
            this.qs_popup = this.getQsPopup();
        }
    }, {
        key: 'getQsPopup',
        value: function getQsPopup() {
            if (!(0, _authActions.isRoleRec)() && !(0, _authActions.isRoleStudent)()) {
                return null;
            }
            //            <h4>Question Of The Day</h4>

            return _react2.default.createElement(
                'div',
                { className: 'right-bar-item' },
                _react2.default.createElement(
                    'div',
                    { className: 'body' },
                    _react2.default.createElement(_qsPopup.QsPopupView, null)
                )
            );
        }
    }, {
        key: 'getEventPage',
        value: function getEventPage() {
            if (this.CFObj.page_banner !== null && this.CFObj.page_banner !== "null" && this.CFObj.page_url !== null && this.CFObj.page_url !== "null") {
                var imgUrl = '' + _appConfig.ImageUrl + this.CFObj.page_banner;
                return _react2.default.createElement(
                    'div',
                    { className: 'right-bar-item' },
                    _react2.default.createElement(
                        'div',
                        { className: 'body' },
                        _react2.default.createElement(
                            'a',
                            { onClick: function onClick() {
                                    (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_EVENT_PAGE, "");
                                }, target: 'blank', href: this.CFObj.page_url },
                            _react2.default.createElement('img', { className: 'img img-responsive', src: imgUrl }),
                            _react2.default.createElement(
                                'a',
                                { className: 'btn btn-block btn-blue' },
                                _react2.default.createElement('i', { className: 'fa fa-facebook left' }),
                                'Visit Event Page'
                            )
                        )
                    )
                );
            } else {
                return null;
            }
        }
    }, {
        key: 'getAds',
        value: function getAds() {
            var v = [];

            /*
                background: linear-gradient( rgba(0, 0, 0, 0.65), rgba(0, 0, 0, 0.4) ), url('https://seedsjobfairapp.com/career-fair/image/decoration/talent_corp.jpg');
                    background-position-x: 0%, 0%;
                    background-position-y: 0%, 0%;
                    background-size: auto auto, auto auto;
                background-size: cover;
                background-position: center center;
            */

            for (var id in _adsConfig.Ads) {
                var ads = _adsConfig.Ads[id];
                var style = {
                    background: 'linear-gradient(rgba(0, 0, 0, 0.80),rgba(0, 0, 0, 0.45)), url(\'' + ads.image + '\')',
                    //backgroundImage: `url('${ads.image}')`,
                    backgroundSize: "cover",
                    backgroundPosition: "center center"
                };

                v.push(_react2.default.createElement(
                    'div',
                    { className: 'right-bar-item' },
                    _react2.default.createElement(
                        'div',
                        { className: 'body' },
                        _react2.default.createElement(
                            'a',
                            { id: id, onClick: function onClick(ev) {
                                    var adsId = ev.currentTarget.id;
                                    (0, _otherActions.addLog)(_dbConfig.LogEnum.EVENT_CLICK_ADS, adsId);
                                },
                                target: 'blank',
                                href: ads.url },
                            _react2.default.createElement(
                                'div',
                                { style: style, className: 'huhu img img-responsive' },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'huhu-text' },
                                    ads.label,
                                    _react2.default.createElement('br', null),
                                    _react2.default.createElement(
                                        'small',
                                        null,
                                        ads.sublabel
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                'a',
                                { className: 'btn btn-block btn-blue' },
                                ads.action
                            )
                        )
                    )
                ));
            }

            return v;
        }
    }, {
        key: 'getSponsor',
        value: function getSponsor() {
            return _react2.default.createElement(
                'div',
                { className: 'right-bar-item' },
                _react2.default.createElement(
                    'h4',
                    null,
                    'Sponsors'
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'body' },
                    _react2.default.createElement(_sponsorList2.default, { type: '',
                        title: false,
                        part_com: false,
                        sponsor_size: 'sm' })
                )
            );
        }
    }, {
        key: 'getDashboard',
        value: function getDashboard() {
            var role = (0, _authActions.getAuthUser)().role;
            var cf = (0, _authActions.getCF)();
            // EUR FIX
            if (!(0, _authActions.isRoleAdmin)() && !(0, _authActions.isRoleOrganizer)()) {
                return _react2.default.createElement(
                    'div',
                    { className: 'right-bar-item' },
                    _react2.default.createElement(
                        'h4',
                        null,
                        'Announcements'
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'body' },
                        _react2.default.createElement(_dashboard.DashboardFeed, _defineProperty({ type: 'right-bar',
                            cf: cf
                        }, 'type', role))
                    )
                );
            }

            return null;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'right_bar',
                { id: 'right_bar' },
                this.dashboard,
                this.qs_popup,
                this.sponsor,
                this.ads,
                this.event_page
            );
        }
    }]);

    return RightBarLayout;
}(_react2.default.Component);

exports.default = RightBarLayout;

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(4),
    ImageUrl = _require.ImageUrl;

var Ads = {
    // "talent_corp_next": {
    //     label: "Not Sure What To Pursue?",
    //     sublabel: "Discover Your Passion Here",
    //     action: "Talent Corp's NEXT",
    //     url: "https://www.talentcorp.com.my/findmynext",
    //     image: `${ImageUrl}/talent_corp.jpg`
    // },
    "zoom_download": {
        label: "Prepare Early!",
        sublabel: "Zoom Video Conference is required to join video call later",
        action: "Download Zoom Now",
        url: "https://zoom.us/download",
        image: ImageUrl + "/online_meeting.jpg"
    }
};

// const Ads = {
//     "talent_corp_next": {
//         label: "Not Sure What To Pursue?",
//         sublabel : "Discover Your Passion Here",
//         action: "Talent Corp's NEXT",
//         url: "https://www.talentcorp.com.my/findmynext",
//         image: `${ImageUrl}/ads/talent_corp.jpg?ver=1`
//     },
//     "zoom_download": {
//         label: "Prepare Early!",
//         sublabel : "Zoom Video Conference is required to join video call later",
//         action: "Download Zoom Now",
//         url: "https://zoom.us/download",
//         image: `${ImageUrl}/ads/online_meeting.jpg?ver=1`
//     }
// };

module.exports = {
    Ads: Ads
};

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _store = __webpack_require__(34);

var _buttons = __webpack_require__(15);

var _loader = __webpack_require__(8);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = __webpack_require__(7);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// require("../css/block-loader.scss");

//state is from redux reducer
// with multiple objects
function mapStateToProps(state, ownProps) {
    return {
        redux: state.layout.blockLoader
    };
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)({
        hideBlockLoader: layoutActions.hideBlockLoader
    }, dispatch);
}

var BlockLoader = function (_React$Component) {
    _inherits(BlockLoader, _React$Component);

    function BlockLoader(props) {
        _classCallCheck(this, BlockLoader);

        var _this = _possibleConstructorReturn(this, (BlockLoader.__proto__ || Object.getPrototypeOf(BlockLoader)).call(this, props));

        _this.lastUpdate = null;
        return _this;
    }

    _createClass(BlockLoader, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            //console.log("componentWillMount", "focus");
        }
    }, {
        key: 'render',
        value: function render() {

            var state = this.props.redux;

            var display = state.show == true ? "flex" : "none";
            var style = {
                display: display
            };

            var view = null;
            if (state.loading !== null) {
                view = _react2.default.createElement(_loader.Loader, { size: '3', text: state.loading });
            } else if (state.success !== null) {
                view = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'h4',
                        { className: 'text-success' },
                        'Success!'
                    ),
                    state.success
                );
            } else if (state.error !== null) {
                view = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'h4',
                        { className: 'text-danger' },
                        'Request Failed'
                    ),
                    state.error
                );
            } else if (state.confirm !== null) {
                view = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'h4',
                        { className: 'text-primary' },
                        state.confirm.title
                    )
                );
            } else if (state.custom !== null) {
                var title = typeof state.custom.title !== "string" ? state.custom.title : _react2.default.createElement(
                    'h4',
                    { className: 'text-primary' },
                    state.custom.title
                );

                view = _react2.default.createElement(
                    'div',
                    null,
                    title
                );
            }

            var action = null;

            if (state.success !== null || state.error !== null) {
                var close = _react2.default.createElement(
                    'div',
                    { onClick: function onClick() {
                            return _store.store.dispatch(layoutActions.hideBlockLoader());
                        },
                        className: 'btn btn-sm btn-primary' },
                    'CLOSE'
                );
                action = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement('br', null),
                    close
                );
            } else if (state.confirm !== null) {
                action = _react2.default.createElement(
                    'div',
                    { className: 'btn-group btn-group-justified' },
                    _react2.default.createElement(
                        'div',
                        { onClick: state.confirm.yesHandler,
                            className: 'btn btn-sm btn-blue' },
                        'YES'
                    ),
                    _react2.default.createElement(
                        'div',
                        { onClick: function onClick() {
                                _store.store.dispatch(layoutActions.hideBlockLoader());
                                if (state.confirm.noHandler) {
                                    state.confirm.noHandler();
                                }
                            },
                            className: 'btn btn-sm btn-default' },
                        'NO'
                    )
                );
            } else if (state.custom !== null) {
                var closeLink = null;
                if (state.custom.noClose == false) {
                    closeLink = _react2.default.createElement(
                        'div',
                        { style: { marginTop: "5px" } },
                        _react2.default.createElement(
                            'small',
                            null,
                            _react2.default.createElement(
                                'a',
                                { onClick: function onClick() {
                                        return _store.store.dispatch(layoutActions.hideBlockLoader());
                                    } },
                                'CLOSE'
                            )
                        )
                    );
                }

                if (state.custom.customView !== null) {
                    action = _react2.default.createElement(
                        'div',
                        null,
                        state.custom.customView,
                        _react2.default.createElement('br', null),
                        closeLink
                    );
                } else {
                    action = _react2.default.createElement(
                        'div',
                        null,
                        state.custom.href != null ? // if href need to make navlink
                        _react2.default.createElement(
                            _reactRouterDom.NavLink,
                            { to: state.custom.href, onClick: function onClick() {
                                    _store.store.dispatch(layoutActions.hideBlockLoader());
                                },
                                className: 'btn btn-sm btn-blue' },
                            state.custom.actionText
                        ) : state.custom.actionHandler == null ? null : _react2.default.createElement(
                            'a',
                            { onClick: function onClick() {
                                    // if action handler need to make a onClick
                                    if (state.custom.actionHandler) {
                                        state.custom.actionHandler();
                                    }
                                    _store.store.dispatch(layoutActions.hideBlockLoader());
                                },
                                className: 'btn btn-sm btn-blue' },
                            state.custom.actionText
                        ),
                        _react2.default.createElement('br', null),
                        closeLink
                    );
                }
            }

            //confirm

            var prefix = "bl-";

            var className = prefix + 'content';

            // add large class to noClose
            try {
                if (state.custom.noClose === true) {
                    if (state.custom.small !== true) {
                        className += " large";
                    }
                }
            } catch (err) {}

            return _react2.default.createElement(
                'div',
                { style: style, id: 'block-loader' },
                _react2.default.createElement(
                    'div',
                    { className: className },
                    _react2.default.createElement(
                        'div',
                        { className: '' },
                        view
                    ),
                    action
                ),
                _react2.default.createElement('div', { className: prefix + 'background' })
            );
        }
    }]);

    return BlockLoader;
}(_react2.default.Component);

BlockLoader.propTypes = {
    loading: _propTypes2.default.string,
    success: _propTypes2.default.string,
    error: _propTypes2.default.string,
    confirm: _propTypes2.default.obj, // {title, yesHandler, noHandler}
    custom: _propTypes2.default.obj, // {title,actionText, actionHandler,href, noClose}
    show: _propTypes2.default.bool
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BlockLoader);

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _manageUserProfile = __webpack_require__(183);

var _manageUserProfile2 = _interopRequireDefault(_manageUserProfile);

var _layoutActions = __webpack_require__(6);

var layoutActions = _interopRequireWildcard(_layoutActions);

var _userPopup = __webpack_require__(24);

var _userPopup2 = _interopRequireDefault(_userPopup);

var _focusCard = __webpack_require__(305);

var _focusCard2 = _interopRequireDefault(_focusCard);

var _uploaderVideo = __webpack_require__(299);

var _uploaderVideo2 = _interopRequireDefault(_uploaderVideo);

var _company = __webpack_require__(98);

var _company2 = _interopRequireDefault(_company);

var _dbConfig = __webpack_require__(5);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import { emitProgess, socketOn } from "../socket/socket-client";
// import { BOTH } from "../../config/socket-config";

var TestLayout = function (_React$Component) {
  _inherits(TestLayout, _React$Component);

  function TestLayout(props) {
    _classCallCheck(this, TestLayout);

    return _possibleConstructorReturn(this, (TestLayout.__proto__ || Object.getPrototypeOf(TestLayout)).call(this, props));
  }

  _createClass(TestLayout, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      // setInterval(() => {
      //   emitProgess({ stuffFromClient: true });
      // }, 2000);

      // socketOn(BOTH.PROGRESS, data => {
      //   console.log("from socket server", data);
      // });
    }
  }, {
    key: "render",
    value: function render() {
      document.setTitle("Test");

      // let authUser = {
      //   ID: 888,
      //   role: "student"
      // };
      // layoutActions.storeUpdateFocusCard("My Profile", UserPopup, {
      //   id: authUser.ID,
      //   role: authUser.role
      // });

      return _react2.default.createElement(
        "div",
        { style: { padding: "10px", background: "white" } },
        _react2.default.createElement(_uploaderVideo2.default, {
          entity: "user",
          entity_id: 137,
          meta_key: _dbConfig.VideoEnum.RESUME
        })
      );
    }
  }]);

  return TestLayout;
}(_react2.default.Component);

exports.default = TestLayout;

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(25);

var _redux = __webpack_require__(26);

var _reactRouterDom = __webpack_require__(7);

var _appConfig = __webpack_require__(4);

var _layoutActions = __webpack_require__(6);

var layoutAction = _interopRequireWildcard(_layoutActions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//state is from redux reducer
// with multiple objects
function mapStateToProps(state, ownProps) {
    return {
        redux: state.auth
        //redirect : state.layout.redirect
    };
}

var AuthorizedRoute = function (_React$Component) {
    _inherits(AuthorizedRoute, _React$Component);

    function AuthorizedRoute() {
        _classCallCheck(this, AuthorizedRoute);

        return _possibleConstructorReturn(this, (AuthorizedRoute.__proto__ || Object.getPrototypeOf(AuthorizedRoute)).apply(this, arguments));
    }

    _createClass(AuthorizedRoute, [{
        key: 'render',
        value: function render() {
            //  console.log("from AuthorizedRoute");
            //  console.log(this.props.location);
            //  console.log("this.props.location.state",this.props.location.state);

            //console.log("this.props.redirect",this.props.redirect);

            var to = {};
            if (this.props.redux.isAuthorized) {
                //to = {pathname: this.props.location.pathname, state: {from: this.props.location}};
                var match = { path: to.pathname };
                // console.log(match);
                var _Component = this.props.component;

                return _react2.default.createElement(_Component, _extends({}, this.props, { match: this.props.computedMatch }));
            } else {
                //location.reload();
                //layoutAction.storeUpdateRedirect(this.props.location.pathname);
                to = { pathname: _appConfig.RootPath + '/auth', state: { from: this.props.location } };
                return _react2.default.createElement(_reactRouterDom.Redirect, { to: to });
            }
        }
    }]);

    return AuthorizedRoute;
}(_react2.default.Component);

exports.default = (0, _reactRedux.connect)(mapStateToProps)(AuthorizedRoute);

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./action-box.scss": 630,
	"./ads.scss": 631,
	"./app.scss": 632,
	"./availability.scss": 633,
	"./block-loader.scss": 634,
	"./border-card.scss": 635,
	"./browse-student.scss": 636,
	"./buttons.scss": 637,
	"./card.scss": 638,
	"./chat.scss": 639,
	"./company-chat.scss": 640,
	"./company-page.scss": 641,
	"./company-sec-old.scss": 642,
	"./company-sec.scss": 643,
	"./content.scss": 644,
	"./dashboard.scss": 645,
	"./define/mixin.scss": 646,
	"./define/variable.scss": 647,
	"./event.scss": 648,
	"./focus-card.scss": 649,
	"./footer.scss": 650,
	"./form.scss": 651,
	"./forum.scss": 652,
	"./gallery.scss": 653,
	"./general.scss": 654,
	"./group-session.scss": 655,
	"./hall-gallery.scss": 656,
	"./hall.scss": 657,
	"./header.scss": 658,
	"./home.scss": 659,
	"./input-checkbox.scss": 660,
	"./input-general.scss": 661,
	"./input-multi.scss": 662,
	"./input-select.scss": 663,
	"./input-single.scss": 664,
	"./input-suggestion.scss": 665,
	"./interested.scss": 666,
	"./left-bar.scss": 667,
	"./list-board.scss": 668,
	"./list-row.scss": 669,
	"./list.scss": 670,
	"./live-session.scss": 671,
	"./notess.scss": 672,
	"./notification.scss": 673,
	"./overview.scss": 674,
	"./page-sec.scss": 675,
	"./profile-card.scss": 676,
	"./qs-popup.scss": 677,
	"./right-bar.scss": 678,
	"./session-note.scss": 679,
	"./sponsor.scss": 680,
	"./sub-nav.scss": 681,
	"./support-chat.scss": 682,
	"./time-converter.scss": 683,
	"./timer.scss": 684,
	"./toogle-timezone.scss": 685,
	"./tooltip.scss": 686,
	"./uploader-video.scss": 687,
	"./vacancy.scss": 688
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 629;

/***/ }),
/* 630 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 631 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 632 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 633 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 634 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 635 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 636 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 637 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 638 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 639 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 640 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 641 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 642 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 643 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 644 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 645 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 646 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 647 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 648 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 649 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 650 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 651 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 652 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 653 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 654 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 655 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 656 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 657 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 658 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 659 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 660 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 661 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 662 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 663 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 664 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 665 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 666 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 667 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 668 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 669 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 670 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 671 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 672 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 673 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 674 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 675 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 676 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 677 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 678 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 679 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 680 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 681 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 682 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 683 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 684 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 685 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 686 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 687 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 688 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);